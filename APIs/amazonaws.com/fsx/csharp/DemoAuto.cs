//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace My.Demo.Client
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Net.Http;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CancelDataRepositoryTaskResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CancelDataRepositoryTaskResponseLifecycle Lifecycle { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 12
		/// Pattern: ^(task-[0-9a-f]{17,})$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=12)]
		public string TaskId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CancelDataRepositoryTaskResponseLifecycle
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELING = 5,
	}
	
	/// <summary>
	/// Cancels a data repository task.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CancelDataRepositoryTaskRequest
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 12
		/// Pattern: ^(task-[0-9a-f]{17,})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=12)]
		public string TaskId { get; set; }
	}
	
	/// <summary>
	/// The response object for the <code>CreateBackup</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateBackupResponse
	{
		
		/// <summary>
		/// A backup of an Amazon FSx for Windows File Server file system. You can create a new file system from a backup to protect against data loss.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Backup Backup { get; set; }
	}
	
	/// <summary>
	/// The request object for the <code>CreateBackup</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateBackupRequest
	{
		
		/// <summary>
		/// The globally unique ID of the file system, assigned by Amazon FSx.
		/// Max length: 21
		/// Min length: 11
		/// Pattern: ^(fs-[0-9a-f]{8,})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(21, MinimumLength=11)]
		public string FileSystemId { get; set; }
		
		/// <summary>
		/// (Optional) An idempotency token for resource creation, in a string of up to 64 ASCII characters. This token is automatically filled on your behalf when you use the AWS Command Line Interface (AWS CLI) or an AWS SDK.
		/// Max length: 63
		/// Min length: 1
		/// Pattern: [A-za-z0-9_.-]{0,63}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// A list of <code>Tag</code> values, with a maximum of 50 elements.
		/// Minimum items: 1
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDataRepositoryTaskResponse
	{
		
		/// <summary>
		/// A description of the data repository task. You use data repository tasks to perform bulk transfer operations between your Amazon FSx file system and its linked data repository.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DataRepositoryTask DataRepositoryTask { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDataRepositoryTaskRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateDataRepositoryTaskRequestType Type { get; set; }
		
		/// <summary>
		/// Maximum items: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public DataRepositoryTaskPath[] Paths { get; set; }
		
		/// <summary>
		/// The globally unique ID of the file system, assigned by Amazon FSx.
		/// Max length: 21
		/// Min length: 11
		/// Pattern: ^(fs-[0-9a-f]{8,})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(21, MinimumLength=11)]
		public string FileSystemId { get; set; }
		
		/// <summary>
		/// Provides a report detailing the data repository task results of the files processed that match the criteria specified in the report <code>Scope</code> parameter. FSx delivers the report to the file system's linked data repository in Amazon S3, using the path specified in the report <code>Path</code> parameter. You can specify whether or not a report gets generated for a task using the <code>Enabled</code> parameter.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CompletionReport Report { get; set; }
		
		/// <summary>
		/// (Optional) An idempotency token for resource creation, in a string of up to 64 ASCII characters. This token is automatically filled on your behalf when you use the AWS Command Line Interface (AWS CLI) or an AWS SDK.
		/// Max length: 63
		/// Min length: 1
		/// Pattern: [A-za-z0-9_.-]{0,63}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// A list of <code>Tag</code> values, with a maximum of 50 elements.
		/// Minimum items: 1
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateDataRepositoryTaskRequestType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXPORT_TO_REPOSITORY = 0,
	}
	
	/// <summary>
	/// The response object returned after the file system is created.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateFileSystemResponse
	{
		
		/// <summary>
		/// A description of a specific Amazon FSx file system.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FileSystem FileSystem { get; set; }
	}
	
	/// <summary>
	/// The request object used to create a new Amazon FSx file system.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateFileSystemRequest
	{
		
		/// <summary>
		/// (Optional) An idempotency token for resource creation, in a string of up to 64 ASCII characters. This token is automatically filled on your behalf when you use the AWS Command Line Interface (AWS CLI) or an AWS SDK.
		/// Max length: 63
		/// Min length: 1
		/// Pattern: [A-za-z0-9_.-]{0,63}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// The type of file system.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateFileSystemRequestFileSystemType FileSystemType { get; set; }
		
		/// <summary>
		/// The storage capacity for your Amazon FSx file system, in gibibytes.
		/// Minimum: 0
		/// Maximum: 2147483647
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 2147483647)]
		public int StorageCapacity { get; set; }
		
		/// <summary>
		/// The storage type for your Amazon FSx file system.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateFileSystemRequestStorageType StorageType { get; set; }
		
		/// <summary>
		/// A list of subnet IDs. Currently, you can specify only one subnet ID in a call to the <code>CreateFileSystem</code> operation.
		/// Maximum items: 50
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public SubnetId[] SubnetIds { get; set; }
		
		/// <summary>
		/// A list of security group IDs.
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public SecurityGroupId[] SecurityGroupIds { get; set; }
		
		/// <summary>
		/// A list of <code>Tag</code> values, with a maximum of 50 elements.
		/// Minimum items: 1
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// The ID of the AWS Key Management Service (AWS KMS) key used to encrypt the file system's data for Amazon FSx for Windows File Server file systems and Amazon FSx for Lustre <code>PERSISTENT_1</code> file systems at rest. In either case, if not specified, the Amazon FSx managed key is used. The Amazon FSx for Lustre <code>SCRATCH_1</code> and <code>SCRATCH_2</code> file systems are always encrypted at rest using Amazon FSx managed keys. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_Encrypt.html">Encrypt</a> in the <i>AWS Key Management Service API Reference</i>.
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: ^.{1,2048}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string KmsKeyId { get; set; }
		
		/// <summary>
		/// The configuration object for the Microsoft Windows file system used in <code>CreateFileSystem</code> and <code>CreateFileSystemFromBackup</code> operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateFileSystemWindowsConfiguration WindowsConfiguration { get; set; }
		
		/// <summary>
		/// The Lustre configuration for the file system being created. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateFileSystemLustreConfiguration LustreConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateFileSystemRequestFileSystemType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WINDOWS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LUSTRE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateFileSystemRequestStorageType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SSD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HDD = 1,
	}
	
	/// <summary>
	/// The response object for the <code>CreateFileSystemFromBackup</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateFileSystemFromBackupResponse
	{
		
		/// <summary>
		/// A description of a specific Amazon FSx file system.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FileSystem FileSystem { get; set; }
	}
	
	/// <summary>
	/// The request object for the <code>CreateFileSystemFromBackup</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateFileSystemFromBackupRequest
	{
		
		/// <summary>
		/// The ID of the backup. Specifies the backup to use if you're creating a file system from an existing backup.
		/// Max length: 128
		/// Min length: 12
		/// Pattern: ^(backup-[0-9a-f]{8,})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=12)]
		public string BackupId { get; set; }
		
		/// <summary>
		/// (Optional) An idempotency token for resource creation, in a string of up to 64 ASCII characters. This token is automatically filled on your behalf when you use the AWS Command Line Interface (AWS CLI) or an AWS SDK.
		/// Max length: 63
		/// Min length: 1
		/// Pattern: [A-za-z0-9_.-]{0,63}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// A list of subnet IDs. Currently, you can specify only one subnet ID in a call to the <code>CreateFileSystem</code> operation.
		/// Maximum items: 50
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public SubnetId[] SubnetIds { get; set; }
		
		/// <summary>
		/// A list of security group IDs.
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public SecurityGroupId[] SecurityGroupIds { get; set; }
		
		/// <summary>
		/// A list of <code>Tag</code> values, with a maximum of 50 elements.
		/// Minimum items: 1
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// The configuration object for the Microsoft Windows file system used in <code>CreateFileSystem</code> and <code>CreateFileSystemFromBackup</code> operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateFileSystemWindowsConfiguration WindowsConfiguration { get; set; }
		
		/// <summary>
		/// The storage type for your Amazon FSx file system.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateFileSystemFromBackupRequestStorageType StorageType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateFileSystemFromBackupRequestStorageType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SSD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HDD = 1,
	}
	
	/// <summary>
	/// The response object for <code>DeleteBackup</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteBackupResponse
	{
		
		/// <summary>
		/// The ID of the backup. Specifies the backup to use if you're creating a file system from an existing backup.
		/// Max length: 128
		/// Min length: 12
		/// Pattern: ^(backup-[0-9a-f]{8,})$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=12)]
		public string BackupId { get; set; }
		
		/// <summary>
		/// The lifecycle status of the backup.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DeleteBackupResponseLifecycle Lifecycle { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DeleteBackupResponseLifecycle
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
	}
	
	/// <summary>
	/// The request object for <code>DeleteBackup</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteBackupRequest
	{
		
		/// <summary>
		/// The ID of the backup. Specifies the backup to use if you're creating a file system from an existing backup.
		/// Max length: 128
		/// Min length: 12
		/// Pattern: ^(backup-[0-9a-f]{8,})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=12)]
		public string BackupId { get; set; }
		
		/// <summary>
		/// (Optional) An idempotency token for resource creation, in a string of up to 64 ASCII characters. This token is automatically filled on your behalf when you use the AWS Command Line Interface (AWS CLI) or an AWS SDK.
		/// Max length: 63
		/// Min length: 1
		/// Pattern: [A-za-z0-9_.-]{0,63}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
	}
	
	/// <summary>
	/// The response object for the <code>DeleteFileSystem</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteFileSystemResponse
	{
		
		/// <summary>
		/// The globally unique ID of the file system, assigned by Amazon FSx.
		/// Max length: 21
		/// Min length: 11
		/// Pattern: ^(fs-[0-9a-f]{8,})$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(21, MinimumLength=11)]
		public string FileSystemId { get; set; }
		
		/// <summary>
		/// The lifecycle status of the file system.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DeleteFileSystemResponseLifecycle Lifecycle { get; set; }
		
		/// <summary>
		/// The response object for the Microsoft Windows file system used in the <code>DeleteFileSystem</code> operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DeleteFileSystemWindowsResponse WindowsResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DeleteFileSystemResponseLifecycle
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MISCONFIGURED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 5,
	}
	
	/// <summary>
	/// The request object for <code>DeleteFileSystem</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteFileSystemRequest
	{
		
		/// <summary>
		/// The globally unique ID of the file system, assigned by Amazon FSx.
		/// Max length: 21
		/// Min length: 11
		/// Pattern: ^(fs-[0-9a-f]{8,})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(21, MinimumLength=11)]
		public string FileSystemId { get; set; }
		
		/// <summary>
		/// (Optional) An idempotency token for resource creation, in a string of up to 64 ASCII characters. This token is automatically filled on your behalf when you use the AWS Command Line Interface (AWS CLI) or an AWS SDK.
		/// Max length: 63
		/// Min length: 1
		/// Pattern: [A-za-z0-9_.-]{0,63}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// The configuration object for the Microsoft Windows file system used in the <code>DeleteFileSystem</code> operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DeleteFileSystemWindowsConfiguration WindowsConfiguration { get; set; }
	}
	
	/// <summary>
	/// Response object for <code>DescribeBackups</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeBackupsResponse
	{
		
		/// <summary>
		/// A list of backups.
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Backup[] Backups { get; set; }
		
		/// <summary>
		/// (Optional) Opaque pagination token returned from a previous operation (String). If present, this token indicates from what point you can continue processing the request, where the previous <code>NextToken</code> value left off.
		/// Max length: 255
		/// Min length: 1
		/// Pattern: ^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The request object for <code>DescribeBackups</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeBackupsRequest
	{
		
		/// <summary>
		/// A list of backup IDs.
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public BackupId[] BackupIds { get; set; }
		
		/// <summary>
		/// A list of <code>Filter</code> elements.
		/// Maximum items: 10
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public Filter[] Filters { get; set; }
		
		/// <summary>
		/// The maximum number of resources to return in the response. This value must be an integer greater than zero.
		/// Minimum: 1
		/// Maximum: 2147483647
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 2147483647)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// (Optional) Opaque pagination token returned from a previous operation (String). If present, this token indicates from what point you can continue processing the request, where the previous <code>NextToken</code> value left off.
		/// Max length: 255
		/// Min length: 1
		/// Pattern: ^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDataRepositoryTasksResponse
	{
		
		/// <summary>
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public DataRepositoryTask[] DataRepositoryTasks { get; set; }
		
		/// <summary>
		/// (Optional) Opaque pagination token returned from a previous operation (String). If present, this token indicates from what point you can continue processing the request, where the previous <code>NextToken</code> value left off.
		/// Max length: 255
		/// Min length: 1
		/// Pattern: ^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDataRepositoryTasksRequest
	{
		
		/// <summary>
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public TaskId[] TaskIds { get; set; }
		
		/// <summary>
		/// Maximum items: 3
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(3)]
		public DataRepositoryTaskFilter[] Filters { get; set; }
		
		/// <summary>
		/// The maximum number of resources to return in the response. This value must be an integer greater than zero.
		/// Minimum: 1
		/// Maximum: 2147483647
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 2147483647)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// (Optional) Opaque pagination token returned from a previous operation (String). If present, this token indicates from what point you can continue processing the request, where the previous <code>NextToken</code> value left off.
		/// Max length: 255
		/// Min length: 1
		/// Pattern: ^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The response object for <code>DescribeFileSystems</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeFileSystemsResponse
	{
		
		/// <summary>
		/// A list of file systems.
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public FileSystem[] FileSystems { get; set; }
		
		/// <summary>
		/// (Optional) Opaque pagination token returned from a previous operation (String). If present, this token indicates from what point you can continue processing the request, where the previous <code>NextToken</code> value left off.
		/// Max length: 255
		/// Min length: 1
		/// Pattern: ^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The request object for <code>DescribeFileSystems</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeFileSystemsRequest
	{
		
		/// <summary>
		/// A list of <code>FileSystemId</code>s.
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public FileSystemId[] FileSystemIds { get; set; }
		
		/// <summary>
		/// The maximum number of resources to return in the response. This value must be an integer greater than zero.
		/// Minimum: 1
		/// Maximum: 2147483647
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 2147483647)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// (Optional) Opaque pagination token returned from a previous operation (String). If present, this token indicates from what point you can continue processing the request, where the previous <code>NextToken</code> value left off.
		/// Max length: 255
		/// Min length: 1
		/// Pattern: ^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The response object for <code>ListTagsForResource</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTagsForResourceResponse
	{
		
		/// <summary>
		/// A list of <code>Tag</code> values, with a maximum of 50 elements.
		/// Minimum items: 1
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// (Optional) Opaque pagination token returned from a previous operation (String). If present, this token indicates from what point you can continue processing the request, where the previous <code>NextToken</code> value left off.
		/// Max length: 255
		/// Min length: 1
		/// Pattern: ^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The request object for <code>ListTagsForResource</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTagsForResourceRequest
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) for a given resource. ARNs uniquely identify AWS resources. We require an ARN when you need to specify a resource unambiguously across all of AWS. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.
		/// Max length: 512
		/// Min length: 8
		/// Pattern: ^arn:(?=[^:]+:fsx:[^:]+:\d{12}:)((|(?=[a-z0-9-.]{1,63})(?!\d{1,3}(\.\d{1,3}){3})(?![^:]*-{2})(?![^:]*-\.)(?![^:]*\.-)[a-z0-9].*(?<!-)):){4}(?!/).{0,1024}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(512, MinimumLength=8)]
		public string ResourceARN { get; set; }
		
		/// <summary>
		/// The maximum number of resources to return in the response. This value must be an integer greater than zero.
		/// Minimum: 1
		/// Maximum: 2147483647
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 2147483647)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// (Optional) Opaque pagination token returned from a previous operation (String). If present, this token indicates from what point you can continue processing the request, where the previous <code>NextToken</code> value left off.
		/// Max length: 255
		/// Min length: 1
		/// Pattern: ^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The request object for the <code>TagResource</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TagResourceRequest
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) for a given resource. ARNs uniquely identify AWS resources. We require an ARN when you need to specify a resource unambiguously across all of AWS. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.
		/// Max length: 512
		/// Min length: 8
		/// Pattern: ^arn:(?=[^:]+:fsx:[^:]+:\d{12}:)((|(?=[a-z0-9-.]{1,63})(?!\d{1,3}(\.\d{1,3}){3})(?![^:]*-{2})(?![^:]*-\.)(?![^:]*\.-)[a-z0-9].*(?<!-)):){4}(?!/).{0,1024}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(512, MinimumLength=8)]
		public string ResourceARN { get; set; }
		
		/// <summary>
		/// A list of <code>Tag</code> values, with a maximum of 50 elements.
		/// Minimum items: 1
		/// Maximum items: 50
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
	}
	
	/// <summary>
	/// The request object for <code>UntagResource</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UntagResourceRequest
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) for a given resource. ARNs uniquely identify AWS resources. We require an ARN when you need to specify a resource unambiguously across all of AWS. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.
		/// Max length: 512
		/// Min length: 8
		/// Pattern: ^arn:(?=[^:]+:fsx:[^:]+:\d{12}:)((|(?=[a-z0-9-.]{1,63})(?!\d{1,3}(\.\d{1,3}){3})(?![^:]*-{2})(?![^:]*-\.)(?![^:]*\.-)[a-z0-9].*(?<!-)):){4}(?!/).{0,1024}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(512, MinimumLength=8)]
		public string ResourceARN { get; set; }
		
		/// <summary>
		/// A list of <code>TagKey</code> values, with a maximum of 50 elements.
		/// Minimum items: 1
		/// Maximum items: 50
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public TagKey[] TagKeys { get; set; }
	}
	
	/// <summary>
	/// The response object for the <code>UpdateFileSystem</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateFileSystemResponse
	{
		
		/// <summary>
		/// A description of a specific Amazon FSx file system.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FileSystem FileSystem { get; set; }
	}
	
	/// <summary>
	/// The request object for the <code>UpdateFileSystem</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateFileSystemRequest
	{
		
		/// <summary>
		/// The globally unique ID of the file system, assigned by Amazon FSx.
		/// Max length: 21
		/// Min length: 11
		/// Pattern: ^(fs-[0-9a-f]{8,})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(21, MinimumLength=11)]
		public string FileSystemId { get; set; }
		
		/// <summary>
		/// (Optional) An idempotency token for resource creation, in a string of up to 64 ASCII characters. This token is automatically filled on your behalf when you use the AWS Command Line Interface (AWS CLI) or an AWS SDK.
		/// Max length: 63
		/// Min length: 1
		/// Pattern: [A-za-z0-9_.-]{0,63}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// The storage capacity for your Amazon FSx file system, in gibibytes.
		/// Minimum: 0
		/// Maximum: 2147483647
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 2147483647)]
		public System.Nullable<System.Int32> StorageCapacity { get; set; }
		
		/// <summary>
		/// Updates the configuration for an existing Amazon FSx for Windows File Server file system. Amazon FSx only overwrites existing properties with non-null values provided in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateFileSystemWindowsConfiguration WindowsConfiguration { get; set; }
		
		/// <summary>
		/// The configuration object for Amazon FSx for Lustre file systems used in the <code>UpdateFileSystem</code> operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateFileSystemLustreConfiguration LustreConfiguration { get; set; }
	}
	
	/// <summary>
	/// The Microsoft AD attributes of the Amazon FSx for Windows File Server file system.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ActiveDirectoryBackupAttributes
	{
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: ^.{1,255}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string DomainName { get; set; }
		
		/// <summary>
		/// Max length: 12
		/// Min length: 12
		/// Pattern: ^d-[0-9a-f]{10}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(12, MinimumLength=12)]
		public string ActiveDirectoryId { get; set; }
	}
	
	/// <summary>
	/// <p>Describes the type of administrative action, as follows:</p> <ul> <li> <p> <code>FILE_SYSTEM_UPDATE</code> - A file system update administrative action initiated by the user from the Amazon FSx console, API (UpdateFileSystem), or CLI (update-file-system). A</p> </li> <li> <p> <code>STORAGE_OPTIMIZATION</code> - Once the <code>FILE_SYSTEM_UPDATE</code> task to increase a file system's storage capacity completes successfully, a <code>STORAGE_OPTIMIZATION</code> task starts. Storage optimization is the process of migrating the file system data to the new, larger disks. You can track the storage migration progress using the <code>ProgressPercent</code> property. When <code>STORAGE_OPTIMIZATION</code> completes successfully, the parent <code>FILE_SYSTEM_UPDATE</code> action status changes to <code>COMPLETED</code>. For more information, see <a href="https://docs.aws.amazon.com/fsx/latest/WindowsGuide/managing-storage-capacity.html">Managing Storage Capacity</a>. </p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AdministrativeActionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILE_SYSTEM_UPDATE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STORAGE_OPTIMIZATION = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum Status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATED_OPTIMIZING = 4,
	}
	
	/// <summary>
	/// A description of a specific Amazon FSx file system.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FileSystem
	{
		
		/// <summary>
		/// An AWS account ID. This ID is a 12-digit number that you use to construct Amazon Resource Names (ARNs) for resources.
		/// Max length: 12
		/// Min length: 12
		/// Pattern: ^\d{12}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(12, MinimumLength=12)]
		public string OwnerId { get; set; }
		
		/// <summary>
		/// The time that the resource was created, in seconds (since 1970-01-01T00:00:00Z), also known as Unix time.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		/// <summary>
		/// The globally unique ID of the file system, assigned by Amazon FSx.
		/// Max length: 21
		/// Min length: 11
		/// Pattern: ^(fs-[0-9a-f]{8,})$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(21, MinimumLength=11)]
		public string FileSystemId { get; set; }
		
		/// <summary>
		/// The type of file system.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FileSystemFileSystemType FileSystemType { get; set; }
		
		/// <summary>
		/// The lifecycle status of the file system.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FileSystemLifecycle Lifecycle { get; set; }
		
		/// <summary>
		/// A structure providing details of any failures that occur when creating the file system has failed.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FileSystemFailureDetails FailureDetails { get; set; }
		
		/// <summary>
		/// The storage capacity for your Amazon FSx file system, in gibibytes.
		/// Minimum: 0
		/// Maximum: 2147483647
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 2147483647)]
		public System.Nullable<System.Int32> StorageCapacity { get; set; }
		
		/// <summary>
		/// The storage type for your Amazon FSx file system.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FileSystemStorageType StorageType { get; set; }
		
		/// <summary>
		/// The ID of your virtual private cloud (VPC). For more information, see <a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">VPC and Subnets</a> in the <i>Amazon VPC User Guide</i>.
		/// Max length: 21
		/// Min length: 12
		/// Pattern: ^(vpc-[0-9a-f]{8,})$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(21, MinimumLength=12)]
		public string VpcId { get; set; }
		
		/// <summary>
		/// A list of subnet IDs. Currently, you can specify only one subnet ID in a call to the <code>CreateFileSystem</code> operation.
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public SubnetId[] SubnetIds { get; set; }
		
		/// <summary>
		/// A list of network interface IDs.
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public NetworkInterfaceId[] NetworkInterfaceIds { get; set; }
		
		/// <summary>
		/// The Domain Name Service (DNS) name for the file system. You can mount your file system using its DNS name.
		/// Max length: 275
		/// Min length: 16
		/// Pattern: ^(fsi?-[0-9a-f]{8,}\..{4,253})$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(275, MinimumLength=16)]
		public string DNSName { get; set; }
		
		/// <summary>
		/// The ID of the AWS Key Management Service (AWS KMS) key used to encrypt the file system's data for Amazon FSx for Windows File Server file systems and Amazon FSx for Lustre <code>PERSISTENT_1</code> file systems at rest. In either case, if not specified, the Amazon FSx managed key is used. The Amazon FSx for Lustre <code>SCRATCH_1</code> and <code>SCRATCH_2</code> file systems are always encrypted at rest using Amazon FSx managed keys. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_Encrypt.html">Encrypt</a> in the <i>AWS Key Management Service API Reference</i>.
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: ^.{1,2048}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string KmsKeyId { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) for a given resource. ARNs uniquely identify AWS resources. We require an ARN when you need to specify a resource unambiguously across all of AWS. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.
		/// Max length: 512
		/// Min length: 8
		/// Pattern: ^arn:(?=[^:]+:fsx:[^:]+:\d{12}:)((|(?=[a-z0-9-.]{1,63})(?!\d{1,3}(\.\d{1,3}){3})(?![^:]*-{2})(?![^:]*-\.)(?![^:]*\.-)[a-z0-9].*(?<!-)):){4}(?!/).{0,1024}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(512, MinimumLength=8)]
		public string ResourceARN { get; set; }
		
		/// <summary>
		/// A list of <code>Tag</code> values, with a maximum of 50 elements.
		/// Minimum items: 1
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// The configuration for this Microsoft Windows file system.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public WindowsFileSystemConfiguration WindowsConfiguration { get; set; }
		
		/// <summary>
		/// The configuration for the Amazon FSx for Lustre file system.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LustreFileSystemConfiguration LustreConfiguration { get; set; }
		
		/// <summary>
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public AdministrativeAction[] AdministrativeActions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FileSystemFileSystemType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WINDOWS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LUSTRE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FileSystemLifecycle
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MISCONFIGURED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FileSystemStorageType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SSD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HDD = 1,
	}
	
	/// <summary>
	/// Provides information about a failed administrative action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AdministrativeActionFailureDetails
	{
		
		/// <summary>
		/// A detailed error message.
		/// Max length: 256
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// Describes a specific Amazon FSx Administrative Action for the current Windows file system.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AdministrativeAction
	{
		
		/// <summary>
		/// <p>Describes the type of administrative action, as follows:</p> <ul> <li> <p> <code>FILE_SYSTEM_UPDATE</code> - A file system update administrative action initiated by the user from the Amazon FSx console, API (UpdateFileSystem), or CLI (update-file-system). A</p> </li> <li> <p> <code>STORAGE_OPTIMIZATION</code> - Once the <code>FILE_SYSTEM_UPDATE</code> task to increase a file system's storage capacity completes successfully, a <code>STORAGE_OPTIMIZATION</code> task starts. Storage optimization is the process of migrating the file system data to the new, larger disks. You can track the storage migration progress using the <code>ProgressPercent</code> property. When <code>STORAGE_OPTIMIZATION</code> completes successfully, the parent <code>FILE_SYSTEM_UPDATE</code> action status changes to <code>COMPLETED</code>. For more information, see <a href="https://docs.aws.amazon.com/fsx/latest/WindowsGuide/managing-storage-capacity.html">Managing Storage Capacity</a>. </p> </li> </ul>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AdministrativeActionAdministrativeActionType AdministrativeActionType { get; set; }
		
		/// <summary>
		/// The current percent of progress of an asynchronous task.
		/// Minimum: 0
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 100)]
		public System.Nullable<System.Int32> ProgressPercent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> RequestTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AdministrativeActionStatus Status { get; set; }
		
		/// <summary>
		/// A description of a specific Amazon FSx file system.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FileSystem TargetFileSystemValues { get; set; }
		
		/// <summary>
		/// Provides information about a failed administrative action.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AdministrativeActionFailureDetails FailureDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AdministrativeActionAdministrativeActionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILE_SYSTEM_UPDATE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STORAGE_OPTIMIZATION = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AdministrativeActionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATED_OPTIMIZING = 4,
	}
	
	/// <summary>
	/// The lifecycle status of the backup.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum BackupLifecycle
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
	}
	
	/// <summary>
	/// If backup creation fails, this structure contains the details of that failure.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BackupFailureDetails
	{
		
		/// <summary>
		/// A detailed error message.
		/// Max length: 256
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// The type of the backup.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum BackupType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTOMATIC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USER_INITIATED = 1,
	}
	
	/// <summary>
	/// A backup of an Amazon FSx for Windows File Server file system. You can create a new file system from a backup to protect against data loss.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Backup
	{
		
		/// <summary>
		/// The ID of the backup. Specifies the backup to use if you're creating a file system from an existing backup.
		/// Max length: 128
		/// Min length: 12
		/// Pattern: ^(backup-[0-9a-f]{8,})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=12)]
		public string BackupId { get; set; }
		
		/// <summary>
		/// The lifecycle status of the backup.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BackupLifecycle Lifecycle { get; set; }
		
		/// <summary>
		/// If backup creation fails, this structure contains the details of that failure.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public BackupFailureDetails FailureDetails { get; set; }
		
		/// <summary>
		/// The type of the backup.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BackupType Type { get; set; }
		
		/// <summary>
		/// The current percent of progress of an asynchronous task.
		/// Minimum: 0
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 100)]
		public System.Nullable<System.Int32> ProgressPercent { get; set; }
		
		/// <summary>
		/// The time that the resource was created, in seconds (since 1970-01-01T00:00:00Z), also known as Unix time.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		/// <summary>
		/// The ID of the AWS Key Management Service (AWS KMS) key used to encrypt the file system's data for Amazon FSx for Windows File Server file systems and Amazon FSx for Lustre <code>PERSISTENT_1</code> file systems at rest. In either case, if not specified, the Amazon FSx managed key is used. The Amazon FSx for Lustre <code>SCRATCH_1</code> and <code>SCRATCH_2</code> file systems are always encrypted at rest using Amazon FSx managed keys. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_Encrypt.html">Encrypt</a> in the <i>AWS Key Management Service API Reference</i>.
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: ^.{1,2048}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string KmsKeyId { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) for a given resource. ARNs uniquely identify AWS resources. We require an ARN when you need to specify a resource unambiguously across all of AWS. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.
		/// Max length: 512
		/// Min length: 8
		/// Pattern: ^arn:(?=[^:]+:fsx:[^:]+:\d{12}:)((|(?=[a-z0-9-.]{1,63})(?!\d{1,3}(\.\d{1,3}){3})(?![^:]*-{2})(?![^:]*-\.)(?![^:]*\.-)[a-z0-9].*(?<!-)):){4}(?!/).{0,1024}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(512, MinimumLength=8)]
		public string ResourceARN { get; set; }
		
		/// <summary>
		/// A list of <code>Tag</code> values, with a maximum of 50 elements.
		/// Minimum items: 1
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// A description of a specific Amazon FSx file system.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FileSystem FileSystem { get; set; }
		
		/// <summary>
		/// The Microsoft AD attributes of the Amazon FSx for Windows File Server file system.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ActiveDirectoryBackupAttributes DirectoryInformation { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum BackupLifecycle
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum BackupType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTOMATIC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USER_INITIATED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DataRepositoryTaskLifecycle
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELING = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ReportFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPORT_CSV_20191124 = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ReportScope
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED_FILES_ONLY = 0,
	}
	
	/// <summary>
	/// Provides a report detailing the data repository task results of the files processed that match the criteria specified in the report <code>Scope</code> parameter. FSx delivers the report to the file system's linked data repository in Amazon S3, using the path specified in the report <code>Path</code> parameter. You can specify whether or not a report gets generated for a task using the <code>Enabled</code> parameter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CompletionReport
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool Enabled { get; set; }
		
		/// <summary>
		/// Max length: 900
		/// Min length: 3
		/// Pattern: ^.{3,900}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(900, MinimumLength=3)]
		public string Path { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CompletionReportFormat Format { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CompletionReportScope Scope { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CompletionReportFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPORT_CSV_20191124 = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CompletionReportScope
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED_FILES_ONLY = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DataRepositoryTaskType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXPORT_TO_REPOSITORY = 0,
	}
	
	/// <summary>
	/// A description of the data repository task. You use data repository tasks to perform bulk transfer operations between your Amazon FSx file system and its linked data repository.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DataRepositoryTask
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 12
		/// Pattern: ^(task-[0-9a-f]{17,})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=12)]
		public string TaskId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataRepositoryTaskLifecycle Lifecycle { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataRepositoryTaskType Type { get; set; }
		
		/// <summary>
		/// The time that the resource was created, in seconds (since 1970-01-01T00:00:00Z), also known as Unix time.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) for a given resource. ARNs uniquely identify AWS resources. We require an ARN when you need to specify a resource unambiguously across all of AWS. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.
		/// Max length: 512
		/// Min length: 8
		/// Pattern: ^arn:(?=[^:]+:fsx:[^:]+:\d{12}:)((|(?=[a-z0-9-.]{1,63})(?!\d{1,3}(\.\d{1,3}){3})(?![^:]*-{2})(?![^:]*-\.)(?![^:]*\.-)[a-z0-9].*(?<!-)):){4}(?!/).{0,1024}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(512, MinimumLength=8)]
		public string ResourceARN { get; set; }
		
		/// <summary>
		/// A list of <code>Tag</code> values, with a maximum of 50 elements.
		/// Minimum items: 1
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// The globally unique ID of the file system, assigned by Amazon FSx.
		/// Max length: 21
		/// Min length: 11
		/// Pattern: ^(fs-[0-9a-f]{8,})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(21, MinimumLength=11)]
		public string FileSystemId { get; set; }
		
		/// <summary>
		/// Maximum items: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public DataRepositoryTaskPath[] Paths { get; set; }
		
		/// <summary>
		/// Provides information about why a data repository task failed. Only populated when the task <code>Lifecycle</code> is set to <code>FAILED</code>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DataRepositoryTaskFailureDetails FailureDetails { get; set; }
		
		/// <summary>
		/// Provides the task status showing a running total of the total number of files to be processed, the number successfully processed, and the number of files the task failed to process.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DataRepositoryTaskStatus Status { get; set; }
		
		/// <summary>
		/// Provides a report detailing the data repository task results of the files processed that match the criteria specified in the report <code>Scope</code> parameter. FSx delivers the report to the file system's linked data repository in Amazon S3, using the path specified in the report <code>Path</code> parameter. You can specify whether or not a report gets generated for a task using the <code>Enabled</code> parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CompletionReport Report { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DataRepositoryTaskLifecycle
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELING = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DataRepositoryTaskType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXPORT_TO_REPOSITORY = 0,
	}
	
	/// <summary>
	/// The configuration object for the Microsoft Windows file system used in <code>CreateFileSystem</code> and <code>CreateFileSystemFromBackup</code> operations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateFileSystemWindowsConfiguration
	{
		
		/// <summary>
		/// Max length: 12
		/// Min length: 12
		/// Pattern: ^d-[0-9a-f]{10}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(12, MinimumLength=12)]
		public string ActiveDirectoryId { get; set; }
		
		/// <summary>
		/// The configuration that Amazon FSx uses to join the Windows File Server instance to your self-managed (including on-premises) Microsoft Active Directory (AD) directory.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SelfManagedActiveDirectoryConfiguration SelfManagedActiveDirectoryConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CreateFileSystemWindowsConfigurationDeploymentType DeploymentType { get; set; }
		
		/// <summary>
		/// The ID for a subnet. A <i>subnet</i> is a range of IP addresses in your virtual private cloud (VPC). For more information, see <a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">VPC and Subnets</a> in the <i>Amazon VPC User Guide.</i> 
		/// Max length: 24
		/// Min length: 15
		/// Pattern: ^(subnet-[0-9a-f]{8,})$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(24, MinimumLength=15)]
		public string PreferredSubnetId { get; set; }
		
		/// <summary>
		/// Sustained throughput of an Amazon FSx file system in MBps.
		/// Minimum: 8
		/// Maximum: 2048
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(8, 2048)]
		public int ThroughputCapacity { get; set; }
		
		/// <summary>
		/// <p>A recurring weekly time, in the format <code>D:HH:MM</code>. </p> <p> <code>D</code> is the day of the week, for which 1 represents Monday and 7 represents Sunday. For further details, see <a href="https://en.wikipedia.org/wiki/ISO_week_date">the ISO-8601 spec as described on Wikipedia</a>.</p> <p> <code>HH</code> is the zero-padded hour of the day (0-23), and <code>MM</code> is the zero-padded minute of the hour. </p> <p>For example, <code>1:05:00</code> specifies maintenance at 5 AM Monday.</p>
		/// Max length: 7
		/// Min length: 7
		/// Pattern: ^[1-7]:([01]\d|2[0-3]):?([0-5]\d)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(7, MinimumLength=7)]
		public string WeeklyMaintenanceStartTime { get; set; }
		
		/// <summary>
		/// A recurring daily time, in the format <code>HH:MM</code>. <code>HH</code> is the zero-padded hour of the day (0-23), and <code>MM</code> is the zero-padded minute of the hour. For example, <code>05:00</code> specifies 5 AM daily. 
		/// Max length: 5
		/// Min length: 5
		/// Pattern: ^([01]\d|2[0-3]):?([0-5]\d)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(5, MinimumLength=5)]
		public string DailyAutomaticBackupStartTime { get; set; }
		
		/// <summary>
		/// The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 35 days.
		/// Minimum: 0
		/// Maximum: 35
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 35)]
		public System.Nullable<System.Int32> AutomaticBackupRetentionDays { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTagsToBackups { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateFileSystemWindowsConfigurationDeploymentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MULTI_AZ_1 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SINGLE_AZ_1 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SINGLE_AZ_2 = 2,
	}
	
	/// <summary>
	/// The storage type for your Amazon FSx file system.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StorageType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SSD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HDD = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum LustreDeploymentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCRATCH_1 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCRATCH_2 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERSISTENT_1 = 2,
	}
	
	/// <summary>
	/// The Lustre configuration for the file system being created. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateFileSystemLustreConfiguration
	{
		
		/// <summary>
		/// <p>A recurring weekly time, in the format <code>D:HH:MM</code>. </p> <p> <code>D</code> is the day of the week, for which 1 represents Monday and 7 represents Sunday. For further details, see <a href="https://en.wikipedia.org/wiki/ISO_week_date">the ISO-8601 spec as described on Wikipedia</a>.</p> <p> <code>HH</code> is the zero-padded hour of the day (0-23), and <code>MM</code> is the zero-padded minute of the hour. </p> <p>For example, <code>1:05:00</code> specifies maintenance at 5 AM Monday.</p>
		/// Max length: 7
		/// Min length: 7
		/// Pattern: ^[1-7]:([01]\d|2[0-3]):?([0-5]\d)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(7, MinimumLength=7)]
		public string WeeklyMaintenanceStartTime { get; set; }
		
		/// <summary>
		/// Max length: 900
		/// Min length: 3
		/// Pattern: ^.{3,900}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(900, MinimumLength=3)]
		public string ImportPath { get; set; }
		
		/// <summary>
		/// Max length: 900
		/// Min length: 3
		/// Pattern: ^.{3,900}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(900, MinimumLength=3)]
		public string ExportPath { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 512000
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 512000)]
		public System.Nullable<System.Int32> ImportedFileChunkSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CreateFileSystemLustreConfigurationDeploymentType DeploymentType { get; set; }
		
		/// <summary>
		/// Minimum: 50
		/// Maximum: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(50, 200)]
		public System.Nullable<System.Int32> PerUnitStorageThroughput { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateFileSystemLustreConfigurationDeploymentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCRATCH_1 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCRATCH_2 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERSISTENT_1 = 2,
	}
	
	/// <summary>
	/// The type of file system.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FileSystemType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WINDOWS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LUSTRE = 1,
	}
	
	/// <summary>
	/// The configuration that Amazon FSx uses to join the Windows File Server instance to your self-managed (including on-premises) Microsoft Active Directory (AD) directory.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SelfManagedActiveDirectoryConfiguration
	{
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: ^.{1,255}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string DomainName { get; set; }
		
		/// <summary>
		/// Max length: 2000
		/// Min length: 1
		/// Pattern: ^.{1,2000}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2000, MinimumLength=1)]
		public string OrganizationalUnitDistinguishedName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: ^.{1,256}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string FileSystemAdministratorsGroup { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: ^.{1,256}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string UserName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: ^.{1,256}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string Password { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 2
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2)]
		public IpAddress[] DnsIps { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum WindowsDeploymentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MULTI_AZ_1 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SINGLE_AZ_1 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SINGLE_AZ_2 = 2,
	}
	
	/// <summary>
	/// The data repository configuration object for Lustre file systems returned in the response of the <code>CreateFileSystem</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DataRepositoryConfiguration
	{
		
		/// <summary>
		/// Max length: 900
		/// Min length: 3
		/// Pattern: ^.{3,900}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(900, MinimumLength=3)]
		public string ImportPath { get; set; }
		
		/// <summary>
		/// Max length: 900
		/// Min length: 3
		/// Pattern: ^.{3,900}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(900, MinimumLength=3)]
		public string ExportPath { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 512000
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 512000)]
		public System.Nullable<System.Int32> ImportedFileChunkSize { get; set; }
	}
	
	/// <summary>
	/// Provides information about why a data repository task failed. Only populated when the task <code>Lifecycle</code> is set to <code>FAILED</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DataRepositoryTaskFailureDetails
	{
		
		/// <summary>
		/// A detailed error message.
		/// Max length: 256
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// Provides the task status showing a running total of the total number of files to be processed, the number successfully processed, and the number of files the task failed to process.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DataRepositoryTaskStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SucceededCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FailedCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdatedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DataRepositoryTaskFilterName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		file-system-id = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		task-lifecycle = 1,
	}
	
	/// <summary>
	/// (Optional) An array of filter objects you can use to filter the response of data repository tasks you will see in the the response. You can filter the tasks returned in the response by one or more file system IDs, task lifecycles, and by task type. A filter object consists of a filter <code>Name</code>, and one or more <code>Values</code> for the filter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DataRepositoryTaskFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DataRepositoryTaskFilterName Name { get; set; }
		
		/// <summary>
		/// Maximum items: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public DataRepositoryTaskFilterValue[] Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DataRepositoryTaskFilterName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		file-system-id = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		task-lifecycle = 1,
	}
	
	/// <summary>
	/// The configuration object for the Microsoft Windows file system used in the <code>DeleteFileSystem</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteFileSystemWindowsConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SkipFinalBackup { get; set; }
		
		/// <summary>
		/// A list of <code>Tag</code> values, with a maximum of 50 elements.
		/// Minimum items: 1
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] FinalBackupTags { get; set; }
	}
	
	/// <summary>
	/// The lifecycle status of the file system.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FileSystemLifecycle
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MISCONFIGURED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 5,
	}
	
	/// <summary>
	/// The response object for the Microsoft Windows file system used in the <code>DeleteFileSystem</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteFileSystemWindowsResponse
	{
		
		/// <summary>
		/// The ID of the backup. Specifies the backup to use if you're creating a file system from an existing backup.
		/// Max length: 128
		/// Min length: 12
		/// Pattern: ^(backup-[0-9a-f]{8,})$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=12)]
		public string FinalBackupId { get; set; }
		
		/// <summary>
		/// A list of <code>Tag</code> values, with a maximum of 50 elements.
		/// Minimum items: 1
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] FinalBackupTags { get; set; }
	}
	
	/// <summary>
	/// A structure providing details of any failures that occur when creating the file system has failed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FileSystemFailureDetails
	{
		
		/// <summary>
		/// A detailed error message.
		/// Max length: 256
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// The configuration for this Microsoft Windows file system.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class WindowsFileSystemConfiguration
	{
		
		/// <summary>
		/// Max length: 12
		/// Min length: 12
		/// Pattern: ^d-[0-9a-f]{10}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(12, MinimumLength=12)]
		public string ActiveDirectoryId { get; set; }
		
		/// <summary>
		/// The configuration of the self-managed Microsoft Active Directory (AD) directory to which the Windows File Server instance is joined.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SelfManagedActiveDirectoryAttributes SelfManagedActiveDirectoryConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WindowsFileSystemConfigurationDeploymentType DeploymentType { get; set; }
		
		/// <summary>
		/// The Domain Name Service (DNS) name for the file system. You can mount your file system using its DNS name.
		/// Max length: 275
		/// Min length: 16
		/// Pattern: ^(fsi?-[0-9a-f]{8,}\..{4,253})$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(275, MinimumLength=16)]
		public string RemoteAdministrationEndpoint { get; set; }
		
		/// <summary>
		/// The ID for a subnet. A <i>subnet</i> is a range of IP addresses in your virtual private cloud (VPC). For more information, see <a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">VPC and Subnets</a> in the <i>Amazon VPC User Guide.</i> 
		/// Max length: 24
		/// Min length: 15
		/// Pattern: ^(subnet-[0-9a-f]{8,})$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(24, MinimumLength=15)]
		public string PreferredSubnetId { get; set; }
		
		/// <summary>
		/// Max length: 15
		/// Min length: 7
		/// Pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(15, MinimumLength=7)]
		public string PreferredFileServerIp { get; set; }
		
		/// <summary>
		/// Sustained throughput of an Amazon FSx file system in MBps.
		/// Minimum: 8
		/// Maximum: 2048
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(8, 2048)]
		public System.Nullable<System.Int32> ThroughputCapacity { get; set; }
		
		/// <summary>
		/// A list of maintenance operations.
		/// Maximum items: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public FileSystemMaintenanceOperation[] MaintenanceOperationsInProgress { get; set; }
		
		/// <summary>
		/// <p>A recurring weekly time, in the format <code>D:HH:MM</code>. </p> <p> <code>D</code> is the day of the week, for which 1 represents Monday and 7 represents Sunday. For further details, see <a href="https://en.wikipedia.org/wiki/ISO_week_date">the ISO-8601 spec as described on Wikipedia</a>.</p> <p> <code>HH</code> is the zero-padded hour of the day (0-23), and <code>MM</code> is the zero-padded minute of the hour. </p> <p>For example, <code>1:05:00</code> specifies maintenance at 5 AM Monday.</p>
		/// Max length: 7
		/// Min length: 7
		/// Pattern: ^[1-7]:([01]\d|2[0-3]):?([0-5]\d)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(7, MinimumLength=7)]
		public string WeeklyMaintenanceStartTime { get; set; }
		
		/// <summary>
		/// A recurring daily time, in the format <code>HH:MM</code>. <code>HH</code> is the zero-padded hour of the day (0-23), and <code>MM</code> is the zero-padded minute of the hour. For example, <code>05:00</code> specifies 5 AM daily. 
		/// Max length: 5
		/// Min length: 5
		/// Pattern: ^([01]\d|2[0-3]):?([0-5]\d)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(5, MinimumLength=5)]
		public string DailyAutomaticBackupStartTime { get; set; }
		
		/// <summary>
		/// The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 35 days.
		/// Minimum: 0
		/// Maximum: 35
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 35)]
		public System.Nullable<System.Int32> AutomaticBackupRetentionDays { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTagsToBackups { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum WindowsFileSystemConfigurationDeploymentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MULTI_AZ_1 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SINGLE_AZ_1 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SINGLE_AZ_2 = 2,
	}
	
	/// <summary>
	/// The configuration for the Amazon FSx for Lustre file system.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class LustreFileSystemConfiguration
	{
		
		/// <summary>
		/// <p>A recurring weekly time, in the format <code>D:HH:MM</code>. </p> <p> <code>D</code> is the day of the week, for which 1 represents Monday and 7 represents Sunday. For further details, see <a href="https://en.wikipedia.org/wiki/ISO_week_date">the ISO-8601 spec as described on Wikipedia</a>.</p> <p> <code>HH</code> is the zero-padded hour of the day (0-23), and <code>MM</code> is the zero-padded minute of the hour. </p> <p>For example, <code>1:05:00</code> specifies maintenance at 5 AM Monday.</p>
		/// Max length: 7
		/// Min length: 7
		/// Pattern: ^[1-7]:([01]\d|2[0-3]):?([0-5]\d)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(7, MinimumLength=7)]
		public string WeeklyMaintenanceStartTime { get; set; }
		
		/// <summary>
		/// The data repository configuration object for Lustre file systems returned in the response of the <code>CreateFileSystem</code> operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DataRepositoryConfiguration DataRepositoryConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LustreFileSystemConfigurationDeploymentType DeploymentType { get; set; }
		
		/// <summary>
		/// Minimum: 50
		/// Maximum: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(50, 200)]
		public System.Nullable<System.Int32> PerUnitStorageThroughput { get; set; }
		
		/// <summary>
		/// Max length: 8
		/// Min length: 1
		/// Pattern: ^([A-Za-z0-9_-]{1,8})$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8, MinimumLength=1)]
		public string MountName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum LustreFileSystemConfigurationDeploymentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCRATCH_1 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCRATCH_2 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERSISTENT_1 = 2,
	}
	
	/// <summary>
	/// An enumeration specifying the currently ongoing maintenance operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FileSystemMaintenanceOperation
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PATCHING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BACKING_UP = 1,
	}
	
	/// <summary>
	/// The name for a filter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FilterName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		file-system-id = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		backup-type = 1,
	}
	
	/// <summary>
	/// A filter used to restrict the results of describe calls. You can use multiple filters to return results that meet all applied filter requirements.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Filter
	{
		
		/// <summary>
		/// The name for a filter.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FilterName Name { get; set; }
		
		/// <summary>
		/// A list of filter values.
		/// Maximum items: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public FilterValue[] Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FilterName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		file-system-id = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		backup-type = 1,
	}
	
	/// <summary>
	/// The configuration of the self-managed Microsoft Active Directory (AD) directory to which the Windows File Server instance is joined.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SelfManagedActiveDirectoryAttributes
	{
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: ^.{1,255}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string DomainName { get; set; }
		
		/// <summary>
		/// Max length: 2000
		/// Min length: 1
		/// Pattern: ^.{1,2000}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2000, MinimumLength=1)]
		public string OrganizationalUnitDistinguishedName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: ^.{1,256}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string FileSystemAdministratorsGroup { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: ^.{1,256}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string UserName { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 2
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2)]
		public IpAddress[] DnsIps { get; set; }
	}
	
	/// <summary>
	/// The configuration that Amazon FSx uses to join the Windows File Server instance to a self-managed Microsoft Active Directory (AD) directory.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SelfManagedActiveDirectoryConfigurationUpdates
	{
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: ^.{1,256}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string UserName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: ^.{1,256}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string Password { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 2
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2)]
		public IpAddress[] DnsIps { get; set; }
	}
	
	/// <summary>
	/// Specifies a key-value pair for a resource tag.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Tag
	{
		
		/// <summary>
		/// A string of 1 to 128 characters that specifies the key for a tag. Tag keys must be unique for the resource to which they are attached.
		/// Max length: 128
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string Key { get; set; }
		
		/// <summary>
		/// A string of 0 to 256 characters that specifies the value for a tag. Tag values can be null and don't have to be unique in a tag set.
		/// Max length: 256
		/// Min length: 0
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=0)]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// The configuration object for Amazon FSx for Lustre file systems used in the <code>UpdateFileSystem</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateFileSystemLustreConfiguration
	{
		
		/// <summary>
		/// <p>A recurring weekly time, in the format <code>D:HH:MM</code>. </p> <p> <code>D</code> is the day of the week, for which 1 represents Monday and 7 represents Sunday. For further details, see <a href="https://en.wikipedia.org/wiki/ISO_week_date">the ISO-8601 spec as described on Wikipedia</a>.</p> <p> <code>HH</code> is the zero-padded hour of the day (0-23), and <code>MM</code> is the zero-padded minute of the hour. </p> <p>For example, <code>1:05:00</code> specifies maintenance at 5 AM Monday.</p>
		/// Max length: 7
		/// Min length: 7
		/// Pattern: ^[1-7]:([01]\d|2[0-3]):?([0-5]\d)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(7, MinimumLength=7)]
		public string WeeklyMaintenanceStartTime { get; set; }
	}
	
	/// <summary>
	/// Updates the configuration for an existing Amazon FSx for Windows File Server file system. Amazon FSx only overwrites existing properties with non-null values provided in the request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateFileSystemWindowsConfiguration
	{
		
		/// <summary>
		/// <p>A recurring weekly time, in the format <code>D:HH:MM</code>. </p> <p> <code>D</code> is the day of the week, for which 1 represents Monday and 7 represents Sunday. For further details, see <a href="https://en.wikipedia.org/wiki/ISO_week_date">the ISO-8601 spec as described on Wikipedia</a>.</p> <p> <code>HH</code> is the zero-padded hour of the day (0-23), and <code>MM</code> is the zero-padded minute of the hour. </p> <p>For example, <code>1:05:00</code> specifies maintenance at 5 AM Monday.</p>
		/// Max length: 7
		/// Min length: 7
		/// Pattern: ^[1-7]:([01]\d|2[0-3]):?([0-5]\d)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(7, MinimumLength=7)]
		public string WeeklyMaintenanceStartTime { get; set; }
		
		/// <summary>
		/// A recurring daily time, in the format <code>HH:MM</code>. <code>HH</code> is the zero-padded hour of the day (0-23), and <code>MM</code> is the zero-padded minute of the hour. For example, <code>05:00</code> specifies 5 AM daily. 
		/// Max length: 5
		/// Min length: 5
		/// Pattern: ^([01]\d|2[0-3]):?([0-5]\d)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(5, MinimumLength=5)]
		public string DailyAutomaticBackupStartTime { get; set; }
		
		/// <summary>
		/// The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 35 days.
		/// Minimum: 0
		/// Maximum: 35
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 35)]
		public System.Nullable<System.Int32> AutomaticBackupRetentionDays { get; set; }
		
		/// <summary>
		/// Sustained throughput of an Amazon FSx file system in MBps.
		/// Minimum: 8
		/// Maximum: 2048
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(8, 2048)]
		public System.Nullable<System.Int32> ThroughputCapacity { get; set; }
		
		/// <summary>
		/// The configuration that Amazon FSx uses to join the Windows File Server instance to a self-managed Microsoft Active Directory (AD) directory.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SelfManagedActiveDirectoryConfigurationUpdates SelfManagedActiveDirectoryConfiguration { get; set; }
	}
	
	public partial class DemoClient
	{
		
		private System.Net.Http.HttpClient client;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public DemoClient(System.Net.Http.HttpClient client, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (client == null)
				throw new ArgumentNullException("Null HttpClient.", "client");

			if (client.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "client");

			this.client = client;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// <p>Cancels an existing Amazon FSx for Lustre data repository task if that task is in either the <code>PENDING</code> or <code>EXECUTING</code> state. When you cancel a task, Amazon FSx does the following.</p> <ul> <li> <p>Any files that FSx has already exported are not reverted.</p> </li> <li> <p>FSx continues to export any files that are "in-flight" when the cancel operation is received.</p> </li> <li> <p>FSx does not export any files that have not yet been exported.</p> </li> </ul>
		/// CancelDataRepositoryTask /#X-Amz-Target=AWSSimbaAPIService_v20180301.CancelDataRepositoryTask
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CancelDataRepositoryTaskResponse> CancelDataRepositoryTaskAsync(CancelDataRepositoryTaskRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=AWSSimbaAPIService_v20180301.CancelDataRepositoryTask";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CancelDataRepositoryTaskResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a backup of an existing Amazon FSx for Windows File Server file system. Creating regular backups for your file system is a best practice that complements the replication that Amazon FSx for Windows File Server performs for your file system. It also enables you to restore from user modification of data.</p> <p>If a backup with the specified client request token exists, and the parameters match, this operation returns the description of the existing backup. If a backup specified client request token exists, and the parameters don't match, this operation returns <code>IncompatibleParameterError</code>. If a backup with the specified client request token doesn't exist, <code>CreateBackup</code> does the following: </p> <ul> <li> <p>Creates a new Amazon FSx backup with an assigned ID, and an initial lifecycle state of <code>CREATING</code>.</p> </li> <li> <p>Returns the description of the backup.</p> </li> </ul> <p>By using the idempotent operation, you can retry a <code>CreateBackup</code> operation without the risk of creating an extra backup. This approach can be useful when an initial call fails in a way that makes it unclear whether a backup was created. If you use the same client request token and the initial call created a backup, the operation returns a successful result because all the parameters are the same.</p> <p>The <code>CreateFileSystem</code> operation returns while the backup's lifecycle state is still <code>CREATING</code>. You can check the file system creation status by calling the <a>DescribeBackups</a> operation, which returns the backup state along with other information.</p> <note> <p/> </note>
		/// CreateBackup /#X-Amz-Target=AWSSimbaAPIService_v20180301.CreateBackup
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateBackupResponse> CreateBackupAsync(CreateBackupRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=AWSSimbaAPIService_v20180301.CreateBackup";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateBackupResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates an Amazon FSx for Lustre data repository task. You use data repository tasks to perform bulk operations between your Amazon FSx file system and its linked data repository. An example of a data repository task is exporting any data and metadata changes, including POSIX metadata, to files, directories, and symbolic links (symlinks) from your FSx file system to its linked data repository. A <code>CreateDataRepositoryTask</code> operation will fail if a data repository is not linked to the FSx file system. To learn more about data repository tasks, see <a href="https://docs.aws.amazon.com/fsx/latest/LustreGuide/data-repository-tasks.html">Using Data Repository Tasks</a>. To learn more about linking a data repository to your file system, see <a href="https://docs.aws.amazon.com/fsx/latest/LustreGuide/export-data-repository.html#export-prefix">Setting the Export Prefix</a>.
		/// CreateDataRepositoryTask /#X-Amz-Target=AWSSimbaAPIService_v20180301.CreateDataRepositoryTask
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateDataRepositoryTaskResponse> CreateDataRepositoryTaskAsync(CreateDataRepositoryTaskRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=AWSSimbaAPIService_v20180301.CreateDataRepositoryTask";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateDataRepositoryTaskResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a new, empty Amazon FSx file system.</p> <p>If a file system with the specified client request token exists and the parameters match, <code>CreateFileSystem</code> returns the description of the existing file system. If a file system specified client request token exists and the parameters don't match, this call returns <code>IncompatibleParameterError</code>. If a file system with the specified client request token doesn't exist, <code>CreateFileSystem</code> does the following: </p> <ul> <li> <p>Creates a new, empty Amazon FSx file system with an assigned ID, and an initial lifecycle state of <code>CREATING</code>.</p> </li> <li> <p>Returns the description of the file system.</p> </li> </ul> <p>This operation requires a client request token in the request that Amazon FSx uses to ensure idempotent creation. This means that calling the operation multiple times with the same client request token has no effect. By using the idempotent operation, you can retry a <code>CreateFileSystem</code> operation without the risk of creating an extra file system. This approach can be useful when an initial call fails in a way that makes it unclear whether a file system was created. Examples are if a transport level timeout occurred, or your connection was reset. If you use the same client request token and the initial call created a file system, the client receives success as long as the parameters are the same.</p> <note> <p>The <code>CreateFileSystem</code> call returns while the file system's lifecycle state is still <code>CREATING</code>. You can check the file-system creation status by calling the <a>DescribeFileSystems</a> operation, which returns the file system state along with other information.</p> </note>
		/// CreateFileSystem /#X-Amz-Target=AWSSimbaAPIService_v20180301.CreateFileSystem
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateFileSystemResponse> CreateFileSystemAsync(CreateFileSystemRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=AWSSimbaAPIService_v20180301.CreateFileSystem";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateFileSystemResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a new Amazon FSx file system from an existing Amazon FSx for Windows File Server backup.</p> <p>If a file system with the specified client request token exists and the parameters match, this operation returns the description of the file system. If a client request token specified by the file system exists and the parameters don't match, this call returns <code>IncompatibleParameterError</code>. If a file system with the specified client request token doesn't exist, this operation does the following:</p> <ul> <li> <p>Creates a new Amazon FSx file system from backup with an assigned ID, and an initial lifecycle state of <code>CREATING</code>.</p> </li> <li> <p>Returns the description of the file system.</p> </li> </ul> <p>Parameters like Active Directory, default share name, automatic backup, and backup settings default to the parameters of the file system that was backed up, unless overridden. You can explicitly supply other settings.</p> <p>By using the idempotent operation, you can retry a <code>CreateFileSystemFromBackup</code> call without the risk of creating an extra file system. This approach can be useful when an initial call fails in a way that makes it unclear whether a file system was created. Examples are if a transport level timeout occurred, or your connection was reset. If you use the same client request token and the initial call created a file system, the client receives success as long as the parameters are the same.</p> <note> <p>The <code>CreateFileSystemFromBackup</code> call returns while the file system's lifecycle state is still <code>CREATING</code>. You can check the file-system creation status by calling the <a>DescribeFileSystems</a> operation, which returns the file system state along with other information.</p> </note>
		/// CreateFileSystemFromBackup /#X-Amz-Target=AWSSimbaAPIService_v20180301.CreateFileSystemFromBackup
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateFileSystemFromBackupResponse> CreateFileSystemFromBackupAsync(CreateFileSystemFromBackupRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=AWSSimbaAPIService_v20180301.CreateFileSystemFromBackup";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateFileSystemFromBackupResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes an Amazon FSx for Windows File Server backup, deleting its contents. After deletion, the backup no longer exists, and its data is gone.</p> <p>The <code>DeleteBackup</code> call returns instantly. The backup will not show up in later <code>DescribeBackups</code> calls.</p> <important> <p>The data in a deleted backup is also deleted and can't be recovered by any means.</p> </important>
		/// DeleteBackup /#X-Amz-Target=AWSSimbaAPIService_v20180301.DeleteBackup
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteBackupResponse> DeleteBackupAsync(DeleteBackupRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=AWSSimbaAPIService_v20180301.DeleteBackup";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteBackupResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a file system, deleting its contents. After deletion, the file system no longer exists, and its data is gone. Any existing automatic backups will also be deleted.</p> <p>By default, when you delete an Amazon FSx for Windows File Server file system, a final backup is created upon deletion. This final backup is not subject to the file system's retention policy, and must be manually deleted.</p> <p>The <code>DeleteFileSystem</code> action returns while the file system has the <code>DELETING</code> status. You can check the file system deletion status by calling the <a>DescribeFileSystems</a> action, which returns a list of file systems in your account. If you pass the file system ID for a deleted file system, the <a>DescribeFileSystems</a> returns a <code>FileSystemNotFound</code> error.</p> <note> <p>Deleting an Amazon FSx for Lustre file system will fail with a 400 BadRequest if a data repository task is in a <code>PENDING</code> or <code>EXECUTING</code> state.</p> </note> <important> <p>The data in a deleted file system is also deleted and can't be recovered by any means.</p> </important>
		/// DeleteFileSystem /#X-Amz-Target=AWSSimbaAPIService_v20180301.DeleteFileSystem
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteFileSystemResponse> DeleteFileSystemAsync(DeleteFileSystemRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=AWSSimbaAPIService_v20180301.DeleteFileSystem";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteFileSystemResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Returns the description of specific Amazon FSx for Windows File Server backups, if a <code>BackupIds</code> value is provided for that backup. Otherwise, it returns all backups owned by your AWS account in the AWS Region of the endpoint that you're calling.</p> <p>When retrieving all backups, you can optionally specify the <code>MaxResults</code> parameter to limit the number of backups in a response. If more backups remain, Amazon FSx returns a <code>NextToken</code> value in the response. In this case, send a later request with the <code>NextToken</code> request parameter set to the value of <code>NextToken</code> from the last response.</p> <p>This action is used in an iterative process to retrieve a list of your backups. <code>DescribeBackups</code> is called first without a <code>NextToken</code>value. Then the action continues to be called with the <code>NextToken</code> parameter set to the value of the last <code>NextToken</code> value until a response has no <code>NextToken</code>.</p> <p>When using this action, keep the following in mind:</p> <ul> <li> <p>The implementation might return fewer than <code>MaxResults</code> file system descriptions while still including a <code>NextToken</code> value.</p> </li> <li> <p>The order of backups returned in the response of one <code>DescribeBackups</code> call and the order of backups returned across the responses of a multi-call iteration is unspecified.</p> </li> </ul>
		/// DescribeBackups /#X-Amz-Target=AWSSimbaAPIService_v20180301.DescribeBackups
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeBackupsResponse> DescribeBackupsAsync(string MaxResults, string NextToken, DescribeBackupsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=AWSSimbaAPIService_v20180301.DescribeBackups?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeBackupsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Returns the description of specific Amazon FSx for Lustre data repository tasks, if one or more <code>TaskIds</code> values are provided in the request, or if filters are used in the request. You can use filters to narrow the response to include just tasks for specific file systems, or tasks in a specific lifecycle state. Otherwise, it returns all data repository tasks owned by your AWS account in the AWS Region of the endpoint that you're calling.</p> <p>When retrieving all tasks, you can paginate the response by using the optional <code>MaxResults</code> parameter to limit the number of tasks returned in a response. If more tasks remain, Amazon FSx returns a <code>NextToken</code> value in the response. In this case, send a later request with the <code>NextToken</code> request parameter set to the value of <code>NextToken</code> from the last response.</p>
		/// DescribeDataRepositoryTasks /#X-Amz-Target=AWSSimbaAPIService_v20180301.DescribeDataRepositoryTasks
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeDataRepositoryTasksResponse> DescribeDataRepositoryTasksAsync(string MaxResults, string NextToken, DescribeDataRepositoryTasksRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=AWSSimbaAPIService_v20180301.DescribeDataRepositoryTasks?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeDataRepositoryTasksResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Returns the description of specific Amazon FSx file systems, if a <code>FileSystemIds</code> value is provided for that file system. Otherwise, it returns descriptions of all file systems owned by your AWS account in the AWS Region of the endpoint that you're calling.</p> <p>When retrieving all file system descriptions, you can optionally specify the <code>MaxResults</code> parameter to limit the number of descriptions in a response. If more file system descriptions remain, Amazon FSx returns a <code>NextToken</code> value in the response. In this case, send a later request with the <code>NextToken</code> request parameter set to the value of <code>NextToken</code> from the last response.</p> <p>This action is used in an iterative process to retrieve a list of your file system descriptions. <code>DescribeFileSystems</code> is called first without a <code>NextToken</code>value. Then the action continues to be called with the <code>NextToken</code> parameter set to the value of the last <code>NextToken</code> value until a response has no <code>NextToken</code>.</p> <p>When using this action, keep the following in mind:</p> <ul> <li> <p>The implementation might return fewer than <code>MaxResults</code> file system descriptions while still including a <code>NextToken</code> value.</p> </li> <li> <p>The order of file systems returned in the response of one <code>DescribeFileSystems</code> call and the order of file systems returned across the responses of a multicall iteration is unspecified.</p> </li> </ul>
		/// DescribeFileSystems /#X-Amz-Target=AWSSimbaAPIService_v20180301.DescribeFileSystems
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeFileSystemsResponse> DescribeFileSystemsAsync(string MaxResults, string NextToken, DescribeFileSystemsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=AWSSimbaAPIService_v20180301.DescribeFileSystems?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeFileSystemsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Lists tags for an Amazon FSx file systems and backups in the case of Amazon FSx for Windows File Server.</p> <p>When retrieving all tags, you can optionally specify the <code>MaxResults</code> parameter to limit the number of tags in a response. If more tags remain, Amazon FSx returns a <code>NextToken</code> value in the response. In this case, send a later request with the <code>NextToken</code> request parameter set to the value of <code>NextToken</code> from the last response.</p> <p>This action is used in an iterative process to retrieve a list of your tags. <code>ListTagsForResource</code> is called first without a <code>NextToken</code>value. Then the action continues to be called with the <code>NextToken</code> parameter set to the value of the last <code>NextToken</code> value until a response has no <code>NextToken</code>.</p> <p>When using this action, keep the following in mind:</p> <ul> <li> <p>The implementation might return fewer than <code>MaxResults</code> file system descriptions while still including a <code>NextToken</code> value.</p> </li> <li> <p>The order of tags returned in the response of one <code>ListTagsForResource</code> call and the order of tags returned across the responses of a multi-call iteration is unspecified.</p> </li> </ul>
		/// ListTagsForResource /#X-Amz-Target=AWSSimbaAPIService_v20180301.ListTagsForResource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=AWSSimbaAPIService_v20180301.ListTagsForResource";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListTagsForResourceResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Tags an Amazon FSx resource.
		/// TagResource /#X-Amz-Target=AWSSimbaAPIService_v20180301.TagResource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<TagResourceResponse> TagResourceAsync(TagResourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=AWSSimbaAPIService_v20180301.TagResource";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<TagResourceResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// This action removes a tag from an Amazon FSx resource.
		/// UntagResource /#X-Amz-Target=AWSSimbaAPIService_v20180301.UntagResource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=AWSSimbaAPIService_v20180301.UntagResource";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UntagResourceResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Use this operation to update the configuration of an existing Amazon FSx file system. For an Amazon FSx for Lustre file system, you can update only the WeeklyMaintenanceStartTime. For an Amazon for Windows File Server file system, you can update the following properties:</p> <ul> <li> <p>AutomaticBackupRetentionDays</p> </li> <li> <p>DailyAutomaticBackupStartTime</p> </li> <li> <p>SelfManagedActiveDirectoryConfiguration</p> </li> <li> <p>StorageCapacity</p> </li> <li> <p>ThroughputCapacity</p> </li> <li> <p>WeeklyMaintenanceStartTime</p> </li> </ul> <p>You can update multiple properties in a single request.</p>
		/// UpdateFileSystem /#X-Amz-Target=AWSSimbaAPIService_v20180301.UpdateFileSystem
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateFileSystemResponse> UpdateFileSystemAsync(UpdateFileSystemRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=AWSSimbaAPIService_v20180301.UpdateFileSystem";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UpdateFileSystemResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}
