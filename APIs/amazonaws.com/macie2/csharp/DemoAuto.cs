//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace My.Demo.Client
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Net.Http;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchGetCustomDataIdentifiersResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public BatchGetCustomDataIdentifierSummary[] CustomDataIdentifiers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] NotFoundIdentifierIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateClassificationJobResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string JobArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string JobId { get; set; }
	}
	
	/// <summary>
	/// An object that specifies conditions for including or excluding objects from the job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Scoping
	{
		
		/// <summary>
		/// Reserved for future use.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public JobScopingBlock Excludes { get; set; }
		
		/// <summary>
		/// Reserved for future use.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public JobScopingBlock Includes { get; set; }
	}
	
	/// <summary>
	/// Run the job once a month, on a specific day of the month. This value can be an integer from 1 through 30.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class MonthlySchedule
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DayOfMonth { get; set; }
	}
	
	/// <summary>
	/// Reserved for future use.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class WeeklySchedule
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WeeklyScheduleDayOfWeek DayOfWeek { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum WeeklyScheduleDayOfWeek
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUNDAY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONDAY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TUESDAY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEDNESDAY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THURSDAY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FRIDAY = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SATURDAY = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateCustomDataIdentifierResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomDataIdentifierId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateFindingsFilterResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateInvitationsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UnprocessedAccount[] UnprocessedAccounts { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateMemberResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	/// <summary>
	/// The type of finding. Valid values are:
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FindingType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SensitiveData:S3Object/Multiple = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SensitiveData:S3Object/Financial = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SensitiveData:S3Object/Personal = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SensitiveData:S3Object/Credentials = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SensitiveData:S3Object/CustomIdentifier = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Policy:IAMUser/S3BucketPublic = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Policy:IAMUser/S3BucketSharedExternally = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Policy:IAMUser/S3BucketReplicatedExternally = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Policy:IAMUser/S3BucketEncryptionDisabled = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Policy:IAMUser/S3BlockPublicAccessDisabled = 9,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeclineInvitationsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UnprocessedAccount[] UnprocessedAccounts { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteInvitationsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UnprocessedAccount[] UnprocessedAccounts { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeBucketsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public BucketMetadata[] Buckets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Specifies the operator to use in an attribute-based condition that filters the results of a query for information about S3 buckets.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BucketCriteriaAdditionalProperties
	{
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Eq { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Gt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Gte { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Lt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Lte { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Neq { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Prefix { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum OrderBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DESC = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeClassificationJobResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] CustomDataIdentifierIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> InitialRun { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string JobArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string JobId { get; set; }
		
		/// <summary>
		/// The current status of a classification job. Valid values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DescribeClassificationJobResponseJobStatus JobStatus { get; set; }
		
		/// <summary>
		/// The schedule for running a classification job. Valid values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DescribeClassificationJobResponseJobType JobType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastRunTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Specifies which S3 buckets contain the objects that a classification job analyzes, and the scope of that analysis.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3JobDefinition S3JobDefinition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SamplingPercentage { get; set; }
		
		/// <summary>
		/// Specifies the recurrence pattern for running a classification job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public JobScheduleFrequency ScheduleFrequency { get; set; }
		
		/// <summary>
		/// Provides processing statistics for a classification job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Statistics Statistics { get; set; }
		
		/// <summary>
		/// A string-to-string map of key-value pairs that specifies the tags (keys and values) for a classification job, custom data identifier, findings filter, or member account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeClassificationJobResponseJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAUSED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IDLE = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeClassificationJobResponseJobType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONE_TIME = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCHEDULED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeOrganizationConfigurationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoEnable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MaxAccountLimitReached { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetBucketStatisticsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BucketCount { get; set; }
		
		/// <summary>
		/// The total number of buckets that are publicly accessible, based on a combination of permissions settings for each bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public BucketCountByEffectivePermission BucketCountByEffectivePermission { get; set; }
		
		/// <summary>
		/// The total number of buckets, grouped by server-side encryption type. This object also reports the total number of buckets that aren't encrypted.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public BucketCountByEncryptionType BucketCountByEncryptionType { get; set; }
		
		/// <summary>
		/// The total number of buckets that are shared with another AWS account or configured to support cross-origin resource sharing (CORS).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public BucketCountBySharedAccessType BucketCountBySharedAccessType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClassifiableObjectCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdated { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ObjectCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SizeInBytes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SizeInBytesCompressed { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetClassificationExportConfigurationResponse
	{
		
		/// <summary>
		/// Specifies where to export data classification results to, and the encryption settings to use when storing results in that location. Currently, you can export classification results only to an S3 bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ClassificationExportConfiguration Configuration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetCustomDataIdentifierResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Deleted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] IgnoreWords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Keywords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumMatchDistance { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Regex { get; set; }
		
		/// <summary>
		/// A string-to-string map of key-value pairs that specifies the tags (keys and values) for a classification job, custom data identifier, findings filter, or member account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetFindingStatisticsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public GroupCount[] CountsByGroup { get; set; }
	}
	
	/// <summary>
	/// The grouping to sort the results by. Valid values are:
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FindingStatisticsSortAttributeName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		groupKey = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		count = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetFindingsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Finding[] Findings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetFindingsFilterResponse
	{
		
		/// <summary>
		/// The action to perform on findings that meet the filter criteria. Valid values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetFindingsFilterResponseAction Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Specifies, as a map, one or more property-based conditions that filter the results of a query for findings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FindingCriteria FindingCriteria { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Position { get; set; }
		
		/// <summary>
		/// A string-to-string map of key-value pairs that specifies the tags (keys and values) for a classification job, custom data identifier, findings filter, or member account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GetFindingsFilterResponseAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARCHIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOOP = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetInvitationsCountResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InvitationsCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetMacieSessionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedAt { get; set; }
		
		/// <summary>
		/// The frequency with which Amazon Macie publishes findings for an account. This includes adding findings to AWS Security Hub and exporting finding events to Amazon CloudWatch. Valid values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetMacieSessionResponseFindingPublishingFrequency FindingPublishingFrequency { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ServiceRole { get; set; }
		
		/// <summary>
		/// The status of an Amazon Macie account. Valid values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetMacieSessionResponseStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> UpdatedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GetMacieSessionResponseFindingPublishingFrequency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIFTEEN_MINUTES = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONE_HOUR = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SIX_HOURS = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GetMacieSessionResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAUSED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetMasterAccountResponse
	{
		
		/// <summary>
		/// Provides information about an Amazon Macie membership invitation that was received by an account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Invitation Master { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetMemberResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> InvitedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterAccountId { get; set; }
		
		/// <summary>
		/// The current status of the relationship between an account and an associated Amazon Macie master account (<i>inviter account</i>). Possible values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetMemberResponseRelationshipStatus RelationshipStatus { get; set; }
		
		/// <summary>
		/// A string-to-string map of key-value pairs that specifies the tags (keys and values) for a classification job, custom data identifier, findings filter, or member account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> UpdatedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GetMemberResponseRelationshipStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Enabled = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Paused = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Invited = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Created = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Removed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Resigned = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EmailVerificationInProgress = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EmailVerificationFailed = 7,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetUsageStatisticsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UsageRecord[] Records { get; set; }
	}
	
	/// <summary>
	/// Specifies criteria for filtering the results of a query for account quotas and usage data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UsageStatisticsFilter
	{
		
		/// <summary>
		/// The field to use to filter the results of a query for account quotas and usage data.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UsageStatisticsFilterKey Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UsageStatisticsFilterKey
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		accountId = 0,
	}
	
	/// <summary>
	/// The field to use to sort the results of a query for account quotas and usage data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UsageStatisticsSortKey
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		accountId = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		total = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetUsageTotalsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UsageTotal[] UsageTotals { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListClassificationJobsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public JobSummary[] Items { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The property to sort the results by. Valid values are:
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListJobsSortAttributeName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		createdAt = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		jobStatus = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		name = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		jobType = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListCustomDataIdentifiersResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CustomDataIdentifierSummary[] Items { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListFindingsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] FindingIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListFindingsFiltersResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FindingsFilterListItem[] FindingsFilterListItems { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListInvitationsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Invitation[] Invitations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListMembersResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Member[] Members { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListOrganizationAdminAccountsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AdminAccount[] AdminAccounts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTagsForResourceResponse
	{
		
		/// <summary>
		/// A string-to-string map of key-value pairs that specifies the tags (keys and values) for a classification job, custom data identifier, findings filter, or member account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PutClassificationExportConfigurationResponse
	{
		
		/// <summary>
		/// Specifies where to export data classification results to, and the encryption settings to use when storing results in that location. Currently, you can export classification results only to an S3 bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ClassificationExportConfiguration Configuration { get; set; }
	}
	
	/// <summary>
	/// Specifies an S3 bucket to export data classification results to, and the encryption settings to use when storing results in that bucket.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3Destination
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BucketName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KeyPrefix { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TestCustomDataIdentifierResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MatchCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateFindingsFilterResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AcceptInvitationRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InvitationId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MasterAccount { get; set; }
	}
	
	/// <summary>
	/// Provides information about the permissions settings of the bucket-level access control list (ACL) for an S3 bucket.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AccessControlList
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AllowsPublicReadAccess { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AllowsPublicWriteAccess { get; set; }
	}
	
	/// <summary>
	/// Specifies details for an account to associate with an Amazon Macie master account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AccountDetail
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Email { get; set; }
	}
	
	/// <summary>
	/// Provides information about the block public access settings for an S3 bucket. These settings can apply to a bucket at the account level or bucket level. For detailed information about each setting, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html">Using Amazon S3 block public access</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BlockPublicAccess
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> BlockPublicAcls { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> BlockPublicPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IgnorePublicAcls { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RestrictPublicBuckets { get; set; }
	}
	
	/// <summary>
	/// Provides information about account-level permissions settings that apply to an S3 bucket.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AccountLevelPermissions
	{
		
		/// <summary>
		/// Provides information about the block public access settings for an S3 bucket. These settings can apply to a bucket at the account level or bucket level. For detailed information about each setting, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html">Using Amazon S3 block public access</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public BlockPublicAccess BlockPublicAccess { get; set; }
	}
	
	/// <summary>
	/// The current status of an account as a delegated administrator of Amazon Macie for an AWS organization.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AdminStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLING_IN_PROGRESS = 1,
	}
	
	/// <summary>
	/// Provides information about an account that's designated as a delegated administrator of Amazon Macie for an AWS organization.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AdminAccount
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		/// <summary>
		/// The current status of an account as a delegated administrator of Amazon Macie for an AWS organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AdminAccountStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AdminAccountStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLING_IN_PROGRESS = 1,
	}
	
	/// <summary>
	/// Reserved for future use.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ApiCallDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Api { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ApiServiceName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> FirstSeen { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastSeen { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ArchiveFindingsRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public @__string[] FindingIds { get; set; }
	}
	
	/// <summary>
	/// Provides information about a session that was created for an entity who performed an action by using temporary security credentials.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SessionContext
	{
		
		/// <summary>
		/// Provides information about the context in which temporary security credentials were issued to an entity.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SessionContextAttributes Attributes { get; set; }
		
		/// <summary>
		/// Provides information about the source and type of temporary security credentials that were issued to an entity.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SessionIssuer SessionIssuer { get; set; }
	}
	
	/// <summary>
	/// Reserved for future use.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AssumedRole
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccessKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrincipalId { get; set; }
		
		/// <summary>
		/// Provides information about a session that was created for an entity who performed an action by using temporary security credentials.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SessionContext SessionContext { get; set; }
	}
	
	/// <summary>
	/// Reserved for future use.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsAccount
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrincipalId { get; set; }
	}
	
	/// <summary>
	/// Reserved for future use.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsService
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InvokedBy { get; set; }
	}
	
	/// <summary>
	/// Provides information about a custom data identifier.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchGetCustomDataIdentifierSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Deleted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchGetCustomDataIdentifiersRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Ids { get; set; }
	}
	
	/// <summary>
	/// The total number of buckets that are publicly accessible, based on a combination of permissions settings for each bucket.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BucketCountByEffectivePermission
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PubliclyAccessible { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PubliclyReadable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PubliclyWritable { get; set; }
	}
	
	/// <summary>
	/// The total number of buckets, grouped by server-side encryption type. This object also reports the total number of buckets that aren't encrypted.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BucketCountByEncryptionType
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> KmsManaged { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> S3Managed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Unencrypted { get; set; }
	}
	
	/// <summary>
	/// The total number of buckets that are shared with another AWS account or configured to support cross-origin resource sharing (CORS).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BucketCountBySharedAccessType
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> External { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Internal { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> NotShared { get; set; }
	}
	
	/// <summary>
	/// Provides information about the permissions settings of a bucket policy for an S3 bucket.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BucketPolicy
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AllowsPublicReadAccess { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AllowsPublicWriteAccess { get; set; }
	}
	
	/// <summary>
	/// Provides information about bucket-level permissions settings for an S3 bucket.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BucketLevelPermissions
	{
		
		/// <summary>
		/// Provides information about the permissions settings of the bucket-level access control list (ACL) for an S3 bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AccessControlList AccessControlList { get; set; }
		
		/// <summary>
		/// Provides information about the block public access settings for an S3 bucket. These settings can apply to a bucket at the account level or bucket level. For detailed information about each setting, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html">Using Amazon S3 block public access</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public BlockPublicAccess BlockPublicAccess { get; set; }
		
		/// <summary>
		/// Provides information about the permissions settings of a bucket policy for an S3 bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public BucketPolicy BucketPolicy { get; set; }
	}
	
	/// <summary>
	/// The total number of objects that are in the bucket, grouped by server-side encryption type. This includes a grouping that reports the total number of objects that aren't encrypted.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ObjectCountByEncryptionType
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CustomerManaged { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> KmsManaged { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> S3Managed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Unencrypted { get; set; }
	}
	
	/// <summary>
	/// Provides information about permissions settings that determine whether an S3 bucket is publicly accessible.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BucketPublicAccess
	{
		
		[System.Runtime.Serialization.DataMember()]
		public BucketPublicAccessEffectivePermission EffectivePermission { get; set; }
		
		/// <summary>
		/// The account-level and bucket-level permissions settings for an S3 bucket, or the bucket that contains an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public BucketPermissionConfiguration PermissionConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum BucketPublicAccessEffectivePermission
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUBLIC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_PUBLIC = 1,
	}
	
	/// <summary>
	/// Provides information about settings that define whether one or more objects in an S3 bucket are replicated to S3 buckets for other AWS accounts and, if so, which accounts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ReplicationDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Replicated { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ReplicatedExternally { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] ReplicationAccounts { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SharedAccess
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXTERNAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNAL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_SHARED = 2,
	}
	
	/// <summary>
	/// Provides information about an S3 bucket that Amazon Macie monitors and analyzes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BucketMetadata
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BucketArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> BucketCreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BucketName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClassifiableObjectCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdated { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ObjectCount { get; set; }
		
		/// <summary>
		/// The total number of objects that are in the bucket, grouped by server-side encryption type. This includes a grouping that reports the total number of objects that aren't encrypted.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ObjectCountByEncryptionType ObjectCountByEncryptionType { get; set; }
		
		/// <summary>
		/// Provides information about permissions settings that determine whether an S3 bucket is publicly accessible.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public BucketPublicAccess PublicAccess { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		/// <summary>
		/// Provides information about settings that define whether one or more objects in an S3 bucket are replicated to S3 buckets for other AWS accounts and, if so, which accounts.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ReplicationDetails ReplicationDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BucketMetadataSharedAccess SharedAccess { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SizeInBytes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SizeInBytesCompressed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KeyValuePair[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Versioning { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum BucketMetadataSharedAccess
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXTERNAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNAL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_SHARED = 2,
	}
	
	/// <summary>
	/// The account-level and bucket-level permissions settings for an S3 bucket, or the bucket that contains an object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BucketPermissionConfiguration
	{
		
		/// <summary>
		/// Provides information about account-level permissions settings that apply to an S3 bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AccountLevelPermissions AccountLevelPermissions { get; set; }
		
		/// <summary>
		/// Provides information about bucket-level permissions settings for an S3 bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public BucketLevelPermissions BucketLevelPermissions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EffectivePermission
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUBLIC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_PUBLIC = 1,
	}
	
	/// <summary>
	/// Specifies criteria for sorting the results of a query for information about S3 buckets.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BucketSortCriteria
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AttributeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BucketSortCriteriaOrderBy OrderBy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum BucketSortCriteriaOrderBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DESC = 1,
	}
	
	/// <summary>
	/// Provides detailed information about a sensitive data finding, including the types and number of occurrences of the data that was found.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ClassificationResult
	{
		
		/// <summary>
		/// Provides information about the number of occurrences of the data that produced a sensitive data finding, and the custom data identifiers that detected the data for the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CustomDataIdentifiers CustomDataIdentifiers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MimeType { get; set; }
		
		/// <summary>
		/// Provides information about the category and number of occurrences of sensitive data that produced a finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SensitiveDataItem[] SensitiveData { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SizeClassified { get; set; }
		
		/// <summary>
		/// Provides information about the status of a sensitive data finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ClassificationResultStatus Status { get; set; }
	}
	
	/// <summary>
	/// Provides information about a sensitive data finding, including the classification job that produced the finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ClassificationDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DetailedResultsLocation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string JobArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string JobId { get; set; }
		
		/// <summary>
		/// Provides detailed information about a sensitive data finding, including the types and number of occurrences of the data that was found.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ClassificationResult Result { get; set; }
	}
	
	/// <summary>
	/// Specifies where to export data classification results to, and the encryption settings to use when storing results in that location. Currently, you can export classification results only to an S3 bucket.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ClassificationExportConfiguration
	{
		
		/// <summary>
		/// Specifies an S3 bucket to export data classification results to, and the encryption settings to use when storing results in that bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3Destination S3Destination { get; set; }
	}
	
	/// <summary>
	/// Provides information about the number of occurrences of the data that produced a sensitive data finding, and the custom data identifiers that detected the data for the finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CustomDataIdentifiers
	{
		
		/// <summary>
		/// Reserved for future use.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CustomDetection[] Detections { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalCount { get; set; }
	}
	
	/// <summary>
	/// Provides information about the status of a sensitive data finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ClassificationResultStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Code { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Reason { get; set; }
	}
	
	/// <summary>
	/// The schedule for running a classification job. Valid values are:
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum JobType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONE_TIME = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCHEDULED = 1,
	}
	
	/// <summary>
	/// Specifies which S3 buckets contain the objects that a classification job analyzes, and the scope of that analysis.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3JobDefinition
	{
		
		[System.Runtime.Serialization.DataMember()]
		public S3BucketDefinitionForJob[] BucketDefinitions { get; set; }
		
		/// <summary>
		/// An object that specifies conditions for including or excluding objects from the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Scoping Scoping { get; set; }
	}
	
	/// <summary>
	/// Specifies the recurrence pattern for running a classification job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class JobScheduleFrequency
	{
		
		/// <summary>
		/// Run the job once a day, every day. If specified, this is an empty object.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DailySchedule DailySchedule { get; set; }
		
		/// <summary>
		/// Run the job once a month, on a specific day of the month. This value can be an integer from 1 through 30.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public MonthlySchedule MonthlySchedule { get; set; }
		
		/// <summary>
		/// Reserved for future use.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public WeeklySchedule WeeklySchedule { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateClassificationJobRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] CustomDataIdentifierIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> InitialRun { get; set; }
		
		/// <summary>
		/// The schedule for running a classification job. Valid values are:
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateClassificationJobRequestJobType JobType { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Specifies which S3 buckets contain the objects that a classification job analyzes, and the scope of that analysis.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public S3JobDefinition S3JobDefinition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SamplingPercentage { get; set; }
		
		/// <summary>
		/// Specifies the recurrence pattern for running a classification job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public JobScheduleFrequency ScheduleFrequency { get; set; }
		
		/// <summary>
		/// A string-to-string map of key-value pairs that specifies the tags (keys and values) for a classification job, custom data identifier, findings filter, or member account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateClassificationJobRequestJobType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONE_TIME = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCHEDULED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateCustomDataIdentifierRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] IgnoreWords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Keywords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumMatchDistance { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Regex { get; set; }
		
		/// <summary>
		/// A string-to-string map of key-value pairs that specifies the tags (keys and values) for a classification job, custom data identifier, findings filter, or member account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	/// The action to perform on findings that meet the filter criteria. Valid values are:
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FindingsFilterAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARCHIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOOP = 1,
	}
	
	/// <summary>
	/// Specifies, as a map, one or more property-based conditions that filter the results of a query for findings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FindingCriteria
	{
		
		/// <summary>
		/// Specifies a condition that defines a property, operator, and value to use to filter the results of a query for findings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Criterion Criterion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateFindingsFilterRequest
	{
		
		/// <summary>
		/// The action to perform on findings that meet the filter criteria. Valid values are:
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateFindingsFilterRequestAction Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Specifies, as a map, one or more property-based conditions that filter the results of a query for findings.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FindingCriteria FindingCriteria { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Position { get; set; }
		
		/// <summary>
		/// A string-to-string map of key-value pairs that specifies the tags (keys and values) for a classification job, custom data identifier, findings filter, or member account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateFindingsFilterRequestAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARCHIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOOP = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateInvitationsRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public @__string[] AccountIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableEmailNotification { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateMemberRequest
	{
		
		/// <summary>
		/// Specifies details for an account to associate with an Amazon Macie master account.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AccountDetail Account { get; set; }
		
		/// <summary>
		/// A string-to-string map of key-value pairs that specifies the tags (keys and values) for a classification job, custom data identifier, findings filter, or member account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateSampleFindingsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FindingType[] FindingTypes { get; set; }
	}
	
	/// <summary>
	/// Specifies the operator to use in a property-based condition that filters the results of a query for findings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CriterionAdditionalProperties
	{
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Eq { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Gt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Gte { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Lt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Lte { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Neq { get; set; }
	}
	
	/// <summary>
	/// The type of currency that data for a usage metric is reported in. Possible values are:
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum Currency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USD = 0,
	}
	
	/// <summary>
	/// Provides information about a custom data identifier.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CustomDataIdentifierSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Provides information about a custom data identifier that produced a sensitive data finding, and the number of occurrences of the data that it detected for the finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CustomDetection
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Count { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DayOfWeek
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUNDAY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONDAY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TUESDAY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEDNESDAY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THURSDAY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FRIDAY = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SATURDAY = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeclineInvitationsRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public @__string[] AccountIds { get; set; }
	}
	
	/// <summary>
	/// Provides information about sensitive data that was detected by managed data identifiers and produced a finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DefaultDetection
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Count { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteInvitationsRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public @__string[] AccountIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeBucketsRequest
	{
		
		/// <summary>
		/// Specifies, as a map, one or more attribute-based conditions that filter the results of a query for information about S3 buckets.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public BucketCriteria Criteria { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Specifies criteria for sorting the results of a query for information about S3 buckets.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public BucketSortCriteria SortCriteria { get; set; }
	}
	
	/// <summary>
	/// The current status of a classification job. Valid values are:
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum JobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAUSED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IDLE = 4,
	}
	
	/// <summary>
	/// Provides processing statistics for a classification job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Statistics
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ApproximateNumberOfObjectsToProcess { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> NumberOfRuns { get; set; }
	}
	
	/// <summary>
	/// The DNS name of the entity that performed the action on the affected resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DomainDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
	}
	
	/// <summary>
	/// The frequency with which Amazon Macie publishes findings for an account. This includes adding findings to AWS Security Hub and exporting finding events to Amazon CloudWatch. Valid values are:
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FindingPublishingFrequency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIFTEEN_MINUTES = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONE_HOUR = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SIX_HOURS = 2,
	}
	
	/// <summary>
	/// The status of an Amazon Macie account. Valid values are:
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MacieStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAUSED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EnableMacieRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// The frequency with which Amazon Macie publishes findings for an account. This includes adding findings to AWS Security Hub and exporting finding events to Amazon CloudWatch. Valid values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EnableMacieRequestFindingPublishingFrequency FindingPublishingFrequency { get; set; }
		
		/// <summary>
		/// The status of an Amazon Macie account. Valid values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EnableMacieRequestStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EnableMacieRequestFindingPublishingFrequency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIFTEEN_MINUTES = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONE_HOUR = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SIX_HOURS = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EnableMacieRequestStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAUSED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EnableOrganizationAdminAccountRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AdminAccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
	}
	
	/// <summary>
	/// The server-side encryption algorithm that's used when storing the S3 bucket or object. Valid values are:
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EncryptionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AES256 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		aws:kms = 2,
	}
	
	/// <summary>
	/// The source of an error, issue, or delay. Possible values are:
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ErrorCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ClientError = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalError = 1,
	}
	
	/// <summary>
	/// Reserved for future use.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FederatedUser
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccessKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrincipalId { get; set; }
		
		/// <summary>
		/// Provides information about a session that was created for an entity who performed an action by using temporary security credentials.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SessionContext SessionContext { get; set; }
	}
	
	/// <summary>
	/// The category of the finding. Valid values are:
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FindingCategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLASSIFICATION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POLICY = 1,
	}
	
	/// <summary>
	/// Provides detailed information about a policy finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PolicyDetails
	{
		
		/// <summary>
		/// Provides information about an action that occurred for a resource and produced a policy finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FindingAction Action { get; set; }
		
		/// <summary>
		/// Provides information about an entity who performed an action that produced a policy finding for a resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FindingActor Actor { get; set; }
	}
	
	/// <summary>
	/// Provides information about the resources that a finding applies to.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ResourcesAffected
	{
		
		/// <summary>
		/// Provides information about an S3 bucket that a finding applies to.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3Bucket S3Bucket { get; set; }
		
		/// <summary>
		/// Provides information about an S3 object that a finding applies to.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3Object S3Object { get; set; }
	}
	
	/// <summary>
	/// Provides the numeric score and textual representation of a severity value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Severity
	{
		
		/// <summary>
		/// The textual representation of the finding's severity. Valid values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SeverityDescription Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Score { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SeverityDescription
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Low = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Medium = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		High = 2,
	}
	
	/// <summary>
	/// Provides information about a finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Finding
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Archived { get; set; }
		
		/// <summary>
		/// The category of the finding. Valid values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FindingCategory Category { get; set; }
		
		/// <summary>
		/// Provides information about a sensitive data finding, including the classification job that produced the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ClassificationDetails ClassificationDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Count { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Partition { get; set; }
		
		/// <summary>
		/// Provides detailed information about a policy finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PolicyDetails PolicyDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		/// <summary>
		/// Provides information about the resources that a finding applies to.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourcesAffected ResourcesAffected { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Sample { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SchemaVersion { get; set; }
		
		/// <summary>
		/// Provides the numeric score and textual representation of a severity value.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Severity Severity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		/// <summary>
		/// The type of finding. Valid values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FindingType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> UpdatedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FindingCategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLASSIFICATION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POLICY = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FindingType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SensitiveData:S3Object/Multiple = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SensitiveData:S3Object/Financial = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SensitiveData:S3Object/Personal = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SensitiveData:S3Object/Credentials = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SensitiveData:S3Object/CustomIdentifier = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Policy:IAMUser/S3BucketPublic = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Policy:IAMUser/S3BucketSharedExternally = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Policy:IAMUser/S3BucketReplicatedExternally = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Policy:IAMUser/S3BucketEncryptionDisabled = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Policy:IAMUser/S3BlockPublicAccessDisabled = 9,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FindingActionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_API_CALL = 0,
	}
	
	/// <summary>
	/// Provides information about an action that occurred for a resource and produced a policy finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FindingAction
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FindingActionActionType ActionType { get; set; }
		
		/// <summary>
		/// Reserved for future use.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ApiCallDetails ApiCallDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FindingActionActionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_API_CALL = 0,
	}
	
	/// <summary>
	/// The IP address of the device that the entity used to perform the action on the affected resource. This object also provides information such as the owner and geographical location for the IP address.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class IpAddressDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string IpAddressV4 { get; set; }
		
		/// <summary>
		/// Reserved for future use.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IpCity IpCity { get; set; }
		
		/// <summary>
		/// Reserved for future use.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IpCountry IpCountry { get; set; }
		
		/// <summary>
		/// Reserved for future use.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IpGeoLocation IpGeoLocation { get; set; }
		
		/// <summary>
		/// Reserved for future use.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IpOwner IpOwner { get; set; }
	}
	
	/// <summary>
	/// The name and type of entity who performed the action on the affected resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UserIdentity
	{
		
		/// <summary>
		/// Reserved for future use.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AssumedRole AssumedRole { get; set; }
		
		/// <summary>
		/// Reserved for future use.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsAccount AwsAccount { get; set; }
		
		/// <summary>
		/// Reserved for future use.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsService AwsService { get; set; }
		
		/// <summary>
		/// Reserved for future use.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FederatedUser FederatedUser { get; set; }
		
		/// <summary>
		/// Reserved for future use.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IamUser IamUser { get; set; }
		
		/// <summary>
		/// Reserved for future use.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UserIdentityRoot Root { get; set; }
		
		/// <summary>
		/// Reserved for future use.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UserIdentityType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UserIdentityType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AssumedRole = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IAMUser = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FederatedUser = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Root = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWSAccount = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWSService = 5,
	}
	
	/// <summary>
	/// Provides information about an entity who performed an action that produced a policy finding for a resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FindingActor
	{
		
		/// <summary>
		/// The DNS name of the entity that performed the action on the affected resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DomainDetails DomainDetails { get; set; }
		
		/// <summary>
		/// The IP address of the device that the entity used to perform the action on the affected resource. This object also provides information such as the owner and geographical location for the IP address.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IpAddressDetails IpAddressDetails { get; set; }
		
		/// <summary>
		/// The name and type of entity who performed the action on the affected resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UserIdentity UserIdentity { get; set; }
	}
	
	/// <summary>
	/// Specifies criteria for sorting the results of a query for information about findings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FindingStatisticsSortCriteria
	{
		
		/// <summary>
		/// The grouping to sort the results by. Valid values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FindingStatisticsSortCriteriaAttributeName AttributeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FindingStatisticsSortCriteriaOrderBy OrderBy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FindingStatisticsSortCriteriaAttributeName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		groupKey = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		count = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FindingStatisticsSortCriteriaOrderBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DESC = 1,
	}
	
	/// <summary>
	/// Provides information about a findings filter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FindingsFilterListItem
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// A string-to-string map of key-value pairs that specifies the tags (keys and values) for a classification job, custom data identifier, findings filter, or member account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetBucketStatisticsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GroupBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		resourcesAffected.s3Bucket.name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		type = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		classificationDetails.jobId = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		severity.description = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetFindingStatisticsRequest
	{
		
		/// <summary>
		/// Specifies, as a map, one or more property-based conditions that filter the results of a query for findings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FindingCriteria FindingCriteria { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GetFindingStatisticsRequestGroupBy GroupBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Size { get; set; }
		
		/// <summary>
		/// Specifies criteria for sorting the results of a query for information about findings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FindingStatisticsSortCriteria SortCriteria { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GetFindingStatisticsRequestGroupBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		resourcesAffected.s3Bucket.name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		type = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		classificationDetails.jobId = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		severity.description = 3,
	}
	
	/// <summary>
	/// Specifies criteria for sorting the results of a request for information about findings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SortCriteria
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AttributeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SortCriteriaOrderBy OrderBy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SortCriteriaOrderBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DESC = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetFindingsRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public @__string[] FindingIds { get; set; }
		
		/// <summary>
		/// Specifies criteria for sorting the results of a request for information about findings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SortCriteria SortCriteria { get; set; }
	}
	
	/// <summary>
	/// Provides information about an Amazon Macie membership invitation that was received by an account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Invitation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InvitationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> InvitedAt { get; set; }
		
		/// <summary>
		/// The current status of the relationship between an account and an associated Amazon Macie master account (<i>inviter account</i>). Possible values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InvitationRelationshipStatus RelationshipStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum InvitationRelationshipStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Enabled = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Paused = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Invited = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Created = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Removed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Resigned = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EmailVerificationInProgress = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EmailVerificationFailed = 7,
	}
	
	/// <summary>
	/// The current status of the relationship between an account and an associated Amazon Macie master account (<i>inviter account</i>). Possible values are:
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RelationshipStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Enabled = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Paused = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Invited = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Created = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Removed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Resigned = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EmailVerificationInProgress = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EmailVerificationFailed = 7,
	}
	
	/// <summary>
	/// Specifies criteria for sorting the results of a query for account quotas and usage data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UsageStatisticsSortBy
	{
		
		/// <summary>
		/// The field to use to sort the results of a query for account quotas and usage data.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UsageStatisticsSortByKey Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UsageStatisticsSortByOrderBy OrderBy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UsageStatisticsSortByKey
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		accountId = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		total = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UsageStatisticsSortByOrderBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DESC = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetUsageStatisticsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UsageStatisticsFilter[] FilterBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Specifies criteria for sorting the results of a query for account quotas and usage data.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UsageStatisticsSortBy SortBy { get; set; }
	}
	
	/// <summary>
	/// Provides a group of results for a query that retrieved information about findings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GroupCount
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Count { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string GroupKey { get; set; }
	}
	
	/// <summary>
	/// Reserved for future use.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class IamUser
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrincipalId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UserName { get; set; }
	}
	
	/// <summary>
	/// Reserved for future use.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class IpCity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Reserved for future use.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class IpCountry
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Code { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Reserved for future use.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class IpGeoLocation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Lat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Lon { get; set; }
	}
	
	/// <summary>
	/// Reserved for future use.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class IpOwner
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Asn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AsnOrg { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Isp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Org { get; set; }
	}
	
	/// <summary>
	/// The operator to use in a condition. Valid values are:
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum JobComparator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EQ = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GTE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LTE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTAINS = 6,
	}
	
	/// <summary>
	/// Specifies a property-based condition that determines whether an object is included or excluded from a classification job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SimpleScopeTerm
	{
		
		/// <summary>
		/// The operator to use in a condition. Valid values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SimpleScopeTermComparator Comparator { get; set; }
		
		/// <summary>
		/// The property to use in a condition that determines which objects are analyzed by a classification job. Valid values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SimpleScopeTermKey Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SimpleScopeTermComparator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EQ = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GTE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LTE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTAINS = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SimpleScopeTermKey
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BUCKET_CREATION_DATE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OBJECT_EXTENSION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OBJECT_LAST_MODIFIED_DATE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OBJECT_SIZE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TAG = 4,
	}
	
	/// <summary>
	/// Specifies a tag-based condition that determines whether an object is included or excluded from a classification job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TagScopeTerm
	{
		
		/// <summary>
		/// The operator to use in a condition. Valid values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TagScopeTermComparator Comparator { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagValuePair[] TagValues { get; set; }
		
		/// <summary>
		/// The type of object to apply a tag-based condition to. Valid values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TagScopeTermTarget Target { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TagScopeTermComparator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EQ = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GTE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LTE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTAINS = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TagScopeTermTarget
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3_OBJECT = 0,
	}
	
	/// <summary>
	/// Specifies one or more conditions that determine which objects a classification job analyzes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class JobScopeTerm
	{
		
		/// <summary>
		/// Specifies a property-based condition that determines whether an object is included or excluded from a classification job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SimpleScopeTerm SimpleScopeTerm { get; set; }
		
		/// <summary>
		/// Specifies a tag-based condition that determines whether an object is included or excluded from a classification job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TagScopeTerm TagScopeTerm { get; set; }
	}
	
	/// <summary>
	/// Reserved for future use.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class JobScopingBlock
	{
		
		[System.Runtime.Serialization.DataMember()]
		public JobScopeTerm[] And { get; set; }
	}
	
	/// <summary>
	/// Provides information about a classification job, including the current status of the job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class JobSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public S3BucketDefinitionForJob[] BucketDefinitions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string JobId { get; set; }
		
		/// <summary>
		/// The current status of a classification job. Valid values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public JobSummaryJobStatus JobStatus { get; set; }
		
		/// <summary>
		/// The schedule for running a classification job. Valid values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public JobSummaryJobType JobType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum JobSummaryJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAUSED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IDLE = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum JobSummaryJobType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONE_TIME = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCHEDULED = 1,
	}
	
	/// <summary>
	/// Provides information about the tags that are associated with an S3 bucket or object. Each tag consists of a required tag key and an associated tag value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class KeyValuePair
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Specifies criteria for filtering the results of a request for information about classification jobs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListJobsFilterCriteria
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ListJobsFilterTerm[] Excludes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListJobsFilterTerm[] Includes { get; set; }
	}
	
	/// <summary>
	/// Specifies criteria for sorting the results of a request for information about classification jobs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListJobsSortCriteria
	{
		
		/// <summary>
		/// The property to sort the results by. Valid values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ListJobsSortCriteriaAttributeName AttributeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListJobsSortCriteriaOrderBy OrderBy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListJobsSortCriteriaAttributeName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		createdAt = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		jobStatus = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		name = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		jobType = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListJobsSortCriteriaOrderBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DESC = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListClassificationJobsRequest
	{
		
		/// <summary>
		/// Specifies criteria for filtering the results of a request for information about classification jobs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ListJobsFilterCriteria FilterCriteria { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Specifies criteria for sorting the results of a request for information about classification jobs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ListJobsSortCriteria SortCriteria { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListCustomDataIdentifiersRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListFindingsRequest
	{
		
		/// <summary>
		/// Specifies, as a map, one or more property-based conditions that filter the results of a query for findings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FindingCriteria FindingCriteria { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Specifies criteria for sorting the results of a request for information about findings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SortCriteria SortCriteria { get; set; }
	}
	
	/// <summary>
	/// The property to use to filter the results. Valid values are:
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListJobsFilterKey
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		jobType = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		jobStatus = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		createdAt = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		name = 3,
	}
	
	/// <summary>
	/// Specifies a condition that filters the results of a request for information about classification jobs. Each condition consists of a property, an operator, and one or more values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListJobsFilterTerm
	{
		
		/// <summary>
		/// The operator to use in a condition. Valid values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ListJobsFilterTermComparator Comparator { get; set; }
		
		/// <summary>
		/// The property to use to filter the results. Valid values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ListJobsFilterTermKey Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListJobsFilterTermComparator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EQ = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GTE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LTE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTAINS = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListJobsFilterTermKey
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		jobType = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		jobStatus = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		createdAt = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		name = 3,
	}
	
	/// <summary>
	/// Provides information about an account that's associated with an Amazon Macie master account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Member
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> InvitedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterAccountId { get; set; }
		
		/// <summary>
		/// The current status of the relationship between an account and an associated Amazon Macie master account (<i>inviter account</i>). Possible values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public MemberRelationshipStatus RelationshipStatus { get; set; }
		
		/// <summary>
		/// A string-to-string map of key-value pairs that specifies the tags (keys and values) for a classification job, custom data identifier, findings filter, or member account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> UpdatedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MemberRelationshipStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Enabled = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Paused = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Invited = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Created = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Removed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Resigned = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EmailVerificationInProgress = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EmailVerificationFailed = 7,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PutClassificationExportConfigurationRequest
	{
		
		/// <summary>
		/// Specifies where to export data classification results to, and the encryption settings to use when storing results in that location. Currently, you can export classification results only to an S3 bucket.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ClassificationExportConfiguration Configuration { get; set; }
	}
	
	/// <summary>
	/// Provides information about an S3 bucket that a finding applies to.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3Bucket
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedAt { get; set; }
		
		/// <summary>
		/// Provides information about the server-side encryption settings for an S3 bucket or object.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ServerSideEncryption DefaultServerSideEncryption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Provides information about the user who owns an S3 bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3BucketOwner Owner { get; set; }
		
		/// <summary>
		/// Provides information about permissions settings that determine whether an S3 bucket is publicly accessible.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public BucketPublicAccess PublicAccess { get; set; }
		
		/// <summary>
		/// Reserved for future use.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public KeyValuePair[] Tags { get; set; }
	}
	
	/// <summary>
	/// Provides information about an S3 object that a finding applies to.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3Object
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BucketArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ETag { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Extension { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModified { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Path { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PublicAccess { get; set; }
		
		/// <summary>
		/// Provides information about the server-side encryption settings for an S3 bucket or object.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ServerSideEncryption ServerSideEncryption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Size { get; set; }
		
		/// <summary>
		/// The storage class of the S3 bucket or object. Valid values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3ObjectStorageClass StorageClass { get; set; }
		
		/// <summary>
		/// Reserved for future use.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public KeyValuePair[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VersionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum S3ObjectStorageClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REDUCED_REDUNDANCY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD_IA = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTELLIGENT_TIERING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEEP_ARCHIVE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONEZONE_IA = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GLACIER = 6,
	}
	
	/// <summary>
	/// Provides information about the server-side encryption settings for an S3 bucket or object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ServerSideEncryption
	{
		
		/// <summary>
		/// The server-side encryption algorithm that's used when storing the S3 bucket or object. Valid values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ServerSideEncryptionEncryptionType EncryptionType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsMasterKeyId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ServerSideEncryptionEncryptionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AES256 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		aws:kms = 2,
	}
	
	/// <summary>
	/// Provides information about the user who owns an S3 bucket.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3BucketOwner
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DisplayName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
	}
	
	/// <summary>
	/// Specifies which S3 buckets contain the objects that a classification job analyzes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3BucketDefinitionForJob
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Buckets { get; set; }
	}
	
	/// <summary>
	/// The storage class of the S3 bucket or object. Valid values are:
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StorageClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REDUCED_REDUNDANCY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD_IA = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTELLIGENT_TIERING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEEP_ARCHIVE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONEZONE_IA = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GLACIER = 6,
	}
	
	/// <summary>
	/// The property to use in a condition that determines which objects are analyzed by a classification job. Valid values are:
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ScopeFilterKey
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BUCKET_CREATION_DATE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OBJECT_EXTENSION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OBJECT_LAST_MODIFIED_DATE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OBJECT_SIZE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TAG = 4,
	}
	
	/// <summary>
	/// Provides information about the category, type, and number of occurrences of sensitive data that produced a finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SensitiveDataItem
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SensitiveDataItemCategory Category { get; set; }
		
		/// <summary>
		/// Reserved for future use.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DefaultDetection[] Detections { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SensitiveDataItemCategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FINANCIAL_INFORMATION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERSONAL_INFORMATION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREDENTIALS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM_IDENTIFIER = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SensitiveDataItemCategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FINANCIAL_INFORMATION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERSONAL_INFORMATION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREDENTIALS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM_IDENTIFIER = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum Unit
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERABYTES = 0,
	}
	
	/// <summary>
	/// Specifies a current quota for an account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ServiceLimit
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsServiceLimited { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceLimitUnit Unit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ServiceLimitUnit
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERABYTES = 0,
	}
	
	/// <summary>
	/// Provides information about the context in which temporary security credentials were issued to an entity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SessionContextAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MfaAuthenticated { get; set; }
	}
	
	/// <summary>
	/// Provides information about the source and type of temporary security credentials that were issued to an entity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SessionIssuer
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrincipalId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UserName { get; set; }
	}
	
	/// <summary>
	/// The textual representation of the finding's severity. Valid values are:
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SeverityDescription
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Low = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Medium = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		High = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TagResourceRequest
	{
		
		/// <summary>
		/// A string-to-string map of key-value pairs that specifies the tags (keys and values) for a classification job, custom data identifier, findings filter, or member account.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	/// The type of object to apply a tag-based condition to. Valid values are:
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TagTarget
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3_OBJECT = 0,
	}
	
	/// <summary>
	/// Specifies a tag key and value, as a pair, to use in a tag-based condition for a classification job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TagValuePair
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TestCustomDataIdentifierRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] IgnoreWords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Keywords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumMatchDistance { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Regex { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SampleText { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UnarchiveFindingsRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public @__string[] FindingIds { get; set; }
	}
	
	/// <summary>
	///  <p>Provides information about an account-related request that hasn't been processed.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UnprocessedAccount
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		/// <summary>
		/// The source of an error, issue, or delay. Possible values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UnprocessedAccountErrorCode ErrorCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UnprocessedAccountErrorCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ClientError = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalError = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateClassificationJobRequest
	{
		
		/// <summary>
		/// The current status of a classification job. Valid values are:
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateClassificationJobRequestJobStatus JobStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateClassificationJobRequestJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAUSED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IDLE = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateFindingsFilterRequest
	{
		
		/// <summary>
		/// The action to perform on findings that meet the filter criteria. Valid values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateFindingsFilterRequestAction Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Specifies, as a map, one or more property-based conditions that filter the results of a query for findings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FindingCriteria FindingCriteria { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Position { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateFindingsFilterRequestAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARCHIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOOP = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateMacieSessionRequest
	{
		
		/// <summary>
		/// The frequency with which Amazon Macie publishes findings for an account. This includes adding findings to AWS Security Hub and exporting finding events to Amazon CloudWatch. Valid values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateMacieSessionRequestFindingPublishingFrequency FindingPublishingFrequency { get; set; }
		
		/// <summary>
		/// The status of an Amazon Macie account. Valid values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateMacieSessionRequestStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateMacieSessionRequestFindingPublishingFrequency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIFTEEN_MINUTES = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONE_HOUR = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SIX_HOURS = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateMacieSessionRequestStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAUSED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateMemberSessionRequest
	{
		
		/// <summary>
		/// The status of an Amazon Macie account. Valid values are:
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateMemberSessionRequestStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateMemberSessionRequestStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAUSED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateOrganizationConfigurationRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool AutoEnable { get; set; }
	}
	
	/// <summary>
	/// The name of a usage metric for an account. Possible values are:
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UsageType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_INVENTORY_EVALUATION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SENSITIVE_DATA_DISCOVERY = 1,
	}
	
	/// <summary>
	/// Provides data for a specific usage metric and the corresponding quota for an account. The value for the metric is an aggregated value that reports usage during the past 30 days.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UsageByAccount
	{
		
		/// <summary>
		/// The type of currency that data for a usage metric is reported in. Possible values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UsageByAccountCurrency Currency { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedCost { get; set; }
		
		/// <summary>
		/// Specifies a current quota for an account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ServiceLimit ServiceLimit { get; set; }
		
		/// <summary>
		/// The name of a usage metric for an account. Possible values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UsageByAccountType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UsageByAccountCurrency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USD = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UsageByAccountType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_INVENTORY_EVALUATION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SENSITIVE_DATA_DISCOVERY = 1,
	}
	
	/// <summary>
	/// Provides quota and aggregated usage data for an account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UsageRecord
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> FreeTrialStartDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UsageByAccount[] Usage { get; set; }
	}
	
	/// <summary>
	/// The field to use to filter the results of a query for account quotas and usage data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UsageStatisticsFilterKey
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		accountId = 0,
	}
	
	/// <summary>
	/// Provides aggregated data for a usage metric. The value for the metric reports usage data for an account during the past 30 days.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UsageTotal
	{
		
		/// <summary>
		/// The type of currency that data for a usage metric is reported in. Possible values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UsageTotalCurrency Currency { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedCost { get; set; }
		
		/// <summary>
		/// The name of a usage metric for an account. Possible values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UsageTotalType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UsageTotalCurrency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USD = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UsageTotalType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_INVENTORY_EVALUATION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SENSITIVE_DATA_DISCOVERY = 1,
	}
	
	/// <summary>
	/// Reserved for future use.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UserIdentityRoot
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrincipalId { get; set; }
	}
	
	/// <summary>
	/// Reserved for future use.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UserIdentityType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AssumedRole = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IAMUser = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FederatedUser = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Root = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWSAccount = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWSService = 5,
	}
	
	public partial class DemoClient
	{
		
		private System.Net.Http.HttpClient client;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public DemoClient(System.Net.Http.HttpClient client, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (client == null)
				throw new ArgumentNullException("Null HttpClient.", "client");

			if (client.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "client");

			this.client = client;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Accepts an Amazon Macie membership invitation that was received from a specific account.
		/// AcceptInvitation /invitations/accept
		/// </summary>
		/// <returns>Success</returns>
		public async Task<AcceptInvitationResponse> AcceptInvitationAsync(AcceptInvitationBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/invitations/accept";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<AcceptInvitationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Archives one or more findings.</p>
		/// ArchiveFindings /findings/archive
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ArchiveFindingsResponse> ArchiveFindingsAsync(ArchiveFindingsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/findings/archive";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ArchiveFindingsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Retrieves information about one or more custom data identifiers.
		/// BatchGetCustomDataIdentifiers /custom-data-identifiers/get
		/// </summary>
		/// <returns>Success</returns>
		public async Task<BatchGetCustomDataIdentifiersResponse> BatchGetCustomDataIdentifiersAsync(BatchGetCustomDataIdentifiersBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/custom-data-identifiers/get";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<BatchGetCustomDataIdentifiersResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Creates and defines the settings for a classification job.</p>
		/// CreateClassificationJob /jobs
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateClassificationJobResponse> CreateClassificationJobAsync(CreateClassificationJobBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/jobs";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateClassificationJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates and defines the criteria and other settings for a custom data identifier.
		/// CreateCustomDataIdentifier /custom-data-identifiers
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateCustomDataIdentifierResponse> CreateCustomDataIdentifierAsync(CreateCustomDataIdentifierBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/custom-data-identifiers";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateCustomDataIdentifierResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates and defines the criteria and other settings for a findings filter.
		/// CreateFindingsFilter /findingsfilters
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateFindingsFilterResponse> CreateFindingsFilterAsync(CreateFindingsFilterBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/findingsfilters";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateFindingsFilterResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Retrieves a subset of information about all the findings filters for an account.
		/// ListFindingsFilters /findingsfilters
		/// </summary>
		/// <param name="maxResults">The maximum number of items to include in each page of a paginated response.</param>
		/// <param name="nextToken">The nextToken string that specifies which page of results to return in a paginated response.</param>
		/// <returns>Success</returns>
		public async Task<ListFindingsFiltersResponse> ListFindingsFiltersAsync(int maxResults, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/findingsfilters?maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListFindingsFiltersResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Sends an Amazon Macie membership invitation to one or more accounts.</p>
		/// CreateInvitations /invitations
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateInvitationsResponse> CreateInvitationsAsync(CreateInvitationsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/invitations";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateInvitationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Retrieves information about all the Amazon Macie membership invitations that were received by an account.
		/// ListInvitations /invitations
		/// </summary>
		/// <param name="maxResults">The maximum number of items to include in each page of a paginated response.</param>
		/// <param name="nextToken">The nextToken string that specifies which page of results to return in a paginated response.</param>
		/// <returns>Success</returns>
		public async Task<ListInvitationsResponse> ListInvitationsAsync(int maxResults, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/invitations?maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListInvitationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Associates an account with an Amazon Macie master account.</p>
		/// CreateMember /members
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateMemberResponse> CreateMemberAsync(CreateMemberBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/members";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateMemberResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Retrieves information about the accounts that are associated with an Amazon Macie master account.
		/// ListMembers /members
		/// </summary>
		/// <param name="maxResults">The maximum number of items to include in each page of a paginated response.</param>
		/// <param name="nextToken">The nextToken string that specifies which page of results to return in a paginated response.</param>
		/// <param name="onlyAssociated">Specifies which accounts to include in the response, based on the status of an account's relationship with the master account. By default, the response includes only current member accounts. To include all accounts, set the value for this parameter to false.</param>
		/// <returns>Success</returns>
		public async Task<ListMembersResponse> ListMembersAsync(int maxResults, string nextToken, string onlyAssociated, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/members?maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken))+"&onlyAssociated=" + (onlyAssociated==null? "" : Uri.EscapeDataString(onlyAssociated));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListMembersResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates sample findings.</p>
		/// CreateSampleFindings /findings/sample
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateSampleFindingsResponse> CreateSampleFindingsAsync(CreateSampleFindingsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/findings/sample";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateSampleFindingsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Declines Amazon Macie membership invitations that were received from specific accounts.
		/// DeclineInvitations /invitations/decline
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeclineInvitationsResponse> DeclineInvitationsAsync(DeclineInvitationsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/invitations/decline";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeclineInvitationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes a custom data identifier.
		/// DeleteCustomDataIdentifier /custom-data-identifiers/{id}
		/// </summary>
		/// <param name="id">The unique identifier for the Amazon Macie resource or account that the request applies to.</param>
		/// <returns>Success</returns>
		public async Task<DeleteCustomDataIdentifierResponse> DeleteCustomDataIdentifierAsync(string id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/custom-data-identifiers/"+ (id==null? "" : Uri.EscapeDataString(id));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteCustomDataIdentifierResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves information about the criteria and other settings for a custom data identifier.
		/// GetCustomDataIdentifier /custom-data-identifiers/{id}
		/// </summary>
		/// <param name="id">The unique identifier for the Amazon Macie resource or account that the request applies to.</param>
		/// <returns>Success</returns>
		public async Task<GetCustomDataIdentifierResponse> GetCustomDataIdentifierAsync(string id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/custom-data-identifiers/"+ (id==null? "" : Uri.EscapeDataString(id));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetCustomDataIdentifierResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a findings filter.
		/// DeleteFindingsFilter /findingsfilters/{id}
		/// </summary>
		/// <param name="id">The unique identifier for the Amazon Macie resource or account that the request applies to.</param>
		/// <returns>Success</returns>
		public async Task<DeleteFindingsFilterResponse> DeleteFindingsFilterAsync(string id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/findingsfilters/"+ (id==null? "" : Uri.EscapeDataString(id));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteFindingsFilterResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves information about the criteria and other settings for a findings filter.
		/// GetFindingsFilter /findingsfilters/{id}
		/// </summary>
		/// <param name="id">The unique identifier for the Amazon Macie resource or account that the request applies to.</param>
		/// <returns>Success</returns>
		public async Task<GetFindingsFilterResponse> GetFindingsFilterAsync(string id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/findingsfilters/"+ (id==null? "" : Uri.EscapeDataString(id));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetFindingsFilterResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes Amazon Macie membership invitations that were received from specific accounts.
		/// DeleteInvitations /invitations/delete
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteInvitationsResponse> DeleteInvitationsAsync(DeleteInvitationsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/invitations/delete";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteInvitationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes the association between an Amazon Macie master account and an account.
		/// DeleteMember /members/{id}
		/// </summary>
		/// <param name="id">The unique identifier for the Amazon Macie resource or account that the request applies to.</param>
		/// <returns>Success</returns>
		public async Task<DeleteMemberResponse> DeleteMemberAsync(string id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/members/"+ (id==null? "" : Uri.EscapeDataString(id));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteMemberResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves information about a member account that's associated with an Amazon Macie master account.
		/// GetMember /members/{id}
		/// </summary>
		/// <param name="id">The unique identifier for the Amazon Macie resource or account that the request applies to.</param>
		/// <returns>Success</returns>
		public async Task<GetMemberResponse> GetMemberAsync(string id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/members/"+ (id==null? "" : Uri.EscapeDataString(id));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetMemberResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Retrieves (queries) statistical data and other information about one or more S3 buckets that Amazon Macie monitors and analyzes.</p>
		/// DescribeBuckets /datasources/s3
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeBucketsResponse> DescribeBucketsAsync(DescribeBucketsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/datasources/s3";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeBucketsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Retrieves information about the status and settings for a classification job.
		/// DescribeClassificationJob /jobs/{jobId}
		/// </summary>
		/// <param name="jobId">The unique identifier for the classification job.</param>
		/// <returns>Success</returns>
		public async Task<DescribeClassificationJobResponse> DescribeClassificationJobAsync(string jobId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/jobs/"+ (jobId==null? "" : Uri.EscapeDataString(jobId));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeClassificationJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves information about the Amazon Macie configuration settings for an AWS organization.
		/// DescribeOrganizationConfiguration /admin/configuration
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeOrganizationConfigurationResponse> DescribeOrganizationConfigurationAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/admin/configuration";
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeOrganizationConfigurationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Disables an Amazon Macie account and deletes Macie resources for the account.
		/// DisableMacie /macie
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DisableMacieResponse> DisableMacieAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/macie";
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DisableMacieResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Enables Amazon Macie and specifies the configuration settings for a Macie account.
		/// EnableMacie /macie
		/// </summary>
		/// <returns>Success</returns>
		public async Task<EnableMacieResponse> EnableMacieAsync(EnableMacieBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/macie";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<EnableMacieResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Retrieves information about the current status and configuration settings for an Amazon Macie account.
		/// GetMacieSession /macie
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetMacieSessionResponse> GetMacieSessionAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/macie";
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetMacieSessionResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Disables an account as a delegated administrator of Amazon Macie for an AWS organization.
		/// DisableOrganizationAdminAccount /admin#adminAccountId
		/// </summary>
		/// <param name="adminAccountId">The AWS account ID of the delegated administrator account.</param>
		/// <returns>Success</returns>
		public async Task<DisableOrganizationAdminAccountResponse> DisableOrganizationAdminAccountAsync(string adminAccountId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/admin#adminAccountId?adminAccountId=" + (adminAccountId==null? "" : Uri.EscapeDataString(adminAccountId));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DisableOrganizationAdminAccountResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Disassociates a member account from its Amazon Macie master account.
		/// DisassociateFromMasterAccount /master/disassociate
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DisassociateFromMasterAccountResponse> DisassociateFromMasterAccountAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/master/disassociate";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DisassociateFromMasterAccountResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Disassociates an Amazon Macie master account from a member account.
		/// DisassociateMember /members/disassociate/{id}
		/// </summary>
		/// <param name="id">The unique identifier for the Amazon Macie resource or account that the request applies to.</param>
		/// <returns>Success</returns>
		public async Task<DisassociateMemberResponse> DisassociateMemberAsync(string id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/members/disassociate/"+ (id==null? "" : Uri.EscapeDataString(id));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DisassociateMemberResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Enables an account as a delegated administrator of Amazon Macie for an AWS organization.
		/// EnableOrganizationAdminAccount /admin
		/// </summary>
		/// <returns>Success</returns>
		public async Task<EnableOrganizationAdminAccountResponse> EnableOrganizationAdminAccountAsync(EnableOrganizationAdminAccountBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/admin";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<EnableOrganizationAdminAccountResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Retrieves information about the account that's designated as the delegated administrator of Amazon Macie for an AWS organization.
		/// ListOrganizationAdminAccounts /admin
		/// </summary>
		/// <param name="maxResults">The maximum number of items to include in each page of a paginated response.</param>
		/// <param name="nextToken">The nextToken string that specifies which page of results to return in a paginated response.</param>
		/// <returns>Success</returns>
		public async Task<ListOrganizationAdminAccountsResponse> ListOrganizationAdminAccountsAsync(int maxResults, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/admin?maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListOrganizationAdminAccountsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Retrieves (queries) aggregated statistical data for all the S3 buckets that Amazon Macie monitors and analyzes.</p>
		/// GetBucketStatistics /datasources/s3/statistics
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetBucketStatisticsResponse> GetBucketStatisticsAsync(GetBucketStatisticsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/datasources/s3/statistics";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetBucketStatisticsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Retrieves the configuration settings for exporting data classification results.
		/// GetClassificationExportConfiguration /classification-export-configuration
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetClassificationExportConfigurationResponse> GetClassificationExportConfigurationAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/classification-export-configuration";
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetClassificationExportConfigurationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates or updates the configuration settings for exporting data classification results.
		/// PutClassificationExportConfiguration /classification-export-configuration
		/// </summary>
		/// <returns>Success</returns>
		public async Task<PutClassificationExportConfigurationResponse> PutClassificationExportConfigurationAsync(PutClassificationExportConfigurationBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/classification-export-configuration";
			using (var request = new HttpRequestMessage(HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<PutClassificationExportConfigurationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Retrieves (queries) aggregated statistical data about findings.</p>
		/// GetFindingStatistics /findings/statistics
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetFindingStatisticsResponse> GetFindingStatisticsAsync(GetFindingStatisticsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/findings/statistics";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetFindingStatisticsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Retrieves information about one or more findings.
		/// GetFindings /findings/describe
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetFindingsResponse> GetFindingsAsync(GetFindingsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/findings/describe";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetFindingsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Retrieves the count of Amazon Macie membership invitations that were received by an account.
		/// GetInvitationsCount /invitations/count
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetInvitationsCountResponse> GetInvitationsCountAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/invitations/count";
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetInvitationsCountResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves information about the Amazon Macie master account for an account.
		/// GetMasterAccount /master
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetMasterAccountResponse> GetMasterAccountAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/master";
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetMasterAccountResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves (queries) quotas and aggregated usage data for one or more accounts.
		/// GetUsageStatistics /usage/statistics
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetUsageStatisticsResponse> GetUsageStatisticsAsync(GetUsageStatisticsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/usage/statistics";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetUsageStatisticsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Retrieves (queries) aggregated usage data for an account.
		/// GetUsageTotals /usage
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetUsageTotalsResponse> GetUsageTotalsAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/usage";
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetUsageTotalsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves information about the status and settings for one or more classification jobs.
		/// ListClassificationJobs /jobs/list
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ListClassificationJobsResponse> ListClassificationJobsAsync(ListClassificationJobsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/jobs/list";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListClassificationJobsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Retrieves a subset of information about all the custom data identifiers for an account.
		/// ListCustomDataIdentifiers /custom-data-identifiers/list
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ListCustomDataIdentifiersResponse> ListCustomDataIdentifiersAsync(ListCustomDataIdentifiersBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/custom-data-identifiers/list";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListCustomDataIdentifiersResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Retrieves a subset of information about one or more findings.</p>
		/// ListFindings /findings
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ListFindingsResponse> ListFindingsAsync(ListFindingsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/findings";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListFindingsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Retrieves the tags (keys and values) that are associated with a classification job, custom data identifier, findings filter, or member account.
		/// ListTagsForResource /tags/{resourceArn}
		/// </summary>
		/// <param name="resourceArn">The Amazon Resource Name (ARN) of the classification job, custom data identifier, findings filter, or member account.</param>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceResponse> ListTagsForResourceAsync(string resourceArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/tags/"+ (resourceArn==null? "" : Uri.EscapeDataString(resourceArn));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListTagsForResourceResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Adds or updates one or more tags (keys and values) that are associated with a classification job, custom data identifier, findings filter, or member account.
		/// TagResource /tags/{resourceArn}
		/// </summary>
		/// <param name="resourceArn">The Amazon Resource Name (ARN) of the classification job, custom data identifier, findings filter, or member account.</param>
		public async Task TagResourceAsync(string resourceArn, TagResourceBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/tags/"+ (resourceArn==null? "" : Uri.EscapeDataString(resourceArn));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Tests a custom data identifier.
		/// TestCustomDataIdentifier /custom-data-identifiers/test
		/// </summary>
		/// <returns>Success</returns>
		public async Task<TestCustomDataIdentifierResponse> TestCustomDataIdentifierAsync(TestCustomDataIdentifierBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/custom-data-identifiers/test";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<TestCustomDataIdentifierResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Reactivates (unarchives) one or more findings.</p>
		/// UnarchiveFindings /findings/unarchive
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UnarchiveFindingsResponse> UnarchiveFindingsAsync(UnarchiveFindingsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/findings/unarchive";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UnarchiveFindingsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Removes one or more tags (keys and values) from a classification job, custom data identifier, findings filter, or member account.
		/// UntagResource /tags/{resourceArn}#tagKeys
		/// </summary>
		/// <param name="resourceArn">The Amazon Resource Name (ARN) of the classification job, custom data identifier, findings filter, or member account.</param>
		/// <param name="tagKeys">The key of the tag to remove from the resource. To remove multiple tags, append the tagKeys parameter and argument for each additional tag to remove, separated by an ampersand (&amp;).</param>
		public async Task UntagResourceAsync(string resourceArn, @__string[] tagKeys, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/tags/"+ (resourceArn==null? "" : Uri.EscapeDataString(resourceArn))+"#tagKeys&"+String.Join("&", tagKeys.Select(z => $"tagKeys={z}"));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AcceptInvitationBody
	{
		
		/// <summary>
		/// The unique identifier for the invitation to accept.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InvitationId { get; set; }
		
		/// <summary>
		/// The AWS account ID for the account that sent the invitation.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MasterAccount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ArchiveFindingsBody
	{
		
		/// <summary>
		/// An array of strings that lists the unique identifiers for the findings to archive.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public @__string[] FindingIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchGetCustomDataIdentifiersBody
	{
		
		/// <summary>
		/// An array of strings that lists the unique identifiers for the custom data identifiers to retrieve information about.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Ids { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateClassificationJobBody
	{
		
		/// <summary>
		/// A unique, case-sensitive token that you provide to ensure the idempotency of the request.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// The custom data identifiers to use for data analysis and classification.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public @__string[] CustomDataIdentifierIds { get; set; }
		
		/// <summary>
		/// A custom description of the job. The description can contain as many as 512 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Specifies whether to run the job immediately, after it's created.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> InitialRun { get; set; }
		
		/// <summary>
		/// The schedule for running a classification job. Valid values are:
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateClassificationJobBodyJobType JobType { get; set; }
		
		/// <summary>
		/// A custom name for the job. The name must contain at least 3 characters and can contain as many as 64 characters.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Specifies which S3 buckets contain the objects that a classification job analyzes, and the scope of that analysis.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string S3JobDefinition { get; set; }
		
		/// <summary>
		/// The sampling depth, as a percentage, to apply when processing objects. This value determines the percentage of eligible objects that the job analyzes. If the value is less than 100, Amazon Macie randomly selects the objects to analyze, up to the specified percentage.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SamplingPercentage { get; set; }
		
		/// <summary>
		/// Specifies the recurrence pattern for running a classification job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ScheduleFrequency { get; set; }
		
		/// <summary>
		/// A string-to-string map of key-value pairs that specifies the tags (keys and values) for a classification job, custom data identifier, findings filter, or member account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateClassificationJobBodyJobType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONE_TIME = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCHEDULED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateCustomDataIdentifierBody
	{
		
		/// <summary>
		/// A unique, case-sensitive token that you provide to ensure the idempotency of the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// <p>A custom description of the custom data identifier. The description can contain up to 120 characters.</p> <p>We strongly recommend that you avoid including any sensitive data in the description of a custom data identifier. Other users of your account might be able to see the identifier's description, depending on the actions that they're allowed to perform in Amazon Macie.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// An array that lists specific character sequences (ignore words) to exclude from the results. If the text matched by the regular expression is the same as any string in this array, Amazon Macie ignores it. The array can contain as many as 10 ignore words. Each ignore word can contain 4 - 90 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public @__string[] IgnoreWords { get; set; }
		
		/// <summary>
		/// An array that lists specific character sequences (keywords), one of which must be within proximity (maximumMatchDistance) of the regular expression to match. The array can contain as many as 50 keywords. Each keyword can contain 4 - 90 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Keywords { get; set; }
		
		/// <summary>
		/// The maximum number of characters that can exist between text that matches the regex pattern and the character sequences specified by the keywords array. Macie includes or excludes a result based on the proximity of a keyword to text that matches the regex pattern. The distance can be 1 - 300 characters. The default value is 300.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumMatchDistance { get; set; }
		
		/// <summary>
		/// <p>A custom name for the custom data identifier. The name can contain as many as 120 characters.</p> <p>We strongly recommend that you avoid including any sensitive data in the name of a custom data identifier. Other users of your account might be able to see the identifier's name, depending on the actions that they're allowed to perform in Amazon Macie.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// The regular expression (regex) that defines the pattern to match. The expression can contain as many as 500 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Regex { get; set; }
		
		/// <summary>
		/// A string-to-string map of key-value pairs that specifies the tags (keys and values) for a classification job, custom data identifier, findings filter, or member account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateFindingsFilterBody
	{
		
		/// <summary>
		/// The action to perform on findings that meet the filter criteria. Valid values are:
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateFindingsFilterBodyAction Action { get; set; }
		
		/// <summary>
		/// A unique, case-sensitive token that you provide to ensure the idempotency of the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// <p>A custom description of the filter. The description can contain as many as 512 characters.</p> <p>We strongly recommend that you avoid including any sensitive data in the description of a filter. Other users of your account might be able to see the filter's description, depending on the actions that they're allowed to perform in Amazon Macie.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Specifies, as a map, one or more property-based conditions that filter the results of a query for findings.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FindingCriteria { get; set; }
		
		/// <summary>
		/// <p>A custom name for the filter. The name must contain at least 3 characters and can contain as many as 64 characters.</p> <p>We strongly recommend that you avoid including any sensitive data in the name of a filter. Other users of your account might be able to see the filter's name, depending on the actions that they're allowed to perform in Amazon Macie.</p>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// The position of the filter in the list of saved filters on the Amazon Macie console. This value also determines the order in which the filter is applied to findings, relative to other filters that are also applied to the findings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Position { get; set; }
		
		/// <summary>
		/// A string-to-string map of key-value pairs that specifies the tags (keys and values) for a classification job, custom data identifier, findings filter, or member account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateFindingsFilterBodyAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARCHIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOOP = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateInvitationsBody
	{
		
		/// <summary>
		/// An array that lists AWS account IDs, one for each account to send the invitation to.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public @__string[] AccountIds { get; set; }
		
		/// <summary>
		/// Specifies whether to send an email notification to the root user of each account that the invitation will be sent to. This notification is in addition to an alert that the root user receives in AWS Personal Health Dashboard. To send an email notification to the root user of each account, set this value to true.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableEmailNotification { get; set; }
		
		/// <summary>
		/// A custom message to include in the invitation. Amazon Macie adds this message to the standard content that it sends for an invitation.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateMemberBody
	{
		
		/// <summary>
		/// Specifies details for an account to associate with an Amazon Macie master account.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Account { get; set; }
		
		/// <summary>
		/// A string-to-string map of key-value pairs that specifies the tags (keys and values) for a classification job, custom data identifier, findings filter, or member account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateSampleFindingsBody
	{
		
		/// <summary>
		/// <p>An array that lists one or more types of findings to include in the set of sample findings. Currently, the only supported value is Policy:IAMUser/S3BucketEncryptionDisabled.</p> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FindingType[] FindingTypes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeclineInvitationsBody
	{
		
		/// <summary>
		/// An array that lists AWS account IDs, one for each account that sent an invitation to decline.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public @__string[] AccountIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteInvitationsBody
	{
		
		/// <summary>
		/// An array that lists AWS account IDs, one for each account that sent an invitation to delete.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public @__string[] AccountIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeBucketsBody
	{
		
		/// <summary>
		/// Specifies, as a map, one or more attribute-based conditions that filter the results of a query for information about S3 buckets.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Criteria { get; set; }
		
		/// <summary>
		/// The maximum number of items to include in each page of the response. The default value is 50.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// The nextToken string that specifies which page of results to return in a paginated response.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Specifies criteria for sorting the results of a query for information about S3 buckets.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SortCriteria { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EnableMacieBody
	{
		
		/// <summary>
		/// A unique, case-sensitive token that you provide to ensure the idempotency of the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// The frequency with which Amazon Macie publishes findings for an account. This includes adding findings to AWS Security Hub and exporting finding events to Amazon CloudWatch. Valid values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EnableMacieBodyFindingPublishingFrequency FindingPublishingFrequency { get; set; }
		
		/// <summary>
		/// The status of an Amazon Macie account. Valid values are:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EnableMacieBodyStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EnableMacieBodyFindingPublishingFrequency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIFTEEN_MINUTES = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONE_HOUR = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SIX_HOURS = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EnableMacieBodyStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAUSED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EnableOrganizationAdminAccountBody
	{
		
		/// <summary>
		/// The AWS account ID for the account.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AdminAccountId { get; set; }
		
		/// <summary>
		/// A unique, case-sensitive token that you provide to ensure the idempotency of the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetBucketStatisticsBody
	{
		
		/// <summary>
		/// The unique identifier for the AWS account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PutClassificationExportConfigurationBody
	{
		
		/// <summary>
		/// Specifies where to export data classification results to, and the encryption settings to use when storing results in that location. Currently, you can export classification results only to an S3 bucket.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Configuration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetFindingStatisticsBody
	{
		
		/// <summary>
		/// Specifies, as a map, one or more property-based conditions that filter the results of a query for findings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string FindingCriteria { get; set; }
		
		/// <summary>
		/// <p>The finding property to use to group the query results. Valid values are:</p> <ul><li><p>classificationDetails.jobId - The unique identifier for the classification job that produced the finding.</p></li> <li><p>resourcesAffected.s3Bucket.name - The name of the S3 bucket that the finding applies to.</p></li> <li><p>severity.description - The severity of the finding, such as High or Medium.</p></li> <li><p>type - The type of finding, such as Policy:IAMUser/S3BucketPublic and SensitiveData:S3Object/Personal.</p></li></ul>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GetFindingStatisticsBodyGroupBy GroupBy { get; set; }
		
		/// <summary>
		/// The maximum number of items to include in each page of the response.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Size { get; set; }
		
		/// <summary>
		/// Specifies criteria for sorting the results of a query for information about findings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SortCriteria { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GetFindingStatisticsBodyGroupBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		resourcesAffected.s3Bucket.name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		type = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		classificationDetails.jobId = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		severity.description = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetFindingsBody
	{
		
		/// <summary>
		/// An array of strings that lists the unique identifiers for the findings to retrieve information about.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public @__string[] FindingIds { get; set; }
		
		/// <summary>
		/// Specifies criteria for sorting the results of a request for information about findings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SortCriteria { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetUsageStatisticsBody
	{
		
		/// <summary>
		/// The criteria to use to filter the query results.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UsageStatisticsFilter[] FilterBy { get; set; }
		
		/// <summary>
		/// The maximum number of items to include in each page of the response.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// The nextToken string that specifies which page of results to return in a paginated response.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Specifies criteria for sorting the results of a query for account quotas and usage data.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SortBy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListClassificationJobsBody
	{
		
		/// <summary>
		/// Specifies criteria for filtering the results of a request for information about classification jobs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string FilterCriteria { get; set; }
		
		/// <summary>
		/// The maximum number of items to include in each page of the response.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// The nextToken string that specifies which page of results to return in a paginated response.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Specifies criteria for sorting the results of a request for information about classification jobs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SortCriteria { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListCustomDataIdentifiersBody
	{
		
		/// <summary>
		/// The maximum number of items to include in each page of the response.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// The nextToken string that specifies which page of results to return in a paginated response.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListFindingsBody
	{
		
		/// <summary>
		/// Specifies, as a map, one or more property-based conditions that filter the results of a query for findings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string FindingCriteria { get; set; }
		
		/// <summary>
		/// The maximum number of items to include in each page of the response.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// The nextToken string that specifies which page of results to return in a paginated response.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Specifies criteria for sorting the results of a request for information about findings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SortCriteria { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TagResourceBody
	{
		
		/// <summary>
		/// A string-to-string map of key-value pairs that specifies the tags (keys and values) for a classification job, custom data identifier, findings filter, or member account.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TestCustomDataIdentifierBody
	{
		
		/// <summary>
		/// An array that lists specific character sequences (ignore words) to exclude from the results. If the text matched by the regular expression is the same as any string in this array, Amazon Macie ignores it. The array can contain as many as 10 ignore words. Each ignore word can contain 4 - 90 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public @__string[] IgnoreWords { get; set; }
		
		/// <summary>
		/// An array that lists specific character sequences (keywords), one of which must be within proximity (maximumMatchDistance) of the regular expression to match. The array can contain as many as 50 keywords. Each keyword can contain 4 - 90 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Keywords { get; set; }
		
		/// <summary>
		/// The maximum number of characters that can exist between text that matches the regex pattern and the character sequences specified by the keywords array. Macie includes or excludes a result based on the proximity of a keyword to text that matches the regex pattern. The distance can be 1 - 300 characters. The default value is 300.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumMatchDistance { get; set; }
		
		/// <summary>
		/// The regular expression (regex) that defines the pattern to match. The expression can contain as many as 500 characters.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Regex { get; set; }
		
		/// <summary>
		/// The sample text to inspect by using the custom data identifier. The text can contain as many as 1,000 characters.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SampleText { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UnarchiveFindingsBody
	{
		
		/// <summary>
		/// An array of strings that lists the unique identifiers for the findings to reactivate.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public @__string[] FindingIds { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}
