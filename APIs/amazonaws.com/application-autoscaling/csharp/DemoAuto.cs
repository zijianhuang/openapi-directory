//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace My.Demo.Client
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Net.Http;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteScalingPolicyRequest
	{
		
		/// <summary>
		/// Max length: 1600
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1600, MinimumLength=1)]
		public string PolicyName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DeleteScalingPolicyRequestServiceNamespace ServiceNamespace { get; set; }
		
		/// <summary>
		/// Max length: 1600
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1600, MinimumLength=1)]
		public string ResourceId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DeleteScalingPolicyRequestScalableDimension ScalableDimension { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DeleteScalingPolicyRequestServiceNamespace
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra = 10,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DeleteScalingPolicyRequestScalableDimension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs:service:DesiredCount = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2:spot-fleet-request:TargetCapacity = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce:instancegroup:InstanceCount = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream:fleet:DesiredCapacity = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:ReadCapacityUnits = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:WriteCapacityUnits = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:ReadCapacityUnits = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:WriteCapacityUnits = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds:cluster:ReadReplicaCount = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker:variant:DesiredInstanceCount = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource:ResourceType:Property = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend:document-classifier-endpoint:DesiredInferenceUnits = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda:function:ProvisionedConcurrency = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:ReadCapacityUnits = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:WriteCapacityUnits = 14,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteScheduledActionRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DeleteScheduledActionRequestServiceNamespace ServiceNamespace { get; set; }
		
		/// <summary>
		/// Max length: 1600
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1600, MinimumLength=1)]
		public string ScheduledActionName { get; set; }
		
		/// <summary>
		/// Max length: 1600
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1600, MinimumLength=1)]
		public string ResourceId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DeleteScheduledActionRequestScalableDimension ScalableDimension { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DeleteScheduledActionRequestServiceNamespace
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra = 10,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DeleteScheduledActionRequestScalableDimension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs:service:DesiredCount = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2:spot-fleet-request:TargetCapacity = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce:instancegroup:InstanceCount = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream:fleet:DesiredCapacity = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:ReadCapacityUnits = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:WriteCapacityUnits = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:ReadCapacityUnits = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:WriteCapacityUnits = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds:cluster:ReadReplicaCount = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker:variant:DesiredInstanceCount = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource:ResourceType:Property = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend:document-classifier-endpoint:DesiredInferenceUnits = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda:function:ProvisionedConcurrency = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:ReadCapacityUnits = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:WriteCapacityUnits = 14,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeregisterScalableTargetRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DeregisterScalableTargetRequestServiceNamespace ServiceNamespace { get; set; }
		
		/// <summary>
		/// Max length: 1600
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1600, MinimumLength=1)]
		public string ResourceId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DeregisterScalableTargetRequestScalableDimension ScalableDimension { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DeregisterScalableTargetRequestServiceNamespace
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra = 10,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DeregisterScalableTargetRequestScalableDimension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs:service:DesiredCount = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2:spot-fleet-request:TargetCapacity = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce:instancegroup:InstanceCount = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream:fleet:DesiredCapacity = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:ReadCapacityUnits = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:WriteCapacityUnits = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:ReadCapacityUnits = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:WriteCapacityUnits = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds:cluster:ReadReplicaCount = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker:variant:DesiredInstanceCount = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource:ResourceType:Property = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend:document-classifier-endpoint:DesiredInferenceUnits = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda:function:ProvisionedConcurrency = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:ReadCapacityUnits = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:WriteCapacityUnits = 14,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeScalableTargetsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ScalableTarget[] ScalableTargets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeScalableTargetsRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DescribeScalableTargetsRequestServiceNamespace ServiceNamespace { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceIdMaxLen1600[] ResourceIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeScalableTargetsRequestScalableDimension ScalableDimension { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeScalableTargetsRequestServiceNamespace
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra = 10,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeScalableTargetsRequestScalableDimension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs:service:DesiredCount = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2:spot-fleet-request:TargetCapacity = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce:instancegroup:InstanceCount = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream:fleet:DesiredCapacity = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:ReadCapacityUnits = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:WriteCapacityUnits = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:ReadCapacityUnits = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:WriteCapacityUnits = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds:cluster:ReadReplicaCount = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker:variant:DesiredInstanceCount = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource:ResourceType:Property = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend:document-classifier-endpoint:DesiredInferenceUnits = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda:function:ProvisionedConcurrency = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:ReadCapacityUnits = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:WriteCapacityUnits = 14,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeScalingActivitiesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ScalingActivity[] ScalingActivities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeScalingActivitiesRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DescribeScalingActivitiesRequestServiceNamespace ServiceNamespace { get; set; }
		
		/// <summary>
		/// Max length: 1600
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1600, MinimumLength=1)]
		public string ResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeScalingActivitiesRequestScalableDimension ScalableDimension { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeScalingActivitiesRequestServiceNamespace
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra = 10,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeScalingActivitiesRequestScalableDimension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs:service:DesiredCount = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2:spot-fleet-request:TargetCapacity = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce:instancegroup:InstanceCount = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream:fleet:DesiredCapacity = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:ReadCapacityUnits = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:WriteCapacityUnits = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:ReadCapacityUnits = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:WriteCapacityUnits = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds:cluster:ReadReplicaCount = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker:variant:DesiredInstanceCount = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource:ResourceType:Property = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend:document-classifier-endpoint:DesiredInferenceUnits = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda:function:ProvisionedConcurrency = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:ReadCapacityUnits = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:WriteCapacityUnits = 14,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeScalingPoliciesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ScalingPolicy[] ScalingPolicies { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeScalingPoliciesRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceIdMaxLen1600[] PolicyNames { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DescribeScalingPoliciesRequestServiceNamespace ServiceNamespace { get; set; }
		
		/// <summary>
		/// Max length: 1600
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1600, MinimumLength=1)]
		public string ResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeScalingPoliciesRequestScalableDimension ScalableDimension { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeScalingPoliciesRequestServiceNamespace
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra = 10,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeScalingPoliciesRequestScalableDimension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs:service:DesiredCount = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2:spot-fleet-request:TargetCapacity = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce:instancegroup:InstanceCount = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream:fleet:DesiredCapacity = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:ReadCapacityUnits = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:WriteCapacityUnits = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:ReadCapacityUnits = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:WriteCapacityUnits = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds:cluster:ReadReplicaCount = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker:variant:DesiredInstanceCount = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource:ResourceType:Property = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend:document-classifier-endpoint:DesiredInferenceUnits = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda:function:ProvisionedConcurrency = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:ReadCapacityUnits = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:WriteCapacityUnits = 14,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeScheduledActionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ScheduledAction[] ScheduledActions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeScheduledActionsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceIdMaxLen1600[] ScheduledActionNames { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DescribeScheduledActionsRequestServiceNamespace ServiceNamespace { get; set; }
		
		/// <summary>
		/// Max length: 1600
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1600, MinimumLength=1)]
		public string ResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeScheduledActionsRequestScalableDimension ScalableDimension { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeScheduledActionsRequestServiceNamespace
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra = 10,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeScheduledActionsRequestScalableDimension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs:service:DesiredCount = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2:spot-fleet-request:TargetCapacity = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce:instancegroup:InstanceCount = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream:fleet:DesiredCapacity = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:ReadCapacityUnits = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:WriteCapacityUnits = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:ReadCapacityUnits = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:WriteCapacityUnits = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds:cluster:ReadReplicaCount = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker:variant:DesiredInstanceCount = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource:ResourceType:Property = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend:document-classifier-endpoint:DesiredInferenceUnits = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda:function:ProvisionedConcurrency = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:ReadCapacityUnits = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:WriteCapacityUnits = 14,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PutScalingPolicyResponse
	{
		
		/// <summary>
		/// Max length: 1600
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1600, MinimumLength=1)]
		public string PolicyARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Alarm[] Alarms { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PutScalingPolicyRequest
	{
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: \p{Print}+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string PolicyName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PutScalingPolicyRequestServiceNamespace ServiceNamespace { get; set; }
		
		/// <summary>
		/// Max length: 1600
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1600, MinimumLength=1)]
		public string ResourceId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PutScalingPolicyRequestScalableDimension ScalableDimension { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PutScalingPolicyRequestPolicyType PolicyType { get; set; }
		
		/// <summary>
		/// Represents a step scaling policy configuration to use with Application Auto Scaling.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StepScalingPolicyConfiguration StepScalingPolicyConfiguration { get; set; }
		
		/// <summary>
		/// Represents a target tracking scaling policy configuration to use with Application Auto Scaling.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TargetTrackingScalingPolicyConfiguration TargetTrackingScalingPolicyConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum PutScalingPolicyRequestServiceNamespace
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra = 10,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum PutScalingPolicyRequestScalableDimension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs:service:DesiredCount = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2:spot-fleet-request:TargetCapacity = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce:instancegroup:InstanceCount = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream:fleet:DesiredCapacity = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:ReadCapacityUnits = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:WriteCapacityUnits = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:ReadCapacityUnits = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:WriteCapacityUnits = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds:cluster:ReadReplicaCount = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker:variant:DesiredInstanceCount = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource:ResourceType:Property = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend:document-classifier-endpoint:DesiredInferenceUnits = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda:function:ProvisionedConcurrency = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:ReadCapacityUnits = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:WriteCapacityUnits = 14,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum PutScalingPolicyRequestPolicyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StepScaling = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TargetTrackingScaling = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PutScheduledActionRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PutScheduledActionRequestServiceNamespace ServiceNamespace { get; set; }
		
		/// <summary>
		/// Max length: 1600
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1600, MinimumLength=1)]
		public string Schedule { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: (?!((^[ ]+.*)|(.*([\u0000-\u001f]|[\u007f-\u009f]|[:/|])+.*)|(.*[ ]+$))).+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string ScheduledActionName { get; set; }
		
		/// <summary>
		/// Max length: 1600
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1600, MinimumLength=1)]
		public string ResourceId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PutScheduledActionRequestScalableDimension ScalableDimension { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		/// <summary>
		/// Represents the minimum and maximum capacity for a scheduled action.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ScalableTargetAction ScalableTargetAction { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum PutScheduledActionRequestServiceNamespace
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra = 10,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum PutScheduledActionRequestScalableDimension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs:service:DesiredCount = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2:spot-fleet-request:TargetCapacity = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce:instancegroup:InstanceCount = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream:fleet:DesiredCapacity = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:ReadCapacityUnits = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:WriteCapacityUnits = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:ReadCapacityUnits = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:WriteCapacityUnits = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds:cluster:ReadReplicaCount = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker:variant:DesiredInstanceCount = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource:ResourceType:Property = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend:document-classifier-endpoint:DesiredInferenceUnits = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda:function:ProvisionedConcurrency = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:ReadCapacityUnits = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:WriteCapacityUnits = 14,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RegisterScalableTargetRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RegisterScalableTargetRequestServiceNamespace ServiceNamespace { get; set; }
		
		/// <summary>
		/// Max length: 1600
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1600, MinimumLength=1)]
		public string ResourceId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RegisterScalableTargetRequestScalableDimension ScalableDimension { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxCapacity { get; set; }
		
		/// <summary>
		/// Max length: 1600
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1600, MinimumLength=1)]
		public string RoleARN { get; set; }
		
		/// <summary>
		/// Specifies whether the scaling activities for a scalable target are in a suspended state. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SuspendedState SuspendedState { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RegisterScalableTargetRequestServiceNamespace
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra = 10,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RegisterScalableTargetRequestScalableDimension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs:service:DesiredCount = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2:spot-fleet-request:TargetCapacity = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce:instancegroup:InstanceCount = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream:fleet:DesiredCapacity = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:ReadCapacityUnits = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:WriteCapacityUnits = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:ReadCapacityUnits = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:WriteCapacityUnits = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds:cluster:ReadReplicaCount = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker:variant:DesiredInstanceCount = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource:ResourceType:Property = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend:document-classifier-endpoint:DesiredInferenceUnits = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda:function:ProvisionedConcurrency = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:ReadCapacityUnits = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:WriteCapacityUnits = 14,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AdjustmentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ChangeInCapacity = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PercentChangeInCapacity = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExactCapacity = 2,
	}
	
	/// <summary>
	/// Represents a CloudWatch alarm associated with a scaling policy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Alarm
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AlarmName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AlarmARN { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MetricStatistic
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Average = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Minimum = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Maximum = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SampleCount = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Sum = 4,
	}
	
	/// <summary>
	/// <p>Represents a CloudWatch metric of your choosing for a target tracking scaling policy to use with Application Auto Scaling.</p> <p>For information about the available metrics for a service, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html">AWS Services That Publish CloudWatch Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>To create your customized metric specification:</p> <ul> <li> <p>Add values for each required parameter from CloudWatch. You can use an existing metric, or a new metric that you create. To use your own metric, you must first publish the metric to CloudWatch. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html">Publish Custom Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.</p> </li> <li> <p>Choose a metric that changes proportionally with capacity. The value of the metric should increase or decrease in inverse proportion to the number of capacity units. That is, the value of the metric should decrease when capacity increases, and increase when capacity decreases. </p> </li> </ul> <p>For more information about CloudWatch, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html">Amazon CloudWatch Concepts</a>. </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CustomizedMetricSpecification
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MetricName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Namespace { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MetricDimension[] Dimensions { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CustomizedMetricSpecificationStatistic Statistic { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Unit { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CustomizedMetricSpecificationStatistic
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Average = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Minimum = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Maximum = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SampleCount = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Sum = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ServiceNamespace
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra = 10,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ScalableDimension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs:service:DesiredCount = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2:spot-fleet-request:TargetCapacity = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce:instancegroup:InstanceCount = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream:fleet:DesiredCapacity = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:ReadCapacityUnits = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:WriteCapacityUnits = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:ReadCapacityUnits = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:WriteCapacityUnits = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds:cluster:ReadReplicaCount = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker:variant:DesiredInstanceCount = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource:ResourceType:Property = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend:document-classifier-endpoint:DesiredInferenceUnits = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda:function:ProvisionedConcurrency = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:ReadCapacityUnits = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:WriteCapacityUnits = 14,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MetricAggregationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Average = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Minimum = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Maximum = 2,
	}
	
	/// <summary>
	/// Describes the dimension names and values associated with a metric.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class MetricDimension
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MetricType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DynamoDBReadCapacityUtilization = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DynamoDBWriteCapacityUtilization = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALBRequestCountPerTarget = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RDSReaderAverageCPUUtilization = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RDSReaderAverageDatabaseConnections = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EC2SpotFleetRequestAverageCPUUtilization = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EC2SpotFleetRequestAverageNetworkIn = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EC2SpotFleetRequestAverageNetworkOut = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SageMakerVariantInvocationsPerInstance = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ECSServiceAverageCPUUtilization = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ECSServiceAverageMemoryUtilization = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AppStreamAverageCapacityUtilization = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ComprehendInferenceUtilization = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LambdaProvisionedConcurrencyUtilization = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CassandraReadCapacityUtilization = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CassandraWriteCapacityUtilization = 15,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum PolicyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StepScaling = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TargetTrackingScaling = 1,
	}
	
	/// <summary>
	/// <p>Represents a predefined metric for a target tracking scaling policy to use with Application Auto Scaling.</p> <p>Only the AWS services that you're using send metrics to Amazon CloudWatch. To determine whether a desired metric already exists by looking up its namespace and dimension using the CloudWatch metrics dashboard in the console, follow the procedure in <a href="https://docs.aws.amazon.com/autoscaling/application/userguide/monitoring-cloudwatch.html">Building Dashboards with CloudWatch</a> in the <i>Application Auto Scaling User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PredefinedMetricSpecification
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PredefinedMetricSpecificationPredefinedMetricType PredefinedMetricType { get; set; }
		
		/// <summary>
		/// Max length: 1023
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1023, MinimumLength=1)]
		public string ResourceLabel { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum PredefinedMetricSpecificationPredefinedMetricType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DynamoDBReadCapacityUtilization = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DynamoDBWriteCapacityUtilization = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALBRequestCountPerTarget = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RDSReaderAverageCPUUtilization = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RDSReaderAverageDatabaseConnections = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EC2SpotFleetRequestAverageCPUUtilization = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EC2SpotFleetRequestAverageNetworkIn = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EC2SpotFleetRequestAverageNetworkOut = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SageMakerVariantInvocationsPerInstance = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ECSServiceAverageCPUUtilization = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ECSServiceAverageMemoryUtilization = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AppStreamAverageCapacityUtilization = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ComprehendInferenceUtilization = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LambdaProvisionedConcurrencyUtilization = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CassandraReadCapacityUtilization = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CassandraWriteCapacityUtilization = 15,
	}
	
	/// <summary>
	/// Represents a step scaling policy configuration to use with Application Auto Scaling.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StepScalingPolicyConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StepScalingPolicyConfigurationAdjustmentType AdjustmentType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StepAdjustment[] StepAdjustments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinAdjustmentMagnitude { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Cooldown { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StepScalingPolicyConfigurationMetricAggregationType MetricAggregationType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StepScalingPolicyConfigurationAdjustmentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ChangeInCapacity = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PercentChangeInCapacity = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExactCapacity = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StepScalingPolicyConfigurationMetricAggregationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Average = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Minimum = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Maximum = 2,
	}
	
	/// <summary>
	/// Represents a target tracking scaling policy configuration to use with Application Auto Scaling.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TargetTrackingScalingPolicyConfiguration
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double TargetValue { get; set; }
		
		/// <summary>
		/// <p>Represents a predefined metric for a target tracking scaling policy to use with Application Auto Scaling.</p> <p>Only the AWS services that you're using send metrics to Amazon CloudWatch. To determine whether a desired metric already exists by looking up its namespace and dimension using the CloudWatch metrics dashboard in the console, follow the procedure in <a href="https://docs.aws.amazon.com/autoscaling/application/userguide/monitoring-cloudwatch.html">Building Dashboards with CloudWatch</a> in the <i>Application Auto Scaling User Guide</i>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PredefinedMetricSpecification PredefinedMetricSpecification { get; set; }
		
		/// <summary>
		/// <p>Represents a CloudWatch metric of your choosing for a target tracking scaling policy to use with Application Auto Scaling.</p> <p>For information about the available metrics for a service, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html">AWS Services That Publish CloudWatch Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>To create your customized metric specification:</p> <ul> <li> <p>Add values for each required parameter from CloudWatch. You can use an existing metric, or a new metric that you create. To use your own metric, you must first publish the metric to CloudWatch. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html">Publish Custom Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.</p> </li> <li> <p>Choose a metric that changes proportionally with capacity. The value of the metric should increase or decrease in inverse proportion to the number of capacity units. That is, the value of the metric should decrease when capacity increases, and increase when capacity decreases. </p> </li> </ul> <p>For more information about CloudWatch, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html">Amazon CloudWatch Concepts</a>. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CustomizedMetricSpecification CustomizedMetricSpecification { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ScaleOutCooldown { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ScaleInCooldown { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableScaleIn { get; set; }
	}
	
	/// <summary>
	/// Represents the minimum and maximum capacity for a scheduled action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ScalableTargetAction
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxCapacity { get; set; }
	}
	
	/// <summary>
	/// Specifies whether the scaling activities for a scalable target are in a suspended state. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SuspendedState
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DynamicScalingInSuspended { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DynamicScalingOutSuspended { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ScheduledScalingSuspended { get; set; }
	}
	
	/// <summary>
	/// Represents a scalable target.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ScalableTarget
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ScalableTargetServiceNamespace ServiceNamespace { get; set; }
		
		/// <summary>
		/// Max length: 1600
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1600, MinimumLength=1)]
		public string ResourceId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ScalableTargetScalableDimension ScalableDimension { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int MinCapacity { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int MaxCapacity { get; set; }
		
		/// <summary>
		/// Max length: 1600
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1600, MinimumLength=1)]
		public string RoleARN { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		/// <summary>
		/// Specifies whether the scaling activities for a scalable target are in a suspended state. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SuspendedState SuspendedState { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ScalableTargetServiceNamespace
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra = 10,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ScalableTargetScalableDimension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs:service:DesiredCount = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2:spot-fleet-request:TargetCapacity = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce:instancegroup:InstanceCount = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream:fleet:DesiredCapacity = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:ReadCapacityUnits = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:WriteCapacityUnits = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:ReadCapacityUnits = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:WriteCapacityUnits = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds:cluster:ReadReplicaCount = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker:variant:DesiredInstanceCount = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource:ResourceType:Property = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend:document-classifier-endpoint:DesiredInferenceUnits = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda:function:ProvisionedConcurrency = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:ReadCapacityUnits = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:WriteCapacityUnits = 14,
	}
	
	/// <summary>
	/// Represents a scaling activity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ScalingActivity
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ActivityId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ScalingActivityServiceNamespace ServiceNamespace { get; set; }
		
		/// <summary>
		/// Max length: 1600
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1600, MinimumLength=1)]
		public string ResourceId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ScalingActivityScalableDimension ScalableDimension { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Cause { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ScalingActivityStatusCode StatusCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Details { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ScalingActivityServiceNamespace
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra = 10,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ScalingActivityScalableDimension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs:service:DesiredCount = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2:spot-fleet-request:TargetCapacity = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce:instancegroup:InstanceCount = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream:fleet:DesiredCapacity = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:ReadCapacityUnits = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:WriteCapacityUnits = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:ReadCapacityUnits = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:WriteCapacityUnits = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds:cluster:ReadReplicaCount = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker:variant:DesiredInstanceCount = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource:ResourceType:Property = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend:document-classifier-endpoint:DesiredInferenceUnits = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda:function:ProvisionedConcurrency = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:ReadCapacityUnits = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:WriteCapacityUnits = 14,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ScalingActivityStatusCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Successful = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Overridden = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Unfulfilled = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ScalingActivityStatusCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Successful = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Overridden = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Unfulfilled = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 5,
	}
	
	/// <summary>
	/// Represents a scaling policy to use with Application Auto Scaling.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ScalingPolicy
	{
		
		/// <summary>
		/// Max length: 1600
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1600, MinimumLength=1)]
		public string PolicyARN { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: \p{Print}+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string PolicyName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ScalingPolicyServiceNamespace ServiceNamespace { get; set; }
		
		/// <summary>
		/// Max length: 1600
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1600, MinimumLength=1)]
		public string ResourceId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ScalingPolicyScalableDimension ScalableDimension { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ScalingPolicyPolicyType PolicyType { get; set; }
		
		/// <summary>
		/// Represents a step scaling policy configuration to use with Application Auto Scaling.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StepScalingPolicyConfiguration StepScalingPolicyConfiguration { get; set; }
		
		/// <summary>
		/// Represents a target tracking scaling policy configuration to use with Application Auto Scaling.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TargetTrackingScalingPolicyConfiguration TargetTrackingScalingPolicyConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Alarm[] Alarms { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ScalingPolicyServiceNamespace
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra = 10,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ScalingPolicyScalableDimension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs:service:DesiredCount = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2:spot-fleet-request:TargetCapacity = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce:instancegroup:InstanceCount = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream:fleet:DesiredCapacity = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:ReadCapacityUnits = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:WriteCapacityUnits = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:ReadCapacityUnits = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:WriteCapacityUnits = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds:cluster:ReadReplicaCount = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker:variant:DesiredInstanceCount = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource:ResourceType:Property = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend:document-classifier-endpoint:DesiredInferenceUnits = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda:function:ProvisionedConcurrency = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:ReadCapacityUnits = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:WriteCapacityUnits = 14,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ScalingPolicyPolicyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StepScaling = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TargetTrackingScaling = 1,
	}
	
	/// <summary>
	/// Represents a scheduled action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ScheduledAction
	{
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: (?!((^[ ]+.*)|(.*([\u0000-\u001f]|[\u007f-\u009f]|[:/|])+.*)|(.*[ ]+$))).+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string ScheduledActionName { get; set; }
		
		/// <summary>
		/// Max length: 1600
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1600, MinimumLength=1)]
		public string ScheduledActionARN { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ScheduledActionServiceNamespace ServiceNamespace { get; set; }
		
		/// <summary>
		/// Max length: 1600
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1600, MinimumLength=1)]
		public string Schedule { get; set; }
		
		/// <summary>
		/// Max length: 1600
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1600, MinimumLength=1)]
		public string ResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScheduledActionScalableDimension ScalableDimension { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		/// <summary>
		/// Represents the minimum and maximum capacity for a scheduled action.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ScalableTargetAction ScalableTargetAction { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ScheduledActionServiceNamespace
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra = 10,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ScheduledActionScalableDimension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecs:service:DesiredCount = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2:spot-fleet-request:TargetCapacity = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elasticmapreduce:instancegroup:InstanceCount = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appstream:fleet:DesiredCapacity = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:ReadCapacityUnits = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:table:WriteCapacityUnits = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:ReadCapacityUnits = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dynamodb:index:WriteCapacityUnits = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rds:cluster:ReadReplicaCount = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sagemaker:variant:DesiredInstanceCount = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom-resource:ResourceType:Property = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		comprehend:document-classifier-endpoint:DesiredInferenceUnits = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda:function:ProvisionedConcurrency = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:ReadCapacityUnits = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cassandra:table:WriteCapacityUnits = 14,
	}
	
	/// <summary>
	/// <p>Represents a step adjustment for a <a href="https://docs.aws.amazon.com/autoscaling/application/APIReference/API_StepScalingPolicyConfiguration.html">StepScalingPolicyConfiguration</a>. Describes an adjustment based on the difference between the value of the aggregated CloudWatch metric and the breach threshold that you've defined for the alarm. </p> <p>For the following examples, suppose that you have an alarm with a breach threshold of 50:</p> <ul> <li> <p>To trigger the adjustment when the metric is greater than or equal to 50 and less than 60, specify a lower bound of 0 and an upper bound of 10.</p> </li> <li> <p>To trigger the adjustment when the metric is greater than 40 and less than or equal to 50, specify a lower bound of -10 and an upper bound of 0.</p> </li> </ul> <p>There are a few rules for the step adjustments for your step policy:</p> <ul> <li> <p>The ranges of your step adjustments can't overlap or have a gap.</p> </li> <li> <p>At most one step adjustment can have a null lower bound. If one step adjustment has a negative lower bound, then there must be a step adjustment with a null lower bound.</p> </li> <li> <p>At most one step adjustment can have a null upper bound. If one step adjustment has a positive upper bound, then there must be a step adjustment with a null upper bound.</p> </li> <li> <p>The upper and lower bound can't be null in the same step adjustment.</p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StepAdjustment
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MetricIntervalLowerBound { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MetricIntervalUpperBound { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int ScalingAdjustment { get; set; }
	}
	
	public partial class DemoClient
	{
		
		private System.Net.Http.HttpClient client;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public DemoClient(System.Net.Http.HttpClient client, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (client == null)
				throw new ArgumentNullException("Null HttpClient.", "client");

			if (client.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "client");

			this.client = client;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// <p>Deletes the specified scaling policy for an Application Auto Scaling scalable target.</p> <p>Deleting a step scaling policy deletes the underlying alarm action, but does not delete the CloudWatch alarm associated with the scaling policy, even if it no longer has an associated action.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-step-scaling-policies.html#delete-step-scaling-policy">Delete a Step Scaling Policy</a> and <a href="https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking.html#delete-target-tracking-policy">Delete a Target Tracking Scaling Policy</a> in the <i>Application Auto Scaling User Guide</i>.</p>
		/// DeleteScalingPolicy /#X-Amz-Target=AnyScaleFrontendService.DeleteScalingPolicy
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteScalingPolicyResponse> DeleteScalingPolicyAsync(DeleteScalingPolicyRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=AnyScaleFrontendService.DeleteScalingPolicy";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteScalingPolicyResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes the specified scheduled action for an Application Auto Scaling scalable target.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-scheduled-scaling.html#delete-scheduled-action">Delete a Scheduled Action</a> in the <i>Application Auto Scaling User Guide</i>.</p>
		/// DeleteScheduledAction /#X-Amz-Target=AnyScaleFrontendService.DeleteScheduledAction
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteScheduledActionResponse> DeleteScheduledActionAsync(DeleteScheduledActionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=AnyScaleFrontendService.DeleteScheduledAction";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteScheduledActionResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Deregisters an Application Auto Scaling scalable target when you have finished using it. To see which resources have been registered, use <a href="https://docs.aws.amazon.com/autoscaling/application/APIReference/API_DescribeScalableTargets.html">DescribeScalableTargets</a>. </p> <note> <p>Deregistering a scalable target deletes the scaling policies and the scheduled actions that are associated with it.</p> </note>
		/// DeregisterScalableTarget /#X-Amz-Target=AnyScaleFrontendService.DeregisterScalableTarget
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeregisterScalableTargetResponse> DeregisterScalableTargetAsync(DeregisterScalableTargetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=AnyScaleFrontendService.DeregisterScalableTarget";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeregisterScalableTargetResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Gets information about the scalable targets in the specified namespace.</p> <p>You can filter the results using <code>ResourceIds</code> and <code>ScalableDimension</code>.</p>
		/// DescribeScalableTargets /#X-Amz-Target=AnyScaleFrontendService.DescribeScalableTargets
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeScalableTargetsResponse> DescribeScalableTargetsAsync(string MaxResults, string NextToken, DescribeScalableTargetsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=AnyScaleFrontendService.DescribeScalableTargets?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeScalableTargetsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Provides descriptive information about the scaling activities in the specified namespace from the previous six weeks.</p> <p>You can filter the results using <code>ResourceId</code> and <code>ScalableDimension</code>.</p>
		/// DescribeScalingActivities /#X-Amz-Target=AnyScaleFrontendService.DescribeScalingActivities
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeScalingActivitiesResponse> DescribeScalingActivitiesAsync(string MaxResults, string NextToken, DescribeScalingActivitiesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=AnyScaleFrontendService.DescribeScalingActivities?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeScalingActivitiesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Describes the Application Auto Scaling scaling policies for the specified service namespace.</p> <p>You can filter the results using <code>ResourceId</code>, <code>ScalableDimension</code>, and <code>PolicyNames</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking.html">Target Tracking Scaling Policies</a> and <a href="https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-step-scaling-policies.html">Step Scaling Policies</a> in the <i>Application Auto Scaling User Guide</i>.</p>
		/// DescribeScalingPolicies /#X-Amz-Target=AnyScaleFrontendService.DescribeScalingPolicies
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeScalingPoliciesResponse> DescribeScalingPoliciesAsync(string MaxResults, string NextToken, DescribeScalingPoliciesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=AnyScaleFrontendService.DescribeScalingPolicies?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeScalingPoliciesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Describes the Application Auto Scaling scheduled actions for the specified service namespace.</p> <p>You can filter the results using the <code>ResourceId</code>, <code>ScalableDimension</code>, and <code>ScheduledActionNames</code> parameters.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-scheduled-scaling.html">Scheduled Scaling</a> in the <i>Application Auto Scaling User Guide</i>.</p>
		/// DescribeScheduledActions /#X-Amz-Target=AnyScaleFrontendService.DescribeScheduledActions
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeScheduledActionsResponse> DescribeScheduledActionsAsync(string MaxResults, string NextToken, DescribeScheduledActionsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=AnyScaleFrontendService.DescribeScheduledActions?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeScheduledActionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Creates or updates a scaling policy for an Application Auto Scaling scalable target.</p> <p>Each scalable target is identified by a service namespace, resource ID, and scalable dimension. A scaling policy applies to the scalable target identified by those three attributes. You cannot create a scaling policy until you have registered the resource as a scalable target.</p> <p>Multiple scaling policies can be in force at the same time for the same scalable target. You can have one or more target tracking scaling policies, one or more step scaling policies, or both. However, there is a chance that multiple policies could conflict, instructing the scalable target to scale out or in at the same time. Application Auto Scaling gives precedence to the policy that provides the largest capacity for both scale out and scale in. For example, if one policy increases capacity by 3, another policy increases capacity by 200 percent, and the current capacity is 10, Application Auto Scaling uses the policy with the highest calculated capacity (200% of 10 = 20) and scales out to 30. </p> <p>We recommend caution, however, when using target tracking scaling policies with step scaling policies because conflicts between these policies can cause undesirable behavior. For example, if the step scaling policy initiates a scale-in activity before the target tracking policy is ready to scale in, the scale-in activity will not be blocked. After the scale-in activity completes, the target tracking policy could instruct the scalable target to scale out again. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking.html">Target Tracking Scaling Policies</a> and <a href="https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-step-scaling-policies.html">Step Scaling Policies</a> in the <i>Application Auto Scaling User Guide</i>.</p> <note> <p>If a scalable target is deregistered, the scalable target is no longer available to execute scaling policies. Any scaling policies that were specified for the scalable target are deleted.</p> </note>
		/// PutScalingPolicy /#X-Amz-Target=AnyScaleFrontendService.PutScalingPolicy
		/// </summary>
		/// <returns>Success</returns>
		public async Task<PutScalingPolicyResponse> PutScalingPolicyAsync(PutScalingPolicyRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=AnyScaleFrontendService.PutScalingPolicy";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<PutScalingPolicyResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Creates or updates a scheduled action for an Application Auto Scaling scalable target.</p> <p>Each scalable target is identified by a service namespace, resource ID, and scalable dimension. A scheduled action applies to the scalable target identified by those three attributes. You cannot create a scheduled action until you have registered the resource as a scalable target.</p> <p>When start and end times are specified with a recurring schedule using a cron expression or rates, they form the boundaries of when the recurring action starts and stops.</p> <p>To update a scheduled action, specify the parameters that you want to change. If you don't specify start and end times, the old values are deleted.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-scheduled-scaling.html">Scheduled Scaling</a> in the <i>Application Auto Scaling User Guide</i>.</p> <note> <p>If a scalable target is deregistered, the scalable target is no longer available to run scheduled actions. Any scheduled actions that were specified for the scalable target are deleted.</p> </note>
		/// PutScheduledAction /#X-Amz-Target=AnyScaleFrontendService.PutScheduledAction
		/// </summary>
		/// <returns>Success</returns>
		public async Task<PutScheduledActionResponse> PutScheduledActionAsync(PutScheduledActionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=AnyScaleFrontendService.PutScheduledAction";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<PutScheduledActionResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Registers or updates a scalable target. </p> <p>A scalable target is a resource that Application Auto Scaling can scale out and scale in. Scalable targets are uniquely identified by the combination of resource ID, scalable dimension, and namespace. </p> <p>When you register a new scalable target, you must specify values for minimum and maximum capacity. Application Auto Scaling scaling policies will not scale capacity to values that are outside of this range.</p> <p>After you register a scalable target, you do not need to register it again to use other Application Auto Scaling operations. To see which resources have been registered, use <a href="https://docs.aws.amazon.com/autoscaling/application/APIReference/API_DescribeScalableTargets.html">DescribeScalableTargets</a>. You can also view the scaling policies for a service namespace by using <a href="https://docs.aws.amazon.com/autoscaling/application/APIReference/API_DescribeScalableTargets.html">DescribeScalableTargets</a>. If you no longer need a scalable target, you can deregister it by using <a href="https://docs.aws.amazon.com/autoscaling/application/APIReference/API_DeregisterScalableTarget.html">DeregisterScalableTarget</a>.</p> <p>To update a scalable target, specify the parameters that you want to change. Include the parameters that identify the scalable target: resource ID, scalable dimension, and namespace. Any parameters that you don't specify are not changed by this update request. </p>
		/// RegisterScalableTarget /#X-Amz-Target=AnyScaleFrontendService.RegisterScalableTarget
		/// </summary>
		/// <returns>Success</returns>
		public async Task<RegisterScalableTargetResponse> RegisterScalableTargetAsync(RegisterScalableTargetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=AnyScaleFrontendService.RegisterScalableTarget";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<RegisterScalableTargetResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}
