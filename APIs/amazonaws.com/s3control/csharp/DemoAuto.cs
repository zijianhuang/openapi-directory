//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace My.Demo.Client
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Net.Http;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateJobResult
	{
		
		/// <summary>
		/// Max length: 36
		/// Min length: 5
		/// Pattern: [a-zA-Z0-9\-\_]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(36, MinimumLength=5)]
		public string JobId { get; set; }
	}
	
	/// <summary>
	/// Contains the configuration parameters for a <code>Lambda Invoke</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class LambdaInvokeOperation
	{
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// Pattern: (arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string FunctionArn { get; set; }
	}
	
	/// <summary>
	/// Contains the configuration parameters for a PUT Copy object operation. Amazon S3 Batch Operations passes each value through to the underlying PUT Copy object API. For more information about the parameters for this operation, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectCOPY.html">PUT Object - Copy</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3CopyObjectOperation
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: arn:[^:]+:s3:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string TargetResource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3CopyObjectOperationCannedAccessControlList CannedAccessControlList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3Grant[] AccessControlGrants { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3CopyObjectOperationMetadataDirective MetadataDirective { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ModifiedSinceConstraint { get; set; }
		
		/// <summary>
		/// <p/>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3ObjectMetadata NewObjectMetadata { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3Tag[] NewObjectTagging { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string RedirectLocation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RequesterPays { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3CopyObjectOperationStorageClass StorageClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> UnModifiedSinceConstraint { get; set; }
		
		/// <summary>
		/// Max length: 2000
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2000, MinimumLength=1)]
		public string SSEAwsKmsKeyId { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string TargetKeyPrefix { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3CopyObjectOperationObjectLockLegalHoldStatus ObjectLockLegalHoldStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3CopyObjectOperationObjectLockMode ObjectLockMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ObjectLockRetainUntilDate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum S3CopyObjectOperationCannedAccessControlList
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		@private = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		public-read = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		public-read-write = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		aws-exec-read = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		authenticated-read = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		bucket-owner-read = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		bucket-owner-full-control = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum S3CopyObjectOperationMetadataDirective
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COPY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPLACE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum S3CopyObjectOperationStorageClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD_IA = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONEZONE_IA = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GLACIER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTELLIGENT_TIERING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEEP_ARCHIVE = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum S3CopyObjectOperationObjectLockLegalHoldStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OFF = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ON = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum S3CopyObjectOperationObjectLockMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLIANCE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GOVERNANCE = 1,
	}
	
	/// <summary>
	/// Contains the configuration parameters for a Set Object ACL operation. Amazon S3 Batch Operations passes each value through to the underlying PUT Object acl API. For more information about the parameters for this operation, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUTacl.html">PUT Object acl</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3SetObjectAclOperation
	{
		
		/// <summary>
		/// <p/>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3AccessControlPolicy AccessControlPolicy { get; set; }
	}
	
	/// <summary>
	/// Contains the configuration parameters for a Set Object Tagging operation. Amazon S3 Batch Operations passes each value through to the underlying PUT Object tagging API. For more information about the parameters for this operation, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUTtagging.html">PUT Object tagging</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3SetObjectTaggingOperation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public S3Tag[] TagSet { get; set; }
	}
	
	/// <summary>
	/// Contains the configuration parameters for an Initiate Glacier Restore job. Amazon S3 Batch Operations passes each value through to the underlying POST Object restore API. For more information about the parameters for this operation, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPOSTrestore.html#RESTObjectPOSTrestore-restore-request">Restoring Archives</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3InitiateRestoreObjectOperation
	{
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> ExpirationInDays { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3InitiateRestoreObjectOperationGlacierJobTier GlacierJobTier { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum S3InitiateRestoreObjectOperationGlacierJobTier
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BULK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD = 1,
	}
	
	/// <summary>
	/// Contains the configuration parameters for a Set Object Legal Hold operation. Amazon S3 Batch Operations passes each value through to the underlying PUT Object Legal Hold API. For more information about the parameters for this operation, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.htmll#object-lock-legal-holds">PUT Object Legal Hold</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3SetObjectLegalHoldOperation
	{
		
		/// <summary>
		/// <p/>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public S3ObjectLockLegalHold LegalHold { get; set; }
	}
	
	/// <summary>
	/// Contains the configuration parameters for a Set Object Retention operation. Amazon S3 Batch Operations passes each value through to the underlying PUT Object Retention API. For more information about the parameters for this operation, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html#object-lock-retention-modes">PUT Object Retention</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3SetObjectRetentionOperation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> BypassGovernanceRetention { get; set; }
		
		/// <summary>
		/// <p/>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public S3Retention Retention { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum JobReportFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Report_CSV_20180820 = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum JobReportScope
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AllTasks = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FailedTasksOnly = 1,
	}
	
	/// <summary>
	/// Describes the format of a manifest. If the manifest is in CSV format, also describes the columns contained within the manifest.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class JobManifestSpec
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JobManifestSpecFormat Format { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JobManifestFieldName[] Fields { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum JobManifestSpecFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3BatchOperations_CSV_20180820 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3InventoryReport_CSV_20161130 = 1,
	}
	
	/// <summary>
	/// Contains the information required to locate a manifest object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class JobManifestLocation
	{
		
		/// <summary>
		/// Max length: 2000
		/// Min length: 1
		/// Pattern: arn:[^:]+:s3:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2000, MinimumLength=1)]
		public string ObjectArn { get; set; }
		
		/// <summary>
		/// Max length: 2000
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2000, MinimumLength=1)]
		public string ObjectVersionId { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string ETag { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3Tag
	{
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:=+\-@%]*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string Key { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:=+\-@%]*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeJobResult
	{
		
		/// <summary>
		/// A container element for the job configuration and status information returned by a <code>Describe Job</code> request.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public JobDescriptor Job { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetAccessPointResult
	{
		
		/// <summary>
		/// Max length: 50
		/// Min length: 3
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength=3)]
		public string Name { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 3
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=3)]
		public string Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GetAccessPointResultNetworkOrigin NetworkOrigin { get; set; }
		
		/// <summary>
		/// The virtual private cloud (VPC) configuration for an access point.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConfiguration VpcConfiguration { get; set; }
		
		/// <summary>
		/// The <code>PublicAccessBlock</code> configuration that you want to apply to this Amazon S3 bucket. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public"</a> in the Amazon Simple Storage Service Developer Guide.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PublicAccessBlockConfiguration PublicAccessBlockConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationDate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GetAccessPointResultNetworkOrigin
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Internet = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VPC = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetAccessPointPolicyResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Policy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetAccessPointPolicyStatusResult
	{
		
		/// <summary>
		/// Indicates whether this access point policy is public. For more information about how Amazon S3 evaluates policies to determine whether they are public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public"</a> in the <i>Amazon Simple Storage Service Developer Guide</i>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PolicyStatus PolicyStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetJobTaggingResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public S3Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetPublicAccessBlockOutput
	{
		
		/// <summary>
		/// The <code>PublicAccessBlock</code> configuration that you want to apply to this Amazon S3 bucket. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public"</a> in the Amazon Simple Storage Service Developer Guide.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PublicAccessBlockConfiguration PublicAccessBlockConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListAccessPointsResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AccessPoint[] AccessPointList { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListJobsResult
	{
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// Pattern: ^[A-Za-z0-9\+\:\/\=\?\#-_]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JobListDescriptor[] Jobs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum JobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cancelled = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cancelling = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Complete = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completing = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failing = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		New = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Paused = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pausing = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Preparing = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ready = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Suspended = 12,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateJobPriorityResult
	{
		
		/// <summary>
		/// Max length: 36
		/// Min length: 5
		/// Pattern: [a-zA-Z0-9\-\_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(36, MinimumLength=5)]
		public string JobId { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 2147483647
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 2147483647)]
		public int Priority { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateJobStatusResult
	{
		
		/// <summary>
		/// Max length: 36
		/// Min length: 5
		/// Pattern: [a-zA-Z0-9\-\_]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(36, MinimumLength=5)]
		public string JobId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpdateJobStatusResultStatus Status { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string StatusUpdateReason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateJobStatusResultStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cancelled = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cancelling = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Complete = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completing = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failing = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		New = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Paused = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pausing = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Preparing = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ready = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Suspended = 12,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum NetworkOrigin
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Internet = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VPC = 1,
	}
	
	/// <summary>
	/// The virtual private cloud (VPC) configuration for an access point.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class VpcConfiguration
	{
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string VpcId { get; set; }
	}
	
	/// <summary>
	/// An access point used to access a bucket.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AccessPoint
	{
		
		/// <summary>
		/// Max length: 50
		/// Min length: 3
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength=3)]
		public string Name { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AccessPointNetworkOrigin NetworkOrigin { get; set; }
		
		/// <summary>
		/// The virtual private cloud (VPC) configuration for an access point.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConfiguration VpcConfiguration { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 3
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=3)]
		public string Bucket { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AccessPointNetworkOrigin
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Internet = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VPC = 1,
	}
	
	/// <summary>
	/// The <code>PublicAccessBlock</code> configuration that you want to apply to this Amazon S3 bucket. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public"</a> in the Amazon Simple Storage Service Developer Guide.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PublicAccessBlockConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> BlockPublicAcls { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IgnorePublicAcls { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> BlockPublicPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RestrictPublicBuckets { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateAccessPointRequest
	{
		
		/// <summary>
		/// Max length: 255
		/// Min length: 3
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=3)]
		public string Bucket { get; set; }
		
		/// <summary>
		/// The virtual private cloud (VPC) configuration for an access point.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConfiguration VpcConfiguration { get; set; }
		
		/// <summary>
		/// The <code>PublicAccessBlock</code> configuration that you want to apply to this Amazon S3 bucket. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public"</a> in the Amazon Simple Storage Service Developer Guide.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PublicAccessBlockConfiguration PublicAccessBlockConfiguration { get; set; }
	}
	
	/// <summary>
	/// The operation that you want this job to perform on each object listed in the manifest. For more information about the available operations, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-operations.html">Available Operations</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class JobOperation
	{
		
		/// <summary>
		/// Contains the configuration parameters for a <code>Lambda Invoke</code> operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LambdaInvokeOperation LambdaInvoke { get; set; }
		
		/// <summary>
		/// Contains the configuration parameters for a PUT Copy object operation. Amazon S3 Batch Operations passes each value through to the underlying PUT Copy object API. For more information about the parameters for this operation, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectCOPY.html">PUT Object - Copy</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3CopyObjectOperation S3PutObjectCopy { get; set; }
		
		/// <summary>
		/// Contains the configuration parameters for a Set Object ACL operation. Amazon S3 Batch Operations passes each value through to the underlying PUT Object acl API. For more information about the parameters for this operation, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUTacl.html">PUT Object acl</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3SetObjectAclOperation S3PutObjectAcl { get; set; }
		
		/// <summary>
		/// Contains the configuration parameters for a Set Object Tagging operation. Amazon S3 Batch Operations passes each value through to the underlying PUT Object tagging API. For more information about the parameters for this operation, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUTtagging.html">PUT Object tagging</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3SetObjectTaggingOperation S3PutObjectTagging { get; set; }
		
		/// <summary>
		/// Contains the configuration parameters for an Initiate Glacier Restore job. Amazon S3 Batch Operations passes each value through to the underlying POST Object restore API. For more information about the parameters for this operation, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPOSTrestore.html#RESTObjectPOSTrestore-restore-request">Restoring Archives</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3InitiateRestoreObjectOperation S3InitiateRestoreObject { get; set; }
		
		/// <summary>
		/// Contains the configuration parameters for a Set Object Legal Hold operation. Amazon S3 Batch Operations passes each value through to the underlying PUT Object Legal Hold API. For more information about the parameters for this operation, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.htmll#object-lock-legal-holds">PUT Object Legal Hold</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3SetObjectLegalHoldOperation S3PutObjectLegalHold { get; set; }
		
		/// <summary>
		/// Contains the configuration parameters for a Set Object Retention operation. Amazon S3 Batch Operations passes each value through to the underlying PUT Object Retention API. For more information about the parameters for this operation, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html#object-lock-retention-modes">PUT Object Retention</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3SetObjectRetentionOperation S3PutObjectRetention { get; set; }
	}
	
	/// <summary>
	/// Contains the configuration parameters for a job-completion report.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class JobReport
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: arn:[^:]+:s3:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JobReportFormat Format { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool Enabled { get; set; }
		
		/// <summary>
		/// Max length: 512
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(512, MinimumLength=1)]
		public string Prefix { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JobReportReportScope ReportScope { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum JobReportFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Report_CSV_20180820 = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum JobReportReportScope
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AllTasks = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FailedTasksOnly = 1,
	}
	
	/// <summary>
	/// Contains the configuration information for a job's manifest.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class JobManifest
	{
		
		/// <summary>
		/// Describes the format of a manifest. If the manifest is in CSV format, also describes the columns contained within the manifest.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JobManifestSpec Spec { get; set; }
		
		/// <summary>
		/// Contains the information required to locate a manifest object.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JobManifestLocation Location { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateJobRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ConfirmationRequired { get; set; }
		
		/// <summary>
		/// The operation that you want this job to perform on each object listed in the manifest. For more information about the available operations, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-operations.html">Available Operations</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JobOperation Operation { get; set; }
		
		/// <summary>
		/// Contains the configuration parameters for a job-completion report.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JobReport Report { get; set; }
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// Contains the configuration information for a job's manifest.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JobManifest Manifest { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string Description { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 2147483647
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 2147483647)]
		public int Priority { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:[^:]+:iam::\d{12}:role/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3Tag[] Tags { get; set; }
	}
	
	/// <summary>
	/// A container element for the job configuration and status information returned by a <code>Describe Job</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class JobDescriptor
	{
		
		/// <summary>
		/// Max length: 36
		/// Min length: 5
		/// Pattern: [a-zA-Z0-9\-\_]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(36, MinimumLength=5)]
		public string JobId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ConfirmationRequired { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string Description { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// Pattern: arn:[^:]+:s3:[a-zA-Z0-9\-]+:\d{12}:job\/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string JobArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JobDescriptorStatus Status { get; set; }
		
		/// <summary>
		/// Contains the configuration information for a job's manifest.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public JobManifest Manifest { get; set; }
		
		/// <summary>
		/// The operation that you want this job to perform on each object listed in the manifest. For more information about the available operations, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-operations.html">Available Operations</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public JobOperation Operation { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 2147483647
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 2147483647)]
		public System.Nullable<System.Int32> Priority { get; set; }
		
		/// <summary>
		/// Describes the total number of tasks that the specified job has executed, the number of tasks that succeeded, and the number of tasks that failed.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public JobProgressSummary ProgressSummary { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string StatusUpdateReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JobFailure[] FailureReasons { get; set; }
		
		/// <summary>
		/// Contains the configuration parameters for a job-completion report.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public JobReport Report { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> TerminationDate { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:[^:]+:iam::\d{12}:role/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SuspendedDate { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string SuspendedCause { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum JobDescriptorStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cancelled = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cancelling = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Complete = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completing = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failing = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		New = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Paused = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pausing = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Preparing = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ready = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Suspended = 12,
	}
	
	/// <summary>
	/// Indicates whether this access point policy is public. For more information about how Amazon S3 evaluates policies to determine whether they are public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public"</a> in the <i>Amazon Simple Storage Service Developer Guide</i>. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PolicyStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsPublic { get; set; }
	}
	
	/// <summary>
	/// Describes the total number of tasks that the specified job has executed, the number of tasks that succeeded, and the number of tasks that failed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class JobProgressSummary
	{
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> TotalNumberOfTasks { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> NumberOfTasksSucceeded { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> NumberOfTasksFailed { get; set; }
	}
	
	/// <summary>
	/// If this job failed, this element indicates why the job failed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class JobFailure
	{
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string FailureCode { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string FailureReason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum OperationName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LambdaInvoke = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3PutObjectCopy = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3PutObjectAcl = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3PutObjectTagging = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3InitiateRestoreObject = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3PutObjectLegalHold = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3PutObjectRetention = 6,
	}
	
	/// <summary>
	/// Contains the configuration and status information for a single job retrieved as part of a job list.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class JobListDescriptor
	{
		
		/// <summary>
		/// Max length: 36
		/// Min length: 5
		/// Pattern: [a-zA-Z0-9\-\_]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(36, MinimumLength=5)]
		public string JobId { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JobListDescriptorOperation Operation { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 2147483647
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 2147483647)]
		public System.Nullable<System.Int32> Priority { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JobListDescriptorStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> TerminationDate { get; set; }
		
		/// <summary>
		/// Describes the total number of tasks that the specified job has executed, the number of tasks that succeeded, and the number of tasks that failed.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public JobProgressSummary ProgressSummary { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum JobListDescriptorOperation
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LambdaInvoke = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3PutObjectCopy = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3PutObjectAcl = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3PutObjectTagging = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3InitiateRestoreObject = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3PutObjectLegalHold = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3PutObjectRetention = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum JobListDescriptorStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cancelled = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cancelling = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Complete = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completing = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failing = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		New = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Paused = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pausing = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Preparing = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ready = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Suspended = 12,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum JobManifestFieldName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ignore = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bucket = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Key = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VersionId = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum JobManifestFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3BatchOperations_CSV_20180820 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3InventoryReport_CSV_20161130 = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PutAccessPointPolicyRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Policy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PutJobTaggingRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public S3Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PutPublicAccessBlockRequest
	{
		
		/// <summary>
		/// The <code>PublicAccessBlock</code> configuration that you want to apply to this Amazon S3 bucket. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public"</a> in the Amazon Simple Storage Service Developer Guide.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PublicAccessBlockConfiguration PublicAccessBlockConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RequestedJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cancelled = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ready = 1,
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3ObjectOwner
	{
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string ID { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string DisplayName { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3AccessControlList
	{
		
		/// <summary>
		/// <p/>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public S3ObjectOwner Owner { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3Grant[] Grants { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum S3CannedAccessControlList
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		@private = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		public-read = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		public-read-write = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		aws-exec-read = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		authenticated-read = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		bucket-owner-read = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		bucket-owner-full-control = 6,
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3AccessControlPolicy
	{
		
		/// <summary>
		/// <p/>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3AccessControlList AccessControlList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3AccessControlPolicyCannedAccessControlList CannedAccessControlList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum S3AccessControlPolicyCannedAccessControlList
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		@private = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		public-read = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		public-read-write = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		aws-exec-read = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		authenticated-read = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		bucket-owner-read = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		bucket-owner-full-control = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum S3MetadataDirective
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COPY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPLACE = 1,
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3ObjectMetadata
	{
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string CacheControl { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string ContentDisposition { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string ContentEncoding { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string ContentLanguage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3UserMetadata UserMetadata { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> ContentLength { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string ContentMD5 { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string ContentType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> HttpExpiresDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RequesterCharged { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3ObjectMetadataSSEAlgorithm SSEAlgorithm { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum S3ObjectMetadataSSEAlgorithm
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AES256 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KMS = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum S3StorageClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD_IA = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONEZONE_IA = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GLACIER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTELLIGENT_TIERING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEEP_ARCHIVE = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum S3ObjectLockLegalHoldStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OFF = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ON = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum S3ObjectLockMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLIANCE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GOVERNANCE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum S3GlacierJobTier
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BULK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD = 1,
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3Grantee
	{
		
		[System.Runtime.Serialization.DataMember()]
		public S3GranteeTypeIdentifier TypeIdentifier { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string Identifier { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string DisplayName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum S3GranteeTypeIdentifier
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		id = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		emailAddress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		uri = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum S3Permission
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FULL_CONTROL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READ = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WRITE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READ_ACP = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WRITE_ACP = 4,
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3Grant
	{
		
		/// <summary>
		/// <p/>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3Grantee Grantee { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3GrantPermission Permission { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum S3GrantPermission
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FULL_CONTROL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READ = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WRITE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READ_ACP = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WRITE_ACP = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum S3GranteeTypeIdentifier
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		id = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		emailAddress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		uri = 2,
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3ObjectLockLegalHold
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public S3ObjectLockLegalHoldStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum S3ObjectLockLegalHoldStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OFF = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ON = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum S3ObjectLockRetentionMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLIANCE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GOVERNANCE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum S3SSEAlgorithm
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AES256 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KMS = 1,
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3Retention
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> RetainUntilDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3RetentionMode Mode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum S3RetentionMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLIANCE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GOVERNANCE = 1,
	}
	
	public partial class DemoClient
	{
		
		private System.Net.Http.HttpClient client;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public DemoClient(System.Net.Http.HttpClient client, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (client == null)
				throw new ArgumentNullException("Null HttpClient.", "client");

			if (client.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "client");

			this.client = client;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Deletes the specified access point.
		/// DeleteAccessPoint /v20180820/accesspoint/{name}#x-amz-account-id
		/// </summary>
		/// <param name="name">The name of the access point you want to delete.</param>
		/// <returns>Success</returns>
		public async Task DeleteAccessPointAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v20180820/accesspoint/"+ (name==null? "" : Uri.EscapeDataString(name))+"#x-amz-account-id";
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns configuration information about the specified access point.
		/// GetAccessPoint /v20180820/accesspoint/{name}#x-amz-account-id
		/// </summary>
		/// <param name="name">The name of the access point whose configuration information you want to retrieve.</param>
		/// <returns>Success</returns>
		public async Task GetAccessPointAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v20180820/accesspoint/"+ (name==null? "" : Uri.EscapeDataString(name))+"#x-amz-account-id";
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Lists current Amazon S3 Batch Operations jobs and jobs that have ended within the last 30 days for the AWS account making the request. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-basics.html">Amazon S3 Batch Operations</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p> <p>Related actions include:</p> <p/> <ul> <li> <p> <a>CreateJob</a> </p> </li> <li> <p> <a>DescribeJob</a> </p> </li> <li> <p> <a>UpdateJobPriority</a> </p> </li> <li> <p> <a>UpdateJobStatus</a> </p> </li> </ul>
		/// ListJobs /v20180820/jobs#x-amz-account-id
		/// </summary>
		/// <param name="jobStatuses">The <code>List Jobs</code> request returns jobs that match the statuses listed in this element.</param>
		/// <param name="nextToken">A pagination token to request the next page of results. Use the token that Amazon S3 returned in the <code>NextToken</code> element of the <code>ListJobsResult</code> from the previous <code>List Jobs</code> request.</param>
		/// <param name="maxResults">The maximum number of jobs that Amazon S3 will include in the <code>List Jobs</code> response. If there are more jobs than this number, the response will include a pagination token in the <code>NextToken</code> field to enable you to retrieve the next page of results.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task ListJobsAsync(JobStatus[] jobStatuses, string nextToken, int maxResults, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v20180820/jobs#x-amz-account-id?"+String.Join("&", jobStatuses.Select(z => $"jobStatuses={z}"))+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes the access point policy for the specified access point.
		/// DeleteAccessPointPolicy /v20180820/accesspoint/{name}/policy#x-amz-account-id
		/// </summary>
		/// <param name="name">The name of the access point whose policy you want to delete.</param>
		/// <returns>Success</returns>
		public async Task DeleteAccessPointPolicyAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v20180820/accesspoint/"+ (name==null? "" : Uri.EscapeDataString(name))+"/policy#x-amz-account-id";
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns the access point policy associated with the specified access point.
		/// GetAccessPointPolicy /v20180820/accesspoint/{name}/policy#x-amz-account-id
		/// </summary>
		/// <param name="name">The name of the access point whose policy you want to retrieve.</param>
		/// <returns>Success</returns>
		public async Task GetAccessPointPolicyAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v20180820/accesspoint/"+ (name==null? "" : Uri.EscapeDataString(name))+"/policy#x-amz-account-id";
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Removes the entire tag set from the specified Amazon S3 Batch Operations job. To use this operation, you must have permission to perform the <code>s3:DeleteJobTagging</code> action. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-managing-jobs.html#batch-ops-job-tags">Using Job Tags</a> in the Amazon Simple Storage Service Developer Guide.</p> <p/> <p>Related actions include:</p> <ul> <li> <p> <a>CreateJob</a> </p> </li> <li> <p> <a>GetJobTagging</a> </p> </li> <li> <p> <a>PutJobTagging</a> </p> </li> </ul>
		/// DeleteJobTagging /v20180820/jobs/{id}/tagging#x-amz-account-id
		/// </summary>
		/// <param name="id">The ID for the Amazon S3 Batch Operations job whose tags you want to delete.</param>
		/// <returns>Success</returns>
		public async Task DeleteJobTaggingAsync(string id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v20180820/jobs/"+ (id==null? "" : Uri.EscapeDataString(id))+"/tagging#x-amz-account-id";
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns the tags on an Amazon S3 Batch Operations job. To use this operation, you must have permission to perform the <code>s3:GetJobTagging</code> action. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-managing-jobs.html#batch-ops-job-tags">Using Job Tags</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p> <p/> <p>Related actions include:</p> <ul> <li> <p> <a>CreateJob</a> </p> </li> <li> <p> <a>PutJobTagging</a> </p> </li> <li> <p> <a>DeleteJobTagging</a> </p> </li> </ul>
		/// GetJobTagging /v20180820/jobs/{id}/tagging#x-amz-account-id
		/// </summary>
		/// <param name="id">The ID for the Amazon S3 Batch Operations job whose tags you want to retrieve.</param>
		/// <returns>Success</returns>
		public async Task GetJobTaggingAsync(string id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v20180820/jobs/"+ (id==null? "" : Uri.EscapeDataString(id))+"/tagging#x-amz-account-id";
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes the <code>PublicAccessBlock</code> configuration for an Amazon Web Services account.
		/// DeletePublicAccessBlock /v20180820/configuration/publicAccessBlock#x-amz-account-id
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeletePublicAccessBlockAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v20180820/configuration/publicAccessBlock#x-amz-account-id";
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves the <code>PublicAccessBlock</code> configuration for an Amazon Web Services account.
		/// GetPublicAccessBlock /v20180820/configuration/publicAccessBlock#x-amz-account-id
		/// </summary>
		/// <returns>Success</returns>
		public async Task GetPublicAccessBlockAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v20180820/configuration/publicAccessBlock#x-amz-account-id";
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Retrieves the configuration parameters and status for a Batch Operations job. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-basics.html">Amazon S3 Batch Operations</a> in the Amazon Simple Storage Service Developer Guide.</p> <p/> <p>Related actions include:</p> <ul> <li> <p> <a>CreateJob</a> </p> </li> <li> <p> <a>ListJobs</a> </p> </li> <li> <p> <a>UpdateJobPriority</a> </p> </li> <li> <p> <a>UpdateJobStatus</a> </p> </li> </ul>
		/// DescribeJob /v20180820/jobs/{id}#x-amz-account-id
		/// </summary>
		/// <param name="id">The ID for the job whose information you want to retrieve.</param>
		/// <returns>Success</returns>
		public async Task DescribeJobAsync(string id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v20180820/jobs/"+ (id==null? "" : Uri.EscapeDataString(id))+"#x-amz-account-id";
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Indicates whether the specified access point currently has a policy that allows public access. For more information about public access through access points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-points.html">Managing Data Access with Amazon S3 Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.
		/// GetAccessPointPolicyStatus /v20180820/accesspoint/{name}/policyStatus#x-amz-account-id
		/// </summary>
		/// <param name="name">The name of the access point whose policy status you want to retrieve.</param>
		/// <returns>Success</returns>
		public async Task GetAccessPointPolicyStatusAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v20180820/accesspoint/"+ (name==null? "" : Uri.EscapeDataString(name))+"/policyStatus#x-amz-account-id";
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of the access points currently associated with the specified bucket. You can retrieve up to 1000 access points per call. If the specified bucket has more than 1,000 access points (or the number specified in <code>maxResults</code>, whichever is less), the response will include a continuation token that you can use to list the additional access points.
		/// ListAccessPoints /v20180820/accesspoint#x-amz-account-id
		/// </summary>
		/// <param name="bucket">The name of the bucket whose associated access points you want to list.</param>
		/// <param name="nextToken">A continuation token. If a previous call to <code>ListAccessPoints</code> returned a continuation token in the <code>NextToken</code> field, then providing that value here causes Amazon S3 to retrieve the next page of results.</param>
		/// <param name="maxResults">The maximum number of access points that you want to include in the list. If the specified bucket has more than this number of access points, then the response will include a continuation token in the <code>NextToken</code> field that you can use to retrieve the next page of access points.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task ListAccessPointsAsync(string bucket, string nextToken, int maxResults, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v20180820/accesspoint#x-amz-account-id?bucket=" + (bucket==null? "" : Uri.EscapeDataString(bucket))+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates an existing Amazon S3 Batch Operations job's priority. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-basics.html">Amazon S3 Batch Operations</a> in the Amazon Simple Storage Service Developer Guide.</p> <p/> <p>Related actions include:</p> <ul> <li> <p> <a>CreateJob</a> </p> </li> <li> <p> <a>ListJobs</a> </p> </li> <li> <p> <a>DescribeJob</a> </p> </li> <li> <p> <a>UpdateJobStatus</a> </p> </li> </ul>
		/// UpdateJobPriority /v20180820/jobs/{id}/priority#x-amz-account-id&priority
		/// </summary>
		/// <param name="id">The ID for the job whose priority you want to update.</param>
		/// <param name="priority">The priority you want to assign to this job.</param>
		/// <returns>Success</returns>
		public async Task UpdateJobPriorityAsync(string id, int priority, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v20180820/jobs/"+ (id==null? "" : Uri.EscapeDataString(id))+"/priority#x-amz-account-id&priority&priority="+priority;
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates the status for the specified job. Use this operation to confirm that you want to run a job or to cancel an existing job. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-basics.html">Amazon S3 Batch Operations</a> in the Amazon Simple Storage Service Developer Guide.</p> <p/> <p>Related actions include:</p> <ul> <li> <p> <a>CreateJob</a> </p> </li> <li> <p> <a>ListJobs</a> </p> </li> <li> <p> <a>DescribeJob</a> </p> </li> <li> <p> <a>UpdateJobStatus</a> </p> </li> </ul>
		/// UpdateJobStatus /v20180820/jobs/{id}/status#x-amz-account-id&requestedJobStatus
		/// </summary>
		/// <param name="id">The ID of the job whose status you want to update.</param>
		/// <param name="requestedJobStatus">The status that you want to move the specified job to.</param>
		/// <param name="statusUpdateReason">A description of the reason why you want to change the specified job's status. This field can be any string up to the maximum length.</param>
		/// <returns>Success</returns>
		public async Task UpdateJobStatusAsync(string id, string requestedJobStatus, string statusUpdateReason, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v20180820/jobs/"+ (id==null? "" : Uri.EscapeDataString(id))+"/status#x-amz-account-id&requestedJobStatus&requestedJobStatus=" + requestedJobStatus+"&statusUpdateReason=" + (statusUpdateReason==null? "" : Uri.EscapeDataString(statusUpdateReason));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}
