//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace My.Demo.Client
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Net.Http;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// The result of a <code><a>AcceptInboundCrossClusterSearchConnection</a></code> operation. Contains details of accepted inbound connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AcceptInboundCrossClusterSearchConnectionResponse
	{
		
		/// <summary>
		/// Specifies details of an inbound connection.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InboundCrossClusterSearchConnection CrossClusterSearchConnection { get; set; }
	}
	
	/// <summary>
	/// Specifies a key value pair for a resource tag.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Tag
	{
		
		/// <summary>
		/// A string of length from 1 to 128 characters that specifies the key for a Tag. Tag keys must be unique for the Elasticsearch domain to which they are attached.
		/// Max length: 128
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string Key { get; set; }
		
		/// <summary>
		/// A string of length from 0 to 256 characters that specifies the value for a Tag. Tag values can be null and do not have to be unique in a tag set.
		/// Max length: 256
		/// Min length: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=0)]
		public string Value { get; set; }
	}
	
	/// <summary>
	///  Container for response returned by <code> <a>AssociatePackage</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AssociatePackageResponse
	{
		
		/// <summary>
		/// Information on a package that is associated with a domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DomainPackageDetails DomainPackageDetails { get; set; }
	}
	
	/// <summary>
	/// The result of a <code>CancelElasticsearchServiceSoftwareUpdate</code> operation. Contains the status of the update.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CancelElasticsearchServiceSoftwareUpdateResponse
	{
		
		/// <summary>
		/// The current options of an Elasticsearch domain service software options.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ServiceSoftwareOptions ServiceSoftwareOptions { get; set; }
	}
	
	/// <summary>
	/// The result of a <code>CreateElasticsearchDomain</code> operation. Contains the status of the newly created Elasticsearch domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateElasticsearchDomainResponse
	{
		
		/// <summary>
		/// The current status of an Elasticsearch domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchDomainStatus DomainStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ESPartitionInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m3.medium.elasticsearch = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m3.large.elasticsearch = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m3.xlarge.elasticsearch = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m3.2xlarge.elasticsearch = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m4.large.elasticsearch = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m4.xlarge.elasticsearch = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m4.2xlarge.elasticsearch = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m4.4xlarge.elasticsearch = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m4.10xlarge.elasticsearch = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m5.large.elasticsearch = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m5.xlarge.elasticsearch = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m5.2xlarge.elasticsearch = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m5.4xlarge.elasticsearch = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m5.12xlarge.elasticsearch = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r5.large.elasticsearch = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r5.xlarge.elasticsearch = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r5.2xlarge.elasticsearch = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r5.4xlarge.elasticsearch = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r5.12xlarge.elasticsearch = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.large.elasticsearch = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.xlarge.elasticsearch = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.2xlarge.elasticsearch = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.4xlarge.elasticsearch = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.9xlarge.elasticsearch = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.18xlarge.elasticsearch = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ultrawarm1.medium.elasticsearch = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ultrawarm1.large.elasticsearch = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		t2.micro.elasticsearch = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		t2.small.elasticsearch = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		t2.medium.elasticsearch = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r3.large.elasticsearch = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r3.xlarge.elasticsearch = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r3.2xlarge.elasticsearch = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r3.4xlarge.elasticsearch = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r3.8xlarge.elasticsearch = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i2.xlarge.elasticsearch = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i2.2xlarge.elasticsearch = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		d2.xlarge.elasticsearch = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		d2.2xlarge.elasticsearch = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		d2.4xlarge.elasticsearch = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		d2.8xlarge.elasticsearch = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c4.large.elasticsearch = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c4.xlarge.elasticsearch = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c4.2xlarge.elasticsearch = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c4.4xlarge.elasticsearch = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c4.8xlarge.elasticsearch = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.large.elasticsearch = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.xlarge.elasticsearch = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.2xlarge.elasticsearch = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.4xlarge.elasticsearch = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.8xlarge.elasticsearch = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.16xlarge.elasticsearch = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.large.elasticsearch = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.xlarge.elasticsearch = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.2xlarge.elasticsearch = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.4xlarge.elasticsearch = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.8xlarge.elasticsearch = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.16xlarge.elasticsearch = 57,
	}
	
	/// <summary>
	/// Specifies the zone awareness configuration for the domain cluster, such as the number of availability zones.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ZoneAwarenessConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AvailabilityZoneCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ESWarmPartitionInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ultrawarm1.medium.elasticsearch = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ultrawarm1.large.elasticsearch = 1,
	}
	
	/// <summary>
	///  The type of EBS volume, standard, gp2, or io1. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs" target="_blank">Configuring EBS-based Storage</a>for more information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum VolumeType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		standard = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		gp2 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		io1 = 2,
	}
	
	/// <summary>
	/// Log Publishing option that is set for given domain. <br/>Attributes and their details: <ul> <li>CloudWatchLogsLogGroupArn: ARN of the Cloudwatch log group to which log needs to be published.</li> <li>Enabled: Whether the log publishing for given log type is enabled or not</li> </ul> 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class LogPublishingOption
	{
		
		/// <summary>
		/// ARN of the Cloudwatch log group to which log needs to be published.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CloudWatchLogsLogGroupArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TLSSecurityPolicy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Policy-Min-TLS-1-0-2019-07 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Policy-Min-TLS-1-2-2019-07 = 1,
	}
	
	/// <summary>
	/// Credentials for the master user: username and password, ARN, or both.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class MasterUserOptions
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the Elasticsearch domain. See <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access Management</i> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserARN { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string MasterUserName { get; set; }
		
		/// <summary>
		/// Min length: 8
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=8)]
		public string MasterUserPassword { get; set; }
	}
	
	/// <summary>
	/// The result of a <code><a>CreateOutboundCrossClusterSearchConnection</a></code> request. Contains the details of the newly created cross-cluster search connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateOutboundCrossClusterSearchConnectionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainInformation SourceDomainInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainInformation DestinationDomainInfo { get; set; }
		
		/// <summary>
		/// Max length: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(20)]
		public string ConnectionAlias { get; set; }
		
		/// <summary>
		/// Specifies the connection status of an outbound cross-cluster search connection.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OutboundCrossClusterSearchConnectionStatus ConnectionStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CrossClusterSearchConnectionId { get; set; }
	}
	
	/// <summary>
	///  Container for response returned by <code> <a>CreatePackage</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreatePackageResponse
	{
		
		/// <summary>
		/// Basic information about a package.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PackageDetails PackageDetails { get; set; }
	}
	
	/// <summary>
	/// The result of a <code>DeleteElasticsearchDomain</code> request. Contains the status of the pending deletion, or no status if the domain and all of its resources have been deleted.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteElasticsearchDomainResponse
	{
		
		/// <summary>
		/// The current status of an Elasticsearch domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchDomainStatus DomainStatus { get; set; }
	}
	
	/// <summary>
	/// The result of a <code><a>DeleteInboundCrossClusterSearchConnection</a></code> operation. Contains details of deleted inbound connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteInboundCrossClusterSearchConnectionResponse
	{
		
		/// <summary>
		/// Specifies details of an inbound connection.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InboundCrossClusterSearchConnection CrossClusterSearchConnection { get; set; }
	}
	
	/// <summary>
	/// The result of a <code><a>DeleteOutboundCrossClusterSearchConnection</a></code> operation. Contains details of deleted outbound connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteOutboundCrossClusterSearchConnectionResponse
	{
		
		/// <summary>
		/// Specifies details of an outbound connection.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OutboundCrossClusterSearchConnection CrossClusterSearchConnection { get; set; }
	}
	
	/// <summary>
	///  Container for response parameters to <code> <a>DeletePackage</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeletePackageResponse
	{
		
		/// <summary>
		/// Basic information about a package.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PackageDetails PackageDetails { get; set; }
	}
	
	/// <summary>
	/// The result of a <code>DescribeElasticsearchDomain</code> request. Contains the status of the domain specified in the request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeElasticsearchDomainResponse
	{
		
		/// <summary>
		/// The current status of an Elasticsearch domain.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchDomainStatus DomainStatus { get; set; }
	}
	
	/// <summary>
	/// The result of a <code>DescribeElasticsearchDomainConfig</code> request. Contains the configuration information of the requested domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeElasticsearchDomainConfigResponse
	{
		
		/// <summary>
		/// The configuration of an Elasticsearch domain.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchDomainConfig DomainConfig { get; set; }
	}
	
	/// <summary>
	/// The result of a <code>DescribeElasticsearchDomains</code> request. Contains the status of the specified domains or all domains owned by the account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeElasticsearchDomainsResponse
	{
		
		/// <summary>
		/// A list that contains the status of each requested Elasticsearch domain.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchDomainStatus[] DomainStatusList { get; set; }
	}
	
	/// <summary>
	///  Container for the parameters received from <code> <a>DescribeElasticsearchInstanceTypeLimits</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeElasticsearchInstanceTypeLimitsResponse
	{
		
		/// <summary>
		///  Map of Role of the Instance and Limits that are applicable. Role performed by given Instance in Elasticsearch can be one of the following: <ul> <li>data: If the given InstanceType is used as data node</li> <li>master: If the given InstanceType is used as master node</li> <li>ultra_warm: If the given InstanceType is used as warm node</li> </ul> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LimitsByRole LimitsByRole { get; set; }
	}
	
	/// <summary>
	/// The result of a <code><a>DescribeInboundCrossClusterSearchConnections</a></code> request. Contains the list of connections matching the filter criteria.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeInboundCrossClusterSearchConnectionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InboundCrossClusterSearchConnection[] CrossClusterSearchConnections { get; set; }
		
		/// <summary>
		///  Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  A filter used to limit results when describing inbound or outbound cross-cluster search connections. Multiple values can be specified per filter. A cross-cluster search connection must match at least one of the specified values for it to be returned from an operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Filter
	{
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public NonEmptyString[] Values { get; set; }
	}
	
	/// <summary>
	/// The result of a <code><a>DescribeOutboundCrossClusterSearchConnections</a></code> request. Contains the list of connections matching the filter criteria.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeOutboundCrossClusterSearchConnectionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public OutboundCrossClusterSearchConnection[] CrossClusterSearchConnections { get; set; }
		
		/// <summary>
		///  Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  Container for response returned by <code> <a>DescribePackages</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribePackagesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PackageDetails[] PackageDetailsList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Filter to apply in <code>DescribePackage</code> response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribePackagesFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DescribePackagesFilterName Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribePackagesFilterValue[] Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribePackagesFilterName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PackageID = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PackageName = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PackageStatus = 2,
	}
	
	/// <summary>
	/// Container for results from <code>DescribeReservedElasticsearchInstanceOfferings</code>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeReservedElasticsearchInstanceOfferingsResponse
	{
		
		/// <summary>
		///  Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReservedElasticsearchInstanceOffering[] ReservedElasticsearchInstanceOfferings { get; set; }
	}
	
	/// <summary>
	/// Container for results from <code>DescribeReservedElasticsearchInstances</code>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeReservedElasticsearchInstancesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReservedElasticsearchInstance[] ReservedElasticsearchInstances { get; set; }
	}
	
	/// <summary>
	///  Container for response returned by <code> <a>DissociatePackage</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DissociatePackageResponse
	{
		
		/// <summary>
		/// Information on a package that is associated with a domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DomainPackageDetails DomainPackageDetails { get; set; }
	}
	
	/// <summary>
	///  Container for response returned by <code> <a>GetCompatibleElasticsearchVersions</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetCompatibleElasticsearchVersionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CompatibleVersionsMap[] CompatibleElasticsearchVersions { get; set; }
	}
	
	/// <summary>
	///  Container for response returned by <code> <a>GetUpgradeHistory</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetUpgradeHistoryResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UpgradeHistory[] UpgradeHistories { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  Container for response returned by <code> <a>GetUpgradeStatus</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetUpgradeStatusResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public GetUpgradeStatusResponseUpgradeStep UpgradeStep { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GetUpgradeStatusResponseStepStatus StepStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UpgradeName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GetUpgradeStatusResponseUpgradeStep
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRE_UPGRADE_CHECK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SNAPSHOT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPGRADE = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GetUpgradeStatusResponseStepStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED_WITH_ISSUES = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
	}
	
	/// <summary>
	/// The result of a <code>ListDomainNames</code> operation. Contains the names of all Elasticsearch domains owned by this account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListDomainNamesResponse
	{
		
		/// <summary>
		///  Contains the list of Elasticsearch domain information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DomainInfo[] DomainNames { get; set; }
	}
	
	/// <summary>
	///  Container for response parameters to <code> <a>ListDomainsForPackage</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListDomainsForPackageResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainPackageDetails[] DomainPackageDetailsList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  Container for the parameters returned by <code> <a>ListElasticsearchInstanceTypes</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListElasticsearchInstanceTypesResponse
	{
		
		/// <summary>
		///  List of instance types supported by Amazon Elasticsearch service. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ESPartitionInstanceType[] ElasticsearchInstanceTypes { get; set; }
		
		/// <summary>
		///  Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  Container for the parameters for response received from <code> <a>ListElasticsearchVersions</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListElasticsearchVersionsResponse
	{
		
		/// <summary>
		/// List of supported elastic search versions. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchVersionString[] ElasticsearchVersions { get; set; }
		
		/// <summary>
		///  Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  Container for response parameters to <code> <a>ListPackagesForDomain</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListPackagesForDomainResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainPackageDetails[] DomainPackageDetailsList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The result of a <code>ListTags</code> operation. Contains tags for all requested Elasticsearch domains.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTagsResponse
	{
		
		/// <summary>
		/// A list of <code>Tag</code> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] TagList { get; set; }
	}
	
	/// <summary>
	/// Represents the output of a <code>PurchaseReservedElasticsearchInstanceOffering</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PurchaseReservedElasticsearchInstanceOfferingResponse
	{
		
		/// <summary>
		/// Pattern: \p{XDigit}{8}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{12}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ReservedElasticsearchInstanceId { get; set; }
		
		/// <summary>
		/// Max length: 64
		/// Min length: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=5)]
		public string ReservationName { get; set; }
	}
	
	/// <summary>
	/// The result of a <code><a>RejectInboundCrossClusterSearchConnection</a></code> operation. Contains details of rejected inbound connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RejectInboundCrossClusterSearchConnectionResponse
	{
		
		/// <summary>
		/// Specifies details of an inbound connection.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InboundCrossClusterSearchConnection CrossClusterSearchConnection { get; set; }
	}
	
	/// <summary>
	/// The result of a <code>StartElasticsearchServiceSoftwareUpdate</code> operation. Contains the status of the update.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartElasticsearchServiceSoftwareUpdateResponse
	{
		
		/// <summary>
		/// The current options of an Elasticsearch domain service software options.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ServiceSoftwareOptions ServiceSoftwareOptions { get; set; }
	}
	
	/// <summary>
	/// The result of an <code>UpdateElasticsearchDomain</code> request. Contains the status of the Elasticsearch domain being updated.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateElasticsearchDomainConfigResponse
	{
		
		/// <summary>
		/// The configuration of an Elasticsearch domain.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchDomainConfig DomainConfig { get; set; }
	}
	
	/// <summary>
	///  Container for response returned by <code> <a>UpgradeElasticsearchDomain</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpgradeElasticsearchDomainResponse
	{
		
		/// <summary>
		/// The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Max length: 28
		/// Min length: 3
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(28, MinimumLength=3)]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PerformCheckOnly { get; set; }
	}
	
	/// <summary>
	/// Specifies details of an inbound connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InboundCrossClusterSearchConnection
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainInformation SourceDomainInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainInformation DestinationDomainInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CrossClusterSearchConnectionId { get; set; }
		
		/// <summary>
		/// Specifies the coonection status of an inbound cross-cluster search connection.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InboundCrossClusterSearchConnectionStatus ConnectionStatus { get; set; }
	}
	
	/// <summary>
	/// Provides the current status of the entity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class OptionStatus
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationDate { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdateDate { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> UpdateVersion { get; set; }
		
		/// <summary>
		/// <p>The state of a requested change. One of the following:</p> <ul> <li>Processing: The request change is still in-process.</li> <li>Active: The request change is processed and deployed to the Elasticsearch domain.</li> </ul>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatusState State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PendingDeletion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum OptionStatusState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RequiresIndexDocuments = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Processing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 2,
	}
	
	/// <summary>
	/// The configured access rules for the domain's document and search endpoints, and the current status of those rules.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AccessPoliciesStatus
	{
		
		/// <summary>
		/// Access policy rules for an Elasticsearch domain service endpoints. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-access-policies" target="_blank">Configuring Access Policies</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>. The maximum size of a policy document is 100 KB.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Options { get; set; }
		
		/// <summary>
		/// Provides the current status of the entity.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>AddTags</a></code> operation. Specify the tags that you want to attach to the Elasticsearch domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AddTagsRequest
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the Elasticsearch domain. See <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access Management</i> for more information.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ARN { get; set; }
		
		/// <summary>
		/// A list of <code>Tag</code> 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Tag[] TagList { get; set; }
	}
	
	/// <summary>
	///  List of limits that are specific to a given InstanceType and for each of it's <code> <a>InstanceRole</a> </code> . 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AdditionalLimit
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LimitName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LimitValue[] LimitValues { get; set; }
	}
	
	/// <summary>
	/// <p> Status of the advanced options for the specified Elasticsearch domain. Currently, the following advanced options are available:</p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options" target="_blank">Configuration Advanced Options</a> for more information.</li> <li>Option to specify the percentage of heap space that is allocated to field data. By default, this setting is unbounded.</li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options">Configuring Advanced Options</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AdvancedOptionsStatus
	{
		
		/// <summary>
		/// <p> Exposes select native Elasticsearch configuration values from <code>elasticsearch.yml</code>. Currently, the following advanced options are available:</p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options" target="_blank">Configuration Advanced Options</a> for more information.</li> <li>Option to specify the percentage of heap space that is allocated to field data. By default, this setting is unbounded.</li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options">Configuring Advanced Options</a>.</p>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AdvancedOptions Options { get; set; }
		
		/// <summary>
		/// Provides the current status of the entity.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// Specifies the advanced security configuration: whether advanced security is enabled, whether the internal database option is enabled.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AdvancedSecurityOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> InternalUserDatabaseEnabled { get; set; }
	}
	
	/// <summary>
	/// Specifies the advanced security configuration: whether advanced security is enabled, whether the internal database option is enabled, master username and password (if internal database is enabled), and master user ARN (if IAM is enabled).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AdvancedSecurityOptionsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> InternalUserDatabaseEnabled { get; set; }
		
		/// <summary>
		/// Credentials for the master user: username and password, ARN, or both.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public MasterUserOptions MasterUserOptions { get; set; }
	}
	
	/// <summary>
	///  Specifies the status of advanced security options for the specified Elasticsearch domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AdvancedSecurityOptionsStatus
	{
		
		/// <summary>
		/// Specifies the advanced security configuration: whether advanced security is enabled, whether the internal database option is enabled.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AdvancedSecurityOptions Options { get; set; }
		
		/// <summary>
		/// Provides the current status of the entity.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// Information on a package that is associated with a domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DomainPackageDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PackageID { get; set; }
		
		/// <summary>
		/// Max length: 28
		/// Min length: 3
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(28, MinimumLength=3)]
		public string PackageName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainPackageDetailsPackageType PackageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdated { get; set; }
		
		/// <summary>
		/// The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Max length: 28
		/// Min length: 3
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(28, MinimumLength=3)]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainPackageDetailsDomainPackageStatus DomainPackageStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReferencePath { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ErrorDetails ErrorDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DomainPackageDetailsPackageType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TXT-DICTIONARY = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DomainPackageDetailsDomainPackageStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASSOCIATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASSOCIATION_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISSOCIATING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISSOCIATION_FAILED = 4,
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>CancelElasticsearchServiceSoftwareUpdate</a></code> operation. Specifies the name of the Elasticsearch domain that you wish to cancel a service software update on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CancelElasticsearchServiceSoftwareUpdateRequest
	{
		
		/// <summary>
		/// The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Max length: 28
		/// Min length: 3
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(28, MinimumLength=3)]
		public string DomainName { get; set; }
	}
	
	/// <summary>
	/// The current options of an Elasticsearch domain service software options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ServiceSoftwareOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrentVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NewVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UpdateAvailable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Cancellable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceSoftwareOptionsUpdateStatus UpdateStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> AutomatedUpdateDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> OptionalDeployment { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ServiceSoftwareOptionsUpdateStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_UPDATE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_ELIGIBLE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ELIGIBLE = 4,
	}
	
	/// <summary>
	/// Options to specify the Cognito user and identity pools for Kibana authentication. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html" target="_blank">Amazon Cognito Authentication for Kibana</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CognitoOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// Max length: 55
		/// Min length: 1
		/// Pattern: [\w-]+_[0-9a-zA-Z]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(55, MinimumLength=1)]
		public string UserPoolId { get; set; }
		
		/// <summary>
		/// Max length: 55
		/// Min length: 1
		/// Pattern: [\w-]+:[0-9a-f-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(55, MinimumLength=1)]
		public string IdentityPoolId { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string RoleArn { get; set; }
	}
	
	/// <summary>
	/// Status of the Cognito options for the specified Elasticsearch domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CognitoOptionsStatus
	{
		
		/// <summary>
		/// Options to specify the Cognito user and identity pools for Kibana authentication. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html" target="_blank">Amazon Cognito Authentication for Kibana</a>.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CognitoOptions Options { get; set; }
		
		/// <summary>
		/// Provides the current status of the entity.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	///  A map from an <code> <a>ElasticsearchVersion</a> </code> to a list of compatible <code> <a>ElasticsearchVersion</a> </code> s to which the domain can be upgraded. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CompatibleVersionsMap
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceVersion { get; set; }
		
		/// <summary>
		/// List of supported elastic search versions. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchVersionString[] TargetVersions { get; set; }
	}
	
	/// <summary>
	/// Specifies the configuration for the domain cluster, such as the type and number of instances.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ElasticsearchClusterConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchClusterConfigInstanceType InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InstanceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DedicatedMasterEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ZoneAwarenessEnabled { get; set; }
		
		/// <summary>
		/// Specifies the zone awareness configuration for the domain cluster, such as the number of availability zones.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ZoneAwarenessConfig ZoneAwarenessConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchClusterConfigDedicatedMasterType DedicatedMasterType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DedicatedMasterCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> WarmEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchClusterConfigWarmType WarmType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> WarmCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ElasticsearchClusterConfigInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m3.medium.elasticsearch = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m3.large.elasticsearch = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m3.xlarge.elasticsearch = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m3.2xlarge.elasticsearch = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m4.large.elasticsearch = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m4.xlarge.elasticsearch = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m4.2xlarge.elasticsearch = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m4.4xlarge.elasticsearch = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m4.10xlarge.elasticsearch = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m5.large.elasticsearch = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m5.xlarge.elasticsearch = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m5.2xlarge.elasticsearch = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m5.4xlarge.elasticsearch = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m5.12xlarge.elasticsearch = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r5.large.elasticsearch = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r5.xlarge.elasticsearch = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r5.2xlarge.elasticsearch = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r5.4xlarge.elasticsearch = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r5.12xlarge.elasticsearch = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.large.elasticsearch = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.xlarge.elasticsearch = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.2xlarge.elasticsearch = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.4xlarge.elasticsearch = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.9xlarge.elasticsearch = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.18xlarge.elasticsearch = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ultrawarm1.medium.elasticsearch = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ultrawarm1.large.elasticsearch = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		t2.micro.elasticsearch = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		t2.small.elasticsearch = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		t2.medium.elasticsearch = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r3.large.elasticsearch = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r3.xlarge.elasticsearch = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r3.2xlarge.elasticsearch = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r3.4xlarge.elasticsearch = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r3.8xlarge.elasticsearch = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i2.xlarge.elasticsearch = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i2.2xlarge.elasticsearch = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		d2.xlarge.elasticsearch = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		d2.2xlarge.elasticsearch = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		d2.4xlarge.elasticsearch = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		d2.8xlarge.elasticsearch = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c4.large.elasticsearch = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c4.xlarge.elasticsearch = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c4.2xlarge.elasticsearch = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c4.4xlarge.elasticsearch = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c4.8xlarge.elasticsearch = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.large.elasticsearch = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.xlarge.elasticsearch = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.2xlarge.elasticsearch = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.4xlarge.elasticsearch = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.8xlarge.elasticsearch = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.16xlarge.elasticsearch = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.large.elasticsearch = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.xlarge.elasticsearch = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.2xlarge.elasticsearch = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.4xlarge.elasticsearch = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.8xlarge.elasticsearch = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.16xlarge.elasticsearch = 57,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ElasticsearchClusterConfigDedicatedMasterType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m3.medium.elasticsearch = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m3.large.elasticsearch = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m3.xlarge.elasticsearch = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m3.2xlarge.elasticsearch = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m4.large.elasticsearch = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m4.xlarge.elasticsearch = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m4.2xlarge.elasticsearch = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m4.4xlarge.elasticsearch = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m4.10xlarge.elasticsearch = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m5.large.elasticsearch = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m5.xlarge.elasticsearch = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m5.2xlarge.elasticsearch = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m5.4xlarge.elasticsearch = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m5.12xlarge.elasticsearch = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r5.large.elasticsearch = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r5.xlarge.elasticsearch = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r5.2xlarge.elasticsearch = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r5.4xlarge.elasticsearch = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r5.12xlarge.elasticsearch = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.large.elasticsearch = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.xlarge.elasticsearch = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.2xlarge.elasticsearch = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.4xlarge.elasticsearch = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.9xlarge.elasticsearch = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.18xlarge.elasticsearch = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ultrawarm1.medium.elasticsearch = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ultrawarm1.large.elasticsearch = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		t2.micro.elasticsearch = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		t2.small.elasticsearch = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		t2.medium.elasticsearch = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r3.large.elasticsearch = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r3.xlarge.elasticsearch = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r3.2xlarge.elasticsearch = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r3.4xlarge.elasticsearch = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r3.8xlarge.elasticsearch = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i2.xlarge.elasticsearch = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i2.2xlarge.elasticsearch = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		d2.xlarge.elasticsearch = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		d2.2xlarge.elasticsearch = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		d2.4xlarge.elasticsearch = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		d2.8xlarge.elasticsearch = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c4.large.elasticsearch = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c4.xlarge.elasticsearch = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c4.2xlarge.elasticsearch = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c4.4xlarge.elasticsearch = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c4.8xlarge.elasticsearch = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.large.elasticsearch = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.xlarge.elasticsearch = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.2xlarge.elasticsearch = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.4xlarge.elasticsearch = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.8xlarge.elasticsearch = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.16xlarge.elasticsearch = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.large.elasticsearch = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.xlarge.elasticsearch = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.2xlarge.elasticsearch = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.4xlarge.elasticsearch = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.8xlarge.elasticsearch = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.16xlarge.elasticsearch = 57,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ElasticsearchClusterConfigWarmType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ultrawarm1.medium.elasticsearch = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ultrawarm1.large.elasticsearch = 1,
	}
	
	/// <summary>
	/// Options to enable, disable, and specify the properties of EBS storage volumes. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs" target="_blank"> Configuring EBS-based Storage</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EBSOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EBSEnabled { get; set; }
		
		/// <summary>
		///  The type of EBS volume, standard, gp2, or io1. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs" target="_blank">Configuring EBS-based Storage</a>for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EBSOptionsVolumeType VolumeType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> VolumeSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EBSOptionsVolumeType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		standard = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		gp2 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		io1 = 2,
	}
	
	/// <summary>
	/// Specifies the time, in UTC format, when the service takes a daily automated snapshot of the specified Elasticsearch domain. Default value is <code>0</code> hours.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SnapshotOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AutomatedSnapshotStartHour { get; set; }
	}
	
	/// <summary>
	/// Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html" target="_blank"> VPC Endpoints for Amazon Elasticsearch Service Domains</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class VPCOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public String[] SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] SecurityGroupIds { get; set; }
	}
	
	/// <summary>
	/// Specifies the Encryption At Rest Options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EncryptionAtRestOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// Max length: 500
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(500, MinimumLength=1)]
		public string KmsKeyId { get; set; }
	}
	
	/// <summary>
	/// Specifies the node-to-node encryption options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class NodeToNodeEncryptionOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	/// <summary>
	/// Options to configure endpoint for the Elasticsearch domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DomainEndpointOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnforceHTTPS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainEndpointOptionsTLSSecurityPolicy TLSSecurityPolicy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DomainEndpointOptionsTLSSecurityPolicy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Policy-Min-TLS-1-0-2019-07 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Policy-Min-TLS-1-2-2019-07 = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateElasticsearchDomainRequest
	{
		
		/// <summary>
		/// The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Max length: 28
		/// Min length: 3
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(28, MinimumLength=3)]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ElasticsearchVersion { get; set; }
		
		/// <summary>
		/// Specifies the configuration for the domain cluster, such as the type and number of instances.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchClusterConfig ElasticsearchClusterConfig { get; set; }
		
		/// <summary>
		/// Options to enable, disable, and specify the properties of EBS storage volumes. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs" target="_blank"> Configuring EBS-based Storage</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EBSOptions EBSOptions { get; set; }
		
		/// <summary>
		/// Access policy rules for an Elasticsearch domain service endpoints. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-access-policies" target="_blank">Configuring Access Policies</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>. The maximum size of a policy document is 100 KB.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AccessPolicies { get; set; }
		
		/// <summary>
		/// Specifies the time, in UTC format, when the service takes a daily automated snapshot of the specified Elasticsearch domain. Default value is <code>0</code> hours.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SnapshotOptions SnapshotOptions { get; set; }
		
		/// <summary>
		/// Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html" target="_blank"> VPC Endpoints for Amazon Elasticsearch Service Domains</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VPCOptions VPCOptions { get; set; }
		
		/// <summary>
		/// Options to specify the Cognito user and identity pools for Kibana authentication. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html" target="_blank">Amazon Cognito Authentication for Kibana</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CognitoOptions CognitoOptions { get; set; }
		
		/// <summary>
		/// Specifies the Encryption At Rest Options.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EncryptionAtRestOptions EncryptionAtRestOptions { get; set; }
		
		/// <summary>
		/// Specifies the node-to-node encryption options.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public NodeToNodeEncryptionOptions NodeToNodeEncryptionOptions { get; set; }
		
		/// <summary>
		/// <p> Exposes select native Elasticsearch configuration values from <code>elasticsearch.yml</code>. Currently, the following advanced options are available:</p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options" target="_blank">Configuration Advanced Options</a> for more information.</li> <li>Option to specify the percentage of heap space that is allocated to field data. By default, this setting is unbounded.</li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options">Configuring Advanced Options</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AdvancedOptions AdvancedOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LogPublishingOptions LogPublishingOptions { get; set; }
		
		/// <summary>
		/// Options to configure endpoint for the Elasticsearch domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DomainEndpointOptions DomainEndpointOptions { get; set; }
		
		/// <summary>
		/// Specifies the advanced security configuration: whether advanced security is enabled, whether the internal database option is enabled, master username and password (if internal database is enabled), and master user ARN (if IAM is enabled).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AdvancedSecurityOptionsInput AdvancedSecurityOptions { get; set; }
	}
	
	/// <summary>
	/// The current status of an Elasticsearch domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ElasticsearchDomainStatus
	{
		
		/// <summary>
		/// Unique identifier for an Elasticsearch domain.
		/// Max length: 64
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string DomainId { get; set; }
		
		/// <summary>
		/// The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Max length: 28
		/// Min length: 3
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(28, MinimumLength=3)]
		public string DomainName { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the Elasticsearch domain. See <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access Management</i> for more information.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Created { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Deleted { get; set; }
		
		/// <summary>
		/// The endpoint to which service requests are submitted. For example, <code>search-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.es.amazonaws.com</code> or <code>doc-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.es.amazonaws.com</code>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Endpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EndpointsMap Endpoints { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Processing { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UpgradeProcessing { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ElasticsearchVersion { get; set; }
		
		/// <summary>
		/// Specifies the configuration for the domain cluster, such as the type and number of instances.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchClusterConfig ElasticsearchClusterConfig { get; set; }
		
		/// <summary>
		/// Options to enable, disable, and specify the properties of EBS storage volumes. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs" target="_blank"> Configuring EBS-based Storage</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EBSOptions EBSOptions { get; set; }
		
		/// <summary>
		/// Access policy rules for an Elasticsearch domain service endpoints. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-access-policies" target="_blank">Configuring Access Policies</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>. The maximum size of a policy document is 100 KB.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AccessPolicies { get; set; }
		
		/// <summary>
		/// Specifies the time, in UTC format, when the service takes a daily automated snapshot of the specified Elasticsearch domain. Default value is <code>0</code> hours.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SnapshotOptions SnapshotOptions { get; set; }
		
		/// <summary>
		/// Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html" target="_blank"> VPC Endpoints for Amazon Elasticsearch Service Domains</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VPCDerivedInfo VPCOptions { get; set; }
		
		/// <summary>
		/// Options to specify the Cognito user and identity pools for Kibana authentication. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html" target="_blank">Amazon Cognito Authentication for Kibana</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CognitoOptions CognitoOptions { get; set; }
		
		/// <summary>
		/// Specifies the Encryption At Rest Options.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EncryptionAtRestOptions EncryptionAtRestOptions { get; set; }
		
		/// <summary>
		/// Specifies the node-to-node encryption options.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public NodeToNodeEncryptionOptions NodeToNodeEncryptionOptions { get; set; }
		
		/// <summary>
		/// <p> Exposes select native Elasticsearch configuration values from <code>elasticsearch.yml</code>. Currently, the following advanced options are available:</p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options" target="_blank">Configuration Advanced Options</a> for more information.</li> <li>Option to specify the percentage of heap space that is allocated to field data. By default, this setting is unbounded.</li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options">Configuring Advanced Options</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AdvancedOptions AdvancedOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LogPublishingOptions LogPublishingOptions { get; set; }
		
		/// <summary>
		/// The current options of an Elasticsearch domain service software options.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ServiceSoftwareOptions ServiceSoftwareOptions { get; set; }
		
		/// <summary>
		/// Options to configure endpoint for the Elasticsearch domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DomainEndpointOptions DomainEndpointOptions { get; set; }
		
		/// <summary>
		/// Specifies the advanced security configuration: whether advanced security is enabled, whether the internal database option is enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AdvancedSecurityOptions AdvancedSecurityOptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DomainInformation
	{
		
		/// <summary>
		/// Max length: 12
		/// Min length: 12
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(12, MinimumLength=12)]
		public string OwnerId { get; set; }
		
		/// <summary>
		/// The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Max length: 28
		/// Min length: 3
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(28, MinimumLength=3)]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>CreateOutboundCrossClusterSearchConnection</a></code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateOutboundCrossClusterSearchConnectionRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DomainInformation SourceDomainInfo { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DomainInformation DestinationDomainInfo { get; set; }
		
		/// <summary>
		/// Max length: 20
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(20)]
		public string ConnectionAlias { get; set; }
	}
	
	/// <summary>
	/// Specifies the connection status of an outbound cross-cluster search connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class OutboundCrossClusterSearchConnectionStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public OutboundCrossClusterSearchConnectionStatusStatusCode StatusCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum OutboundCrossClusterSearchConnectionStatusStatusCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_ACCEPTANCE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALIDATING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALIDATION_FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROVISIONING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECTED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 7,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum PackageType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TXT-DICTIONARY = 0,
	}
	
	/// <summary>
	/// The S3 location for importing the package specified as <code>S3BucketName</code> and <code>S3Key</code>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PackageSource
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 3
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=3)]
		public string S3BucketName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Key { get; set; }
	}
	
	/// <summary>
	///  Container for request parameters to <code> <a>CreatePackage</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreatePackageRequest
	{
		
		/// <summary>
		/// Max length: 28
		/// Min length: 3
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(28, MinimumLength=3)]
		public string PackageName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreatePackageRequestPackageType PackageType { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string PackageDescription { get; set; }
		
		/// <summary>
		/// The S3 location for importing the package specified as <code>S3BucketName</code> and <code>S3Key</code>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PackageSource PackageSource { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreatePackageRequestPackageType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TXT-DICTIONARY = 0,
	}
	
	/// <summary>
	/// Basic information about a package.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PackageDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PackageID { get; set; }
		
		/// <summary>
		/// Max length: 28
		/// Min length: 3
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(28, MinimumLength=3)]
		public string PackageName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PackageDetailsPackageType PackageType { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string PackageDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PackageDetailsPackageStatus PackageStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ErrorDetails ErrorDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum PackageDetailsPackageType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TXT-DICTIONARY = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum PackageDetailsPackageStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COPYING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COPY_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALIDATING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALIDATION_FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_FAILED = 7,
	}
	
	/// <summary>
	/// Specifies details of an outbound connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class OutboundCrossClusterSearchConnection
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainInformation SourceDomainInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainInformation DestinationDomainInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CrossClusterSearchConnectionId { get; set; }
		
		/// <summary>
		/// Max length: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(20)]
		public string ConnectionAlias { get; set; }
		
		/// <summary>
		/// Specifies the connection status of an outbound cross-cluster search connection.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OutboundCrossClusterSearchConnectionStatus ConnectionStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DeploymentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_UPDATE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_ELIGIBLE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ELIGIBLE = 4,
	}
	
	/// <summary>
	/// The configuration of an Elasticsearch domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ElasticsearchDomainConfig
	{
		
		/// <summary>
		///  Status of the Elasticsearch version options for the specified Elasticsearch domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchVersionStatus ElasticsearchVersion { get; set; }
		
		/// <summary>
		///  Specifies the configuration status for the specified Elasticsearch domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchClusterConfigStatus ElasticsearchClusterConfig { get; set; }
		
		/// <summary>
		///  Status of the EBS options for the specified Elasticsearch domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EBSOptionsStatus EBSOptions { get; set; }
		
		/// <summary>
		/// The configured access rules for the domain's document and search endpoints, and the current status of those rules.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AccessPoliciesStatus AccessPolicies { get; set; }
		
		/// <summary>
		/// Status of a daily automated snapshot.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SnapshotOptionsStatus SnapshotOptions { get; set; }
		
		/// <summary>
		///  Status of the VPC options for the specified Elasticsearch domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VPCDerivedInfoStatus VPCOptions { get; set; }
		
		/// <summary>
		/// Status of the Cognito options for the specified Elasticsearch domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CognitoOptionsStatus CognitoOptions { get; set; }
		
		/// <summary>
		///  Status of the Encryption At Rest options for the specified Elasticsearch domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EncryptionAtRestOptionsStatus EncryptionAtRestOptions { get; set; }
		
		/// <summary>
		/// Status of the node-to-node encryption options for the specified Elasticsearch domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public NodeToNodeEncryptionOptionsStatus NodeToNodeEncryptionOptions { get; set; }
		
		/// <summary>
		/// <p> Status of the advanced options for the specified Elasticsearch domain. Currently, the following advanced options are available:</p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options" target="_blank">Configuration Advanced Options</a> for more information.</li> <li>Option to specify the percentage of heap space that is allocated to field data. By default, this setting is unbounded.</li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options">Configuring Advanced Options</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AdvancedOptionsStatus AdvancedOptions { get; set; }
		
		/// <summary>
		/// The configured log publishing options for the domain and their current status.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LogPublishingOptionsStatus LogPublishingOptions { get; set; }
		
		/// <summary>
		/// The configured endpoint options for the domain and their current status.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DomainEndpointOptionsStatus DomainEndpointOptions { get; set; }
		
		/// <summary>
		///  Specifies the status of advanced security options for the specified Elasticsearch domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AdvancedSecurityOptionsStatus AdvancedSecurityOptions { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>DescribeElasticsearchDomains</a></code> operation. By default, the API returns the status of all Elasticsearch domains.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeElasticsearchDomainsRequest
	{
		
		/// <summary>
		/// A list of Elasticsearch domain names.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DomainName[] DomainNames { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>DescribeInboundCrossClusterSearchConnections</a></code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeInboundCrossClusterSearchConnectionsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		/// <summary>
		///  Set this value to limit the number of results returned. 
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(System.Int32.MinValue, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		///  Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>DescribeOutboundCrossClusterSearchConnections</a></code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeOutboundCrossClusterSearchConnectionsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		/// <summary>
		///  Set this value to limit the number of results returned. 
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(System.Int32.MinValue, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		///  Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribePackagesFilterName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PackageID = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PackageName = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PackageStatus = 2,
	}
	
	/// <summary>
	///  Container for request parameters to <code> <a>DescribePackage</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribePackagesRequest
	{
		
		/// <summary>
		/// A list of <code>DescribePackagesFilter</code> to filter the packages included in a <code>DescribePackages</code> response.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DescribePackagesFilter[] Filters { get; set; }
		
		/// <summary>
		///  Set this value to limit the number of results returned. 
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(System.Int32.MinValue, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		///  Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The configured endpoint options for the domain and their current status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DomainEndpointOptionsStatus
	{
		
		/// <summary>
		/// Options to configure endpoint for the Elasticsearch domain.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DomainEndpointOptions Options { get; set; }
		
		/// <summary>
		/// Provides the current status of the entity.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DomainInfo
	{
		
		/// <summary>
		/// The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Max length: 28
		/// Min length: 3
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(28, MinimumLength=3)]
		public string DomainName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DomainPackageStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASSOCIATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASSOCIATION_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISSOCIATING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISSOCIATION_FAILED = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ErrorDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
	}
	
	/// <summary>
	///  Status of the EBS options for the specified Elasticsearch domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EBSOptionsStatus
	{
		
		/// <summary>
		/// Options to enable, disable, and specify the properties of EBS storage volumes. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs" target="_blank"> Configuring EBS-based Storage</a>.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EBSOptions Options { get; set; }
		
		/// <summary>
		/// Provides the current status of the entity.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	///  Specifies the configuration status for the specified Elasticsearch domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ElasticsearchClusterConfigStatus
	{
		
		/// <summary>
		/// Specifies the configuration for the domain cluster, such as the type and number of instances.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchClusterConfig Options { get; set; }
		
		/// <summary>
		/// Provides the current status of the entity.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	///  Status of the Elasticsearch version options for the specified Elasticsearch domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ElasticsearchVersionStatus
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Options { get; set; }
		
		/// <summary>
		/// Provides the current status of the entity.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// Status of a daily automated snapshot.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SnapshotOptionsStatus
	{
		
		/// <summary>
		/// Specifies the time, in UTC format, when the service takes a daily automated snapshot of the specified Elasticsearch domain. Default value is <code>0</code> hours.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SnapshotOptions Options { get; set; }
		
		/// <summary>
		/// Provides the current status of the entity.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	///  Status of the VPC options for the specified Elasticsearch domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class VPCDerivedInfoStatus
	{
		
		/// <summary>
		/// Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html" target="_blank"> VPC Endpoints for Amazon Elasticsearch Service Domains</a>.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VPCDerivedInfo Options { get; set; }
		
		/// <summary>
		/// Provides the current status of the entity.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	///  Status of the Encryption At Rest options for the specified Elasticsearch domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EncryptionAtRestOptionsStatus
	{
		
		/// <summary>
		/// Specifies the Encryption At Rest Options.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EncryptionAtRestOptions Options { get; set; }
		
		/// <summary>
		/// Provides the current status of the entity.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// Status of the node-to-node encryption options for the specified Elasticsearch domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class NodeToNodeEncryptionOptionsStatus
	{
		
		/// <summary>
		/// Specifies the node-to-node encryption options.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public NodeToNodeEncryptionOptions Options { get; set; }
		
		/// <summary>
		/// Provides the current status of the entity.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// The configured log publishing options for the domain and their current status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class LogPublishingOptionsStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public LogPublishingOptions Options { get; set; }
		
		/// <summary>
		/// Provides the current status of the entity.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html" target="_blank"> VPC Endpoints for Amazon Elasticsearch Service Domains</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class VPCDerivedInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string VPCId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] AvailabilityZones { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] SecurityGroupIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpgradeStep
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRE_UPGRADE_CHECK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SNAPSHOT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPGRADE = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpgradeStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED_WITH_ISSUES = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
	}
	
	/// <summary>
	/// Specifies the coonection status of an inbound cross-cluster search connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InboundCrossClusterSearchConnectionStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InboundCrossClusterSearchConnectionStatusStatusCode StatusCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum InboundCrossClusterSearchConnectionStatusStatusCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_ACCEPTANCE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECTING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECTED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum InboundCrossClusterSearchConnectionStatusCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_ACCEPTANCE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECTING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECTED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 5,
	}
	
	/// <summary>
	///  InstanceCountLimits represents the limits on number of instances that be created in Amazon Elasticsearch for given InstanceType. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InstanceCountLimits
	{
		
		/// <summary>
		///  Minimum number of Instances that can be instantiated for given InstanceType. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinimumInstanceCount { get; set; }
		
		/// <summary>
		///  Maximum number of Instances that can be instantiated for given InstanceType. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumInstanceCount { get; set; }
	}
	
	/// <summary>
	/// InstanceLimits represents the list of instance related attributes that are available for given InstanceType. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InstanceLimits
	{
		
		/// <summary>
		///  InstanceCountLimits represents the limits on number of instances that be created in Amazon Elasticsearch for given InstanceType. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InstanceCountLimits InstanceCountLimits { get; set; }
	}
	
	/// <summary>
	///  Limits for given InstanceType and for each of it's role. <br/> Limits contains following <code> <a>StorageTypes,</a> </code> <code> <a>InstanceLimits</a> </code> and <code> <a>AdditionalLimits</a> </code> 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Limits
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StorageType[] StorageTypes { get; set; }
		
		/// <summary>
		/// InstanceLimits represents the list of instance related attributes that are available for given InstanceType. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InstanceLimits InstanceLimits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AdditionalLimit[] AdditionalLimits { get; set; }
	}
	
	/// <summary>
	/// Type of Log File, it can be one of the following: <ul> <li>INDEX_SLOW_LOGS: Index slow logs contain insert requests that took more time than configured index query log threshold to execute.</li> <li>SEARCH_SLOW_LOGS: Search slow logs contain search queries that took more time than configured search query log threshold to execute.</li> <li>ES_APPLICATION_LOGS: Elasticsearch application logs contain information about errors and warnings raised during the operation of the service and can be useful for troubleshooting.</li> </ul> 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum LogType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INDEX_SLOW_LOGS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEARCH_SLOW_LOGS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ES_APPLICATION_LOGS = 2,
	}
	
	/// <summary>
	/// <p>The state of a requested change. One of the following:</p> <ul> <li>Processing: The request change is still in-process.</li> <li>Active: The request change is processed and deployed to the Elasticsearch domain.</li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum OptionState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RequiresIndexDocuments = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Processing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum OutboundCrossClusterSearchConnectionStatusCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_ACCEPTANCE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALIDATING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALIDATION_FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROVISIONING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECTED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 7,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum PackageStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COPYING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COPY_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALIDATING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALIDATION_FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_FAILED = 7,
	}
	
	/// <summary>
	/// Container for parameters to <code>PurchaseReservedElasticsearchInstanceOffering</code>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PurchaseReservedElasticsearchInstanceOfferingRequest
	{
		
		/// <summary>
		/// Pattern: \p{XDigit}{8}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ReservedElasticsearchInstanceOfferingId { get; set; }
		
		/// <summary>
		/// Max length: 64
		/// Min length: 5
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=5)]
		public string ReservationName { get; set; }
		
		/// <summary>
		/// Specifies the number of EC2 instances in the Elasticsearch domain.
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> InstanceCount { get; set; }
	}
	
	/// <summary>
	/// Contains the specific price and frequency of a recurring charges for a reserved Elasticsearch instance, or for a reserved Elasticsearch instance offering.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RecurringCharge
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> RecurringChargeAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecurringChargeFrequency { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>RemoveTags</a></code> operation. Specify the <code>ARN</code> for the Elasticsearch domain from which you want to remove the specified <code>TagKey</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RemoveTagsRequest
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the Elasticsearch domain. See <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access Management</i> for more information.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ARN { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public String[] TagKeys { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ReservedElasticsearchInstancePaymentOption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL_UPFRONT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARTIAL_UPFRONT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_UPFRONT = 2,
	}
	
	/// <summary>
	/// Details of a reserved Elasticsearch instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ReservedElasticsearchInstance
	{
		
		/// <summary>
		/// Max length: 64
		/// Min length: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=5)]
		public string ReservationName { get; set; }
		
		/// <summary>
		/// Pattern: \p{XDigit}{8}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{12}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ReservedElasticsearchInstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservedElasticsearchInstanceOfferingId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReservedElasticsearchInstanceElasticsearchInstanceType ElasticsearchInstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Duration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FixedPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> UsagePrice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrencyCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ElasticsearchInstanceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReservedElasticsearchInstancePaymentOption PaymentOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RecurringCharge[] RecurringCharges { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ReservedElasticsearchInstanceElasticsearchInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m3.medium.elasticsearch = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m3.large.elasticsearch = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m3.xlarge.elasticsearch = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m3.2xlarge.elasticsearch = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m4.large.elasticsearch = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m4.xlarge.elasticsearch = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m4.2xlarge.elasticsearch = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m4.4xlarge.elasticsearch = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m4.10xlarge.elasticsearch = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m5.large.elasticsearch = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m5.xlarge.elasticsearch = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m5.2xlarge.elasticsearch = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m5.4xlarge.elasticsearch = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m5.12xlarge.elasticsearch = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r5.large.elasticsearch = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r5.xlarge.elasticsearch = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r5.2xlarge.elasticsearch = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r5.4xlarge.elasticsearch = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r5.12xlarge.elasticsearch = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.large.elasticsearch = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.xlarge.elasticsearch = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.2xlarge.elasticsearch = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.4xlarge.elasticsearch = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.9xlarge.elasticsearch = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.18xlarge.elasticsearch = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ultrawarm1.medium.elasticsearch = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ultrawarm1.large.elasticsearch = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		t2.micro.elasticsearch = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		t2.small.elasticsearch = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		t2.medium.elasticsearch = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r3.large.elasticsearch = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r3.xlarge.elasticsearch = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r3.2xlarge.elasticsearch = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r3.4xlarge.elasticsearch = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r3.8xlarge.elasticsearch = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i2.xlarge.elasticsearch = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i2.2xlarge.elasticsearch = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		d2.xlarge.elasticsearch = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		d2.2xlarge.elasticsearch = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		d2.4xlarge.elasticsearch = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		d2.8xlarge.elasticsearch = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c4.large.elasticsearch = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c4.xlarge.elasticsearch = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c4.2xlarge.elasticsearch = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c4.4xlarge.elasticsearch = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c4.8xlarge.elasticsearch = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.large.elasticsearch = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.xlarge.elasticsearch = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.2xlarge.elasticsearch = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.4xlarge.elasticsearch = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.8xlarge.elasticsearch = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.16xlarge.elasticsearch = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.large.elasticsearch = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.xlarge.elasticsearch = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.2xlarge.elasticsearch = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.4xlarge.elasticsearch = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.8xlarge.elasticsearch = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.16xlarge.elasticsearch = 57,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ReservedElasticsearchInstancePaymentOption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL_UPFRONT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARTIAL_UPFRONT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_UPFRONT = 2,
	}
	
	/// <summary>
	/// Details of a reserved Elasticsearch instance offering.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ReservedElasticsearchInstanceOffering
	{
		
		/// <summary>
		/// Pattern: \p{XDigit}{8}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{12}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ReservedElasticsearchInstanceOfferingId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReservedElasticsearchInstanceOfferingElasticsearchInstanceType ElasticsearchInstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Duration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FixedPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> UsagePrice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrencyCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReservedElasticsearchInstanceOfferingPaymentOption PaymentOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RecurringCharge[] RecurringCharges { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ReservedElasticsearchInstanceOfferingElasticsearchInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m3.medium.elasticsearch = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m3.large.elasticsearch = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m3.xlarge.elasticsearch = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m3.2xlarge.elasticsearch = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m4.large.elasticsearch = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m4.xlarge.elasticsearch = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m4.2xlarge.elasticsearch = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m4.4xlarge.elasticsearch = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m4.10xlarge.elasticsearch = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m5.large.elasticsearch = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m5.xlarge.elasticsearch = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m5.2xlarge.elasticsearch = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m5.4xlarge.elasticsearch = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		m5.12xlarge.elasticsearch = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r5.large.elasticsearch = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r5.xlarge.elasticsearch = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r5.2xlarge.elasticsearch = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r5.4xlarge.elasticsearch = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r5.12xlarge.elasticsearch = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.large.elasticsearch = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.xlarge.elasticsearch = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.2xlarge.elasticsearch = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.4xlarge.elasticsearch = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.9xlarge.elasticsearch = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c5.18xlarge.elasticsearch = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ultrawarm1.medium.elasticsearch = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ultrawarm1.large.elasticsearch = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		t2.micro.elasticsearch = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		t2.small.elasticsearch = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		t2.medium.elasticsearch = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r3.large.elasticsearch = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r3.xlarge.elasticsearch = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r3.2xlarge.elasticsearch = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r3.4xlarge.elasticsearch = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r3.8xlarge.elasticsearch = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i2.xlarge.elasticsearch = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i2.2xlarge.elasticsearch = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		d2.xlarge.elasticsearch = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		d2.2xlarge.elasticsearch = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		d2.4xlarge.elasticsearch = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		d2.8xlarge.elasticsearch = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c4.large.elasticsearch = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c4.xlarge.elasticsearch = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c4.2xlarge.elasticsearch = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c4.4xlarge.elasticsearch = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		c4.8xlarge.elasticsearch = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.large.elasticsearch = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.xlarge.elasticsearch = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.2xlarge.elasticsearch = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.4xlarge.elasticsearch = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.8xlarge.elasticsearch = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r4.16xlarge.elasticsearch = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.large.elasticsearch = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.xlarge.elasticsearch = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.2xlarge.elasticsearch = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.4xlarge.elasticsearch = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.8xlarge.elasticsearch = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i3.16xlarge.elasticsearch = 57,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ReservedElasticsearchInstanceOfferingPaymentOption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL_UPFRONT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARTIAL_UPFRONT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_UPFRONT = 2,
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>StartElasticsearchServiceSoftwareUpdate</a></code> operation. Specifies the name of the Elasticsearch domain that you wish to schedule a service software update on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartElasticsearchServiceSoftwareUpdateRequest
	{
		
		/// <summary>
		/// The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Max length: 28
		/// Min length: 3
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(28, MinimumLength=3)]
		public string DomainName { get; set; }
	}
	
	/// <summary>
	/// StorageTypes represents the list of storage related types and their attributes that are available for given InstanceType. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StorageType
	{
		
		/// <summary>
		///  Type of the storage. List of available storage options: <ol> <li>instance</li> Inbuilt storage available for the given Instance <li>ebs</li> Elastic block storage that would be attached to the given Instance </ol> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string StorageTypeName { get; set; }
		
		/// <summary>
		///  SubType of the given storage type. List of available sub-storage options: For "instance" storageType we wont have any storageSubType, in case of "ebs" storageType we will have following valid storageSubTypes <ol> <li>standard</li> <li>gp2</li> <li>io1</li> </ol> Refer <code><a>VolumeType</a></code> for more information regarding above EBS storage options. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string StorageSubTypeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StorageTypeLimit[] StorageTypeLimits { get; set; }
	}
	
	/// <summary>
	/// Limits that are applicable for given storage type. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StorageTypeLimit
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LimitName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LimitValue[] LimitValues { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>UpdateElasticsearchDomain</a></code> operation. Specifies the type and number of instances in the domain cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateElasticsearchDomainConfigRequest
	{
		
		/// <summary>
		/// Specifies the configuration for the domain cluster, such as the type and number of instances.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchClusterConfig ElasticsearchClusterConfig { get; set; }
		
		/// <summary>
		/// Options to enable, disable, and specify the properties of EBS storage volumes. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs" target="_blank"> Configuring EBS-based Storage</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EBSOptions EBSOptions { get; set; }
		
		/// <summary>
		/// Specifies the time, in UTC format, when the service takes a daily automated snapshot of the specified Elasticsearch domain. Default value is <code>0</code> hours.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SnapshotOptions SnapshotOptions { get; set; }
		
		/// <summary>
		/// Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html" target="_blank"> VPC Endpoints for Amazon Elasticsearch Service Domains</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VPCOptions VPCOptions { get; set; }
		
		/// <summary>
		/// Options to specify the Cognito user and identity pools for Kibana authentication. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html" target="_blank">Amazon Cognito Authentication for Kibana</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CognitoOptions CognitoOptions { get; set; }
		
		/// <summary>
		/// <p> Exposes select native Elasticsearch configuration values from <code>elasticsearch.yml</code>. Currently, the following advanced options are available:</p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options" target="_blank">Configuration Advanced Options</a> for more information.</li> <li>Option to specify the percentage of heap space that is allocated to field data. By default, this setting is unbounded.</li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options">Configuring Advanced Options</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AdvancedOptions AdvancedOptions { get; set; }
		
		/// <summary>
		/// Access policy rules for an Elasticsearch domain service endpoints. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-access-policies" target="_blank">Configuring Access Policies</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>. The maximum size of a policy document is 100 KB.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AccessPolicies { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LogPublishingOptions LogPublishingOptions { get; set; }
		
		/// <summary>
		/// Options to configure endpoint for the Elasticsearch domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DomainEndpointOptions DomainEndpointOptions { get; set; }
		
		/// <summary>
		/// Specifies the advanced security configuration: whether advanced security is enabled, whether the internal database option is enabled, master username and password (if internal database is enabled), and master user ARN (if IAM is enabled).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AdvancedSecurityOptionsInput AdvancedSecurityOptions { get; set; }
	}
	
	/// <summary>
	///  Container for request parameters to <code> <a>UpgradeElasticsearchDomain</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpgradeElasticsearchDomainRequest
	{
		
		/// <summary>
		/// The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Max length: 28
		/// Min length: 3
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(28, MinimumLength=3)]
		public string DomainName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PerformCheckOnly { get; set; }
	}
	
	/// <summary>
	/// History of the last 10 Upgrades and Upgrade Eligibility Checks.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpgradeHistory
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string UpgradeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> StartTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpgradeHistoryUpgradeStatus UpgradeStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpgradeStepItem[] StepsList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpgradeHistoryUpgradeStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED_WITH_ISSUES = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
	}
	
	/// <summary>
	/// Represents a single step of the Upgrade or Upgrade Eligibility Check workflow.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpgradeStepItem
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UpgradeStepItemUpgradeStep UpgradeStep { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpgradeStepItemUpgradeStepStatus UpgradeStepStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Issue[] Issues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ProgressPercent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpgradeStepItemUpgradeStep
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRE_UPGRADE_CHECK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SNAPSHOT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPGRADE = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpgradeStepItemUpgradeStepStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED_WITH_ISSUES = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
	}
	
	public partial class DemoClient
	{
		
		private System.Net.Http.HttpClient client;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public DemoClient(System.Net.Http.HttpClient client, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (client == null)
				throw new ArgumentNullException("Null HttpClient.", "client");

			if (client.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "client");

			this.client = client;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Allows the destination domain owner to accept an inbound cross-cluster search connection request.
		/// AcceptInboundCrossClusterSearchConnection /2015-01-01/es/ccs/inboundConnection/{ConnectionId}/accept
		/// </summary>
		/// <param name="ConnectionId">The id of the inbound connection that you want to accept.</param>
		/// <returns>Success</returns>
		public async Task<AcceptInboundCrossClusterSearchConnectionResponse> AcceptInboundCrossClusterSearchConnectionAsync(string ConnectionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/es/ccs/inboundConnection/"+ (ConnectionId==null? "" : Uri.EscapeDataString(ConnectionId))+"/accept";
			using (var request = new HttpRequestMessage(HttpMethod.Put, requestUri))
			{
			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<AcceptInboundCrossClusterSearchConnectionResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Attaches tags to an existing Elasticsearch domain. Tags are a set of case-sensitive key value pairs. An Elasticsearch domain may have up to 10 tags. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-managedomains.html#es-managedomains-awsresorcetagging" target="_blank"> Tagging Amazon Elasticsearch Service Domains for more information.</a>
		/// AddTags /2015-01-01/tags
		/// </summary>
		/// <returns>Success</returns>
		public async Task AddTagsAsync(AddTagsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/tags";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Associates a package with an Amazon ES domain.
		/// AssociatePackage /2015-01-01/packages/associate/{PackageID}/{DomainName}
		/// </summary>
		/// <param name="PackageID">Internal ID of the package that you want to associate with a domain. Use <code>DescribePackages</code> to find this value.</param>
		/// <param name="DomainName">Name of the domain that you want to associate the package with.</param>
		/// <returns>Success</returns>
		public async Task<AssociatePackageResponse> AssociatePackageAsync(string PackageID, string DomainName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/packages/associate/"+ (PackageID==null? "" : Uri.EscapeDataString(PackageID))+"/"+ (DomainName==null? "" : Uri.EscapeDataString(DomainName));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<AssociatePackageResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Cancels a scheduled service software update for an Amazon ES domain. You can only perform this operation before the <code>AutomatedUpdateDate</code> and when the <code>UpdateStatus</code> is in the <code>PENDING_UPDATE</code> state.
		/// CancelElasticsearchServiceSoftwareUpdate /2015-01-01/es/serviceSoftwareUpdate/cancel
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CancelElasticsearchServiceSoftwareUpdateResponse> CancelElasticsearchServiceSoftwareUpdateAsync(CancelElasticsearchServiceSoftwareUpdateBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/es/serviceSoftwareUpdate/cancel";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CancelElasticsearchServiceSoftwareUpdateResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a new Elasticsearch domain. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomains" target="_blank">Creating Elasticsearch Domains</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>.
		/// CreateElasticsearchDomain /2015-01-01/es/domain
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateElasticsearchDomainResponse> CreateElasticsearchDomainAsync(CreateElasticsearchDomainBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/es/domain";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateElasticsearchDomainResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a new cross-cluster search connection from a source domain to a destination domain.
		/// CreateOutboundCrossClusterSearchConnection /2015-01-01/es/ccs/outboundConnection
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateOutboundCrossClusterSearchConnectionResponse> CreateOutboundCrossClusterSearchConnectionAsync(CreateOutboundCrossClusterSearchConnectionBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/es/ccs/outboundConnection";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateOutboundCrossClusterSearchConnectionResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Create a package for use with Amazon ES domains.
		/// CreatePackage /2015-01-01/packages
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreatePackageResponse> CreatePackageAsync(CreatePackageBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/packages";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreatePackageResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Permanently deletes the specified Elasticsearch domain and all of its data. Once a domain is deleted, it cannot be recovered.
		/// DeleteElasticsearchDomain /2015-01-01/es/domain/{DomainName}
		/// </summary>
		/// <param name="DomainName">The name of the Elasticsearch domain that you want to permanently delete.</param>
		/// <returns>Success</returns>
		public async Task<DeleteElasticsearchDomainResponse> DeleteElasticsearchDomainAsync(string DomainName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/es/domain/"+ (DomainName==null? "" : Uri.EscapeDataString(DomainName));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteElasticsearchDomainResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns domain configuration information about the specified Elasticsearch domain, including the domain ID, domain endpoint, and domain ARN.
		/// DescribeElasticsearchDomain /2015-01-01/es/domain/{DomainName}
		/// </summary>
		/// <param name="DomainName">The name of the Elasticsearch domain for which you want information.</param>
		/// <returns>Success</returns>
		public async Task<DescribeElasticsearchDomainResponse> DescribeElasticsearchDomainAsync(string DomainName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/es/domain/"+ (DomainName==null? "" : Uri.EscapeDataString(DomainName));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeElasticsearchDomainResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes the service-linked role that Elasticsearch Service uses to manage and maintain VPC domains. Role deletion will fail if any existing VPC domains use the role. You must delete any such Elasticsearch domains before deleting the role. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html#es-enabling-slr" target="_blank">Deleting Elasticsearch Service Role</a> in <i>VPC Endpoints for Amazon Elasticsearch Service Domains</i>.
		/// DeleteElasticsearchServiceRole /2015-01-01/es/role
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeleteElasticsearchServiceRoleAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/es/role";
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Allows the destination domain owner to delete an existing inbound cross-cluster search connection.
		/// DeleteInboundCrossClusterSearchConnection /2015-01-01/es/ccs/inboundConnection/{ConnectionId}
		/// </summary>
		/// <param name="ConnectionId">The id of the inbound connection that you want to permanently delete.</param>
		/// <returns>Success</returns>
		public async Task<DeleteInboundCrossClusterSearchConnectionResponse> DeleteInboundCrossClusterSearchConnectionAsync(string ConnectionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/es/ccs/inboundConnection/"+ (ConnectionId==null? "" : Uri.EscapeDataString(ConnectionId));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteInboundCrossClusterSearchConnectionResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Allows the source domain owner to delete an existing outbound cross-cluster search connection.
		/// DeleteOutboundCrossClusterSearchConnection /2015-01-01/es/ccs/outboundConnection/{ConnectionId}
		/// </summary>
		/// <param name="ConnectionId">The id of the outbound connection that you want to permanently delete.</param>
		/// <returns>Success</returns>
		public async Task<DeleteOutboundCrossClusterSearchConnectionResponse> DeleteOutboundCrossClusterSearchConnectionAsync(string ConnectionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/es/ccs/outboundConnection/"+ (ConnectionId==null? "" : Uri.EscapeDataString(ConnectionId));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteOutboundCrossClusterSearchConnectionResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete the package.
		/// DeletePackage /2015-01-01/packages/{PackageID}
		/// </summary>
		/// <param name="PackageID">Internal ID of the package that you want to delete. Use <code>DescribePackages</code> to find this value.</param>
		/// <returns>Success</returns>
		public async Task<DeletePackageResponse> DeletePackageAsync(string PackageID, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/packages/"+ (PackageID==null? "" : Uri.EscapeDataString(PackageID));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeletePackageResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides cluster configuration information about the specified Elasticsearch domain, such as the state, creation date, update version, and update date for cluster options.
		/// DescribeElasticsearchDomainConfig /2015-01-01/es/domain/{DomainName}/config
		/// </summary>
		/// <param name="DomainName">The Elasticsearch domain that you want to get information about.</param>
		/// <returns>Success</returns>
		public async Task<DescribeElasticsearchDomainConfigResponse> DescribeElasticsearchDomainConfigAsync(string DomainName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/es/domain/"+ (DomainName==null? "" : Uri.EscapeDataString(DomainName))+"/config";
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeElasticsearchDomainConfigResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Modifies the cluster configuration of the specified Elasticsearch domain, setting as setting the instance type and the number of instances.
		/// UpdateElasticsearchDomainConfig /2015-01-01/es/domain/{DomainName}/config
		/// </summary>
		/// <param name="DomainName">The name of the Elasticsearch domain that you are updating. </param>
		/// <returns>Success</returns>
		public async Task<UpdateElasticsearchDomainConfigResponse> UpdateElasticsearchDomainConfigAsync(string DomainName, UpdateElasticsearchDomainConfigBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/es/domain/"+ (DomainName==null? "" : Uri.EscapeDataString(DomainName))+"/config";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UpdateElasticsearchDomainConfigResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns domain configuration information about the specified Elasticsearch domains, including the domain ID, domain endpoint, and domain ARN.
		/// DescribeElasticsearchDomains /2015-01-01/es/domain-info
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeElasticsearchDomainsResponse> DescribeElasticsearchDomainsAsync(DescribeElasticsearchDomainsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/es/domain-info";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeElasticsearchDomainsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Describe Elasticsearch Limits for a given InstanceType and ElasticsearchVersion. When modifying existing Domain, specify the <code> <a>DomainName</a> </code> to know what Limits are supported for modifying.
		/// DescribeElasticsearchInstanceTypeLimits /2015-01-01/es/instanceTypeLimits/{ElasticsearchVersion}/{InstanceType}
		/// </summary>
		/// <param name="domainName"> DomainName represents the name of the Domain that we are trying to modify. This should be present only if we are querying for Elasticsearch <code> <a>Limits</a> </code> for existing domain. </param>
		/// <param name="InstanceType"> The instance type for an Elasticsearch cluster for which Elasticsearch <code> <a>Limits</a> </code> are needed. </param>
		/// <param name="ElasticsearchVersion"> Version of Elasticsearch for which <code> <a>Limits</a> </code> are needed. </param>
		/// <returns>Success</returns>
		public async Task<DescribeElasticsearchInstanceTypeLimitsResponse> DescribeElasticsearchInstanceTypeLimitsAsync(string domainName, ESPartitionInstanceType InstanceType, string ElasticsearchVersion, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/es/instanceTypeLimits/"+ (ElasticsearchVersion==null? "" : Uri.EscapeDataString(ElasticsearchVersion))+"/"+InstanceType+"?domainName=" + (domainName==null? "" : Uri.EscapeDataString(domainName));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeElasticsearchInstanceTypeLimitsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all the inbound cross-cluster search connections for a destination domain.
		/// DescribeInboundCrossClusterSearchConnections /2015-01-01/es/ccs/inboundConnection/search
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeInboundCrossClusterSearchConnectionsResponse> DescribeInboundCrossClusterSearchConnectionsAsync(string MaxResults, string NextToken, DescribeInboundCrossClusterSearchConnectionsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/es/ccs/inboundConnection/search?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeInboundCrossClusterSearchConnectionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all the outbound cross-cluster search connections for a source domain.
		/// DescribeOutboundCrossClusterSearchConnections /2015-01-01/es/ccs/outboundConnection/search
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeOutboundCrossClusterSearchConnectionsResponse> DescribeOutboundCrossClusterSearchConnectionsAsync(string MaxResults, string NextToken, DescribeOutboundCrossClusterSearchConnectionsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/es/ccs/outboundConnection/search?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeOutboundCrossClusterSearchConnectionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Describes all packages available to Amazon ES. Includes options for filtering, limiting the number of results, and pagination.
		/// DescribePackages /2015-01-01/packages/describe
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribePackagesResponse> DescribePackagesAsync(string MaxResults, string NextToken, DescribePackagesBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/packages/describe?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribePackagesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists available reserved Elasticsearch instance offerings.
		/// DescribeReservedElasticsearchInstanceOfferings /2015-01-01/es/reservedInstanceOfferings
		/// </summary>
		/// <param name="offeringId">The offering identifier filter value. Use this parameter to show only the available offering that matches the specified reservation identifier.</param>
		/// <param name="maxResults">Set this value to limit the number of results returned. If not specified, defaults to 100.</param>
		/// <param name="nextToken">NextToken should be sent in case if earlier API call produced result containing NextToken. It is used for pagination.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeReservedElasticsearchInstanceOfferingsResponse> DescribeReservedElasticsearchInstanceOfferingsAsync(string offeringId, int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/es/reservedInstanceOfferings?offeringId=" + (offeringId==null? "" : Uri.EscapeDataString(offeringId))+"&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeReservedElasticsearchInstanceOfferingsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns information about reserved Elasticsearch instances for this account.
		/// DescribeReservedElasticsearchInstances /2015-01-01/es/reservedInstances
		/// </summary>
		/// <param name="reservationId">The reserved instance identifier filter value. Use this parameter to show only the reservation that matches the specified reserved Elasticsearch instance ID.</param>
		/// <param name="maxResults">Set this value to limit the number of results returned. If not specified, defaults to 100.</param>
		/// <param name="nextToken">NextToken should be sent in case if earlier API call produced result containing NextToken. It is used for pagination.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeReservedElasticsearchInstancesResponse> DescribeReservedElasticsearchInstancesAsync(string reservationId, int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/es/reservedInstances?reservationId=" + (reservationId==null? "" : Uri.EscapeDataString(reservationId))+"&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeReservedElasticsearchInstancesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Dissociates a package from the Amazon ES domain.
		/// DissociatePackage /2015-01-01/packages/dissociate/{PackageID}/{DomainName}
		/// </summary>
		/// <param name="PackageID">Internal ID of the package that you want to associate with a domain. Use <code>DescribePackages</code> to find this value.</param>
		/// <param name="DomainName">Name of the domain that you want to associate the package with.</param>
		/// <returns>Success</returns>
		public async Task<DissociatePackageResponse> DissociatePackageAsync(string PackageID, string DomainName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/packages/dissociate/"+ (PackageID==null? "" : Uri.EscapeDataString(PackageID))+"/"+ (DomainName==null? "" : Uri.EscapeDataString(DomainName));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DissociatePackageResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of upgrade compatible Elastisearch versions. You can optionally pass a <code> <a>DomainName</a> </code> to get all upgrade compatible Elasticsearch versions for that specific domain.
		/// GetCompatibleElasticsearchVersions /2015-01-01/es/compatibleVersions
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetCompatibleElasticsearchVersionsResponse> GetCompatibleElasticsearchVersionsAsync(string domainName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/es/compatibleVersions?domainName=" + (domainName==null? "" : Uri.EscapeDataString(domainName));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetCompatibleElasticsearchVersionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves the complete history of the last 10 upgrades that were performed on the domain.
		/// GetUpgradeHistory /2015-01-01/es/upgradeDomain/{DomainName}/history
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<GetUpgradeHistoryResponse> GetUpgradeHistoryAsync(string DomainName, int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/es/upgradeDomain/"+ (DomainName==null? "" : Uri.EscapeDataString(DomainName))+"/history&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetUpgradeHistoryResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves the latest status of the last upgrade or upgrade eligibility check that was performed on the domain.
		/// GetUpgradeStatus /2015-01-01/es/upgradeDomain/{DomainName}/status
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetUpgradeStatusResponse> GetUpgradeStatusAsync(string DomainName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/es/upgradeDomain/"+ (DomainName==null? "" : Uri.EscapeDataString(DomainName))+"/status";
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetUpgradeStatusResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns the name of all Elasticsearch domains owned by the current user's account.
		/// ListDomainNames /2015-01-01/domain
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ListDomainNamesResponse> ListDomainNamesAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/domain";
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListDomainNamesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all Amazon ES domains associated with the package.
		/// ListDomainsForPackage /2015-01-01/packages/{PackageID}/domains
		/// </summary>
		/// <param name="PackageID">The package for which to list domains.</param>
		/// <param name="maxResults">Limits results to a maximum number of domains.</param>
		/// <param name="nextToken">Used for pagination. Only necessary if a previous API call includes a non-null NextToken value. If provided, returns results for the next page.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListDomainsForPackageResponse> ListDomainsForPackageAsync(string PackageID, int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/packages/"+ (PackageID==null? "" : Uri.EscapeDataString(PackageID))+"/domains&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListDomainsForPackageResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List all Elasticsearch instance types that are supported for given ElasticsearchVersion
		/// ListElasticsearchInstanceTypes /2015-01-01/es/instanceTypes/{ElasticsearchVersion}
		/// </summary>
		/// <param name="ElasticsearchVersion">Version of Elasticsearch for which list of supported elasticsearch instance types are needed. </param>
		/// <param name="domainName">DomainName represents the name of the Domain that we are trying to modify. This should be present only if we are querying for list of available Elasticsearch instance types when modifying existing domain. </param>
		/// <param name="maxResults"> Set this value to limit the number of results returned. Value provided must be greater than 30 else it wont be honored. </param>
		/// <param name="nextToken">NextToken should be sent in case if earlier API call produced result containing NextToken. It is used for pagination. </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListElasticsearchInstanceTypesResponse> ListElasticsearchInstanceTypesAsync(string ElasticsearchVersion, string domainName, int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/es/instanceTypes/"+ (ElasticsearchVersion==null? "" : Uri.EscapeDataString(ElasticsearchVersion))+"&domainName=" + (domainName==null? "" : Uri.EscapeDataString(domainName))+"&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListElasticsearchInstanceTypesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List all supported Elasticsearch versions
		/// ListElasticsearchVersions /2015-01-01/es/versions
		/// </summary>
		/// <param name="maxResults"> Set this value to limit the number of results returned. Value provided must be greater than 10 else it wont be honored. </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListElasticsearchVersionsResponse> ListElasticsearchVersionsAsync(int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/es/versions?maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListElasticsearchVersionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all packages associated with the Amazon ES domain.
		/// ListPackagesForDomain /2015-01-01/domain/{DomainName}/packages
		/// </summary>
		/// <param name="DomainName">The name of the domain for which you want to list associated packages.</param>
		/// <param name="maxResults">Limits results to a maximum number of packages.</param>
		/// <param name="nextToken">Used for pagination. Only necessary if a previous API call includes a non-null NextToken value. If provided, returns results for the next page.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListPackagesForDomainResponse> ListPackagesForDomainAsync(string DomainName, int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/domain/"+ (DomainName==null? "" : Uri.EscapeDataString(DomainName))+"/packages&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListPackagesForDomainResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns all tags for the given Elasticsearch domain.
		/// ListTags /2015-01-01/tags/#arn
		/// </summary>
		/// <param name="arn"> Specify the <code>ARN</code> for the Elasticsearch domain to which the tags are attached that you want to view.</param>
		/// <returns>Success</returns>
		public async Task<ListTagsResponse> ListTagsAsync(string arn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/tags/#arn?arn=" + (arn==null? "" : Uri.EscapeDataString(arn));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListTagsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Allows you to purchase reserved Elasticsearch instances.
		/// PurchaseReservedElasticsearchInstanceOffering /2015-01-01/es/purchaseReservedInstanceOffering
		/// </summary>
		/// <returns>Success</returns>
		public async Task<PurchaseReservedElasticsearchInstanceOfferingResponse> PurchaseReservedElasticsearchInstanceOfferingAsync(PurchaseReservedElasticsearchInstanceOfferingBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/es/purchaseReservedInstanceOffering";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<PurchaseReservedElasticsearchInstanceOfferingResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Allows the destination domain owner to reject an inbound cross-cluster search connection request.
		/// RejectInboundCrossClusterSearchConnection /2015-01-01/es/ccs/inboundConnection/{ConnectionId}/reject
		/// </summary>
		/// <param name="ConnectionId">The id of the inbound connection that you want to reject.</param>
		/// <returns>Success</returns>
		public async Task<RejectInboundCrossClusterSearchConnectionResponse> RejectInboundCrossClusterSearchConnectionAsync(string ConnectionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/es/ccs/inboundConnection/"+ (ConnectionId==null? "" : Uri.EscapeDataString(ConnectionId))+"/reject";
			using (var request = new HttpRequestMessage(HttpMethod.Put, requestUri))
			{
			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<RejectInboundCrossClusterSearchConnectionResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes the specified set of tags from the specified Elasticsearch domain.
		/// RemoveTags /2015-01-01/tags-removal
		/// </summary>
		/// <returns>Success</returns>
		public async Task RemoveTagsAsync(RemoveTagsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/tags-removal";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Schedules a service software update for an Amazon ES domain.
		/// StartElasticsearchServiceSoftwareUpdate /2015-01-01/es/serviceSoftwareUpdate/start
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartElasticsearchServiceSoftwareUpdateResponse> StartElasticsearchServiceSoftwareUpdateAsync(StartElasticsearchServiceSoftwareUpdateBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/es/serviceSoftwareUpdate/start";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<StartElasticsearchServiceSoftwareUpdateResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Allows you to either upgrade your domain or perform an Upgrade eligibility check to a compatible Elasticsearch version.
		/// UpgradeElasticsearchDomain /2015-01-01/es/upgradeDomain
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpgradeElasticsearchDomainResponse> UpgradeElasticsearchDomainAsync(UpgradeElasticsearchDomainBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2015-01-01/es/upgradeDomain";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UpgradeElasticsearchDomainResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AddTagsBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the Elasticsearch domain. See <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access Management</i> for more information.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ARN { get; set; }
		
		/// <summary>
		/// A list of <code>Tag</code> 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Tag[] TagList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CancelElasticsearchServiceSoftwareUpdateBody
	{
		
		/// <summary>
		/// The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Max length: 28
		/// Min length: 3
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(28, MinimumLength=3)]
		public string DomainName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateElasticsearchDomainBody
	{
		
		/// <summary>
		/// The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Max length: 28
		/// Min length: 3
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(28, MinimumLength=3)]
		public string DomainName { get; set; }
		
		/// <summary>
		/// String of format X.Y to specify version for the Elasticsearch domain eg. "1.5" or "2.3". For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomains" target="_blank">Creating Elasticsearch Domains</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ElasticsearchVersion { get; set; }
		
		/// <summary>
		/// Specifies the configuration for the domain cluster, such as the type and number of instances.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ElasticsearchClusterConfig { get; set; }
		
		/// <summary>
		/// Options to enable, disable, and specify the properties of EBS storage volumes. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs" target="_blank"> Configuring EBS-based Storage</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string EBSOptions { get; set; }
		
		/// <summary>
		/// Access policy rules for an Elasticsearch domain service endpoints. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-access-policies" target="_blank">Configuring Access Policies</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>. The maximum size of a policy document is 100 KB.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AccessPolicies { get; set; }
		
		/// <summary>
		/// Specifies the time, in UTC format, when the service takes a daily automated snapshot of the specified Elasticsearch domain. Default value is <code>0</code> hours.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SnapshotOptions { get; set; }
		
		/// <summary>
		/// Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html" target="_blank"> VPC Endpoints for Amazon Elasticsearch Service Domains</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string VPCOptions { get; set; }
		
		/// <summary>
		/// Options to specify the Cognito user and identity pools for Kibana authentication. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html" target="_blank">Amazon Cognito Authentication for Kibana</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CognitoOptions { get; set; }
		
		/// <summary>
		/// Specifies the Encryption At Rest Options.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string EncryptionAtRestOptions { get; set; }
		
		/// <summary>
		/// Specifies the node-to-node encryption options.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NodeToNodeEncryptionOptions { get; set; }
		
		/// <summary>
		/// <p> Exposes select native Elasticsearch configuration values from <code>elasticsearch.yml</code>. Currently, the following advanced options are available:</p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options" target="_blank">Configuration Advanced Options</a> for more information.</li> <li>Option to specify the percentage of heap space that is allocated to field data. By default, this setting is unbounded.</li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options">Configuring Advanced Options</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AdvancedOptions { get; set; }
		
		/// <summary>
		/// Map of <code>LogType</code> and <code>LogPublishingOption</code>, each containing options to publish a given type of Elasticsearch log.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string LogPublishingOptions { get; set; }
		
		/// <summary>
		/// Options to configure endpoint for the Elasticsearch domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DomainEndpointOptions { get; set; }
		
		/// <summary>
		/// Specifies the advanced security configuration: whether advanced security is enabled, whether the internal database option is enabled, master username and password (if internal database is enabled), and master user ARN (if IAM is enabled).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AdvancedSecurityOptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateOutboundCrossClusterSearchConnectionBody
	{
		
		/// <summary>
		/// Specifies the <code><a>DomainInformation</a></code> for the source Elasticsearch domain.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceDomainInfo { get; set; }
		
		/// <summary>
		/// Specifies the <code><a>DomainInformation</a></code> for the destination Elasticsearch domain.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DestinationDomainInfo { get; set; }
		
		/// <summary>
		/// Specifies the connection alias that will be used by the customer for this connection.
		/// Max length: 20
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(20)]
		public string ConnectionAlias { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreatePackageBody
	{
		
		/// <summary>
		/// Unique identifier for the package.
		/// Max length: 28
		/// Min length: 3
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(28, MinimumLength=3)]
		public string PackageName { get; set; }
		
		/// <summary>
		/// Type of package. Currently supports only TXT-DICTIONARY.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreatePackageBodyPackageType PackageType { get; set; }
		
		/// <summary>
		/// Description of the package.
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string PackageDescription { get; set; }
		
		/// <summary>
		/// The S3 location for importing the package specified as <code>S3BucketName</code> and <code>S3Key</code>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PackageSource { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreatePackageBodyPackageType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TXT-DICTIONARY = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateElasticsearchDomainConfigBody
	{
		
		/// <summary>
		/// Specifies the configuration for the domain cluster, such as the type and number of instances.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ElasticsearchClusterConfig { get; set; }
		
		/// <summary>
		/// Options to enable, disable, and specify the properties of EBS storage volumes. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs" target="_blank"> Configuring EBS-based Storage</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string EBSOptions { get; set; }
		
		/// <summary>
		/// Specifies the time, in UTC format, when the service takes a daily automated snapshot of the specified Elasticsearch domain. Default value is <code>0</code> hours.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SnapshotOptions { get; set; }
		
		/// <summary>
		/// Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html" target="_blank"> VPC Endpoints for Amazon Elasticsearch Service Domains</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string VPCOptions { get; set; }
		
		/// <summary>
		/// Options to specify the Cognito user and identity pools for Kibana authentication. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html" target="_blank">Amazon Cognito Authentication for Kibana</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CognitoOptions { get; set; }
		
		/// <summary>
		/// <p> Exposes select native Elasticsearch configuration values from <code>elasticsearch.yml</code>. Currently, the following advanced options are available:</p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options" target="_blank">Configuration Advanced Options</a> for more information.</li> <li>Option to specify the percentage of heap space that is allocated to field data. By default, this setting is unbounded.</li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options">Configuring Advanced Options</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AdvancedOptions { get; set; }
		
		/// <summary>
		/// Access policy rules for an Elasticsearch domain service endpoints. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-access-policies" target="_blank">Configuring Access Policies</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>. The maximum size of a policy document is 100 KB.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AccessPolicies { get; set; }
		
		/// <summary>
		/// Map of <code>LogType</code> and <code>LogPublishingOption</code>, each containing options to publish a given type of Elasticsearch log.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string LogPublishingOptions { get; set; }
		
		/// <summary>
		/// Options to configure endpoint for the Elasticsearch domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DomainEndpointOptions { get; set; }
		
		/// <summary>
		/// Specifies the advanced security configuration: whether advanced security is enabled, whether the internal database option is enabled, master username and password (if internal database is enabled), and master user ARN (if IAM is enabled).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AdvancedSecurityOptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeElasticsearchDomainsBody
	{
		
		/// <summary>
		/// A list of Elasticsearch domain names.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DomainName[] DomainNames { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeInboundCrossClusterSearchConnectionsBody
	{
		
		/// <summary>
		///  A list of filters used to match properties for inbound cross-cluster search connection. Available <code><a>Filter</a></code> names for this operation are: <ul> <li>cross-cluster-search-connection-id</li> <li>source-domain-info.domain-name</li> <li>source-domain-info.owner-id</li> <li>source-domain-info.region</li> <li>destination-domain-info.domain-name</li> </ul> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		/// <summary>
		///  Set this value to limit the number of results returned. 
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(System.Int32.MinValue, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		///  Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeOutboundCrossClusterSearchConnectionsBody
	{
		
		/// <summary>
		///  A list of filters used to match properties for outbound cross-cluster search connection. Available <code><a>Filter</a></code> names for this operation are: <ul> <li>cross-cluster-search-connection-id</li> <li>destination-domain-info.domain-name</li> <li>destination-domain-info.owner-id</li> <li>destination-domain-info.region</li> <li>source-domain-info.domain-name</li> </ul> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		/// <summary>
		///  Set this value to limit the number of results returned. 
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(System.Int32.MinValue, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		///  Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribePackagesBody
	{
		
		/// <summary>
		/// A list of <code>DescribePackagesFilter</code> to filter the packages included in a <code>DescribePackages</code> response.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DescribePackagesFilter[] Filters { get; set; }
		
		/// <summary>
		///  Set this value to limit the number of results returned. 
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(System.Int32.MinValue, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		///  Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PurchaseReservedElasticsearchInstanceOfferingBody
	{
		
		/// <summary>
		/// The ID of the reserved Elasticsearch instance offering to purchase.
		/// Pattern: \p{XDigit}{8}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ReservedElasticsearchInstanceOfferingId { get; set; }
		
		/// <summary>
		/// A customer-specified identifier to track this reservation.
		/// Max length: 64
		/// Min length: 5
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=5)]
		public string ReservationName { get; set; }
		
		/// <summary>
		/// Specifies the number of EC2 instances in the Elasticsearch domain.
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> InstanceCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RemoveTagsBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the Elasticsearch domain. See <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access Management</i> for more information.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ARN { get; set; }
		
		/// <summary>
		/// Specifies the <code>TagKey</code> list which you want to remove from the Elasticsearch domain.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public String[] TagKeys { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartElasticsearchServiceSoftwareUpdateBody
	{
		
		/// <summary>
		/// The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Max length: 28
		/// Min length: 3
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(28, MinimumLength=3)]
		public string DomainName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpgradeElasticsearchDomainBody
	{
		
		/// <summary>
		/// The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Max length: 28
		/// Min length: 3
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(28, MinimumLength=3)]
		public string DomainName { get; set; }
		
		/// <summary>
		/// The version of Elasticsearch that you intend to upgrade the domain to.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetVersion { get; set; }
		
		/// <summary>
		///  This flag, when set to True, indicates that an Upgrade Eligibility Check needs to be performed. This will not actually perform the Upgrade. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PerformCheckOnly { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}
