//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace My.Demo.Client
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Net.Http;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Represents the output of an AcknowledgeJob action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AcknowledgeJobOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AcknowledgeJobOutputStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AcknowledgeJobOutputStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Created = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Queued = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Dispatched = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TimedOut = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 6,
	}
	
	/// <summary>
	/// Represents the input of an AcknowledgeJob action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AcknowledgeJobInput
	{
		
		/// <summary>
		/// Pattern: [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string JobId { get; set; }
		
		/// <summary>
		/// Max length: 50
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength=1)]
		public string Nonce { get; set; }
	}
	
	/// <summary>
	/// Represents the output of an AcknowledgeThirdPartyJob action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AcknowledgeThirdPartyJobOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AcknowledgeThirdPartyJobOutputStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AcknowledgeThirdPartyJobOutputStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Created = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Queued = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Dispatched = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TimedOut = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 6,
	}
	
	/// <summary>
	/// Represents the input of an AcknowledgeThirdPartyJob action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AcknowledgeThirdPartyJobInput
	{
		
		/// <summary>
		/// Max length: 512
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(512, MinimumLength=1)]
		public string JobId { get; set; }
		
		/// <summary>
		/// Max length: 50
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength=1)]
		public string Nonce { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string ClientToken { get; set; }
	}
	
	/// <summary>
	/// Represents the output of a <code>CreateCustomActionType</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateCustomActionTypeOutput
	{
		
		/// <summary>
		/// Returns information about the details of an action type.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActionType ActionType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	/// <summary>
	/// Represents the input of a CreateCustomActionType operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateCustomActionTypeInput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateCustomActionTypeInputCategory Category { get; set; }
		
		/// <summary>
		/// Max length: 25
		/// Min length: 1
		/// Pattern: [0-9A-Za-z_-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(25, MinimumLength=1)]
		public string Provider { get; set; }
		
		/// <summary>
		/// Max length: 9
		/// Min length: 1
		/// Pattern: [0-9A-Za-z_-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(9, MinimumLength=1)]
		public string Version { get; set; }
		
		/// <summary>
		/// Returns information about the settings for an action type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ActionTypeSettings Settings { get; set; }
		
		/// <summary>
		/// Maximum items: 10
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public ActionConfigurationProperty[] ConfigurationProperties { get; set; }
		
		/// <summary>
		/// Returns information about the details of an artifact.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ArtifactDetails InputArtifactDetails { get; set; }
		
		/// <summary>
		/// Returns information about the details of an artifact.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ArtifactDetails OutputArtifactDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateCustomActionTypeInputCategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Source = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Build = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deploy = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Test = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Invoke = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Approval = 5,
	}
	
	/// <summary>
	/// Represents the output of a <code>CreatePipeline</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreatePipelineOutput
	{
		
		/// <summary>
		/// Represents the structure of actions and stages to be performed in the pipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PipelineDeclaration Pipeline { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	/// <summary>
	/// Represents the input of a <code>CreatePipeline</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreatePipelineInput
	{
		
		/// <summary>
		/// Represents the structure of actions and stages to be performed in the pipeline.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PipelineDeclaration Pipeline { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	/// <summary>
	/// Represents the input of a <code>DeleteCustomActionType</code> operation. The custom action will be marked as deleted.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteCustomActionTypeInput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DeleteCustomActionTypeInputCategory Category { get; set; }
		
		/// <summary>
		/// Max length: 25
		/// Min length: 1
		/// Pattern: [0-9A-Za-z_-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(25, MinimumLength=1)]
		public string Provider { get; set; }
		
		/// <summary>
		/// Max length: 9
		/// Min length: 1
		/// Pattern: [0-9A-Za-z_-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(9, MinimumLength=1)]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DeleteCustomActionTypeInputCategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Source = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Build = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deploy = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Test = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Invoke = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Approval = 5,
	}
	
	/// <summary>
	/// Represents the input of a <code>DeletePipeline</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeletePipelineInput
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteWebhookInput
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeregisterWebhookWithThirdPartyInput
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string WebhookName { get; set; }
	}
	
	/// <summary>
	/// Represents the input of a <code>DisableStageTransition</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DisableStageTransitionInput
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string PipelineName { get; set; }
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string StageName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DisableStageTransitionInputTransitionType TransitionType { get; set; }
		
		/// <summary>
		/// Max length: 300
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9!@ \(\)\.\*\?\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(300, MinimumLength=1)]
		public string Reason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DisableStageTransitionInputTransitionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inbound = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Outbound = 1,
	}
	
	/// <summary>
	/// Represents the input of an <code>EnableStageTransition</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EnableStageTransitionInput
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string PipelineName { get; set; }
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string StageName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EnableStageTransitionInputTransitionType TransitionType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EnableStageTransitionInputTransitionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inbound = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Outbound = 1,
	}
	
	/// <summary>
	/// Represents the output of a <code>GetJobDetails</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetJobDetailsOutput
	{
		
		/// <summary>
		/// Represents information about the details of a job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public JobDetails JobDetails { get; set; }
	}
	
	/// <summary>
	/// Represents the input of a <code>GetJobDetails</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetJobDetailsInput
	{
		
		/// <summary>
		/// Pattern: [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string JobId { get; set; }
	}
	
	/// <summary>
	/// Represents the output of a <code>GetPipeline</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetPipelineOutput
	{
		
		/// <summary>
		/// Represents the structure of actions and stages to be performed in the pipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PipelineDeclaration Pipeline { get; set; }
		
		/// <summary>
		/// Information about a pipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PipelineMetadata Metadata { get; set; }
	}
	
	/// <summary>
	/// Represents the input of a <code>GetPipeline</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetPipelineInput
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	/// <summary>
	/// Represents the output of a <code>GetPipelineExecution</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetPipelineExecutionOutput
	{
		
		/// <summary>
		/// Represents information about an execution of a pipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PipelineExecution PipelineExecution { get; set; }
	}
	
	/// <summary>
	/// Represents the input of a <code>GetPipelineExecution</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetPipelineExecutionInput
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string PipelineName { get; set; }
		
		/// <summary>
		/// Pattern: [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PipelineExecutionId { get; set; }
	}
	
	/// <summary>
	/// Represents the output of a <code>GetPipelineState</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetPipelineStateOutput
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string PipelineName { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> PipelineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StageState[] StageStates { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> Created { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> Updated { get; set; }
	}
	
	/// <summary>
	/// Represents the input of a <code>GetPipelineState</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetPipelineStateInput
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Represents the output of a <code>GetThirdPartyJobDetails</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetThirdPartyJobDetailsOutput
	{
		
		/// <summary>
		/// The details of a job sent in response to a <code>GetThirdPartyJobDetails</code> request.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ThirdPartyJobDetails JobDetails { get; set; }
	}
	
	/// <summary>
	/// Represents the input of a <code>GetThirdPartyJobDetails</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetThirdPartyJobDetailsInput
	{
		
		/// <summary>
		/// Max length: 512
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(512, MinimumLength=1)]
		public string JobId { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string ClientToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListActionExecutionsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ActionExecutionDetail[] ActionExecutionDetails { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListActionExecutionsInput
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string PipelineName { get; set; }
		
		/// <summary>
		/// Filter values for the action execution.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ActionExecutionFilter Filter { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Represents the output of a <code>ListActionTypes</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListActionTypesOutput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActionType[] ActionTypes { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Represents the input of a <code>ListActionTypes</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListActionTypesInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ListActionTypesInputActionOwnerFilter ActionOwnerFilter { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListActionTypesInputActionOwnerFilter
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ThirdParty = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Custom = 2,
	}
	
	/// <summary>
	/// Represents the output of a <code>ListPipelineExecutions</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListPipelineExecutionsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PipelineExecutionSummary[] PipelineExecutionSummaries { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Represents the input of a <code>ListPipelineExecutions</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListPipelineExecutionsInput
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string PipelineName { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Represents the output of a <code>ListPipelines</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListPipelinesOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PipelineSummary[] Pipelines { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Represents the input of a <code>ListPipelines</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListPipelinesInput
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTagsForResourceOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTagsForResourceInput
	{
		
		/// <summary>
		/// Pattern: arn:aws(-[\w]+)*:codepipeline:.+:[0-9]{12}:.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceArn { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListWebhooksOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ListWebhookItem[] Webhooks { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListWebhooksInput
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	/// <summary>
	/// Represents the output of a <code>PollForJobs</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PollForJobsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Job[] Jobs { get; set; }
	}
	
	/// <summary>
	/// Represents the input of a <code>PollForJobs</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PollForJobsInput
	{
		
		/// <summary>
		/// Represents information about an action type.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActionTypeId ActionTypeId { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> MaxBatchSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QueryParamMap QueryParam { get; set; }
	}
	
	/// <summary>
	/// Represents the output of a <code>PollForThirdPartyJobs</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PollForThirdPartyJobsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ThirdPartyJob[] Jobs { get; set; }
	}
	
	/// <summary>
	/// Represents the input of a <code>PollForThirdPartyJobs</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PollForThirdPartyJobsInput
	{
		
		/// <summary>
		/// Represents information about an action type.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActionTypeId ActionTypeId { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> MaxBatchSize { get; set; }
	}
	
	/// <summary>
	/// Represents the output of a <code>PutActionRevision</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PutActionRevisionOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> NewRevision { get; set; }
		
		/// <summary>
		/// Pattern: [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PipelineExecutionId { get; set; }
	}
	
	/// <summary>
	/// Represents the input of a <code>PutActionRevision</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PutActionRevisionInput
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string PipelineName { get; set; }
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string StageName { get; set; }
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string ActionName { get; set; }
		
		/// <summary>
		/// Represents information about the version (or revision) of an action.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActionRevision ActionRevision { get; set; }
	}
	
	/// <summary>
	/// Represents the output of a <code>PutApprovalResult</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PutApprovalResultOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ApprovedAt { get; set; }
	}
	
	/// <summary>
	/// Represents the input of a <code>PutApprovalResult</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PutApprovalResultInput
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string PipelineName { get; set; }
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string StageName { get; set; }
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string ActionName { get; set; }
		
		/// <summary>
		/// Represents information about the result of an approval request.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApprovalResult Result { get; set; }
		
		/// <summary>
		/// Pattern: [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Token { get; set; }
	}
	
	/// <summary>
	/// Represents the input of a <code>PutJobFailureResult</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PutJobFailureResultInput
	{
		
		/// <summary>
		/// Pattern: [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string JobId { get; set; }
		
		/// <summary>
		/// Represents information about failure details.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FailureDetails FailureDetails { get; set; }
	}
	
	/// <summary>
	/// Represents the input of a <code>PutJobSuccessResult</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PutJobSuccessResultInput
	{
		
		/// <summary>
		/// Pattern: [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string JobId { get; set; }
		
		/// <summary>
		/// Represents information about a current revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CurrentRevision CurrentRevision { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ContinuationToken { get; set; }
		
		/// <summary>
		/// The details of the actions taken and results produced on an artifact as it passes through stages in the pipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ExecutionDetails ExecutionDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OutputVariablesMap OutputVariables { get; set; }
	}
	
	/// <summary>
	/// Represents the input of a <code>PutThirdPartyJobFailureResult</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PutThirdPartyJobFailureResultInput
	{
		
		/// <summary>
		/// Max length: 512
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(512, MinimumLength=1)]
		public string JobId { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// Represents information about failure details.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FailureDetails FailureDetails { get; set; }
	}
	
	/// <summary>
	/// Represents the input of a <code>PutThirdPartyJobSuccessResult</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PutThirdPartyJobSuccessResultInput
	{
		
		/// <summary>
		/// Max length: 512
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(512, MinimumLength=1)]
		public string JobId { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// Represents information about a current revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CurrentRevision CurrentRevision { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ContinuationToken { get; set; }
		
		/// <summary>
		/// The details of the actions taken and results produced on an artifact as it passes through stages in the pipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ExecutionDetails ExecutionDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PutWebhookOutput
	{
		
		/// <summary>
		/// The detail returned for each webhook after listing webhooks, such as the webhook URL, the webhook name, and the webhook ARN.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ListWebhookItem Webhook { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PutWebhookInput
	{
		
		/// <summary>
		/// Represents information about a webhook and its definition.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public WebhookDefinition Webhook { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RegisterWebhookWithThirdPartyInput
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string WebhookName { get; set; }
	}
	
	/// <summary>
	/// Represents the output of a <code>RetryStageExecution</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RetryStageExecutionOutput
	{
		
		/// <summary>
		/// Pattern: [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PipelineExecutionId { get; set; }
	}
	
	/// <summary>
	/// Represents the input of a <code>RetryStageExecution</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RetryStageExecutionInput
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string PipelineName { get; set; }
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string StageName { get; set; }
		
		/// <summary>
		/// Pattern: [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PipelineExecutionId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RetryStageExecutionInputRetryMode RetryMode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RetryStageExecutionInputRetryMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED_ACTIONS = 0,
	}
	
	/// <summary>
	/// Represents the output of a <code>StartPipelineExecution</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartPipelineExecutionOutput
	{
		
		/// <summary>
		/// Pattern: [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PipelineExecutionId { get; set; }
	}
	
	/// <summary>
	/// Represents the input of a <code>StartPipelineExecution</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartPipelineExecutionInput
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9-]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopPipelineExecutionOutput
	{
		
		/// <summary>
		/// Pattern: [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PipelineExecutionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopPipelineExecutionInput
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string PipelineName { get; set; }
		
		/// <summary>
		/// Pattern: [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PipelineExecutionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Abandon { get; set; }
		
		/// <summary>
		/// Max length: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(200)]
		public string Reason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TagResourceInput
	{
		
		/// <summary>
		/// Pattern: arn:aws(-[\w]+)*:codepipeline:.+:[0-9]{12}:.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UntagResourceInput
	{
		
		/// <summary>
		/// Pattern: arn:aws(-[\w]+)*:codepipeline:.+:[0-9]{12}:.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TagKey[] TagKeys { get; set; }
	}
	
	/// <summary>
	/// Represents the output of an <code>UpdatePipeline</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdatePipelineOutput
	{
		
		/// <summary>
		/// Represents the structure of actions and stages to be performed in the pipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PipelineDeclaration Pipeline { get; set; }
	}
	
	/// <summary>
	/// Represents the input of an <code>UpdatePipeline</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdatePipelineInput
	{
		
		/// <summary>
		/// Represents the structure of actions and stages to be performed in the pipeline.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PipelineDeclaration Pipeline { get; set; }
	}
	
	/// <summary>
	/// Represents an AWS session credentials object. These credentials are temporary credentials that are issued by AWS Secure Token Service (STS). They can be used to access input and output artifacts in the S3 bucket used to store artifact for the pipeline in AWS CodePipeline.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AWSSessionCredentials
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AccessKeyId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SecretAccessKey { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SessionToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum JobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Created = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Queued = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Dispatched = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TimedOut = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ActionCategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Source = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Build = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deploy = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Test = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Invoke = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Approval = 5,
	}
	
	/// <summary>
	/// Represents information about an action configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ActionConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ActionConfigurationMap Configuration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ActionConfigurationPropertyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		String = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Number = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Boolean = 2,
	}
	
	/// <summary>
	/// Represents information about an action configuration property.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ActionConfigurationProperty
	{
		
		/// <summary>
		/// Max length: 50
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength=1)]
		public string Name { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool Required { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool Key { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool Secret { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Queryable { get; set; }
		
		/// <summary>
		/// Max length: 160
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(160, MinimumLength=1)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ActionConfigurationPropertyType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ActionConfigurationPropertyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		String = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Number = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Boolean = 2,
	}
	
	/// <summary>
	/// Represents the context of an action in the stage of a pipeline to a job worker.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ActionContext
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ActionExecutionId { get; set; }
	}
	
	/// <summary>
	/// Represents information about an action type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ActionTypeId
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActionTypeIdCategory Category { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActionTypeIdOwner Owner { get; set; }
		
		/// <summary>
		/// Max length: 25
		/// Min length: 1
		/// Pattern: [0-9A-Za-z_-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(25, MinimumLength=1)]
		public string Provider { get; set; }
		
		/// <summary>
		/// Max length: 9
		/// Min length: 1
		/// Pattern: [0-9A-Za-z_-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(9, MinimumLength=1)]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ActionTypeIdCategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Source = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Build = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deploy = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Test = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Invoke = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Approval = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ActionTypeIdOwner
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ThirdParty = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Custom = 2,
	}
	
	/// <summary>
	/// Represents information about an action declaration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ActionDeclaration
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Represents information about an action type.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActionTypeId ActionTypeId { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 999
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 999)]
		public System.Nullable<System.Int32> RunOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ActionConfigurationMap Configuration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OutputArtifact[] OutputArtifacts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InputArtifact[] InputArtifacts { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: arn:aws(-[\w]+)*:iam::[0-9]{12}:role/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Max length: 30
		/// Min length: 4
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(30, MinimumLength=4)]
		public string Region { get; set; }
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9@\-_]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string Namespace { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ActionExecutionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Abandoned = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
	}
	
	/// <summary>
	/// Represents information about an error in AWS CodePipeline.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ErrorDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Code { get; set; }
		
		/// <summary>
		/// Max length: 5000
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(5000, MinimumLength=1)]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// Represents information about the run of an action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ActionExecution
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ActionExecutionStatus Status { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string Summary { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastStatusChange { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Token { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastUpdatedBy { get; set; }
		
		/// <summary>
		/// Max length: 1500
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1500, MinimumLength=1)]
		public string ExternalExecutionId { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ExternalExecutionUrl { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 100)]
		public System.Nullable<System.Int32> PercentComplete { get; set; }
		
		/// <summary>
		/// Represents information about an error in AWS CodePipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ErrorDetails ErrorDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ActionExecutionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Abandoned = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
	}
	
	/// <summary>
	/// Input information used for an action execution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ActionExecutionInput
	{
		
		/// <summary>
		/// Represents information about an action type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ActionTypeId ActionTypeId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ActionConfigurationMap Configuration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResolvedActionConfigurationMap ResolvedConfiguration { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: arn:aws(-[\w]+)*:iam::[0-9]{12}:role/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Max length: 30
		/// Min length: 4
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(30, MinimumLength=4)]
		public string Region { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ArtifactDetail[] InputArtifacts { get; set; }
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9@\-_]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string Namespace { get; set; }
	}
	
	/// <summary>
	/// Output details listed for an action execution, such as the action execution result.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ActionExecutionOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ArtifactDetail[] OutputArtifacts { get; set; }
		
		/// <summary>
		/// Execution result information, such as the external execution ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ActionExecutionResult ExecutionResult { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OutputVariablesMap OutputVariables { get; set; }
	}
	
	/// <summary>
	/// Returns information about an execution of an action, including the action execution ID, and the name, version, and timing of the action. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ActionExecutionDetail
	{
		
		/// <summary>
		/// Pattern: [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PipelineExecutionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ActionExecutionId { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> PipelineVersion { get; set; }
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string StageName { get; set; }
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string ActionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ActionExecutionDetailStatus Status { get; set; }
		
		/// <summary>
		/// Input information used for an action execution.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ActionExecutionInput Input { get; set; }
		
		/// <summary>
		/// Output details listed for an action execution, such as the action execution result.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ActionExecutionOutput Output { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ActionExecutionDetailStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Abandoned = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
	}
	
	/// <summary>
	/// Filter values for the action execution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ActionExecutionFilter
	{
		
		/// <summary>
		/// Pattern: [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PipelineExecutionId { get; set; }
	}
	
	/// <summary>
	/// Execution result information, such as the external execution ID.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ActionExecutionResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ExternalExecutionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExternalExecutionSummary { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ExternalExecutionUrl { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ActionOwner
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ThirdParty = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Custom = 2,
	}
	
	/// <summary>
	/// Represents information about the version (or revision) of an action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ActionRevision
	{
		
		/// <summary>
		/// Max length: 1500
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1500, MinimumLength=1)]
		public string RevisionId { get; set; }
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string RevisionChangeId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset Created { get; set; }
	}
	
	/// <summary>
	/// Represents information about the state of an action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ActionState
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string ActionName { get; set; }
		
		/// <summary>
		/// Represents information about the version (or revision) of an action.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ActionRevision CurrentRevision { get; set; }
		
		/// <summary>
		/// Represents information about the run of an action.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ActionExecution LatestExecution { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string EntityUrl { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string RevisionUrl { get; set; }
	}
	
	/// <summary>
	/// Returns information about the settings for an action type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ActionTypeSettings
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ThirdPartyConfigurationUrl { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string EntityUrlTemplate { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ExecutionUrlTemplate { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string RevisionUrlTemplate { get; set; }
	}
	
	/// <summary>
	/// Returns information about the details of an artifact.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ArtifactDetails
	{
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 5
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 5)]
		public int MinimumCount { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 5
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 5)]
		public int MaximumCount { get; set; }
	}
	
	/// <summary>
	/// Returns information about the details of an action type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ActionType
	{
		
		/// <summary>
		/// Represents information about an action type.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActionTypeId Id { get; set; }
		
		/// <summary>
		/// Returns information about the settings for an action type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ActionTypeSettings Settings { get; set; }
		
		/// <summary>
		/// Maximum items: 10
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public ActionConfigurationProperty[] ActionConfigurationProperties { get; set; }
		
		/// <summary>
		/// Returns information about the details of an artifact.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ArtifactDetails InputArtifactDetails { get; set; }
		
		/// <summary>
		/// Returns information about the details of an artifact.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ArtifactDetails OutputArtifactDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ApprovalStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Approved = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Rejected = 1,
	}
	
	/// <summary>
	/// Represents information about the result of an approval request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ApprovalResult
	{
		
		/// <summary>
		/// Max length: 512
		/// Min length: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(512, MinimumLength=0)]
		public string Summary { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApprovalResultStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ApprovalResultStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Approved = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Rejected = 1,
	}
	
	/// <summary>
	/// Represents information about the location of an artifact.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ArtifactLocation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ArtifactLocationType Type { get; set; }
		
		/// <summary>
		/// The location of the S3 bucket that contains a revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3ArtifactLocation S3Location { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ArtifactLocationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3 = 0,
	}
	
	/// <summary>
	/// Represents information about an artifact that is worked on by actions in the pipeline.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Artifact
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Max length: 1500
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1500, MinimumLength=1)]
		public string Revision { get; set; }
		
		/// <summary>
		/// Represents information about the location of an artifact.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ArtifactLocation Location { get; set; }
	}
	
	/// <summary>
	/// The Amazon S3 artifact location for an action's artifacts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3Location
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 3
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=3)]
		public string Bucket { get; set; }
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string Key { get; set; }
	}
	
	/// <summary>
	/// Artifact details for the action execution, such as the artifact location.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ArtifactDetail
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// The Amazon S3 artifact location for an action's artifacts.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3Location S3location { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ArtifactLocationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3 = 0,
	}
	
	/// <summary>
	/// The location of the S3 bucket that contains a revision.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3ArtifactLocation
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BucketName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ObjectKey { get; set; }
	}
	
	/// <summary>
	/// Represents revision details of an artifact. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ArtifactRevision
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Max length: 1500
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1500, MinimumLength=1)]
		public string RevisionId { get; set; }
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string RevisionChangeIdentifier { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string RevisionSummary { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> Created { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string RevisionUrl { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ArtifactStoreType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3 = 0,
	}
	
	/// <summary>
	/// Represents information about the key used to encrypt data in the artifact store, such as an AWS Key Management Service (AWS KMS) key.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EncryptionKey
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string Id { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EncryptionKeyType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EncryptionKeyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KMS = 0,
	}
	
	/// <summary>
	/// <p>The S3 bucket where artifacts for the pipeline are stored.</p> <note> <p>You must include either <code>artifactStore</code> or <code>artifactStores</code> in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use <code>artifactStores</code>.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ArtifactStore
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ArtifactStoreType Type { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Min length: 3
		/// Pattern: [a-zA-Z0-9\-\.]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=3)]
		public string Location { get; set; }
		
		/// <summary>
		/// Represents information about the key used to encrypt data in the artifact store, such as an AWS Key Management Service (AWS KMS) key.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EncryptionKey EncryptionKey { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ArtifactStoreType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3 = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum BlockerType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Schedule = 0,
	}
	
	/// <summary>
	/// Reserved for future use.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BlockerDeclaration
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string Name { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BlockerDeclarationType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum BlockerDeclarationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Schedule = 0,
	}
	
	/// <summary>
	/// Represents the structure of actions and stages to be performed in the pipeline.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PipelineDeclaration
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: arn:aws(-[\w]+)*:iam::[0-9]{12}:role/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// <p>The S3 bucket where artifacts for the pipeline are stored.</p> <note> <p>You must include either <code>artifactStore</code> or <code>artifactStores</code> in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use <code>artifactStores</code>.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ArtifactStore ArtifactStore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ArtifactStoreMap ArtifactStores { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StageDeclaration[] Stages { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	/// <summary>
	/// Represents information about a current revision.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CurrentRevision
	{
		
		/// <summary>
		/// Max length: 1500
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1500, MinimumLength=1)]
		public string Revision { get; set; }
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string ChangeIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> Created { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string RevisionSummary { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StageTransitionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inbound = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Outbound = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EncryptionKeyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KMS = 0,
	}
	
	/// <summary>
	/// The details of the actions taken and results produced on an artifact as it passes through stages in the pipeline.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ExecutionDetails
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string Summary { get; set; }
		
		/// <summary>
		/// Max length: 1500
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1500, MinimumLength=1)]
		public string ExternalExecutionId { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 100)]
		public System.Nullable<System.Int32> PercentComplete { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TriggerType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreatePipeline = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StartPipelineExecution = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PollForSourceChanges = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Webhook = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CloudWatchEvent = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PutActionRevision = 5,
	}
	
	/// <summary>
	/// The interaction or event that started a pipeline execution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ExecutionTrigger
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ExecutionTriggerTriggerType TriggerType { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=0)]
		public string TriggerDetail { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ExecutionTriggerTriggerType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreatePipeline = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StartPipelineExecution = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PollForSourceChanges = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Webhook = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CloudWatchEvent = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PutActionRevision = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FailureType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JobFailed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ConfigurationError = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PermissionError = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RevisionOutOfSync = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RevisionUnavailable = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SystemUnavailable = 5,
	}
	
	/// <summary>
	/// Represents information about failure details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FailureDetails
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FailureDetailsType Type { get; set; }
		
		/// <summary>
		/// Max length: 5000
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(5000, MinimumLength=1)]
		public string Message { get; set; }
		
		/// <summary>
		/// Max length: 1500
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1500, MinimumLength=1)]
		public string ExternalExecutionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FailureDetailsType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JobFailed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ConfigurationError = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PermissionError = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RevisionOutOfSync = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RevisionUnavailable = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SystemUnavailable = 5,
	}
	
	/// <summary>
	/// Represents information about the details of a job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class JobDetails
	{
		
		/// <summary>
		/// Pattern: [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Represents other information about a job required for a job worker to complete the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public JobData Data { get; set; }
		
		/// <summary>
		/// Pattern: [0-9]{12}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
	}
	
	/// <summary>
	/// Represents information about an execution of a pipeline.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PipelineExecution
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string PipelineName { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> PipelineVersion { get; set; }
		
		/// <summary>
		/// Pattern: [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PipelineExecutionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PipelineExecutionStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ArtifactRevision[] ArtifactRevisions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum PipelineExecutionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Superseded = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 5,
	}
	
	/// <summary>
	/// Information about a pipeline.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PipelineMetadata
	{
		
		/// <summary>
		/// Pattern: arn:aws(-[\w]+)*:codepipeline:.+:[0-9]{12}:.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PipelineArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> Created { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> Updated { get; set; }
	}
	
	/// <summary>
	/// The details of a job sent in response to a <code>GetThirdPartyJobDetails</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ThirdPartyJobDetails
	{
		
		/// <summary>
		/// Max length: 512
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(512, MinimumLength=1)]
		public string Id { get; set; }
		
		/// <summary>
		/// Represents information about the job data for a partner action.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ThirdPartyJobData Data { get; set; }
		
		/// <summary>
		/// Max length: 50
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength=1)]
		public string Nonce { get; set; }
	}
	
	/// <summary>
	/// Represents information about an artifact to be worked on, such as a test or build artifact.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InputArtifact
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Represents other information about a job required for a job worker to complete the job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class JobData
	{
		
		/// <summary>
		/// Represents information about an action type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ActionTypeId ActionTypeId { get; set; }
		
		/// <summary>
		/// Represents information about an action configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ActionConfiguration ActionConfiguration { get; set; }
		
		/// <summary>
		/// <p>Represents information about a pipeline to a job worker.</p> <note> <p>PipelineContext contains <code>pipelineArn</code> and <code>pipelineExecutionId</code> for custom action jobs. The <code>pipelineArn</code> and <code>pipelineExecutionId</code> fields are not populated for ThirdParty action jobs.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PipelineContext PipelineContext { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Artifact[] InputArtifacts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Artifact[] OutputArtifacts { get; set; }
		
		/// <summary>
		/// Represents an AWS session credentials object. These credentials are temporary credentials that are issued by AWS Secure Token Service (STS). They can be used to access input and output artifacts in the S3 bucket used to store artifact for the pipeline in AWS CodePipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AWSSessionCredentials ArtifactCredentials { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ContinuationToken { get; set; }
		
		/// <summary>
		/// Represents information about the key used to encrypt data in the artifact store, such as an AWS Key Management Service (AWS KMS) key.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EncryptionKey EncryptionKey { get; set; }
	}
	
	/// <summary>
	/// Represents information about a job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Job
	{
		
		/// <summary>
		/// Pattern: [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Represents other information about a job required for a job worker to complete the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public JobData Data { get; set; }
		
		/// <summary>
		/// Max length: 50
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength=1)]
		public string Nonce { get; set; }
		
		/// <summary>
		/// Pattern: [0-9]{12}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
	}
	
	/// <summary>
	/// <p>Represents information about a pipeline to a job worker.</p> <note> <p>PipelineContext contains <code>pipelineArn</code> and <code>pipelineExecutionId</code> for custom action jobs. The <code>pipelineArn</code> and <code>pipelineExecutionId</code> fields are not populated for ThirdParty action jobs.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PipelineContext
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string PipelineName { get; set; }
		
		/// <summary>
		/// Represents information about a stage to a job worker.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StageContext Stage { get; set; }
		
		/// <summary>
		/// Represents the context of an action in the stage of a pipeline to a job worker.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ActionContext Action { get; set; }
		
		/// <summary>
		/// Pattern: arn:aws(-[\w]+)*:codepipeline:.+:[0-9]{12}:.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PipelineArn { get; set; }
		
		/// <summary>
		/// Pattern: [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PipelineExecutionId { get; set; }
	}
	
	/// <summary>
	/// Represents information about a webhook and its definition.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class WebhookDefinition
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string TargetPipeline { get; set; }
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string TargetAction { get; set; }
		
		/// <summary>
		/// Maximum items: 5
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public WebhookFilterRule[] Filters { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public WebhookDefinitionAuthentication Authentication { get; set; }
		
		/// <summary>
		/// The authentication applied to incoming webhook trigger requests.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public WebhookAuthConfiguration AuthenticationConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum WebhookDefinitionAuthentication
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GITHUB_HMAC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IP = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNAUTHENTICATED = 2,
	}
	
	/// <summary>
	/// The detail returned for each webhook after listing webhooks, such as the webhook URL, the webhook name, and the webhook ARN.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListWebhookItem
	{
		
		/// <summary>
		/// Represents information about a webhook and its definition.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public WebhookDefinition Definition { get; set; }
		
		/// <summary>
		/// Max length: 1000
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1000, MinimumLength=1)]
		public string Url { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastTriggered { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	/// <summary>
	/// Represents information about the output of an action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class OutputArtifact
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Represents information about a stage to a job worker.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StageContext
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum PipelineExecutionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Superseded = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 5,
	}
	
	/// <summary>
	/// The interaction that stopped a pipeline execution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopExecutionTrigger
	{
		
		/// <summary>
		/// Max length: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(200)]
		public string Reason { get; set; }
	}
	
	/// <summary>
	/// Summary information about a pipeline execution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PipelineExecutionSummary
	{
		
		/// <summary>
		/// Pattern: [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PipelineExecutionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PipelineExecutionSummaryStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SourceRevision[] SourceRevisions { get; set; }
		
		/// <summary>
		/// The interaction or event that started a pipeline execution.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ExecutionTrigger Trigger { get; set; }
		
		/// <summary>
		/// The interaction that stopped a pipeline execution.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StopExecutionTrigger StopTrigger { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum PipelineExecutionSummaryStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Superseded = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 5,
	}
	
	/// <summary>
	/// Returns a summary of a pipeline.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PipelineSummary
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> Created { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> Updated { get; set; }
	}
	
	/// <summary>
	/// Represents information about a stage and its definition.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StageDeclaration
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BlockerDeclaration[] Blockers { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActionDeclaration[] Actions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StageRetryMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED_ACTIONS = 0,
	}
	
	/// <summary>
	/// Information about the version (or revision) of a source artifact that initiated a pipeline execution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SourceRevision
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string ActionName { get; set; }
		
		/// <summary>
		/// Max length: 1500
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1500, MinimumLength=1)]
		public string RevisionId { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string RevisionSummary { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string RevisionUrl { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StageExecutionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 4,
	}
	
	/// <summary>
	/// Represents information about the run of a stage.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StageExecution
	{
		
		/// <summary>
		/// Pattern: [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PipelineExecutionId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StageExecutionStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StageExecutionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 4,
	}
	
	/// <summary>
	/// Represents information about the state of transitions between one stage and another stage.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TransitionState
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastChangedBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastChangedAt { get; set; }
		
		/// <summary>
		/// Max length: 300
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9!@ \(\)\.\*\?\-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(300, MinimumLength=1)]
		public string DisabledReason { get; set; }
	}
	
	/// <summary>
	/// Represents information about the state of the stage.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StageState
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// Pattern: [A-Za-z0-9.@\-_]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string StageName { get; set; }
		
		/// <summary>
		/// Represents information about the state of transitions between one stage and another stage.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TransitionState InboundTransitionState { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ActionState[] ActionStates { get; set; }
		
		/// <summary>
		/// Represents information about the run of a stage.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StageExecution LatestExecution { get; set; }
	}
	
	/// <summary>
	/// A tag is a key-value pair that is used to manage the resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Tag
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string Key { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=0)]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// A response to a <code>PollForThirdPartyJobs</code> request returned by AWS CodePipeline when there is a job to be worked on by a partner action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ThirdPartyJob
	{
		
		/// <summary>
		/// Pattern: [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ClientId { get; set; }
		
		/// <summary>
		/// Pattern: [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string JobId { get; set; }
	}
	
	/// <summary>
	/// Represents information about the job data for a partner action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ThirdPartyJobData
	{
		
		/// <summary>
		/// Represents information about an action type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ActionTypeId ActionTypeId { get; set; }
		
		/// <summary>
		/// Represents information about an action configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ActionConfiguration ActionConfiguration { get; set; }
		
		/// <summary>
		/// <p>Represents information about a pipeline to a job worker.</p> <note> <p>PipelineContext contains <code>pipelineArn</code> and <code>pipelineExecutionId</code> for custom action jobs. The <code>pipelineArn</code> and <code>pipelineExecutionId</code> fields are not populated for ThirdParty action jobs.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PipelineContext PipelineContext { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Artifact[] InputArtifacts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Artifact[] OutputArtifacts { get; set; }
		
		/// <summary>
		/// Represents an AWS session credentials object. These credentials are temporary credentials that are issued by AWS Secure Token Service (STS). They can be used to access input and output artifacts in the S3 bucket used to store artifact for the pipeline in AWS CodePipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AWSSessionCredentials ArtifactCredentials { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ContinuationToken { get; set; }
		
		/// <summary>
		/// Represents information about the key used to encrypt data in the artifact store, such as an AWS Key Management Service (AWS KMS) key.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EncryptionKey EncryptionKey { get; set; }
	}
	
	/// <summary>
	/// The authentication applied to incoming webhook trigger requests.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class WebhookAuthConfiguration
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string AllowedIPRange { get; set; }
		
		/// <summary>
		/// Max length: 100
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=1)]
		public string SecretToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum WebhookAuthenticationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GITHUB_HMAC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IP = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNAUTHENTICATED = 2,
	}
	
	/// <summary>
	/// The event criteria that specify when a webhook notification is sent to your URL.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class WebhookFilterRule
	{
		
		/// <summary>
		/// Max length: 150
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(150, MinimumLength=1)]
		public string JsonPath { get; set; }
		
		/// <summary>
		/// Max length: 150
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(150, MinimumLength=1)]
		public string MatchEquals { get; set; }
	}
	
	public partial class DemoClient
	{
		
		private System.Net.Http.HttpClient client;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public DemoClient(System.Net.Http.HttpClient client, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (client == null)
				throw new ArgumentNullException("Null HttpClient.", "client");

			if (client.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "client");

			this.client = client;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Returns information about a specified job and whether that job has been received by the job worker. Used for custom actions only.
		/// AcknowledgeJob /#X-Amz-Target=CodePipeline_20150709.AcknowledgeJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<AcknowledgeJobOutput> AcknowledgeJobAsync(AcknowledgeJobInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.AcknowledgeJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<AcknowledgeJobOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Confirms a job worker has received the specified job. Used for partner actions only.
		/// AcknowledgeThirdPartyJob /#X-Amz-Target=CodePipeline_20150709.AcknowledgeThirdPartyJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<AcknowledgeThirdPartyJobOutput> AcknowledgeThirdPartyJobAsync(AcknowledgeThirdPartyJobInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.AcknowledgeThirdPartyJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<AcknowledgeThirdPartyJobOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a new custom action that can be used in all pipelines associated with the AWS account. Only used for custom actions.
		/// CreateCustomActionType /#X-Amz-Target=CodePipeline_20150709.CreateCustomActionType
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateCustomActionTypeOutput> CreateCustomActionTypeAsync(CreateCustomActionTypeInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.CreateCustomActionType";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateCustomActionTypeOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a pipeline.</p> <note> <p>In the pipeline structure, you must include either <code>artifactStore</code> or <code>artifactStores</code> in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use <code>artifactStores</code>.</p> </note>
		/// CreatePipeline /#X-Amz-Target=CodePipeline_20150709.CreatePipeline
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreatePipelineOutput> CreatePipelineAsync(CreatePipelineInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.CreatePipeline";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreatePipelineOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Marks a custom action as deleted. <code>PollForJobs</code> for the custom action fails after the action is marked for deletion. Used for custom actions only.</p> <important> <p>To re-create a custom action after it has been deleted you must use a string in the version field that has never been used before. This string can be an incremented version number, for example. To restore a deleted custom action, use a JSON file that is identical to the deleted action, including the original string in the version field.</p> </important>
		/// DeleteCustomActionType /#X-Amz-Target=CodePipeline_20150709.DeleteCustomActionType
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeleteCustomActionTypeAsync(DeleteCustomActionTypeInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.DeleteCustomActionType";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes the specified pipeline.
		/// DeletePipeline /#X-Amz-Target=CodePipeline_20150709.DeletePipeline
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeletePipelineAsync(DeletePipelineInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.DeletePipeline";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes a previously created webhook by name. Deleting the webhook stops AWS CodePipeline from starting a pipeline every time an external event occurs. The API returns successfully when trying to delete a webhook that is already deleted. If a deleted webhook is re-created by calling PutWebhook with the same name, it will have a different URL.
		/// DeleteWebhook /#X-Amz-Target=CodePipeline_20150709.DeleteWebhook
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteWebhookOutput> DeleteWebhookAsync(DeleteWebhookInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.DeleteWebhook";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteWebhookOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Removes the connection between the webhook that was created by CodePipeline and the external tool with events to be detected. Currently supported only for webhooks that target an action type of GitHub.
		/// DeregisterWebhookWithThirdParty /#X-Amz-Target=CodePipeline_20150709.DeregisterWebhookWithThirdParty
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeregisterWebhookWithThirdPartyOutput> DeregisterWebhookWithThirdPartyAsync(DeregisterWebhookWithThirdPartyInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.DeregisterWebhookWithThirdParty";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeregisterWebhookWithThirdPartyOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Prevents artifacts in a pipeline from transitioning to the next stage in the pipeline.
		/// DisableStageTransition /#X-Amz-Target=CodePipeline_20150709.DisableStageTransition
		/// </summary>
		/// <returns>Success</returns>
		public async Task DisableStageTransitionAsync(DisableStageTransitionInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.DisableStageTransition";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Enables artifacts in a pipeline to transition to a stage in a pipeline.
		/// EnableStageTransition /#X-Amz-Target=CodePipeline_20150709.EnableStageTransition
		/// </summary>
		/// <returns>Success</returns>
		public async Task EnableStageTransitionAsync(EnableStageTransitionInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.EnableStageTransition";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Returns information about a job. Used for custom actions only.</p> <important> <p>When this API is called, AWS CodePipeline returns temporary credentials for the S3 bucket used to store artifacts for the pipeline, if the action requires access to that S3 bucket for input or output artifacts. This API also returns any secret values defined for the action.</p> </important>
		/// GetJobDetails /#X-Amz-Target=CodePipeline_20150709.GetJobDetails
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetJobDetailsOutput> GetJobDetailsAsync(GetJobDetailsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.GetJobDetails";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetJobDetailsOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns the metadata, structure, stages, and actions of a pipeline. Can be used to return the entire structure of a pipeline in JSON format, which can then be modified and used to update the pipeline structure with <a>UpdatePipeline</a>.
		/// GetPipeline /#X-Amz-Target=CodePipeline_20150709.GetPipeline
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetPipelineOutput> GetPipelineAsync(GetPipelineInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.GetPipeline";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetPipelineOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns information about an execution of a pipeline, including details about artifacts, the pipeline execution ID, and the name, version, and status of the pipeline.
		/// GetPipelineExecution /#X-Amz-Target=CodePipeline_20150709.GetPipelineExecution
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetPipelineExecutionOutput> GetPipelineExecutionAsync(GetPipelineExecutionInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.GetPipelineExecution";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetPipelineExecutionOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Returns information about the state of a pipeline, including the stages and actions.</p> <note> <p>Values returned in the <code>revisionId</code> and <code>revisionUrl</code> fields indicate the source revision information, such as the commit ID, for the current state.</p> </note>
		/// GetPipelineState /#X-Amz-Target=CodePipeline_20150709.GetPipelineState
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetPipelineStateOutput> GetPipelineStateAsync(GetPipelineStateInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.GetPipelineState";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetPipelineStateOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Requests the details of a job for a third party action. Used for partner actions only.</p> <important> <p>When this API is called, AWS CodePipeline returns temporary credentials for the S3 bucket used to store artifacts for the pipeline, if the action requires access to that S3 bucket for input or output artifacts. This API also returns any secret values defined for the action.</p> </important>
		/// GetThirdPartyJobDetails /#X-Amz-Target=CodePipeline_20150709.GetThirdPartyJobDetails
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetThirdPartyJobDetailsOutput> GetThirdPartyJobDetailsAsync(GetThirdPartyJobDetailsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.GetThirdPartyJobDetails";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetThirdPartyJobDetailsOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists the action executions that have occurred in a pipeline.
		/// ListActionExecutions /#X-Amz-Target=CodePipeline_20150709.ListActionExecutions
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListActionExecutionsOutput> ListActionExecutionsAsync(string maxResults, string nextToken, ListActionExecutionsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.ListActionExecutions?maxResults=" + (maxResults==null? "" : Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListActionExecutionsOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets a summary of all AWS CodePipeline action types associated with your account.
		/// ListActionTypes /#X-Amz-Target=CodePipeline_20150709.ListActionTypes
		/// </summary>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListActionTypesOutput> ListActionTypesAsync(string nextToken, ListActionTypesInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.ListActionTypes?nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListActionTypesOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets a summary of the most recent executions for a pipeline.
		/// ListPipelineExecutions /#X-Amz-Target=CodePipeline_20150709.ListPipelineExecutions
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListPipelineExecutionsOutput> ListPipelineExecutionsAsync(string maxResults, string nextToken, ListPipelineExecutionsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.ListPipelineExecutions?maxResults=" + (maxResults==null? "" : Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListPipelineExecutionsOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets a summary of all of the pipelines associated with your account.
		/// ListPipelines /#X-Amz-Target=CodePipeline_20150709.ListPipelines
		/// </summary>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListPipelinesOutput> ListPipelinesAsync(string nextToken, ListPipelinesInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.ListPipelines?nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListPipelinesOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets the set of key-value pairs (metadata) that are used to manage the resource.
		/// ListTagsForResource /#X-Amz-Target=CodePipeline_20150709.ListTagsForResource
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceOutput> ListTagsForResourceAsync(string maxResults, string nextToken, ListTagsForResourceInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.ListTagsForResource?maxResults=" + (maxResults==null? "" : Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListTagsForResourceOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets a listing of all the webhooks in this AWS Region for this account. The output lists all webhooks and includes the webhook URL and ARN and the configuration for each webhook.
		/// ListWebhooks /#X-Amz-Target=CodePipeline_20150709.ListWebhooks
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListWebhooksOutput> ListWebhooksAsync(string MaxResults, string NextToken, ListWebhooksInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.ListWebhooks?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListWebhooksOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Returns information about any jobs for AWS CodePipeline to act on. <code>PollForJobs</code> is valid only for action types with "Custom" in the owner field. If the action type contains "AWS" or "ThirdParty" in the owner field, the <code>PollForJobs</code> action returns an error.</p> <important> <p>When this API is called, AWS CodePipeline returns temporary credentials for the S3 bucket used to store artifacts for the pipeline, if the action requires access to that S3 bucket for input or output artifacts. This API also returns any secret values defined for the action.</p> </important>
		/// PollForJobs /#X-Amz-Target=CodePipeline_20150709.PollForJobs
		/// </summary>
		/// <returns>Success</returns>
		public async Task<PollForJobsOutput> PollForJobsAsync(PollForJobsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.PollForJobs";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<PollForJobsOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Determines whether there are any third party jobs for a job worker to act on. Used for partner actions only.</p> <important> <p>When this API is called, AWS CodePipeline returns temporary credentials for the S3 bucket used to store artifacts for the pipeline, if the action requires access to that S3 bucket for input or output artifacts.</p> </important>
		/// PollForThirdPartyJobs /#X-Amz-Target=CodePipeline_20150709.PollForThirdPartyJobs
		/// </summary>
		/// <returns>Success</returns>
		public async Task<PollForThirdPartyJobsOutput> PollForThirdPartyJobsAsync(PollForThirdPartyJobsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.PollForThirdPartyJobs";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<PollForThirdPartyJobsOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Provides information to AWS CodePipeline about new revisions to a source.
		/// PutActionRevision /#X-Amz-Target=CodePipeline_20150709.PutActionRevision
		/// </summary>
		/// <returns>Success</returns>
		public async Task<PutActionRevisionOutput> PutActionRevisionAsync(PutActionRevisionInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.PutActionRevision";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<PutActionRevisionOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Provides the response to a manual approval request to AWS CodePipeline. Valid responses include Approved and Rejected.
		/// PutApprovalResult /#X-Amz-Target=CodePipeline_20150709.PutApprovalResult
		/// </summary>
		/// <returns>Success</returns>
		public async Task<PutApprovalResultOutput> PutApprovalResultAsync(PutApprovalResultInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.PutApprovalResult";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<PutApprovalResultOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Represents the failure of a job as returned to the pipeline by a job worker. Used for custom actions only.
		/// PutJobFailureResult /#X-Amz-Target=CodePipeline_20150709.PutJobFailureResult
		/// </summary>
		/// <returns>Success</returns>
		public async Task PutJobFailureResultAsync(PutJobFailureResultInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.PutJobFailureResult";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Represents the success of a job as returned to the pipeline by a job worker. Used for custom actions only.
		/// PutJobSuccessResult /#X-Amz-Target=CodePipeline_20150709.PutJobSuccessResult
		/// </summary>
		/// <returns>Success</returns>
		public async Task PutJobSuccessResultAsync(PutJobSuccessResultInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.PutJobSuccessResult";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Represents the failure of a third party job as returned to the pipeline by a job worker. Used for partner actions only.
		/// PutThirdPartyJobFailureResult /#X-Amz-Target=CodePipeline_20150709.PutThirdPartyJobFailureResult
		/// </summary>
		/// <returns>Success</returns>
		public async Task PutThirdPartyJobFailureResultAsync(PutThirdPartyJobFailureResultInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.PutThirdPartyJobFailureResult";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Represents the success of a third party job as returned to the pipeline by a job worker. Used for partner actions only.
		/// PutThirdPartyJobSuccessResult /#X-Amz-Target=CodePipeline_20150709.PutThirdPartyJobSuccessResult
		/// </summary>
		/// <returns>Success</returns>
		public async Task PutThirdPartyJobSuccessResultAsync(PutThirdPartyJobSuccessResultInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.PutThirdPartyJobSuccessResult";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Defines a webhook and returns a unique webhook URL generated by CodePipeline. This URL can be supplied to third party source hosting providers to call every time there's a code change. When CodePipeline receives a POST request on this URL, the pipeline defined in the webhook is started as long as the POST request satisfied the authentication and filtering requirements supplied when defining the webhook. RegisterWebhookWithThirdParty and DeregisterWebhookWithThirdParty APIs can be used to automatically configure supported third parties to call the generated webhook URL.
		/// PutWebhook /#X-Amz-Target=CodePipeline_20150709.PutWebhook
		/// </summary>
		/// <returns>Success</returns>
		public async Task<PutWebhookOutput> PutWebhookAsync(PutWebhookInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.PutWebhook";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<PutWebhookOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Configures a connection between the webhook that was created and the external tool with events to be detected.
		/// RegisterWebhookWithThirdParty /#X-Amz-Target=CodePipeline_20150709.RegisterWebhookWithThirdParty
		/// </summary>
		/// <returns>Success</returns>
		public async Task<RegisterWebhookWithThirdPartyOutput> RegisterWebhookWithThirdPartyAsync(RegisterWebhookWithThirdPartyInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.RegisterWebhookWithThirdParty";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<RegisterWebhookWithThirdPartyOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Resumes the pipeline execution by retrying the last failed actions in a stage. You can retry a stage immediately if any of the actions in the stage fail. When you retry, all actions that are still in progress continue working, and failed actions are triggered again.
		/// RetryStageExecution /#X-Amz-Target=CodePipeline_20150709.RetryStageExecution
		/// </summary>
		/// <returns>Success</returns>
		public async Task<RetryStageExecutionOutput> RetryStageExecutionAsync(RetryStageExecutionInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.RetryStageExecution";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<RetryStageExecutionOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Starts the specified pipeline. Specifically, it begins processing the latest commit to the source location specified as part of the pipeline.
		/// StartPipelineExecution /#X-Amz-Target=CodePipeline_20150709.StartPipelineExecution
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartPipelineExecutionOutput> StartPipelineExecutionAsync(StartPipelineExecutionInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.StartPipelineExecution";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<StartPipelineExecutionOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Stops the specified pipeline execution. You choose to either stop the pipeline execution by completing in-progress actions without starting subsequent actions, or by abandoning in-progress actions. While completing or abandoning in-progress actions, the pipeline execution is in a <code>Stopping</code> state. After all in-progress actions are completed or abandoned, the pipeline execution is in a <code>Stopped</code> state.
		/// StopPipelineExecution /#X-Amz-Target=CodePipeline_20150709.StopPipelineExecution
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StopPipelineExecutionOutput> StopPipelineExecutionAsync(StopPipelineExecutionInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.StopPipelineExecution";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<StopPipelineExecutionOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Adds to or modifies the tags of the given resource. Tags are metadata that can be used to manage a resource.
		/// TagResource /#X-Amz-Target=CodePipeline_20150709.TagResource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<TagResourceOutput> TagResourceAsync(TagResourceInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.TagResource";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<TagResourceOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Removes tags from an AWS resource.
		/// UntagResource /#X-Amz-Target=CodePipeline_20150709.UntagResource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UntagResourceOutput> UntagResourceAsync(UntagResourceInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.UntagResource";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UntagResourceOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Updates a specified pipeline with edits or changes to its structure. Use a JSON file with the pipeline structure and <code>UpdatePipeline</code> to provide the full structure of the pipeline. Updating the pipeline increases the version number of the pipeline by 1.
		/// UpdatePipeline /#X-Amz-Target=CodePipeline_20150709.UpdatePipeline
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdatePipelineOutput> UpdatePipelineAsync(UpdatePipelineInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=CodePipeline_20150709.UpdatePipeline";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UpdatePipelineOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}
