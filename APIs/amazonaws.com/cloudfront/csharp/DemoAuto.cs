//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace My.Demo.Client
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Net.Http;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// The returned result of the corresponding request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateCloudFrontOriginAccessIdentityResult
	{
		
		/// <summary>
		/// CloudFront origin access identity.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CloudFrontOriginAccessIdentity CloudFrontOriginAccessIdentity { get; set; }
	}
	
	/// <summary>
	/// The returned result of the corresponding request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDistributionResult
	{
		
		/// <summary>
		/// A distribution tells CloudFront where you want content to be delivered from, and the details about how to track and manage content delivery.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Distribution Distribution { get; set; }
	}
	
	/// <summary>
	/// A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Aliases
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @string[] Items { get; set; }
	}
	
	/// <summary>
	/// A complex type that contains information about origins and origin groups for this distribution. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Origins
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public Origin[] Items { get; set; }
	}
	
	/// <summary>
	/// A complex data type for the origin groups specified for a distribution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class OriginGroups
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		/// <summary>
		/// List of origin groups for a distribution.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OriginGroup[] Items { get; set; }
	}
	
	/// <summary>
	/// A complex type that describes the default cache behavior if you don’t specify a <code>CacheBehavior</code> element or if request URLs don’t match any of the values of <code>PathPattern</code> in <code>CacheBehavior</code> elements. You must create exactly one default cache behavior.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DefaultCacheBehavior
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetOriginId { get; set; }
		
		/// <summary>
		/// A complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ForwardedValues ForwardedValues { get; set; }
		
		/// <summary>
		/// <p>A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content.</p> <p>If you want to require signed URLs in requests for objects in the target origin that match the <code>PathPattern</code> for this cache behavior, specify <code>true</code> for <code>Enabled</code>, and specify the applicable values for <code>Quantity</code> and <code>Items</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving Private Content through CloudFront</a> in the <i> Amazon CloudFront Developer Guide</i>.</p> <p>If you don't want to require signed URLs in requests for objects that match <code>PathPattern</code>, specify <code>false</code> for <code>Enabled</code> and <code>0</code> for <code>Quantity</code>. Omit <code>Items</code>.</p> <p>To add, change, or remove one or more trusted signers, change <code>Enabled</code> to <code>true</code> (if it's currently <code>false</code>), change <code>Quantity</code> as applicable, and specify all of the trusted signers that you want to include in the updated distribution.</p> <p>For more information about updating the distribution configuration, see <a href="https://docs.aws.amazon.com/cloudfront/latest/APIReference/DistributionConfig.html">DistributionConfig</a> in the <i>Amazon CloudFront API Reference</i>.</p>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TrustedSigners TrustedSigners { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DefaultCacheBehaviorViewerProtocolPolicy ViewerProtocolPolicy { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int MinTTL { get; set; }
		
		/// <summary>
		/// <p>A complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:</p> <ul> <li> <p>CloudFront forwards only <code>GET</code> and <code>HEAD</code> requests.</p> </li> <li> <p>CloudFront forwards only <code>GET</code>, <code>HEAD</code>, and <code>OPTIONS</code> requests.</p> </li> <li> <p>CloudFront forwards <code>GET, HEAD, OPTIONS, PUT, PATCH, POST</code>, and <code>DELETE</code> requests.</p> </li> </ul> <p>If you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can't perform operations that you don't want them to. For example, you might not want users to have permissions to delete objects from your origin.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AllowedMethods AllowedMethods { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SmoothStreaming { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DefaultTTL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxTTL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Compress { get; set; }
		
		/// <summary>
		/// <p>A complex type that specifies a list of Lambda functions associations for a cache behavior.</p> <p>If you want to invoke one or more Lambda functions triggered by requests that match the <code>PathPattern</code> of the cache behavior, specify the applicable values for <code>Quantity</code> and <code>Items</code>. Note that there can be up to 4 <code>LambdaFunctionAssociation</code> items in this list (one for each possible value of <code>EventType</code>) and each <code>EventType</code> can be associated with the Lambda function only once.</p> <p>If you don't want to invoke any Lambda functions for the requests that match <code>PathPattern</code>, specify <code>0</code> for <code>Quantity</code> and omit <code>Items</code>. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LambdaFunctionAssociations LambdaFunctionAssociations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FieldLevelEncryptionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DefaultCacheBehaviorViewerProtocolPolicy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		allow-all = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		https-only = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		redirect-to-https = 2,
	}
	
	/// <summary>
	/// A complex type that contains zero or more <code>CacheBehavior</code> elements. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CacheBehaviors
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CacheBehavior[] Items { get; set; }
	}
	
	/// <summary>
	/// <p>A complex type that controls:</p> <ul> <li> <p>Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.</p> </li> <li> <p>How long CloudFront caches HTTP status codes in the 4xx and 5xx range.</p> </li> </ul> <p>For more information about custom error pages, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html">Customizing Error Responses</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CustomErrorResponses
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomErrorResponse[] Items { get; set; }
	}
	
	/// <summary>
	/// A complex type that controls whether access logs are written for the distribution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class LoggingConfig
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool Enabled { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool IncludeCookies { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Bucket { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Prefix { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum PriceClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PriceClass_100 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PriceClass_200 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PriceClass_All = 2,
	}
	
	/// <summary>
	/// <p>A complex type that determines the distribution’s SSL/TLS configuration for communicating with viewers.</p> <p>If the distribution doesn’t use <code>Aliases</code> (also known as alternate domain names or CNAMEs)—that is, if the distribution uses the CloudFront domain name such as <code>d111111abcdef8.cloudfront.net</code>—set <code>CloudFrontDefaultCertificate</code> to <code>true</code> and leave all other fields empty.</p> <p>If the distribution uses <code>Aliases</code> (alternate domain names or CNAMEs), use the fields in this type to specify the following settings:</p> <ul> <li> <p>Which viewers the distribution accepts HTTPS connections from: only viewers that support <a href="https://en.wikipedia.org/wiki/Server_Name_Indication">server name indication (SNI)</a> (recommended), or all viewers including those that don’t support SNI.</p> <ul> <li> <p>To accept HTTPS connections from only viewers that support SNI, set <code>SSLSupportMethod</code> to <code>sni-only</code>. This is recommended. Most browsers and clients released after 2010 support SNI. </p> </li> <li> <p>To accept HTTPS connections from all viewers, including those that don’t support SNI, set <code>SSLSupportMethod</code> to <code>vip</code>. This is not recommended, and results in additional monthly charges from CloudFront. </p> </li> </ul> </li> <li> <p>The minimum SSL/TLS protocol version that the distribution can use to communicate with viewers. To specify a minimum version, choose a value for <code>MinimumProtocolVersion</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy">Security Policy</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> </li> <li> <p>The location of the SSL/TLS certificate, <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html">AWS Certificate Manager (ACM)</a> (recommended) or <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">AWS Identity and Access Management (AWS IAM)</a>. You specify the location by setting a value in one of the following fields (not both):</p> <ul> <li> <p> <code>ACMCertificateArn</code> </p> </li> <li> <p> <code>IAMCertificateId</code> </p> </li> </ul> </li> </ul> <p>All distributions support HTTPS connections from viewers. To require viewers to use HTTPS only, or to redirect them from HTTP to HTTPS, use <code>ViewerProtocolPolicy</code> in the <code>CacheBehavior</code> or <code>DefaultCacheBehavior</code>. To specify how CloudFront should use SSL/TLS to communicate with your custom origin, use <code>CustomOriginConfig</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https.html">Using HTTPS with CloudFront</a> and <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-alternate-domain-names.html"> Using Alternate Domain Names and HTTPS</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ViewerCertificate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CloudFrontDefaultCertificate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IAMCertificateId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ACMCertificateArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ViewerCertificateSSLSupportMethod SSLSupportMethod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ViewerCertificateMinimumProtocolVersion MinimumProtocolVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Certificate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ViewerCertificateCertificateSource CertificateSource { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ViewerCertificateSSLSupportMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sni-only = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		vip = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ViewerCertificateMinimumProtocolVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SSLv3 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TLSv1 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TLSv1_2016 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TLSv1.1_2016 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TLSv1.2_2018 = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ViewerCertificateCertificateSource
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cloudfront = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		iam = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		acm = 2,
	}
	
	/// <summary>
	/// A complex type that identifies ways in which you want to restrict distribution of your content.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Restrictions
	{
		
		/// <summary>
		/// A complex type that controls the countries in which your content is distributed. CloudFront determines the location of your users using <code>MaxMind</code> GeoIP databases. 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GeoRestriction GeoRestriction { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum HttpVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		http1.1 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		http2 = 1,
	}
	
	/// <summary>
	/// The returned result of the corresponding request. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDistributionWithTagsResult
	{
		
		/// <summary>
		/// A distribution tells CloudFront where you want content to be delivered from, and the details about how to track and manage content delivery.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Distribution Distribution { get; set; }
	}
	
	/// <summary>
	/// A distribution configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DistributionConfig
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CallerReference { get; set; }
		
		/// <summary>
		/// A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Aliases Aliases { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultRootObject { get; set; }
		
		/// <summary>
		/// A complex type that contains information about origins and origin groups for this distribution. 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Origins Origins { get; set; }
		
		/// <summary>
		/// A complex data type for the origin groups specified for a distribution.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OriginGroups OriginGroups { get; set; }
		
		/// <summary>
		/// A complex type that describes the default cache behavior if you don’t specify a <code>CacheBehavior</code> element or if request URLs don’t match any of the values of <code>PathPattern</code> in <code>CacheBehavior</code> elements. You must create exactly one default cache behavior.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DefaultCacheBehavior DefaultCacheBehavior { get; set; }
		
		/// <summary>
		/// A complex type that contains zero or more <code>CacheBehavior</code> elements. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CacheBehaviors CacheBehaviors { get; set; }
		
		/// <summary>
		/// <p>A complex type that controls:</p> <ul> <li> <p>Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.</p> </li> <li> <p>How long CloudFront caches HTTP status codes in the 4xx and 5xx range.</p> </li> </ul> <p>For more information about custom error pages, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html">Customizing Error Responses</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CustomErrorResponses CustomErrorResponses { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Comment { get; set; }
		
		/// <summary>
		/// A complex type that controls whether access logs are written for the distribution.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LoggingConfig Logging { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DistributionConfigPriceClass PriceClass { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool Enabled { get; set; }
		
		/// <summary>
		/// <p>A complex type that determines the distribution’s SSL/TLS configuration for communicating with viewers.</p> <p>If the distribution doesn’t use <code>Aliases</code> (also known as alternate domain names or CNAMEs)—that is, if the distribution uses the CloudFront domain name such as <code>d111111abcdef8.cloudfront.net</code>—set <code>CloudFrontDefaultCertificate</code> to <code>true</code> and leave all other fields empty.</p> <p>If the distribution uses <code>Aliases</code> (alternate domain names or CNAMEs), use the fields in this type to specify the following settings:</p> <ul> <li> <p>Which viewers the distribution accepts HTTPS connections from: only viewers that support <a href="https://en.wikipedia.org/wiki/Server_Name_Indication">server name indication (SNI)</a> (recommended), or all viewers including those that don’t support SNI.</p> <ul> <li> <p>To accept HTTPS connections from only viewers that support SNI, set <code>SSLSupportMethod</code> to <code>sni-only</code>. This is recommended. Most browsers and clients released after 2010 support SNI. </p> </li> <li> <p>To accept HTTPS connections from all viewers, including those that don’t support SNI, set <code>SSLSupportMethod</code> to <code>vip</code>. This is not recommended, and results in additional monthly charges from CloudFront. </p> </li> </ul> </li> <li> <p>The minimum SSL/TLS protocol version that the distribution can use to communicate with viewers. To specify a minimum version, choose a value for <code>MinimumProtocolVersion</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy">Security Policy</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> </li> <li> <p>The location of the SSL/TLS certificate, <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html">AWS Certificate Manager (ACM)</a> (recommended) or <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">AWS Identity and Access Management (AWS IAM)</a>. You specify the location by setting a value in one of the following fields (not both):</p> <ul> <li> <p> <code>ACMCertificateArn</code> </p> </li> <li> <p> <code>IAMCertificateId</code> </p> </li> </ul> </li> </ul> <p>All distributions support HTTPS connections from viewers. To require viewers to use HTTPS only, or to redirect them from HTTP to HTTPS, use <code>ViewerProtocolPolicy</code> in the <code>CacheBehavior</code> or <code>DefaultCacheBehavior</code>. To specify how CloudFront should use SSL/TLS to communicate with your custom origin, use <code>CustomOriginConfig</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https.html">Using HTTPS with CloudFront</a> and <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-alternate-domain-names.html"> Using Alternate Domain Names and HTTPS</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ViewerCertificate ViewerCertificate { get; set; }
		
		/// <summary>
		/// A complex type that identifies ways in which you want to restrict distribution of your content.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Restrictions Restrictions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string WebACLId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DistributionConfigHttpVersion HttpVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsIPV6Enabled { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DistributionConfigPriceClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PriceClass_100 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PriceClass_200 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PriceClass_All = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DistributionConfigHttpVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		http1.1 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		http2 = 1,
	}
	
	/// <summary>
	///  A complex type that contains zero or more <code>Tag</code> elements.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Tags
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Items { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateFieldLevelEncryptionConfigResult
	{
		
		/// <summary>
		/// A complex data type that includes the profile configurations and other options specified for field-level encryption. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FieldLevelEncryption FieldLevelEncryption { get; set; }
	}
	
	/// <summary>
	/// Configuration for query argument-profile mapping for field-level encryption.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class QueryArgProfileConfig
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool ForwardWhenQueryArgProfileIsUnknown { get; set; }
		
		/// <summary>
		/// Query argument-profile mapping for field-level encryption.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public QueryArgProfiles QueryArgProfiles { get; set; }
	}
	
	/// <summary>
	/// The configuration for a field-level encryption content type-profile mapping. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ContentTypeProfileConfig
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool ForwardWhenContentTypeIsUnknown { get; set; }
		
		/// <summary>
		/// Field-level encryption content type-profile. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ContentTypeProfiles ContentTypeProfiles { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateFieldLevelEncryptionProfileResult
	{
		
		/// <summary>
		/// A complex data type for field-level encryption profiles.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FieldLevelEncryptionProfile FieldLevelEncryptionProfile { get; set; }
	}
	
	/// <summary>
	/// Complex data type for field-level encryption profiles that includes all of the encryption entities. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EncryptionEntities
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EncryptionEntity[] Items { get; set; }
	}
	
	/// <summary>
	/// The returned result of the corresponding request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateInvalidationResult
	{
		
		/// <summary>
		/// An invalidation. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Invalidation Invalidation { get; set; }
	}
	
	/// <summary>
	/// A complex type that contains information about the objects that you want to invalidate. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Invalidation.html#invalidation-specifying-objects">Specifying the Objects to Invalidate</a> in the <i>Amazon CloudFront Developer Guide</i>. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Paths
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @string[] Items { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreatePublicKeyResult
	{
		
		/// <summary>
		/// A complex data type of public keys you add to CloudFront to use with features like field-level encryption.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PublicKey PublicKey { get; set; }
	}
	
	/// <summary>
	/// The returned result of the corresponding request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateStreamingDistributionResult
	{
		
		/// <summary>
		/// A streaming distribution tells CloudFront where you want RTMP content to be delivered from, and the details about how to track and manage content delivery.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StreamingDistribution StreamingDistribution { get; set; }
	}
	
	/// <summary>
	/// A complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3Origin
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OriginAccessIdentity { get; set; }
	}
	
	/// <summary>
	/// A complex type that controls whether access logs are written for this streaming distribution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StreamingLoggingConfig
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool Enabled { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Bucket { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Prefix { get; set; }
	}
	
	/// <summary>
	/// <p>A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content.</p> <p>If you want to require signed URLs in requests for objects in the target origin that match the <code>PathPattern</code> for this cache behavior, specify <code>true</code> for <code>Enabled</code>, and specify the applicable values for <code>Quantity</code> and <code>Items</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving Private Content through CloudFront</a> in the <i> Amazon CloudFront Developer Guide</i>.</p> <p>If you don't want to require signed URLs in requests for objects that match <code>PathPattern</code>, specify <code>false</code> for <code>Enabled</code> and <code>0</code> for <code>Quantity</code>. Omit <code>Items</code>.</p> <p>To add, change, or remove one or more trusted signers, change <code>Enabled</code> to <code>true</code> (if it's currently <code>false</code>), change <code>Quantity</code> as applicable, and specify all of the trusted signers that you want to include in the updated distribution.</p> <p>For more information about updating the distribution configuration, see <a href="https://docs.aws.amazon.com/cloudfront/latest/APIReference/DistributionConfig.html">DistributionConfig</a> in the <i>Amazon CloudFront API Reference</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TrustedSigners
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool Enabled { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @string[] Items { get; set; }
	}
	
	/// <summary>
	/// The returned result of the corresponding request. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateStreamingDistributionWithTagsResult
	{
		
		/// <summary>
		/// A streaming distribution tells CloudFront where you want RTMP content to be delivered from, and the details about how to track and manage content delivery.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StreamingDistribution StreamingDistribution { get; set; }
	}
	
	/// <summary>
	/// The RTMP distribution's configuration information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StreamingDistributionConfig
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CallerReference { get; set; }
		
		/// <summary>
		/// A complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public S3Origin S3Origin { get; set; }
		
		/// <summary>
		/// A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Aliases Aliases { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Comment { get; set; }
		
		/// <summary>
		/// A complex type that controls whether access logs are written for this streaming distribution.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StreamingLoggingConfig Logging { get; set; }
		
		/// <summary>
		/// <p>A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content.</p> <p>If you want to require signed URLs in requests for objects in the target origin that match the <code>PathPattern</code> for this cache behavior, specify <code>true</code> for <code>Enabled</code>, and specify the applicable values for <code>Quantity</code> and <code>Items</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving Private Content through CloudFront</a> in the <i> Amazon CloudFront Developer Guide</i>.</p> <p>If you don't want to require signed URLs in requests for objects that match <code>PathPattern</code>, specify <code>false</code> for <code>Enabled</code> and <code>0</code> for <code>Quantity</code>. Omit <code>Items</code>.</p> <p>To add, change, or remove one or more trusted signers, change <code>Enabled</code> to <code>true</code> (if it's currently <code>false</code>), change <code>Quantity</code> as applicable, and specify all of the trusted signers that you want to include in the updated distribution.</p> <p>For more information about updating the distribution configuration, see <a href="https://docs.aws.amazon.com/cloudfront/latest/APIReference/DistributionConfig.html">DistributionConfig</a> in the <i>Amazon CloudFront API Reference</i>.</p>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TrustedSigners TrustedSigners { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StreamingDistributionConfigPriceClass PriceClass { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool Enabled { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StreamingDistributionConfigPriceClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PriceClass_100 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PriceClass_200 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PriceClass_All = 2,
	}
	
	/// <summary>
	/// The returned result of the corresponding request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetCloudFrontOriginAccessIdentityResult
	{
		
		/// <summary>
		/// CloudFront origin access identity.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CloudFrontOriginAccessIdentity CloudFrontOriginAccessIdentity { get; set; }
	}
	
	/// <summary>
	/// The returned result of the corresponding request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetCloudFrontOriginAccessIdentityConfigResult
	{
		
		/// <summary>
		/// Origin access identity configuration. Send a <code>GET</code> request to the <code>/<i>CloudFront API version</i>/CloudFront/identity ID/config</code> resource. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CloudFrontOriginAccessIdentityConfig CloudFrontOriginAccessIdentityConfig { get; set; }
	}
	
	/// <summary>
	/// The returned result of the corresponding request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetDistributionResult
	{
		
		/// <summary>
		/// A distribution tells CloudFront where you want content to be delivered from, and the details about how to track and manage content delivery.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Distribution Distribution { get; set; }
	}
	
	/// <summary>
	/// The returned result of the corresponding request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetDistributionConfigResult
	{
		
		/// <summary>
		/// A distribution configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DistributionConfig DistributionConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetFieldLevelEncryptionResult
	{
		
		/// <summary>
		/// A complex data type that includes the profile configurations and other options specified for field-level encryption. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FieldLevelEncryption FieldLevelEncryption { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetFieldLevelEncryptionConfigResult
	{
		
		/// <summary>
		/// A complex data type that includes the profile configurations specified for field-level encryption. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FieldLevelEncryptionConfig FieldLevelEncryptionConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetFieldLevelEncryptionProfileResult
	{
		
		/// <summary>
		/// A complex data type for field-level encryption profiles.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FieldLevelEncryptionProfile FieldLevelEncryptionProfile { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetFieldLevelEncryptionProfileConfigResult
	{
		
		/// <summary>
		/// A complex data type of profiles for the field-level encryption.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FieldLevelEncryptionProfileConfig FieldLevelEncryptionProfileConfig { get; set; }
	}
	
	/// <summary>
	/// The returned result of the corresponding request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetInvalidationResult
	{
		
		/// <summary>
		/// An invalidation. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Invalidation Invalidation { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetPublicKeyResult
	{
		
		/// <summary>
		/// A complex data type of public keys you add to CloudFront to use with features like field-level encryption.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PublicKey PublicKey { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetPublicKeyConfigResult
	{
		
		/// <summary>
		/// Information about a public key you add to CloudFront to use with features like field-level encryption.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PublicKeyConfig PublicKeyConfig { get; set; }
	}
	
	/// <summary>
	/// The returned result of the corresponding request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetStreamingDistributionResult
	{
		
		/// <summary>
		/// A streaming distribution tells CloudFront where you want RTMP content to be delivered from, and the details about how to track and manage content delivery.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StreamingDistribution StreamingDistribution { get; set; }
	}
	
	/// <summary>
	/// The returned result of the corresponding request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetStreamingDistributionConfigResult
	{
		
		/// <summary>
		/// The RTMP distribution's configuration information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StreamingDistributionConfig StreamingDistributionConfig { get; set; }
	}
	
	/// <summary>
	/// The returned result of the corresponding request. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListCloudFrontOriginAccessIdentitiesResult
	{
		
		/// <summary>
		/// Lists the origin access identities for CloudFront.Send a <code>GET</code> request to the <code>/<i>CloudFront API version</i>/origin-access-identity/cloudfront</code> resource. The response includes a <code>CloudFrontOriginAccessIdentityList</code> element with zero or more <code>CloudFrontOriginAccessIdentitySummary</code> child elements. By default, your entire list of origin access identities is returned in one single page. If the list is long, you can paginate it using the <code>MaxItems</code> and <code>Marker</code> parameters.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CloudFrontOriginAccessIdentityList CloudFrontOriginAccessIdentityList { get; set; }
	}
	
	/// <summary>
	/// The returned result of the corresponding request. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListDistributionsResult
	{
		
		/// <summary>
		/// A distribution list.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DistributionList DistributionList { get; set; }
	}
	
	/// <summary>
	/// The response to a request to list the distributions that are associated with a specified AWS WAF web ACL. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListDistributionsByWebACLIdResult
	{
		
		/// <summary>
		/// A distribution list.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DistributionList DistributionList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListFieldLevelEncryptionConfigsResult
	{
		
		/// <summary>
		/// List of field-level encrpytion configurations.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FieldLevelEncryptionList FieldLevelEncryptionList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListFieldLevelEncryptionProfilesResult
	{
		
		/// <summary>
		/// List of field-level encryption profiles.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FieldLevelEncryptionProfileList FieldLevelEncryptionProfileList { get; set; }
	}
	
	/// <summary>
	/// The returned result of the corresponding request. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListInvalidationsResult
	{
		
		/// <summary>
		/// The <code>InvalidationList</code> complex type describes the list of invalidation objects. For more information about invalidation, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Invalidation.html">Invalidating Objects (Web Distributions Only)</a> in the <i>Amazon CloudFront Developer Guide</i>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InvalidationList InvalidationList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListPublicKeysResult
	{
		
		/// <summary>
		/// A list of public keys you've added to CloudFront to use with features like field-level encryption.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PublicKeyList PublicKeyList { get; set; }
	}
	
	/// <summary>
	/// The returned result of the corresponding request. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListStreamingDistributionsResult
	{
		
		/// <summary>
		/// A streaming distribution list. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StreamingDistributionList StreamingDistributionList { get; set; }
	}
	
	/// <summary>
	///  The returned result of the corresponding request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTagsForResourceResult
	{
		
		/// <summary>
		///  A complex type that contains zero or more <code>Tag</code> elements.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	/// <summary>
	/// The returned result of the corresponding request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateCloudFrontOriginAccessIdentityResult
	{
		
		/// <summary>
		/// CloudFront origin access identity.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CloudFrontOriginAccessIdentity CloudFrontOriginAccessIdentity { get; set; }
	}
	
	/// <summary>
	/// The returned result of the corresponding request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateDistributionResult
	{
		
		/// <summary>
		/// A distribution tells CloudFront where you want content to be delivered from, and the details about how to track and manage content delivery.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Distribution Distribution { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateFieldLevelEncryptionConfigResult
	{
		
		/// <summary>
		/// A complex data type that includes the profile configurations and other options specified for field-level encryption. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FieldLevelEncryption FieldLevelEncryption { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateFieldLevelEncryptionProfileResult
	{
		
		/// <summary>
		/// A complex data type for field-level encryption profiles.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FieldLevelEncryptionProfile FieldLevelEncryptionProfile { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdatePublicKeyResult
	{
		
		/// <summary>
		/// A complex data type of public keys you add to CloudFront to use with features like field-level encryption.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PublicKey PublicKey { get; set; }
	}
	
	/// <summary>
	/// The returned result of the corresponding request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateStreamingDistributionResult
	{
		
		/// <summary>
		/// A streaming distribution tells CloudFront where you want RTMP content to be delivered from, and the details about how to track and manage content delivery.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StreamingDistribution StreamingDistribution { get; set; }
	}
	
	/// <summary>
	/// <p>A complex type that lists the AWS accounts, if any, that you included in the <code>TrustedSigners</code> complex type for this distribution. These are the accounts that you want to allow to create signed URLs for private content.</p> <p>The <code>Signer</code> complex type lists the AWS account number of the trusted signer or <code>self</code> if the signer is the AWS account that created the distribution. The <code>Signer</code> element also includes the IDs of any active CloudFront key pairs that are associated with the trusted signer's AWS account. If no <code>KeyPairId</code> element appears for a <code>Signer</code>, that signer can't create signed URLs. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving Private Content through CloudFront</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ActiveTrustedSigners
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool Enabled { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Signer[] Items { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ICPRecordalStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUSPENDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 2,
	}
	
	/// <summary>
	/// <p>AWS services in China customers must file for an Internet Content Provider (ICP) recordal if they want to serve content publicly on an alternate domain name, also known as a CNAME, that they've added to CloudFront. AliasICPRecordal provides the ICP recordal status for CNAMEs associated with distributions. The status is returned in the CloudFront response; you can't configure it yourself.</p> <p>For more information about ICP recordals, see <a href="https://docs.amazonaws.cn/en_us/aws/latest/userguide/accounts-and-credentials.html"> Signup, Accounts, and Credentials</a> in <i>Getting Started with AWS services in China</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AliasICPRecordal
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CNAME { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AliasICPRecordalICPRecordalStatus ICPRecordalStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AliasICPRecordalICPRecordalStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUSPENDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 2,
	}
	
	/// <summary>
	/// <p>A complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:</p> <ul> <li> <p>CloudFront caches responses to <code>GET</code> and <code>HEAD</code> requests.</p> </li> <li> <p>CloudFront caches responses to <code>GET</code>, <code>HEAD</code>, and <code>OPTIONS</code> requests.</p> </li> </ul> <p>If you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly. </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CachedMethods
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Method[] Items { get; set; }
	}
	
	/// <summary>
	/// <p>A complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:</p> <ul> <li> <p>CloudFront forwards only <code>GET</code> and <code>HEAD</code> requests.</p> </li> <li> <p>CloudFront forwards only <code>GET</code>, <code>HEAD</code>, and <code>OPTIONS</code> requests.</p> </li> <li> <p>CloudFront forwards <code>GET, HEAD, OPTIONS, PUT, PATCH, POST</code>, and <code>DELETE</code> requests.</p> </li> </ul> <p>If you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can't perform operations that you don't want them to. For example, you might not want users to have permissions to delete objects from your origin.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AllowedMethods
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Method[] Items { get; set; }
		
		/// <summary>
		/// <p>A complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:</p> <ul> <li> <p>CloudFront caches responses to <code>GET</code> and <code>HEAD</code> requests.</p> </li> <li> <p>CloudFront caches responses to <code>GET</code>, <code>HEAD</code>, and <code>OPTIONS</code> requests.</p> </li> </ul> <p>If you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CachedMethods CachedMethods { get; set; }
	}
	
	/// <summary>
	/// A complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ForwardedValues
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool QueryString { get; set; }
		
		/// <summary>
		/// A complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html">Caching Content Based on Cookies</a> in the <i>Amazon CloudFront Developer Guide</i>.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CookiePreference Cookies { get; set; }
		
		/// <summary>
		/// <p>A complex type that specifies the request headers, if any, that you want CloudFront to base caching on for this cache behavior. </p> <p>For the headers that you specify, CloudFront caches separate versions of a specified object based on the header values in viewer requests. For example, suppose viewer requests for <code>logo.jpg</code> contain a custom <code>product</code> header that has a value of either <code>acme</code> or <code>apex</code>, and you configure CloudFront to cache your content based on values in the <code>product</code> header. CloudFront forwards the <code>product</code> header to the origin and caches the response from the origin once for each header value. For more information about caching based on header values, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html">How CloudFront Forwards and Caches Headers</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Headers Headers { get; set; }
		
		/// <summary>
		/// A complex type that contains information about the query string parameters that you want CloudFront to use for caching for a cache behavior. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public QueryStringCacheKeys QueryStringCacheKeys { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ViewerProtocolPolicy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		allow-all = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		https-only = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		redirect-to-https = 2,
	}
	
	/// <summary>
	/// <p>A complex type that specifies a list of Lambda functions associations for a cache behavior.</p> <p>If you want to invoke one or more Lambda functions triggered by requests that match the <code>PathPattern</code> of the cache behavior, specify the applicable values for <code>Quantity</code> and <code>Items</code>. Note that there can be up to 4 <code>LambdaFunctionAssociation</code> items in this list (one for each possible value of <code>EventType</code>) and each <code>EventType</code> can be associated with the Lambda function only once.</p> <p>If you don't want to invoke any Lambda functions for the requests that match <code>PathPattern</code>, specify <code>0</code> for <code>Quantity</code> and omit <code>Items</code>. </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class LambdaFunctionAssociations
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LambdaFunctionAssociation[] Items { get; set; }
	}
	
	/// <summary>
	/// <p>A complex type that describes how CloudFront processes requests.</p> <p>You must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to serve objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin is never used.</p> <p>For the current quota (formerly known as limit) on the number of cache behaviors that you can add to a distribution, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-limits.html">Quotas</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>If you don’t want to specify any cache behaviors, include only an empty <code>CacheBehaviors</code> element. Don’t include an empty <code>CacheBehavior</code> element because this is invalid.</p> <p>To delete all cache behaviors in an existing distribution, update the distribution configuration and include only an empty <code>CacheBehaviors</code> element.</p> <p>To add, change, or remove one or more cache behaviors, update the distribution configuration and specify all of the cache behaviors that you want to include in the updated distribution.</p> <p>For more information about cache behaviors, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior">Cache Behavior Settings</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CacheBehavior
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PathPattern { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetOriginId { get; set; }
		
		/// <summary>
		/// A complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ForwardedValues ForwardedValues { get; set; }
		
		/// <summary>
		/// <p>A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content.</p> <p>If you want to require signed URLs in requests for objects in the target origin that match the <code>PathPattern</code> for this cache behavior, specify <code>true</code> for <code>Enabled</code>, and specify the applicable values for <code>Quantity</code> and <code>Items</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving Private Content through CloudFront</a> in the <i> Amazon CloudFront Developer Guide</i>.</p> <p>If you don't want to require signed URLs in requests for objects that match <code>PathPattern</code>, specify <code>false</code> for <code>Enabled</code> and <code>0</code> for <code>Quantity</code>. Omit <code>Items</code>.</p> <p>To add, change, or remove one or more trusted signers, change <code>Enabled</code> to <code>true</code> (if it's currently <code>false</code>), change <code>Quantity</code> as applicable, and specify all of the trusted signers that you want to include in the updated distribution.</p> <p>For more information about updating the distribution configuration, see <a href="https://docs.aws.amazon.com/cloudfront/latest/APIReference/DistributionConfig.html">DistributionConfig</a> in the <i>Amazon CloudFront API Reference</i>.</p>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TrustedSigners TrustedSigners { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CacheBehaviorViewerProtocolPolicy ViewerProtocolPolicy { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int MinTTL { get; set; }
		
		/// <summary>
		/// <p>A complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:</p> <ul> <li> <p>CloudFront forwards only <code>GET</code> and <code>HEAD</code> requests.</p> </li> <li> <p>CloudFront forwards only <code>GET</code>, <code>HEAD</code>, and <code>OPTIONS</code> requests.</p> </li> <li> <p>CloudFront forwards <code>GET, HEAD, OPTIONS, PUT, PATCH, POST</code>, and <code>DELETE</code> requests.</p> </li> </ul> <p>If you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can't perform operations that you don't want them to. For example, you might not want users to have permissions to delete objects from your origin.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AllowedMethods AllowedMethods { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SmoothStreaming { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DefaultTTL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxTTL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Compress { get; set; }
		
		/// <summary>
		/// <p>A complex type that specifies a list of Lambda functions associations for a cache behavior.</p> <p>If you want to invoke one or more Lambda functions triggered by requests that match the <code>PathPattern</code> of the cache behavior, specify the applicable values for <code>Quantity</code> and <code>Items</code>. Note that there can be up to 4 <code>LambdaFunctionAssociation</code> items in this list (one for each possible value of <code>EventType</code>) and each <code>EventType</code> can be associated with the Lambda function only once.</p> <p>If you don't want to invoke any Lambda functions for the requests that match <code>PathPattern</code>, specify <code>0</code> for <code>Quantity</code> and omit <code>Items</code>. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LambdaFunctionAssociations LambdaFunctionAssociations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FieldLevelEncryptionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CacheBehaviorViewerProtocolPolicy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		allow-all = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		https-only = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		redirect-to-https = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CertificateSource
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cloudfront = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		iam = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		acm = 2,
	}
	
	/// <summary>
	/// Origin access identity configuration. Send a <code>GET</code> request to the <code>/<i>CloudFront API version</i>/CloudFront/identity ID/config</code> resource. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CloudFrontOriginAccessIdentityConfig
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CallerReference { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Comment { get; set; }
	}
	
	/// <summary>
	/// CloudFront origin access identity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CloudFrontOriginAccessIdentity
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string S3CanonicalUserId { get; set; }
		
		/// <summary>
		/// Origin access identity configuration. Send a <code>GET</code> request to the <code>/<i>CloudFront API version</i>/CloudFront/identity ID/config</code> resource. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CloudFrontOriginAccessIdentityConfig CloudFrontOriginAccessIdentityConfig { get; set; }
	}
	
	/// <summary>
	/// Lists the origin access identities for CloudFront.Send a <code>GET</code> request to the <code>/<i>CloudFront API version</i>/origin-access-identity/cloudfront</code> resource. The response includes a <code>CloudFrontOriginAccessIdentityList</code> element with zero or more <code>CloudFrontOriginAccessIdentitySummary</code> child elements. By default, your entire list of origin access identities is returned in one single page. If the list is long, you can paginate it using the <code>MaxItems</code> and <code>Marker</code> parameters.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CloudFrontOriginAccessIdentityList
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextMarker { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int MaxItems { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool IsTruncated { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudFrontOriginAccessIdentitySummary[] Items { get; set; }
	}
	
	/// <summary>
	/// Summary of the information about a CloudFront origin access identity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CloudFrontOriginAccessIdentitySummary
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string S3CanonicalUserId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Comment { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum Format
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		URLEncoded = 0,
	}
	
	/// <summary>
	/// A field-level encryption content type profile. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ContentTypeProfile
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ContentTypeProfileFormat Format { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ProfileId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ContentType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ContentTypeProfileFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		URLEncoded = 0,
	}
	
	/// <summary>
	/// Field-level encryption content type-profile. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ContentTypeProfiles
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContentTypeProfile[] Items { get; set; }
	}
	
	/// <summary>
	/// A complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html"> Caching Content Based on Request Headers</a> in the <i>Amazon CloudFront Developer Guide</i>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CookieNames
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @string[] Items { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ItemSelection
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		none = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		whitelist = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		all = 2,
	}
	
	/// <summary>
	/// A complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html">Caching Content Based on Cookies</a> in the <i>Amazon CloudFront Developer Guide</i>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CookiePreference
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CookiePreferenceForward Forward { get; set; }
		
		/// <summary>
		/// A complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html"> Caching Content Based on Request Headers</a> in the <i>Amazon CloudFront Developer Guide</i>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CookieNames WhitelistedNames { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CookiePreferenceForward
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		none = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		whitelist = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		all = 2,
	}
	
	/// <summary>
	/// The request to create a new origin access identity (OAI). An origin access identity is a special CloudFront user that you can associate with Amazon S3 origins, so that you can secure all or just some of your Amazon S3 content. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html"> Restricting Access to Amazon S3 Content by Using an Origin Access Identity</a> in the <i>Amazon CloudFront Developer Guide</i>. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateCloudFrontOriginAccessIdentityRequest
	{
		
		/// <summary>
		/// Origin access identity configuration. Send a <code>GET</code> request to the <code>/<i>CloudFront API version</i>/CloudFront/identity ID/config</code> resource. 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CloudFrontOriginAccessIdentityConfig CloudFrontOriginAccessIdentityConfig { get; set; }
	}
	
	/// <summary>
	/// The request to create a new distribution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDistributionRequest
	{
		
		/// <summary>
		/// A distribution configuration.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DistributionConfig DistributionConfig { get; set; }
	}
	
	/// <summary>
	/// A distribution tells CloudFront where you want content to be delivered from, and the details about how to track and manage content delivery.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Distribution
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ARN { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int InProgressInvalidationBatches { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		/// <summary>
		/// <p>A complex type that lists the AWS accounts, if any, that you included in the <code>TrustedSigners</code> complex type for this distribution. These are the accounts that you want to allow to create signed URLs for private content.</p> <p>The <code>Signer</code> complex type lists the AWS account number of the trusted signer or <code>self</code> if the signer is the AWS account that created the distribution. The <code>Signer</code> element also includes the IDs of any active CloudFront key pairs that are associated with the trusted signer's AWS account. If no <code>KeyPairId</code> element appears for a <code>Signer</code>, that signer can't create signed URLs. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving Private Content through CloudFront</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActiveTrustedSigners ActiveTrustedSigners { get; set; }
		
		/// <summary>
		/// A distribution configuration.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DistributionConfig DistributionConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AliasICPRecordal[] AliasICPRecordals { get; set; }
	}
	
	/// <summary>
	/// A distribution Configuration and a list of tags to be associated with the distribution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DistributionConfigWithTags
	{
		
		/// <summary>
		/// A distribution configuration.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DistributionConfig DistributionConfig { get; set; }
		
		/// <summary>
		///  A complex type that contains zero or more <code>Tag</code> elements.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	/// <summary>
	/// The request to create a new distribution with tags. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDistributionWithTagsRequest
	{
		
		/// <summary>
		/// A distribution Configuration and a list of tags to be associated with the distribution.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DistributionConfigWithTags DistributionConfigWithTags { get; set; }
	}
	
	/// <summary>
	/// A complex data type that includes the profile configurations specified for field-level encryption. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FieldLevelEncryptionConfig
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CallerReference { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Comment { get; set; }
		
		/// <summary>
		/// Configuration for query argument-profile mapping for field-level encryption.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public QueryArgProfileConfig QueryArgProfileConfig { get; set; }
		
		/// <summary>
		/// The configuration for a field-level encryption content type-profile mapping. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ContentTypeProfileConfig ContentTypeProfileConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateFieldLevelEncryptionConfigRequest
	{
		
		/// <summary>
		/// A complex data type that includes the profile configurations specified for field-level encryption. 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FieldLevelEncryptionConfig FieldLevelEncryptionConfig { get; set; }
	}
	
	/// <summary>
	/// A complex data type that includes the profile configurations and other options specified for field-level encryption. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FieldLevelEncryption
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
		
		/// <summary>
		/// A complex data type that includes the profile configurations specified for field-level encryption. 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FieldLevelEncryptionConfig FieldLevelEncryptionConfig { get; set; }
	}
	
	/// <summary>
	/// A complex data type of profiles for the field-level encryption.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FieldLevelEncryptionProfileConfig
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CallerReference { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Comment { get; set; }
		
		/// <summary>
		/// Complex data type for field-level encryption profiles that includes all of the encryption entities. 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EncryptionEntities EncryptionEntities { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateFieldLevelEncryptionProfileRequest
	{
		
		/// <summary>
		/// A complex data type of profiles for the field-level encryption.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FieldLevelEncryptionProfileConfig FieldLevelEncryptionProfileConfig { get; set; }
	}
	
	/// <summary>
	/// A complex data type for field-level encryption profiles.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FieldLevelEncryptionProfile
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
		
		/// <summary>
		/// A complex data type of profiles for the field-level encryption.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FieldLevelEncryptionProfileConfig FieldLevelEncryptionProfileConfig { get; set; }
	}
	
	/// <summary>
	/// An invalidation batch.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InvalidationBatch
	{
		
		/// <summary>
		/// A complex type that contains information about the objects that you want to invalidate. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Invalidation.html#invalidation-specifying-objects">Specifying the Objects to Invalidate</a> in the <i>Amazon CloudFront Developer Guide</i>. 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Paths Paths { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CallerReference { get; set; }
	}
	
	/// <summary>
	/// The request to create an invalidation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateInvalidationRequest
	{
		
		/// <summary>
		/// An invalidation batch.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InvalidationBatch InvalidationBatch { get; set; }
	}
	
	/// <summary>
	/// An invalidation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Invalidation
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreateTime { get; set; }
		
		/// <summary>
		/// An invalidation batch.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InvalidationBatch InvalidationBatch { get; set; }
	}
	
	/// <summary>
	/// Information about a public key you add to CloudFront to use with features like field-level encryption.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PublicKeyConfig
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CallerReference { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EncodedKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Comment { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreatePublicKeyRequest
	{
		
		/// <summary>
		/// Information about a public key you add to CloudFront to use with features like field-level encryption.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PublicKeyConfig PublicKeyConfig { get; set; }
	}
	
	/// <summary>
	/// A complex data type of public keys you add to CloudFront to use with features like field-level encryption.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PublicKey
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		/// <summary>
		/// Information about a public key you add to CloudFront to use with features like field-level encryption.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PublicKeyConfig PublicKeyConfig { get; set; }
	}
	
	/// <summary>
	/// The request to create a new streaming distribution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateStreamingDistributionRequest
	{
		
		/// <summary>
		/// The RTMP distribution's configuration information.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StreamingDistributionConfig StreamingDistributionConfig { get; set; }
	}
	
	/// <summary>
	/// A streaming distribution tells CloudFront where you want RTMP content to be delivered from, and the details about how to track and manage content delivery.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StreamingDistribution
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ARN { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		/// <summary>
		/// <p>A complex type that lists the AWS accounts, if any, that you included in the <code>TrustedSigners</code> complex type for this distribution. These are the accounts that you want to allow to create signed URLs for private content.</p> <p>The <code>Signer</code> complex type lists the AWS account number of the trusted signer or <code>self</code> if the signer is the AWS account that created the distribution. The <code>Signer</code> element also includes the IDs of any active CloudFront key pairs that are associated with the trusted signer's AWS account. If no <code>KeyPairId</code> element appears for a <code>Signer</code>, that signer can't create signed URLs. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving Private Content through CloudFront</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActiveTrustedSigners ActiveTrustedSigners { get; set; }
		
		/// <summary>
		/// The RTMP distribution's configuration information.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StreamingDistributionConfig StreamingDistributionConfig { get; set; }
	}
	
	/// <summary>
	/// A streaming distribution Configuration and a list of tags to be associated with the streaming distribution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StreamingDistributionConfigWithTags
	{
		
		/// <summary>
		/// The RTMP distribution's configuration information.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StreamingDistributionConfig StreamingDistributionConfig { get; set; }
		
		/// <summary>
		///  A complex type that contains zero or more <code>Tag</code> elements.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	/// <summary>
	/// The request to create a new streaming distribution with tags.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateStreamingDistributionWithTagsRequest
	{
		
		/// <summary>
		/// A streaming distribution Configuration and a list of tags to be associated with the streaming distribution.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StreamingDistributionConfigWithTags StreamingDistributionConfigWithTags { get; set; }
	}
	
	/// <summary>
	/// <p>A complex type that controls:</p> <ul> <li> <p>Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer. </p> </li> <li> <p>How long CloudFront caches HTTP status codes in the 4xx and 5xx range.</p> </li> </ul> <p>For more information about custom error pages, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html">Customizing Error Responses</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CustomErrorResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int ErrorCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResponsePagePath { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResponseCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ErrorCachingMinTTL { get; set; }
	}
	
	/// <summary>
	/// A complex type that contains the list of Custom Headers for each origin. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CustomHeaders
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OriginCustomHeader[] Items { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum OriginProtocolPolicy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		http-only = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		match-viewer = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		https-only = 2,
	}
	
	/// <summary>
	/// A complex type that contains information about the SSL/TLS protocols that CloudFront can use when establishing an HTTPS connection with your origin. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class OriginSslProtocols
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SslProtocol[] Items { get; set; }
	}
	
	/// <summary>
	/// A custom origin. A custom origin is any origin that is <i>not</i> an Amazon S3 bucket, with one exception. An Amazon S3 bucket that is <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html">configured with static website hosting</a> <i>is</i> a custom origin.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CustomOriginConfig
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int HTTPPort { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int HTTPSPort { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CustomOriginConfigOriginProtocolPolicy OriginProtocolPolicy { get; set; }
		
		/// <summary>
		/// A complex type that contains information about the SSL/TLS protocols that CloudFront can use when establishing an HTTPS connection with your origin. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OriginSslProtocols OriginSslProtocols { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OriginReadTimeout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OriginKeepaliveTimeout { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CustomOriginConfigOriginProtocolPolicy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		http-only = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		match-viewer = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		https-only = 2,
	}
	
	/// <summary>
	/// A distribution list.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DistributionList
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextMarker { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int MaxItems { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool IsTruncated { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DistributionSummary[] Items { get; set; }
	}
	
	/// <summary>
	/// A summary of the information about a CloudFront distribution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DistributionSummary
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ARN { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		/// <summary>
		/// A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution. 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Aliases Aliases { get; set; }
		
		/// <summary>
		/// A complex type that contains information about origins and origin groups for this distribution. 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Origins Origins { get; set; }
		
		/// <summary>
		/// A complex data type for the origin groups specified for a distribution.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OriginGroups OriginGroups { get; set; }
		
		/// <summary>
		/// A complex type that describes the default cache behavior if you don’t specify a <code>CacheBehavior</code> element or if request URLs don’t match any of the values of <code>PathPattern</code> in <code>CacheBehavior</code> elements. You must create exactly one default cache behavior.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DefaultCacheBehavior DefaultCacheBehavior { get; set; }
		
		/// <summary>
		/// A complex type that contains zero or more <code>CacheBehavior</code> elements. 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CacheBehaviors CacheBehaviors { get; set; }
		
		/// <summary>
		/// <p>A complex type that controls:</p> <ul> <li> <p>Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.</p> </li> <li> <p>How long CloudFront caches HTTP status codes in the 4xx and 5xx range.</p> </li> </ul> <p>For more information about custom error pages, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html">Customizing Error Responses</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CustomErrorResponses CustomErrorResponses { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Comment { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DistributionSummaryPriceClass PriceClass { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool Enabled { get; set; }
		
		/// <summary>
		/// <p>A complex type that determines the distribution’s SSL/TLS configuration for communicating with viewers.</p> <p>If the distribution doesn’t use <code>Aliases</code> (also known as alternate domain names or CNAMEs)—that is, if the distribution uses the CloudFront domain name such as <code>d111111abcdef8.cloudfront.net</code>—set <code>CloudFrontDefaultCertificate</code> to <code>true</code> and leave all other fields empty.</p> <p>If the distribution uses <code>Aliases</code> (alternate domain names or CNAMEs), use the fields in this type to specify the following settings:</p> <ul> <li> <p>Which viewers the distribution accepts HTTPS connections from: only viewers that support <a href="https://en.wikipedia.org/wiki/Server_Name_Indication">server name indication (SNI)</a> (recommended), or all viewers including those that don’t support SNI.</p> <ul> <li> <p>To accept HTTPS connections from only viewers that support SNI, set <code>SSLSupportMethod</code> to <code>sni-only</code>. This is recommended. Most browsers and clients released after 2010 support SNI. </p> </li> <li> <p>To accept HTTPS connections from all viewers, including those that don’t support SNI, set <code>SSLSupportMethod</code> to <code>vip</code>. This is not recommended, and results in additional monthly charges from CloudFront. </p> </li> </ul> </li> <li> <p>The minimum SSL/TLS protocol version that the distribution can use to communicate with viewers. To specify a minimum version, choose a value for <code>MinimumProtocolVersion</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy">Security Policy</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> </li> <li> <p>The location of the SSL/TLS certificate, <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html">AWS Certificate Manager (ACM)</a> (recommended) or <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">AWS Identity and Access Management (AWS IAM)</a>. You specify the location by setting a value in one of the following fields (not both):</p> <ul> <li> <p> <code>ACMCertificateArn</code> </p> </li> <li> <p> <code>IAMCertificateId</code> </p> </li> </ul> </li> </ul> <p>All distributions support HTTPS connections from viewers. To require viewers to use HTTPS only, or to redirect them from HTTP to HTTPS, use <code>ViewerProtocolPolicy</code> in the <code>CacheBehavior</code> or <code>DefaultCacheBehavior</code>. To specify how CloudFront should use SSL/TLS to communicate with your custom origin, use <code>CustomOriginConfig</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https.html">Using HTTPS with CloudFront</a> and <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-alternate-domain-names.html"> Using Alternate Domain Names and HTTPS</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ViewerCertificate ViewerCertificate { get; set; }
		
		/// <summary>
		/// A complex type that identifies ways in which you want to restrict distribution of your content.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Restrictions Restrictions { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string WebACLId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DistributionSummaryHttpVersion HttpVersion { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool IsIPV6Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AliasICPRecordal[] AliasICPRecordals { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DistributionSummaryPriceClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PriceClass_100 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PriceClass_200 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PriceClass_All = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DistributionSummaryHttpVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		http1.1 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		http2 = 1,
	}
	
	/// <summary>
	/// A complex data type that includes the field patterns to match for field-level encryption.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FieldPatterns
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @string[] Items { get; set; }
	}
	
	/// <summary>
	/// Complex data type for field-level encryption profiles that includes the encryption key and field pattern specifications. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EncryptionEntity
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PublicKeyId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ProviderId { get; set; }
		
		/// <summary>
		/// A complex data type that includes the field patterns to match for field-level encryption.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FieldPatterns FieldPatterns { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EventType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		viewer-request = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		viewer-response = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		origin-request = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		origin-response = 3,
	}
	
	/// <summary>
	/// List of field-level encrpytion configurations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FieldLevelEncryptionList
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextMarker { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int MaxItems { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FieldLevelEncryptionSummary[] Items { get; set; }
	}
	
	/// <summary>
	/// List of field-level encryption profiles.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FieldLevelEncryptionProfileList
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextMarker { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int MaxItems { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FieldLevelEncryptionProfileSummary[] Items { get; set; }
	}
	
	/// <summary>
	/// The field-level encryption profile summary.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FieldLevelEncryptionProfileSummary
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Complex data type for field-level encryption profiles that includes all of the encryption entities. 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EncryptionEntities EncryptionEntities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Comment { get; set; }
	}
	
	/// <summary>
	/// A summary of a field-level encryption item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FieldLevelEncryptionSummary
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Comment { get; set; }
		
		/// <summary>
		/// Configuration for query argument-profile mapping for field-level encryption.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public QueryArgProfileConfig QueryArgProfileConfig { get; set; }
		
		/// <summary>
		/// The configuration for a field-level encryption content type-profile mapping. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ContentTypeProfileConfig ContentTypeProfileConfig { get; set; }
	}
	
	/// <summary>
	/// <p>A complex type that specifies the request headers, if any, that you want CloudFront to base caching on for this cache behavior. </p> <p>For the headers that you specify, CloudFront caches separate versions of a specified object based on the header values in viewer requests. For example, suppose viewer requests for <code>logo.jpg</code> contain a custom <code>product</code> header that has a value of either <code>acme</code> or <code>apex</code>, and you configure CloudFront to cache your content based on values in the <code>product</code> header. CloudFront forwards the <code>product</code> header to the origin and caches the response from the origin once for each header value. For more information about caching based on header values, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html">How CloudFront Forwards and Caches Headers</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Headers
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @string[] Items { get; set; }
	}
	
	/// <summary>
	/// A complex type that contains information about the query string parameters that you want CloudFront to use for caching for a cache behavior. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class QueryStringCacheKeys
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @string[] Items { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GeoRestrictionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		blacklist = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		whitelist = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		none = 2,
	}
	
	/// <summary>
	/// A complex type that controls the countries in which your content is distributed. CloudFront determines the location of your users using <code>MaxMind</code> GeoIP databases. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GeoRestriction
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GeoRestrictionRestrictionType RestrictionType { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @string[] Items { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GeoRestrictionRestrictionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		blacklist = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		whitelist = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		none = 2,
	}
	
	/// <summary>
	/// The <code>InvalidationList</code> complex type describes the list of invalidation objects. For more information about invalidation, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Invalidation.html">Invalidating Objects (Web Distributions Only)</a> in the <i>Amazon CloudFront Developer Guide</i>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InvalidationList
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextMarker { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int MaxItems { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool IsTruncated { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InvalidationSummary[] Items { get; set; }
	}
	
	/// <summary>
	/// A summary of an invalidation request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InvalidationSummary
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreateTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// <p>A complex type that lists the active CloudFront key pairs, if any, that are associated with <code>AwsAccountNumber</code>. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ActiveTrustedSigners.html">ActiveTrustedSigners</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class KeyPairIds
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @string[] Items { get; set; }
	}
	
	/// <summary>
	/// A complex type that contains a Lambda function association.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class LambdaFunctionAssociation
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LambdaFunctionARN { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LambdaFunctionAssociationEventType EventType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeBody { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum LambdaFunctionAssociationEventType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		viewer-request = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		viewer-response = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		origin-request = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		origin-response = 3,
	}
	
	/// <summary>
	/// A list of public keys you've added to CloudFront to use with features like field-level encryption.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PublicKeyList
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextMarker { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int MaxItems { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PublicKeySummary[] Items { get; set; }
	}
	
	/// <summary>
	/// A streaming distribution list. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StreamingDistributionList
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextMarker { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int MaxItems { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool IsTruncated { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StreamingDistributionSummary[] Items { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum Method
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GET = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HEAD = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POST = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PATCH = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPTIONS = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MinimumProtocolVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SSLv3 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TLSv1 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TLSv1_2016 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TLSv1.1_2016 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TLSv1.2_2018 = 4,
	}
	
	/// <summary>
	/// A complex type that contains information about the Amazon S3 origin. If the origin is a custom origin or an S3 bucket that is configured as a website endpoint, use the <code>CustomOriginConfig</code> element instead.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3OriginConfig
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OriginAccessIdentity { get; set; }
	}
	
	/// <summary>
	/// <p>An origin.</p> <p>An origin is the location where content is stored, and from which CloudFront gets content to serve to viewers. To specify an origin:</p> <ul> <li> <p>Use the <code>S3OriginConfig</code> type to specify an Amazon S3 bucket that is <i> <b>not</b> </i> configured with static website hosting.</p> </li> <li> <p>Use the <code>CustomOriginConfig</code> type to specify various other kinds of content containers or HTTP servers, including:</p> <ul> <li> <p>An Amazon S3 bucket that is configured with static website hosting</p> </li> <li> <p>An Elastic Load Balancing load balancer</p> </li> <li> <p>An AWS Elemental MediaPackage origin</p> </li> <li> <p>An AWS Elemental MediaStore container</p> </li> <li> <p>Any other HTTP server, running on an Amazon EC2 instance or any other kind of host</p> </li> </ul> </li> </ul> <p>For the current maximum number of origins that you can specify per distribution, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-limits.html#limits-web-distributions">General Quotas on Web Distributions</a> in the <i>Amazon CloudFront Developer Guide</i> (quotas were formerly referred to as limits).</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Origin
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OriginPath { get; set; }
		
		/// <summary>
		/// A complex type that contains the list of Custom Headers for each origin. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CustomHeaders CustomHeaders { get; set; }
		
		/// <summary>
		/// A complex type that contains information about the Amazon S3 origin. If the origin is a custom origin or an S3 bucket that is configured as a website endpoint, use the <code>CustomOriginConfig</code> element instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3OriginConfig S3OriginConfig { get; set; }
		
		/// <summary>
		/// A custom origin. A custom origin is any origin that is <i>not</i> an Amazon S3 bucket, with one exception. An Amazon S3 bucket that is <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html">configured with static website hosting</a> <i>is</i> a custom origin.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CustomOriginConfig CustomOriginConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ConnectionAttempts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ConnectionTimeout { get; set; }
	}
	
	/// <summary>
	/// A complex type that contains <code>HeaderName</code> and <code>HeaderValue</code> elements, if any, for this distribution. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class OriginCustomHeader
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string HeaderName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string HeaderValue { get; set; }
	}
	
	/// <summary>
	/// A complex data type that includes information about the failover criteria for an origin group, including the status codes for which CloudFront will failover from the primary origin to the second origin.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class OriginGroupFailoverCriteria
	{
		
		/// <summary>
		/// A complex data type for the status codes that you specify that, when returned by a primary origin, trigger CloudFront to failover to a second origin.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StatusCodes StatusCodes { get; set; }
	}
	
	/// <summary>
	/// A complex data type for the origins included in an origin group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class OriginGroupMembers
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		/// <summary>
		/// List of origins in an origin group.
		/// Minimum items: 2
		/// Maximum items: 2
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(2)]
		[System.ComponentModel.DataAnnotations.MaxLength(2)]
		public OriginGroupMember[] Items { get; set; }
	}
	
	/// <summary>
	/// An origin group includes two origins (a primary origin and a second origin to failover to) and a failover criteria that you specify. You create an origin group to support origin failover in CloudFront. When you create or update a distribution, you can specifiy the origin group instead of a single origin, and CloudFront will failover from the primary origin to the second origin under the failover conditions that you've chosen.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class OriginGroup
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// A complex data type that includes information about the failover criteria for an origin group, including the status codes for which CloudFront will failover from the primary origin to the second origin.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OriginGroupFailoverCriteria FailoverCriteria { get; set; }
		
		/// <summary>
		/// A complex data type for the origins included in an origin group.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OriginGroupMembers Members { get; set; }
	}
	
	/// <summary>
	/// A complex data type for the status codes that you specify that, when returned by a primary origin, trigger CloudFront to failover to a second origin.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StatusCodes
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		/// <summary>
		/// List of status codes for origin failover.
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public integer[] Items { get; set; }
	}
	
	/// <summary>
	/// An origin in an origin group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class OriginGroupMember
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OriginId { get; set; }
	}
	
	/// <summary>
	/// A complex data type for public key information. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PublicKeySummary
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EncodedKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Comment { get; set; }
	}
	
	/// <summary>
	/// Query argument-profile mapping for field-level encryption.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class QueryArgProfile
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string QueryArg { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ProfileId { get; set; }
	}
	
	/// <summary>
	/// Query argument-profile mapping for field-level encryption.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class QueryArgProfiles
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Quantity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QueryArgProfile[] Items { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SSLSupportMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sni-only = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		vip = 1,
	}
	
	/// <summary>
	/// A complex type that lists the AWS accounts that were included in the <code>TrustedSigners</code> complex type, as well as their active CloudFront key pair IDs, if any. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Signer
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AwsAccountNumber { get; set; }
		
		/// <summary>
		/// <p>A complex type that lists the active CloudFront key pairs, if any, that are associated with <code>AwsAccountNumber</code>. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ActiveTrustedSigners.html">ActiveTrustedSigners</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public KeyPairIds KeyPairIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SslProtocol
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SSLv3 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TLSv1 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TLSv1.1 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TLSv1.2 = 3,
	}
	
	/// <summary>
	///  A summary of the information for a CloudFront streaming distribution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StreamingDistributionSummary
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ARN { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		/// <summary>
		/// A complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public S3Origin S3Origin { get; set; }
		
		/// <summary>
		/// A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution. 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Aliases Aliases { get; set; }
		
		/// <summary>
		/// <p>A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content.</p> <p>If you want to require signed URLs in requests for objects in the target origin that match the <code>PathPattern</code> for this cache behavior, specify <code>true</code> for <code>Enabled</code>, and specify the applicable values for <code>Quantity</code> and <code>Items</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving Private Content through CloudFront</a> in the <i> Amazon CloudFront Developer Guide</i>.</p> <p>If you don't want to require signed URLs in requests for objects that match <code>PathPattern</code>, specify <code>false</code> for <code>Enabled</code> and <code>0</code> for <code>Quantity</code>. Omit <code>Items</code>.</p> <p>To add, change, or remove one or more trusted signers, change <code>Enabled</code> to <code>true</code> (if it's currently <code>false</code>), change <code>Quantity</code> as applicable, and specify all of the trusted signers that you want to include in the updated distribution.</p> <p>For more information about updating the distribution configuration, see <a href="https://docs.aws.amazon.com/cloudfront/latest/APIReference/DistributionConfig.html">DistributionConfig</a> in the <i>Amazon CloudFront API Reference</i>.</p>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TrustedSigners TrustedSigners { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Comment { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StreamingDistributionSummaryPriceClass PriceClass { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool Enabled { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StreamingDistributionSummaryPriceClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PriceClass_100 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PriceClass_200 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PriceClass_All = 2,
	}
	
	/// <summary>
	///  A complex type that contains <code>Tag</code> key and <code>Tag</code> value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Tag
	{
		
		/// <summary>
		/// <p> A string that contains <code>Tag</code> key.</p> <p>The string length should be between 1 and 128 characters. Valid characters include <code>a-z</code>, <code>A-Z</code>, <code>0-9</code>, space, and the special characters <code>_ - . : / = + @</code>.</p>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string Key { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 0
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=0)]
		public string Value { get; set; }
	}
	
	/// <summary>
	///  A complex type that contains zero or more <code>Tag</code> elements.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TagKeys
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TagKey[] Items { get; set; }
	}
	
	/// <summary>
	///  The request to add tags to a CloudFront resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TagResourceRequest
	{
		
		/// <summary>
		///  A complex type that contains zero or more <code>Tag</code> elements.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	/// <summary>
	///  The request to remove tags from a CloudFront resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UntagResourceRequest
	{
		
		/// <summary>
		///  A complex type that contains zero or more <code>Tag</code> elements.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TagKeys TagKeys { get; set; }
	}
	
	/// <summary>
	/// The request to update an origin access identity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateCloudFrontOriginAccessIdentityRequest
	{
		
		/// <summary>
		/// Origin access identity configuration. Send a <code>GET</code> request to the <code>/<i>CloudFront API version</i>/CloudFront/identity ID/config</code> resource. 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CloudFrontOriginAccessIdentityConfig CloudFrontOriginAccessIdentityConfig { get; set; }
	}
	
	/// <summary>
	/// The request to update a distribution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateDistributionRequest
	{
		
		/// <summary>
		/// A distribution configuration.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DistributionConfig DistributionConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateFieldLevelEncryptionConfigRequest
	{
		
		/// <summary>
		/// A complex data type that includes the profile configurations specified for field-level encryption. 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FieldLevelEncryptionConfig FieldLevelEncryptionConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateFieldLevelEncryptionProfileRequest
	{
		
		/// <summary>
		/// A complex data type of profiles for the field-level encryption.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FieldLevelEncryptionProfileConfig FieldLevelEncryptionProfileConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdatePublicKeyRequest
	{
		
		/// <summary>
		/// Information about a public key you add to CloudFront to use with features like field-level encryption.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PublicKeyConfig PublicKeyConfig { get; set; }
	}
	
	/// <summary>
	/// The request to update a streaming distribution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateStreamingDistributionRequest
	{
		
		/// <summary>
		/// The RTMP distribution's configuration information.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StreamingDistributionConfig StreamingDistributionConfig { get; set; }
	}
	
	public partial class DemoClient
	{
		
		private System.Net.Http.HttpClient client;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public DemoClient(System.Net.Http.HttpClient client, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (client == null)
				throw new ArgumentNullException("Null HttpClient.", "client");

			if (client.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "client");

			this.client = client;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Lists origin access identities.
		/// ListCloudFrontOriginAccessIdentities2019_03_26 /2019-03-26/origin-access-identity/cloudfront
		/// </summary>
		/// <param name="Marker">Use this when paginating results to indicate where to begin in your list of origin access identities. The results include identities in the list that occur after the marker. To get the next page of results, set the <code>Marker</code> to the value of the <code>NextMarker</code> from the current page's response (which is also the ID of the last identity on that page).</param>
		/// <param name="MaxItems">The maximum number of origin access identities you want in the response body. </param>
		/// <returns>Success</returns>
		public async Task ListCloudFrontOriginAccessIdentities2019_03_26Async(string Marker, string MaxItems, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2019-03-26/origin-access-identity/cloudfront?Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&MaxItems=" + (MaxItems==null? "" : Uri.EscapeDataString(MaxItems));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List CloudFront distributions.
		/// ListDistributions2019_03_26 /2019-03-26/distribution
		/// </summary>
		/// <param name="Marker">Use this when paginating results to indicate where to begin in your list of distributions. The results include distributions in the list that occur after the marker. To get the next page of results, set the <code>Marker</code> to the value of the <code>NextMarker</code> from the current page's response (which is also the ID of the last distribution on that page).</param>
		/// <param name="MaxItems">The maximum number of distributions you want in the response body.</param>
		/// <returns>Success</returns>
		public async Task ListDistributions2019_03_26Async(string Marker, string MaxItems, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2019-03-26/distribution?Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&MaxItems=" + (MaxItems==null? "" : Uri.EscapeDataString(MaxItems));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List all field-level encryption configurations that have been created in CloudFront for this account.
		/// ListFieldLevelEncryptionConfigs2019_03_26 /2019-03-26/field-level-encryption
		/// </summary>
		/// <param name="Marker">Use this when paginating results to indicate where to begin in your list of configurations. The results include configurations in the list that occur after the marker. To get the next page of results, set the <code>Marker</code> to the value of the <code>NextMarker</code> from the current page's response (which is also the ID of the last configuration on that page). </param>
		/// <param name="MaxItems">The maximum number of field-level encryption configurations you want in the response body. </param>
		/// <returns>Success</returns>
		public async Task ListFieldLevelEncryptionConfigs2019_03_26Async(string Marker, string MaxItems, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2019-03-26/field-level-encryption?Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&MaxItems=" + (MaxItems==null? "" : Uri.EscapeDataString(MaxItems));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Request a list of field-level encryption profiles that have been created in CloudFront for this account.
		/// ListFieldLevelEncryptionProfiles2019_03_26 /2019-03-26/field-level-encryption-profile
		/// </summary>
		/// <param name="Marker">Use this when paginating results to indicate where to begin in your list of profiles. The results include profiles in the list that occur after the marker. To get the next page of results, set the <code>Marker</code> to the value of the <code>NextMarker</code> from the current page's response (which is also the ID of the last profile on that page). </param>
		/// <param name="MaxItems">The maximum number of field-level encryption profiles you want in the response body. </param>
		/// <returns>Success</returns>
		public async Task ListFieldLevelEncryptionProfiles2019_03_26Async(string Marker, string MaxItems, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2019-03-26/field-level-encryption-profile?Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&MaxItems=" + (MaxItems==null? "" : Uri.EscapeDataString(MaxItems));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists invalidation batches.
		/// ListInvalidations2019_03_26 /2019-03-26/distribution/{DistributionId}/invalidation
		/// </summary>
		/// <param name="DistributionId">The distribution's ID.</param>
		/// <param name="Marker">Use this parameter when paginating results to indicate where to begin in your list of invalidation batches. Because the results are returned in decreasing order from most recent to oldest, the most recent results are on the first page, the second page will contain earlier results, and so on. To get the next page of results, set <code>Marker</code> to the value of the <code>NextMarker</code> from the current page's response. This value is the same as the ID of the last invalidation batch on that page. </param>
		/// <param name="MaxItems">The maximum number of invalidation batches that you want in the response body.</param>
		/// <returns>Success</returns>
		public async Task ListInvalidations2019_03_26Async(string DistributionId, string Marker, string MaxItems, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2019-03-26/distribution/"+ (DistributionId==null? "" : Uri.EscapeDataString(DistributionId))+"/invalidation&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&MaxItems=" + (MaxItems==null? "" : Uri.EscapeDataString(MaxItems));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List all public keys that have been added to CloudFront for this account.
		/// ListPublicKeys2019_03_26 /2019-03-26/public-key
		/// </summary>
		/// <param name="Marker">Use this when paginating results to indicate where to begin in your list of public keys. The results include public keys in the list that occur after the marker. To get the next page of results, set the <code>Marker</code> to the value of the <code>NextMarker</code> from the current page's response (which is also the ID of the last public key on that page). </param>
		/// <param name="MaxItems">The maximum number of public keys you want in the response body. </param>
		/// <returns>Success</returns>
		public async Task ListPublicKeys2019_03_26Async(string Marker, string MaxItems, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2019-03-26/public-key?Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&MaxItems=" + (MaxItems==null? "" : Uri.EscapeDataString(MaxItems));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List streaming distributions.
		/// ListStreamingDistributions2019_03_26 /2019-03-26/streaming-distribution
		/// </summary>
		/// <param name="Marker">The value that you provided for the <code>Marker</code> request parameter.</param>
		/// <param name="MaxItems">The value that you provided for the <code>MaxItems</code> request parameter.</param>
		/// <returns>Success</returns>
		public async Task ListStreamingDistributions2019_03_26Async(string Marker, string MaxItems, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2019-03-26/streaming-distribution?Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&MaxItems=" + (MaxItems==null? "" : Uri.EscapeDataString(MaxItems));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete an origin access identity.
		/// DeleteCloudFrontOriginAccessIdentity2019_03_26 /2019-03-26/origin-access-identity/cloudfront/{Id}
		/// </summary>
		/// <param name="Id">The origin access identity's ID.</param>
		public async Task DeleteCloudFrontOriginAccessIdentity2019_03_26Async(string Id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2019-03-26/origin-access-identity/cloudfront/"+ (Id==null? "" : Uri.EscapeDataString(Id));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get the information about an origin access identity.
		/// GetCloudFrontOriginAccessIdentity2019_03_26 /2019-03-26/origin-access-identity/cloudfront/{Id}
		/// </summary>
		/// <param name="Id">The identity's ID.</param>
		/// <returns>Success</returns>
		public async Task GetCloudFrontOriginAccessIdentity2019_03_26Async(string Id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2019-03-26/origin-access-identity/cloudfront/"+ (Id==null? "" : Uri.EscapeDataString(Id));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete a distribution.
		/// DeleteDistribution2019_03_26 /2019-03-26/distribution/{Id}
		/// </summary>
		/// <param name="Id">The distribution ID. </param>
		public async Task DeleteDistribution2019_03_26Async(string Id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2019-03-26/distribution/"+ (Id==null? "" : Uri.EscapeDataString(Id));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get the information about a distribution.
		/// GetDistribution2019_03_26 /2019-03-26/distribution/{Id}
		/// </summary>
		/// <param name="Id">The distribution's ID. If the ID is empty, an empty distribution configuration is returned.</param>
		/// <returns>Success</returns>
		public async Task GetDistribution2019_03_26Async(string Id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2019-03-26/distribution/"+ (Id==null? "" : Uri.EscapeDataString(Id));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Remove a field-level encryption configuration.
		/// DeleteFieldLevelEncryptionConfig2019_03_26 /2019-03-26/field-level-encryption/{Id}
		/// </summary>
		/// <param name="Id">The ID of the configuration you want to delete from CloudFront.</param>
		public async Task DeleteFieldLevelEncryptionConfig2019_03_26Async(string Id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2019-03-26/field-level-encryption/"+ (Id==null? "" : Uri.EscapeDataString(Id));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get the field-level encryption configuration information.
		/// GetFieldLevelEncryption2019_03_26 /2019-03-26/field-level-encryption/{Id}
		/// </summary>
		/// <param name="Id">Request the ID for the field-level encryption configuration information.</param>
		/// <returns>Success</returns>
		public async Task GetFieldLevelEncryption2019_03_26Async(string Id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2019-03-26/field-level-encryption/"+ (Id==null? "" : Uri.EscapeDataString(Id));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Remove a field-level encryption profile.
		/// DeleteFieldLevelEncryptionProfile2019_03_26 /2019-03-26/field-level-encryption-profile/{Id}
		/// </summary>
		/// <param name="Id">Request the ID of the profile you want to delete from CloudFront.</param>
		public async Task DeleteFieldLevelEncryptionProfile2019_03_26Async(string Id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2019-03-26/field-level-encryption-profile/"+ (Id==null? "" : Uri.EscapeDataString(Id));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get the field-level encryption profile information.
		/// GetFieldLevelEncryptionProfile2019_03_26 /2019-03-26/field-level-encryption-profile/{Id}
		/// </summary>
		/// <param name="Id">Get the ID for the field-level encryption profile information.</param>
		/// <returns>Success</returns>
		public async Task GetFieldLevelEncryptionProfile2019_03_26Async(string Id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2019-03-26/field-level-encryption-profile/"+ (Id==null? "" : Uri.EscapeDataString(Id));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Remove a public key you previously added to CloudFront.
		/// DeletePublicKey2019_03_26 /2019-03-26/public-key/{Id}
		/// </summary>
		/// <param name="Id">The ID of the public key you want to remove from CloudFront.</param>
		public async Task DeletePublicKey2019_03_26Async(string Id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2019-03-26/public-key/"+ (Id==null? "" : Uri.EscapeDataString(Id));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get the public key information.
		/// GetPublicKey2019_03_26 /2019-03-26/public-key/{Id}
		/// </summary>
		/// <param name="Id">Request the ID for the public key.</param>
		/// <returns>Success</returns>
		public async Task GetPublicKey2019_03_26Async(string Id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2019-03-26/public-key/"+ (Id==null? "" : Uri.EscapeDataString(Id));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Delete a streaming distribution. To delete an RTMP distribution using the CloudFront API, perform the following steps.</p> <p> <b>To delete an RTMP distribution using the CloudFront API</b>:</p> <ol> <li> <p>Disable the RTMP distribution.</p> </li> <li> <p>Submit a <code>GET Streaming Distribution Config</code> request to get the current configuration and the <code>Etag</code> header for the distribution. </p> </li> <li> <p>Update the XML document that was returned in the response to your <code>GET Streaming Distribution Config</code> request to change the value of <code>Enabled</code> to <code>false</code>.</p> </li> <li> <p>Submit a <code>PUT Streaming Distribution Config</code> request to update the configuration for your distribution. In the request body, include the XML document that you updated in Step 3. Then set the value of the HTTP <code>If-Match</code> header to the value of the <code>ETag</code> header that CloudFront returned when you submitted the <code>GET Streaming Distribution Config</code> request in Step 2.</p> </li> <li> <p>Review the response to the <code>PUT Streaming Distribution Config</code> request to confirm that the distribution was successfully disabled.</p> </li> <li> <p>Submit a <code>GET Streaming Distribution Config</code> request to confirm that your changes have propagated. When propagation is complete, the value of <code>Status</code> is <code>Deployed</code>.</p> </li> <li> <p>Submit a <code>DELETE Streaming Distribution</code> request. Set the value of the HTTP <code>If-Match</code> header to the value of the <code>ETag</code> header that CloudFront returned when you submitted the <code>GET Streaming Distribution Config</code> request in Step 2.</p> </li> <li> <p>Review the response to your <code>DELETE Streaming Distribution</code> request to confirm that the distribution was successfully deleted.</p> </li> </ol> <p>For information about deleting a distribution using the CloudFront console, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/HowToDeleteDistribution.html">Deleting a Distribution</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
		/// DeleteStreamingDistribution2019_03_26 /2019-03-26/streaming-distribution/{Id}
		/// </summary>
		/// <param name="Id">The distribution ID. </param>
		public async Task DeleteStreamingDistribution2019_03_26Async(string Id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2019-03-26/streaming-distribution/"+ (Id==null? "" : Uri.EscapeDataString(Id));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets information about a specified RTMP distribution, including the distribution configuration.
		/// GetStreamingDistribution2019_03_26 /2019-03-26/streaming-distribution/{Id}
		/// </summary>
		/// <param name="Id">The streaming distribution's ID.</param>
		/// <returns>Success</returns>
		public async Task GetStreamingDistribution2019_03_26Async(string Id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2019-03-26/streaming-distribution/"+ (Id==null? "" : Uri.EscapeDataString(Id));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get the configuration information about an origin access identity.
		/// GetCloudFrontOriginAccessIdentityConfig2019_03_26 /2019-03-26/origin-access-identity/cloudfront/{Id}/config
		/// </summary>
		/// <param name="Id">The identity's ID. </param>
		/// <returns>Success</returns>
		public async Task GetCloudFrontOriginAccessIdentityConfig2019_03_26Async(string Id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2019-03-26/origin-access-identity/cloudfront/"+ (Id==null? "" : Uri.EscapeDataString(Id))+"/config";
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get the configuration information about a distribution.
		/// GetDistributionConfig2019_03_26 /2019-03-26/distribution/{Id}/config
		/// </summary>
		/// <param name="Id">The distribution's ID. If the ID is empty, an empty distribution configuration is returned.</param>
		/// <returns>Success</returns>
		public async Task GetDistributionConfig2019_03_26Async(string Id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2019-03-26/distribution/"+ (Id==null? "" : Uri.EscapeDataString(Id))+"/config";
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get the field-level encryption configuration information.
		/// GetFieldLevelEncryptionConfig2019_03_26 /2019-03-26/field-level-encryption/{Id}/config
		/// </summary>
		/// <param name="Id">Request the ID for the field-level encryption configuration information.</param>
		/// <returns>Success</returns>
		public async Task GetFieldLevelEncryptionConfig2019_03_26Async(string Id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2019-03-26/field-level-encryption/"+ (Id==null? "" : Uri.EscapeDataString(Id))+"/config";
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get the field-level encryption profile configuration information.
		/// GetFieldLevelEncryptionProfileConfig2019_03_26 /2019-03-26/field-level-encryption-profile/{Id}/config
		/// </summary>
		/// <param name="Id">Get the ID for the field-level encryption profile configuration information.</param>
		/// <returns>Success</returns>
		public async Task GetFieldLevelEncryptionProfileConfig2019_03_26Async(string Id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2019-03-26/field-level-encryption-profile/"+ (Id==null? "" : Uri.EscapeDataString(Id))+"/config";
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get the information about an invalidation.
		/// GetInvalidation2019_03_26 /2019-03-26/distribution/{DistributionId}/invalidation/{Id}
		/// </summary>
		/// <param name="DistributionId">The distribution's ID.</param>
		/// <param name="Id">The identifier for the invalidation request, for example, <code>IDFDVBD632BHDS5</code>.</param>
		/// <returns>Success</returns>
		public async Task GetInvalidation2019_03_26Async(string DistributionId, string Id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2019-03-26/distribution/"+ (DistributionId==null? "" : Uri.EscapeDataString(DistributionId))+"/invalidation/"+ (Id==null? "" : Uri.EscapeDataString(Id));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Return public key configuration informaation
		/// GetPublicKeyConfig2019_03_26 /2019-03-26/public-key/{Id}/config
		/// </summary>
		/// <param name="Id">Request the ID for the public key configuration.</param>
		/// <returns>Success</returns>
		public async Task GetPublicKeyConfig2019_03_26Async(string Id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2019-03-26/public-key/"+ (Id==null? "" : Uri.EscapeDataString(Id))+"/config";
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get the configuration information about a streaming distribution.
		/// GetStreamingDistributionConfig2019_03_26 /2019-03-26/streaming-distribution/{Id}/config
		/// </summary>
		/// <param name="Id">The streaming distribution's ID.</param>
		/// <returns>Success</returns>
		public async Task GetStreamingDistributionConfig2019_03_26Async(string Id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2019-03-26/streaming-distribution/"+ (Id==null? "" : Uri.EscapeDataString(Id))+"/config";
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List the distributions that are associated with a specified AWS WAF web ACL.
		/// ListDistributionsByWebACLId2019_03_26 /2019-03-26/distributionsByWebACLId/{WebACLId}
		/// </summary>
		/// <param name="Marker">Use <code>Marker</code> and <code>MaxItems</code> to control pagination of results. If you have more than <code>MaxItems</code> distributions that satisfy the request, the response includes a <code>NextMarker</code> element. To get the next page of results, submit another request. For the value of <code>Marker</code>, specify the value of <code>NextMarker</code> from the last response. (For the first request, omit <code>Marker</code>.) </param>
		/// <param name="MaxItems">The maximum number of distributions that you want CloudFront to return in the response body. The maximum and default values are both 100.</param>
		/// <param name="WebACLId">The ID of the AWS WAF web ACL that you want to list the associated distributions. If you specify "null" for the ID, the request returns a list of the distributions that aren't associated with a web ACL. </param>
		/// <returns>Success</returns>
		public async Task ListDistributionsByWebACLId2019_03_26Async(string Marker, string MaxItems, string WebACLId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2019-03-26/distributionsByWebACLId/"+ (WebACLId==null? "" : Uri.EscapeDataString(WebACLId))+"?Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&MaxItems=" + (MaxItems==null? "" : Uri.EscapeDataString(MaxItems));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List tags for a CloudFront resource.
		/// ListTagsForResource2019_03_26 /2019-03-26/tagging#Resource
		/// </summary>
		/// <param name="Resource"> An ARN of a CloudFront resource.</param>
		/// <returns>Success</returns>
		public async Task ListTagsForResource2019_03_26Async(string Resource, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/2019-03-26/tagging#Resource?Resource=" + (Resource==null? "" : Uri.EscapeDataString(Resource));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}
