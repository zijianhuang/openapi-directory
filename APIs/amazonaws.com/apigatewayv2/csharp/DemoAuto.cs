//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace My.Demo.Client
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Net.Http;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateApiResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApiEndpoint { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiId { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiKeySelectionExpression { get; set; }
		
		/// <summary>
		/// Represents a CORS configuration. Supported only for HTTP APIs. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-cors.html">Configuring CORS</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Cors CorsConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedDate { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableSchemaValidation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] ImportInfo { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Represents a protocol type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateApiResponseProtocolType ProtocolType { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteSelectionExpression { get; set; }
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Warnings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateApiResponseProtocolType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEBSOCKET = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateApiMappingResponse
	{
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiId { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiMappingId { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiMappingKey { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Stage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateAuthorizerResponse
	{
		
		/// <summary>
		/// Represents an Amazon Resource Name (ARN).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AuthorizerCredentialsArn { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AuthorizerId { get; set; }
		
		/// <summary>
		/// An integer with a value between [0-3600].
		/// Minimum: 0
		/// Maximum: 3600
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 3600)]
		public System.Nullable<System.Int32> AuthorizerResultTtlInSeconds { get; set; }
		
		/// <summary>
		/// The authorizer type. For WebSocket APIs, specify REQUEST for a Lambda function using incoming request parameters. For HTTP APIs, specify JWT to use JSON Web Tokens.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateAuthorizerResponseAuthorizerType AuthorizerType { get; set; }
		
		/// <summary>
		/// A string representation of a URI with a length between [1-2048].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AuthorizerUri { get; set; }
		
		/// <summary>
		/// The identity source for which authorization is requested. For the REQUEST authorizer, this is required when authorization caching is enabled. The value is a comma-separated string of one or more mapping expressions of the specified request parameters. For example, if an Auth header, a Name query string parameter are defined as identity sources, this value is $method.request.header.Auth, $method.request.querystring.Name. These parameters will be used to derive the authorization caching key and to perform runtime validation of the REQUEST authorizer by verifying all of the identity-related request parameters are present, not null and non-empty. Only when this is true does the authorizer invoke the authorizer Lambda function, otherwise, it returns a 401 Unauthorized response without calling the Lambda function. The valid value is a string of comma-separated mapping expressions of the specified request parameters. When the authorization caching is not enabled, this property is optional.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public @__string[] IdentitySource { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IdentityValidationExpression { get; set; }
		
		/// <summary>
		/// Represents the configuration of a JWT authorizer. Required for the JWT authorizer type. Supported only for HTTP APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public JWTConfiguration JwtConfiguration { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateAuthorizerResponseAuthorizerType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REQUEST = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JWT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDeploymentResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoDeployed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedDate { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DeploymentId { get; set; }
		
		/// <summary>
		/// Represents a deployment status.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateDeploymentResponseDeploymentStatus DeploymentStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DeploymentStatusMessage { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateDeploymentResponseDeploymentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEPLOYED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDomainNameResponse
	{
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiMappingSelectionExpression { get; set; }
		
		/// <summary>
		/// A string with a length between [1-512].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		/// <summary>
		/// The domain name configurations.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DomainNameConfiguration[] DomainNameConfigurations { get; set; }
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	/// <summary>
	/// The domain name configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DomainNameConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApiGatewayDomainName { get; set; }
		
		/// <summary>
		/// Represents an Amazon Resource Name (ARN).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CertificateArn { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CertificateName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CertificateUploadDate { get; set; }
		
		/// <summary>
		/// The status of the domain name migration. The valid values are AVAILABLE and UPDATING. If the status is UPDATING, the domain cannot be modified further until the existing operation is complete. If it is AVAILABLE, the domain can be updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DomainNameConfigurationDomainNameStatus DomainNameStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainNameStatusMessage { get; set; }
		
		/// <summary>
		/// Represents an endpoint type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DomainNameConfigurationEndpointType EndpointType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HostedZoneId { get; set; }
		
		/// <summary>
		/// The Transport Layer Security (TLS) version of the security policy for this domain name. The valid values are TLS_1_0 and TLS_1_2.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DomainNameConfigurationSecurityPolicy SecurityPolicy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DomainNameConfigurationDomainNameStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DomainNameConfigurationEndpointType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REGIONAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EDGE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DomainNameConfigurationSecurityPolicy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TLS_1_0 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TLS_1_2 = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateIntegrationResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApiGatewayManaged { get; set; }
		
		/// <summary>
		/// A string with a length between [1-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ConnectionId { get; set; }
		
		/// <summary>
		/// Represents a connection type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateIntegrationResultConnectionType ConnectionType { get; set; }
		
		/// <summary>
		/// Specifies how to handle response payload content type conversions. Supported only for WebSocket APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateIntegrationResultContentHandlingStrategy ContentHandlingStrategy { get; set; }
		
		/// <summary>
		/// Represents an Amazon Resource Name (ARN).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CredentialsArn { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationId { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationMethod { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationResponseSelectionExpression { get; set; }
		
		/// <summary>
		/// Represents an API method integration type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateIntegrationResultIntegrationType IntegrationType { get; set; }
		
		/// <summary>
		/// A string representation of a URI with a length between [1-2048].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationUri { get; set; }
		
		/// <summary>
		/// Represents passthrough behavior for an integration response. Supported only for WebSocket APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateIntegrationResultPassthroughBehavior PassthroughBehavior { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PayloadFormatVersion { get; set; }
		
		/// <summary>
		/// A key-value map specifying response parameters that are passed to the method response from the backend. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of method.response.header.{name}, where name is a valid and unique header name. The mapped non-static value must match the pattern of integration.response.header.{name} or integration.response.body.{JSON-expression}, where name is a valid and unique response header name and JSON-expression is a valid JSON expression without the $ prefix.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IntegrationParameters RequestParameters { get; set; }
		
		/// <summary>
		/// A mapping of identifier keys to templates. The value is an actual template script. The key is typically a SelectionKey which is chosen based on evaluating a selection expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TemplateMap RequestTemplates { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string TemplateSelectionExpression { get; set; }
		
		/// <summary>
		/// An integer with a value between [50-30000].
		/// Minimum: 50
		/// Maximum: 30000
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(50, 30000)]
		public System.Nullable<System.Int32> TimeoutInMillis { get; set; }
		
		/// <summary>
		/// The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TlsConfig TlsConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateIntegrationResultConnectionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNET = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VPC_LINK = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateIntegrationResultContentHandlingStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_BINARY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_TEXT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateIntegrationResultIntegrationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MOCK = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP_PROXY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_PROXY = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateIntegrationResultPassthroughBehavior
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WHEN_NO_MATCH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEVER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WHEN_NO_TEMPLATES = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateIntegrationResponseResponse
	{
		
		/// <summary>
		/// Specifies how to handle response payload content type conversions. Supported only for WebSocket APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateIntegrationResponseResponseContentHandlingStrategy ContentHandlingStrategy { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationResponseId { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationResponseKey { get; set; }
		
		/// <summary>
		/// A key-value map specifying response parameters that are passed to the method response from the backend. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of method.response.header.{name}, where name is a valid and unique header name. The mapped non-static value must match the pattern of integration.response.header.{name} or integration.response.body.{JSON-expression}, where name is a valid and unique response header name and JSON-expression is a valid JSON expression without the $ prefix.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IntegrationParameters ResponseParameters { get; set; }
		
		/// <summary>
		/// A mapping of identifier keys to templates. The value is an actual template script. The key is typically a SelectionKey which is chosen based on evaluating a selection expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TemplateMap ResponseTemplates { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string TemplateSelectionExpression { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateIntegrationResponseResponseContentHandlingStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_BINARY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_TEXT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateModelResponse
	{
		
		/// <summary>
		/// A string with a length between [1-256].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ContentType { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ModelId { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// A string with a length between [0-32768].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Schema { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateRouteResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApiGatewayManaged { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApiKeyRequired { get; set; }
		
		/// <summary>
		/// A list of authorization scopes configured on a route. The scopes are used with a JWT authorizer to authorize the method invocation. The authorization works by matching the route scopes against the scopes parsed from the access token in the incoming request. The method invocation is authorized if any route scope matches a claimed scope in the access token. Otherwise, the invocation is not authorized. When the route scope is configured, the client must provide an access token instead of an identity token for authorization purposes.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StringWithLengthBetween1And64[] AuthorizationScopes { get; set; }
		
		/// <summary>
		/// The authorization type. For WebSocket APIs, valid values are NONE for open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer. For HTTP APIs, valid values are NONE for open access, or JWT for using JSON Web Tokens.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateRouteResultAuthorizationType AuthorizationType { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AuthorizerId { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ModelSelectionExpression { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string OperationName { get; set; }
		
		/// <summary>
		/// The route models.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteModels RequestModels { get; set; }
		
		/// <summary>
		/// The route parameters.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteParameters RequestParameters { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteId { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteKey { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteResponseSelectionExpression { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Target { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateRouteResultAuthorizationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_IAM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JWT = 3,
	}
	
	/// <summary>
	/// Validation constraints imposed on parameters of a request (path, query string, headers).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ParameterConstraints
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Required { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateRouteResponseResponse
	{
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ModelSelectionExpression { get; set; }
		
		/// <summary>
		/// The route models.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteModels ResponseModels { get; set; }
		
		/// <summary>
		/// The route parameters.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteParameters ResponseParameters { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteResponseId { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteResponseKey { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateStageResponse
	{
		
		/// <summary>
		/// Settings for logging access in a stage.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AccessLogSettings AccessLogSettings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApiGatewayManaged { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoDeploy { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ClientCertificateId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedDate { get; set; }
		
		/// <summary>
		/// Represents a collection of route settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteSettings DefaultRouteSettings { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DeploymentId { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastDeploymentStatusMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdatedDate { get; set; }
		
		/// <summary>
		/// The route settings map.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteSettingsMap RouteSettings { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string StageName { get; set; }
		
		/// <summary>
		/// The stage variable map.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StageVariablesMap StageVariables { get; set; }
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	/// <summary>
	/// The logging level.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum LoggingLevel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INFO = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OFF = 2,
	}
	
	/// <summary>
	/// Represents a collection of route settings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RouteSettings
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DataTraceEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DetailedMetricsEnabled { get; set; }
		
		/// <summary>
		/// The logging level.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteSettingsLoggingLevel LoggingLevel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ThrottlingBurstLimit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ThrottlingRateLimit { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RouteSettingsLoggingLevel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INFO = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OFF = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateVpcLinkResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedDate { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// A list of security group IDs for the VPC link.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public @__string[] SecurityGroupIds { get; set; }
		
		/// <summary>
		/// A list of subnet IDs to include in the VPC link.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public @__string[] SubnetIds { get; set; }
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string VpcLinkId { get; set; }
		
		/// <summary>
		/// The status of the VPC link.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateVpcLinkResponseVpcLinkStatus VpcLinkStatus { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string VpcLinkStatusMessage { get; set; }
		
		/// <summary>
		/// The version of the VPC link.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateVpcLinkResponseVpcLinkVersion VpcLinkVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateVpcLinkResponseVpcLinkStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INACTIVE = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateVpcLinkResponseVpcLinkVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		V2 = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ExportApiResponse
	{
		
		/// <summary>
		/// Represents an exported definition of an API in a particular output format, for example, YAML. The API is serialized to the requested specification, for example, OpenAPI 3.0.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetApiResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApiEndpoint { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiId { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiKeySelectionExpression { get; set; }
		
		/// <summary>
		/// Represents a CORS configuration. Supported only for HTTP APIs. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-cors.html">Configuring CORS</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Cors CorsConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedDate { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableSchemaValidation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] ImportInfo { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Represents a protocol type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetApiResponseProtocolType ProtocolType { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteSelectionExpression { get; set; }
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Warnings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GetApiResponseProtocolType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEBSOCKET = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetApiMappingResponse
	{
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiId { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiMappingId { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiMappingKey { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Stage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetApiMappingsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ApiMapping[] Items { get; set; }
		
		/// <summary>
		/// The next page of elements from this collection. Not valid for the last element of the collection.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetApisResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Api[] Items { get; set; }
		
		/// <summary>
		/// The next page of elements from this collection. Not valid for the last element of the collection.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetAuthorizerResponse
	{
		
		/// <summary>
		/// Represents an Amazon Resource Name (ARN).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AuthorizerCredentialsArn { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AuthorizerId { get; set; }
		
		/// <summary>
		/// An integer with a value between [0-3600].
		/// Minimum: 0
		/// Maximum: 3600
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 3600)]
		public System.Nullable<System.Int32> AuthorizerResultTtlInSeconds { get; set; }
		
		/// <summary>
		/// The authorizer type. For WebSocket APIs, specify REQUEST for a Lambda function using incoming request parameters. For HTTP APIs, specify JWT to use JSON Web Tokens.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetAuthorizerResponseAuthorizerType AuthorizerType { get; set; }
		
		/// <summary>
		/// A string representation of a URI with a length between [1-2048].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AuthorizerUri { get; set; }
		
		/// <summary>
		/// The identity source for which authorization is requested. For the REQUEST authorizer, this is required when authorization caching is enabled. The value is a comma-separated string of one or more mapping expressions of the specified request parameters. For example, if an Auth header, a Name query string parameter are defined as identity sources, this value is $method.request.header.Auth, $method.request.querystring.Name. These parameters will be used to derive the authorization caching key and to perform runtime validation of the REQUEST authorizer by verifying all of the identity-related request parameters are present, not null and non-empty. Only when this is true does the authorizer invoke the authorizer Lambda function, otherwise, it returns a 401 Unauthorized response without calling the Lambda function. The valid value is a string of comma-separated mapping expressions of the specified request parameters. When the authorization caching is not enabled, this property is optional.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public @__string[] IdentitySource { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IdentityValidationExpression { get; set; }
		
		/// <summary>
		/// Represents the configuration of a JWT authorizer. Required for the JWT authorizer type. Supported only for HTTP APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public JWTConfiguration JwtConfiguration { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GetAuthorizerResponseAuthorizerType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REQUEST = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JWT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetAuthorizersResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Authorizer[] Items { get; set; }
		
		/// <summary>
		/// The next page of elements from this collection. Not valid for the last element of the collection.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetDeploymentResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoDeployed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedDate { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DeploymentId { get; set; }
		
		/// <summary>
		/// Represents a deployment status.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetDeploymentResponseDeploymentStatus DeploymentStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DeploymentStatusMessage { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GetDeploymentResponseDeploymentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEPLOYED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetDeploymentsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Deployment[] Items { get; set; }
		
		/// <summary>
		/// The next page of elements from this collection. Not valid for the last element of the collection.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetDomainNameResponse
	{
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiMappingSelectionExpression { get; set; }
		
		/// <summary>
		/// A string with a length between [1-512].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		/// <summary>
		/// The domain name configurations.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DomainNameConfiguration[] DomainNameConfigurations { get; set; }
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetDomainNamesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainName[] Items { get; set; }
		
		/// <summary>
		/// The next page of elements from this collection. Not valid for the last element of the collection.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetIntegrationResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApiGatewayManaged { get; set; }
		
		/// <summary>
		/// A string with a length between [1-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ConnectionId { get; set; }
		
		/// <summary>
		/// Represents a connection type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetIntegrationResultConnectionType ConnectionType { get; set; }
		
		/// <summary>
		/// Specifies how to handle response payload content type conversions. Supported only for WebSocket APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetIntegrationResultContentHandlingStrategy ContentHandlingStrategy { get; set; }
		
		/// <summary>
		/// Represents an Amazon Resource Name (ARN).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CredentialsArn { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationId { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationMethod { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationResponseSelectionExpression { get; set; }
		
		/// <summary>
		/// Represents an API method integration type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetIntegrationResultIntegrationType IntegrationType { get; set; }
		
		/// <summary>
		/// A string representation of a URI with a length between [1-2048].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationUri { get; set; }
		
		/// <summary>
		/// Represents passthrough behavior for an integration response. Supported only for WebSocket APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetIntegrationResultPassthroughBehavior PassthroughBehavior { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PayloadFormatVersion { get; set; }
		
		/// <summary>
		/// A key-value map specifying response parameters that are passed to the method response from the backend. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of method.response.header.{name}, where name is a valid and unique header name. The mapped non-static value must match the pattern of integration.response.header.{name} or integration.response.body.{JSON-expression}, where name is a valid and unique response header name and JSON-expression is a valid JSON expression without the $ prefix.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IntegrationParameters RequestParameters { get; set; }
		
		/// <summary>
		/// A mapping of identifier keys to templates. The value is an actual template script. The key is typically a SelectionKey which is chosen based on evaluating a selection expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TemplateMap RequestTemplates { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string TemplateSelectionExpression { get; set; }
		
		/// <summary>
		/// An integer with a value between [50-30000].
		/// Minimum: 50
		/// Maximum: 30000
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(50, 30000)]
		public System.Nullable<System.Int32> TimeoutInMillis { get; set; }
		
		/// <summary>
		/// The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TlsConfig TlsConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GetIntegrationResultConnectionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNET = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VPC_LINK = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GetIntegrationResultContentHandlingStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_BINARY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_TEXT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GetIntegrationResultIntegrationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MOCK = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP_PROXY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_PROXY = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GetIntegrationResultPassthroughBehavior
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WHEN_NO_MATCH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEVER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WHEN_NO_TEMPLATES = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetIntegrationResponseResponse
	{
		
		/// <summary>
		/// Specifies how to handle response payload content type conversions. Supported only for WebSocket APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetIntegrationResponseResponseContentHandlingStrategy ContentHandlingStrategy { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationResponseId { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationResponseKey { get; set; }
		
		/// <summary>
		/// A key-value map specifying response parameters that are passed to the method response from the backend. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of method.response.header.{name}, where name is a valid and unique header name. The mapped non-static value must match the pattern of integration.response.header.{name} or integration.response.body.{JSON-expression}, where name is a valid and unique response header name and JSON-expression is a valid JSON expression without the $ prefix.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IntegrationParameters ResponseParameters { get; set; }
		
		/// <summary>
		/// A mapping of identifier keys to templates. The value is an actual template script. The key is typically a SelectionKey which is chosen based on evaluating a selection expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TemplateMap ResponseTemplates { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string TemplateSelectionExpression { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GetIntegrationResponseResponseContentHandlingStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_BINARY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_TEXT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetIntegrationResponsesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public IntegrationResponse[] Items { get; set; }
		
		/// <summary>
		/// The next page of elements from this collection. Not valid for the last element of the collection.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetIntegrationsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Integration[] Items { get; set; }
		
		/// <summary>
		/// The next page of elements from this collection. Not valid for the last element of the collection.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetModelResponse
	{
		
		/// <summary>
		/// A string with a length between [1-256].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ContentType { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ModelId { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// A string with a length between [0-32768].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Schema { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetModelTemplateResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetModelsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Model[] Items { get; set; }
		
		/// <summary>
		/// The next page of elements from this collection. Not valid for the last element of the collection.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetRouteResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApiGatewayManaged { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApiKeyRequired { get; set; }
		
		/// <summary>
		/// A list of authorization scopes configured on a route. The scopes are used with a JWT authorizer to authorize the method invocation. The authorization works by matching the route scopes against the scopes parsed from the access token in the incoming request. The method invocation is authorized if any route scope matches a claimed scope in the access token. Otherwise, the invocation is not authorized. When the route scope is configured, the client must provide an access token instead of an identity token for authorization purposes.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StringWithLengthBetween1And64[] AuthorizationScopes { get; set; }
		
		/// <summary>
		/// The authorization type. For WebSocket APIs, valid values are NONE for open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer. For HTTP APIs, valid values are NONE for open access, or JWT for using JSON Web Tokens.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetRouteResultAuthorizationType AuthorizationType { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AuthorizerId { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ModelSelectionExpression { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string OperationName { get; set; }
		
		/// <summary>
		/// The route models.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteModels RequestModels { get; set; }
		
		/// <summary>
		/// The route parameters.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteParameters RequestParameters { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteId { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteKey { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteResponseSelectionExpression { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Target { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GetRouteResultAuthorizationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_IAM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JWT = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetRouteResponseResponse
	{
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ModelSelectionExpression { get; set; }
		
		/// <summary>
		/// The route models.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteModels ResponseModels { get; set; }
		
		/// <summary>
		/// The route parameters.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteParameters ResponseParameters { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteResponseId { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteResponseKey { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetRouteResponsesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RouteResponse[] Items { get; set; }
		
		/// <summary>
		/// The next page of elements from this collection. Not valid for the last element of the collection.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetRoutesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Route[] Items { get; set; }
		
		/// <summary>
		/// The next page of elements from this collection. Not valid for the last element of the collection.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetStageResponse
	{
		
		/// <summary>
		/// Settings for logging access in a stage.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AccessLogSettings AccessLogSettings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApiGatewayManaged { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoDeploy { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ClientCertificateId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedDate { get; set; }
		
		/// <summary>
		/// Represents a collection of route settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteSettings DefaultRouteSettings { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DeploymentId { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastDeploymentStatusMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdatedDate { get; set; }
		
		/// <summary>
		/// The route settings map.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteSettingsMap RouteSettings { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string StageName { get; set; }
		
		/// <summary>
		/// The stage variable map.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StageVariablesMap StageVariables { get; set; }
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetStagesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Stage[] Items { get; set; }
		
		/// <summary>
		/// The next page of elements from this collection. Not valid for the last element of the collection.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetTagsResponse
	{
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetVpcLinkResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedDate { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// A list of security group IDs for the VPC link.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public @__string[] SecurityGroupIds { get; set; }
		
		/// <summary>
		/// A list of subnet IDs to include in the VPC link.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public @__string[] SubnetIds { get; set; }
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string VpcLinkId { get; set; }
		
		/// <summary>
		/// The status of the VPC link.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetVpcLinkResponseVpcLinkStatus VpcLinkStatus { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string VpcLinkStatusMessage { get; set; }
		
		/// <summary>
		/// The version of the VPC link.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetVpcLinkResponseVpcLinkVersion VpcLinkVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GetVpcLinkResponseVpcLinkStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INACTIVE = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GetVpcLinkResponseVpcLinkVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		V2 = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetVpcLinksResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public VpcLink[] Items { get; set; }
		
		/// <summary>
		/// The next page of elements from this collection. Not valid for the last element of the collection.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ImportApiResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApiEndpoint { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiId { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiKeySelectionExpression { get; set; }
		
		/// <summary>
		/// Represents a CORS configuration. Supported only for HTTP APIs. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-cors.html">Configuring CORS</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Cors CorsConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedDate { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableSchemaValidation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] ImportInfo { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Represents a protocol type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ImportApiResponseProtocolType ProtocolType { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteSelectionExpression { get; set; }
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Warnings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ImportApiResponseProtocolType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEBSOCKET = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ReimportApiResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApiEndpoint { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiId { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiKeySelectionExpression { get; set; }
		
		/// <summary>
		/// Represents a CORS configuration. Supported only for HTTP APIs. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-cors.html">Configuring CORS</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Cors CorsConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedDate { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableSchemaValidation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] ImportInfo { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Represents a protocol type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ReimportApiResponseProtocolType ProtocolType { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteSelectionExpression { get; set; }
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Warnings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ReimportApiResponseProtocolType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEBSOCKET = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateApiResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApiEndpoint { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiId { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiKeySelectionExpression { get; set; }
		
		/// <summary>
		/// Represents a CORS configuration. Supported only for HTTP APIs. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-cors.html">Configuring CORS</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Cors CorsConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedDate { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableSchemaValidation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] ImportInfo { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Represents a protocol type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateApiResponseProtocolType ProtocolType { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteSelectionExpression { get; set; }
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Warnings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateApiResponseProtocolType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEBSOCKET = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateApiMappingResponse
	{
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiId { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiMappingId { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiMappingKey { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Stage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateAuthorizerResponse
	{
		
		/// <summary>
		/// Represents an Amazon Resource Name (ARN).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AuthorizerCredentialsArn { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AuthorizerId { get; set; }
		
		/// <summary>
		/// An integer with a value between [0-3600].
		/// Minimum: 0
		/// Maximum: 3600
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 3600)]
		public System.Nullable<System.Int32> AuthorizerResultTtlInSeconds { get; set; }
		
		/// <summary>
		/// The authorizer type. For WebSocket APIs, specify REQUEST for a Lambda function using incoming request parameters. For HTTP APIs, specify JWT to use JSON Web Tokens.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateAuthorizerResponseAuthorizerType AuthorizerType { get; set; }
		
		/// <summary>
		/// A string representation of a URI with a length between [1-2048].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AuthorizerUri { get; set; }
		
		/// <summary>
		/// The identity source for which authorization is requested. For the REQUEST authorizer, this is required when authorization caching is enabled. The value is a comma-separated string of one or more mapping expressions of the specified request parameters. For example, if an Auth header, a Name query string parameter are defined as identity sources, this value is $method.request.header.Auth, $method.request.querystring.Name. These parameters will be used to derive the authorization caching key and to perform runtime validation of the REQUEST authorizer by verifying all of the identity-related request parameters are present, not null and non-empty. Only when this is true does the authorizer invoke the authorizer Lambda function, otherwise, it returns a 401 Unauthorized response without calling the Lambda function. The valid value is a string of comma-separated mapping expressions of the specified request parameters. When the authorization caching is not enabled, this property is optional.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public @__string[] IdentitySource { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IdentityValidationExpression { get; set; }
		
		/// <summary>
		/// Represents the configuration of a JWT authorizer. Required for the JWT authorizer type. Supported only for HTTP APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public JWTConfiguration JwtConfiguration { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateAuthorizerResponseAuthorizerType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REQUEST = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JWT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateDeploymentResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoDeployed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedDate { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DeploymentId { get; set; }
		
		/// <summary>
		/// Represents a deployment status.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateDeploymentResponseDeploymentStatus DeploymentStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DeploymentStatusMessage { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateDeploymentResponseDeploymentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEPLOYED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateDomainNameResponse
	{
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiMappingSelectionExpression { get; set; }
		
		/// <summary>
		/// A string with a length between [1-512].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		/// <summary>
		/// The domain name configurations.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DomainNameConfiguration[] DomainNameConfigurations { get; set; }
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateIntegrationResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApiGatewayManaged { get; set; }
		
		/// <summary>
		/// A string with a length between [1-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ConnectionId { get; set; }
		
		/// <summary>
		/// Represents a connection type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateIntegrationResultConnectionType ConnectionType { get; set; }
		
		/// <summary>
		/// Specifies how to handle response payload content type conversions. Supported only for WebSocket APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateIntegrationResultContentHandlingStrategy ContentHandlingStrategy { get; set; }
		
		/// <summary>
		/// Represents an Amazon Resource Name (ARN).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CredentialsArn { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationId { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationMethod { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationResponseSelectionExpression { get; set; }
		
		/// <summary>
		/// Represents an API method integration type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateIntegrationResultIntegrationType IntegrationType { get; set; }
		
		/// <summary>
		/// A string representation of a URI with a length between [1-2048].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationUri { get; set; }
		
		/// <summary>
		/// Represents passthrough behavior for an integration response. Supported only for WebSocket APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateIntegrationResultPassthroughBehavior PassthroughBehavior { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PayloadFormatVersion { get; set; }
		
		/// <summary>
		/// A key-value map specifying response parameters that are passed to the method response from the backend. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of method.response.header.{name}, where name is a valid and unique header name. The mapped non-static value must match the pattern of integration.response.header.{name} or integration.response.body.{JSON-expression}, where name is a valid and unique response header name and JSON-expression is a valid JSON expression without the $ prefix.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IntegrationParameters RequestParameters { get; set; }
		
		/// <summary>
		/// A mapping of identifier keys to templates. The value is an actual template script. The key is typically a SelectionKey which is chosen based on evaluating a selection expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TemplateMap RequestTemplates { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string TemplateSelectionExpression { get; set; }
		
		/// <summary>
		/// An integer with a value between [50-30000].
		/// Minimum: 50
		/// Maximum: 30000
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(50, 30000)]
		public System.Nullable<System.Int32> TimeoutInMillis { get; set; }
		
		/// <summary>
		/// The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TlsConfig TlsConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateIntegrationResultConnectionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNET = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VPC_LINK = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateIntegrationResultContentHandlingStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_BINARY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_TEXT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateIntegrationResultIntegrationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MOCK = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP_PROXY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_PROXY = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateIntegrationResultPassthroughBehavior
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WHEN_NO_MATCH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEVER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WHEN_NO_TEMPLATES = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateIntegrationResponseResponse
	{
		
		/// <summary>
		/// Specifies how to handle response payload content type conversions. Supported only for WebSocket APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateIntegrationResponseResponseContentHandlingStrategy ContentHandlingStrategy { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationResponseId { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationResponseKey { get; set; }
		
		/// <summary>
		/// A key-value map specifying response parameters that are passed to the method response from the backend. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of method.response.header.{name}, where name is a valid and unique header name. The mapped non-static value must match the pattern of integration.response.header.{name} or integration.response.body.{JSON-expression}, where name is a valid and unique response header name and JSON-expression is a valid JSON expression without the $ prefix.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IntegrationParameters ResponseParameters { get; set; }
		
		/// <summary>
		/// A mapping of identifier keys to templates. The value is an actual template script. The key is typically a SelectionKey which is chosen based on evaluating a selection expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TemplateMap ResponseTemplates { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string TemplateSelectionExpression { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateIntegrationResponseResponseContentHandlingStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_BINARY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_TEXT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateModelResponse
	{
		
		/// <summary>
		/// A string with a length between [1-256].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ContentType { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ModelId { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// A string with a length between [0-32768].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Schema { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateRouteResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApiGatewayManaged { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApiKeyRequired { get; set; }
		
		/// <summary>
		/// A list of authorization scopes configured on a route. The scopes are used with a JWT authorizer to authorize the method invocation. The authorization works by matching the route scopes against the scopes parsed from the access token in the incoming request. The method invocation is authorized if any route scope matches a claimed scope in the access token. Otherwise, the invocation is not authorized. When the route scope is configured, the client must provide an access token instead of an identity token for authorization purposes.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StringWithLengthBetween1And64[] AuthorizationScopes { get; set; }
		
		/// <summary>
		/// The authorization type. For WebSocket APIs, valid values are NONE for open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer. For HTTP APIs, valid values are NONE for open access, or JWT for using JSON Web Tokens.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateRouteResultAuthorizationType AuthorizationType { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AuthorizerId { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ModelSelectionExpression { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string OperationName { get; set; }
		
		/// <summary>
		/// The route models.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteModels RequestModels { get; set; }
		
		/// <summary>
		/// The route parameters.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteParameters RequestParameters { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteId { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteKey { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteResponseSelectionExpression { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Target { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateRouteResultAuthorizationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_IAM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JWT = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateRouteResponseResponse
	{
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ModelSelectionExpression { get; set; }
		
		/// <summary>
		/// The route models.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteModels ResponseModels { get; set; }
		
		/// <summary>
		/// The route parameters.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteParameters ResponseParameters { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteResponseId { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteResponseKey { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateStageResponse
	{
		
		/// <summary>
		/// Settings for logging access in a stage.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AccessLogSettings AccessLogSettings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApiGatewayManaged { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoDeploy { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ClientCertificateId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedDate { get; set; }
		
		/// <summary>
		/// Represents a collection of route settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteSettings DefaultRouteSettings { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DeploymentId { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastDeploymentStatusMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdatedDate { get; set; }
		
		/// <summary>
		/// The route settings map.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteSettingsMap RouteSettings { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string StageName { get; set; }
		
		/// <summary>
		/// The stage variable map.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StageVariablesMap StageVariables { get; set; }
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateVpcLinkResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedDate { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// A list of security group IDs for the VPC link.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public @__string[] SecurityGroupIds { get; set; }
		
		/// <summary>
		/// A list of subnet IDs to include in the VPC link.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public @__string[] SubnetIds { get; set; }
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string VpcLinkId { get; set; }
		
		/// <summary>
		/// The status of the VPC link.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateVpcLinkResponseVpcLinkStatus VpcLinkStatus { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string VpcLinkStatusMessage { get; set; }
		
		/// <summary>
		/// The version of the VPC link.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateVpcLinkResponseVpcLinkVersion VpcLinkVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateVpcLinkResponseVpcLinkStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INACTIVE = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateVpcLinkResponseVpcLinkVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		V2 = 0,
	}
	
	/// <summary>
	/// Settings for logging access in a stage.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AccessLogSettings
	{
		
		/// <summary>
		/// Represents an Amazon Resource Name (ARN).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DestinationArn { get; set; }
		
		/// <summary>
		/// A string with a length between [1-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Format { get; set; }
	}
	
	/// <summary>
	/// Represents a CORS configuration. Supported only for HTTP APIs. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-cors.html">Configuring CORS</a> for more information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Cors
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AllowCredentials { get; set; }
		
		/// <summary>
		/// Represents a collection of allowed headers. Supported only for HTTP APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public @__string[] AllowHeaders { get; set; }
		
		/// <summary>
		/// Represents a collection of methods. Supported only for HTTP APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StringWithLengthBetween1And64[] AllowMethods { get; set; }
		
		/// <summary>
		/// Represents a collection of origins. Supported only for HTTP APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public @__string[] AllowOrigins { get; set; }
		
		/// <summary>
		/// Represents a collection of allowed headers. Supported only for HTTP APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public @__string[] ExposeHeaders { get; set; }
		
		/// <summary>
		/// An integer with a value between -1 and 86400. Supported only for HTTP APIs.
		/// Minimum: -1
		/// Maximum: 86400
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(-1, 86400)]
		public System.Nullable<System.Int32> MaxAge { get; set; }
	}
	
	/// <summary>
	/// Represents a protocol type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ProtocolType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEBSOCKET = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP = 1,
	}
	
	/// <summary>
	/// Represents an API.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Api
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApiEndpoint { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiId { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiKeySelectionExpression { get; set; }
		
		/// <summary>
		/// Represents a CORS configuration. Supported only for HTTP APIs. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-cors.html">Configuring CORS</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Cors CorsConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedDate { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableSchemaValidation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] ImportInfo { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Represents a protocol type.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApiProtocolType ProtocolType { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RouteSelectionExpression { get; set; }
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Warnings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ApiProtocolType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEBSOCKET = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP = 1,
	}
	
	/// <summary>
	/// Represents an API mapping.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ApiMapping
	{
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApiId { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiMappingId { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiMappingKey { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Stage { get; set; }
	}
	
	/// <summary>
	/// The authorization type. For WebSocket APIs, valid values are NONE for open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer. For HTTP APIs, valid values are NONE for open access, or JWT for using JSON Web Tokens.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AuthorizationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_IAM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JWT = 3,
	}
	
	/// <summary>
	/// The authorizer type. For WebSocket APIs, specify REQUEST for a Lambda function using incoming request parameters. For HTTP APIs, specify JWT to use JSON Web Tokens.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AuthorizerType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REQUEST = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JWT = 1,
	}
	
	/// <summary>
	/// Represents the configuration of a JWT authorizer. Required for the JWT authorizer type. Supported only for HTTP APIs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class JWTConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Audience { get; set; }
		
		/// <summary>
		/// A string representation of a URI with a length between [1-2048].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Issuer { get; set; }
	}
	
	/// <summary>
	/// Represents an authorizer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Authorizer
	{
		
		/// <summary>
		/// Represents an Amazon Resource Name (ARN).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AuthorizerCredentialsArn { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AuthorizerId { get; set; }
		
		/// <summary>
		/// An integer with a value between [0-3600].
		/// Minimum: 0
		/// Maximum: 3600
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 3600)]
		public System.Nullable<System.Int32> AuthorizerResultTtlInSeconds { get; set; }
		
		/// <summary>
		/// The authorizer type. For WebSocket APIs, specify REQUEST for a Lambda function using incoming request parameters. For HTTP APIs, specify JWT to use JSON Web Tokens.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AuthorizerAuthorizerType AuthorizerType { get; set; }
		
		/// <summary>
		/// A string representation of a URI with a length between [1-2048].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AuthorizerUri { get; set; }
		
		/// <summary>
		/// The identity source for which authorization is requested. For the REQUEST authorizer, this is required when authorization caching is enabled. The value is a comma-separated string of one or more mapping expressions of the specified request parameters. For example, if an Auth header, a Name query string parameter are defined as identity sources, this value is $method.request.header.Auth, $method.request.querystring.Name. These parameters will be used to derive the authorization caching key and to perform runtime validation of the REQUEST authorizer by verifying all of the identity-related request parameters are present, not null and non-empty. Only when this is true does the authorizer invoke the authorizer Lambda function, otherwise, it returns a 401 Unauthorized response without calling the Lambda function. The valid value is a string of comma-separated mapping expressions of the specified request parameters. When the authorization caching is not enabled, this property is optional.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public @__string[] IdentitySource { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IdentityValidationExpression { get; set; }
		
		/// <summary>
		/// Represents the configuration of a JWT authorizer. Required for the JWT authorizer type. Supported only for HTTP APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public JWTConfiguration JwtConfiguration { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AuthorizerAuthorizerType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REQUEST = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JWT = 1,
	}
	
	/// <summary>
	/// Represents a connection type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ConnectionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNET = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VPC_LINK = 1,
	}
	
	/// <summary>
	/// Specifies how to handle response payload content type conversions. Supported only for WebSocket APIs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ContentHandlingStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_BINARY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_TEXT = 1,
	}
	
	/// <summary>
	/// Creates a new ApiMapping resource to represent an API mapping.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateApiMappingRequest
	{
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApiId { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiMappingKey { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Stage { get; set; }
	}
	
	/// <summary>
	/// Creates a new Api resource to represent an API.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateApiRequest
	{
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiKeySelectionExpression { get; set; }
		
		/// <summary>
		/// Represents a CORS configuration. Supported only for HTTP APIs. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-cors.html">Configuring CORS</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Cors CorsConfiguration { get; set; }
		
		/// <summary>
		/// Represents an Amazon Resource Name (ARN).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CredentialsArn { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableSchemaValidation { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Represents a protocol type.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateApiRequestProtocolType ProtocolType { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteKey { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteSelectionExpression { get; set; }
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
		
		/// <summary>
		/// A string representation of a URI with a length between [1-2048].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Target { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateApiRequestProtocolType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEBSOCKET = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP = 1,
	}
	
	/// <summary>
	/// Creates a new Authorizer resource to represent an authorizer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateAuthorizerRequest
	{
		
		/// <summary>
		/// Represents an Amazon Resource Name (ARN).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AuthorizerCredentialsArn { get; set; }
		
		/// <summary>
		/// An integer with a value between [0-3600].
		/// Minimum: 0
		/// Maximum: 3600
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 3600)]
		public System.Nullable<System.Int32> AuthorizerResultTtlInSeconds { get; set; }
		
		/// <summary>
		/// The authorizer type. For WebSocket APIs, specify REQUEST for a Lambda function using incoming request parameters. For HTTP APIs, specify JWT to use JSON Web Tokens.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateAuthorizerRequestAuthorizerType AuthorizerType { get; set; }
		
		/// <summary>
		/// A string representation of a URI with a length between [1-2048].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AuthorizerUri { get; set; }
		
		/// <summary>
		/// The identity source for which authorization is requested. For the REQUEST authorizer, this is required when authorization caching is enabled. The value is a comma-separated string of one or more mapping expressions of the specified request parameters. For example, if an Auth header, a Name query string parameter are defined as identity sources, this value is $method.request.header.Auth, $method.request.querystring.Name. These parameters will be used to derive the authorization caching key and to perform runtime validation of the REQUEST authorizer by verifying all of the identity-related request parameters are present, not null and non-empty. Only when this is true does the authorizer invoke the authorizer Lambda function, otherwise, it returns a 401 Unauthorized response without calling the Lambda function. The valid value is a string of comma-separated mapping expressions of the specified request parameters. When the authorization caching is not enabled, this property is optional.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public @__string[] IdentitySource { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IdentityValidationExpression { get; set; }
		
		/// <summary>
		/// Represents the configuration of a JWT authorizer. Required for the JWT authorizer type. Supported only for HTTP APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public JWTConfiguration JwtConfiguration { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateAuthorizerRequestAuthorizerType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REQUEST = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JWT = 1,
	}
	
	/// <summary>
	/// Creates a new Deployment resource to represent a deployment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDeploymentRequest
	{
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string StageName { get; set; }
	}
	
	/// <summary>
	/// Represents a deployment status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DeploymentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEPLOYED = 2,
	}
	
	/// <summary>
	/// Creates a new DomainName resource to represent a domain name.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDomainNameRequest
	{
		
		/// <summary>
		/// A string with a length between [1-512].
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		/// <summary>
		/// The domain name configurations.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DomainNameConfiguration[] DomainNameConfigurations { get; set; }
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	/// <summary>
	/// Represents an API method integration type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum IntegrationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MOCK = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP_PROXY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_PROXY = 4,
	}
	
	/// <summary>
	/// Represents passthrough behavior for an integration response. Supported only for WebSocket APIs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum PassthroughBehavior
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WHEN_NO_MATCH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEVER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WHEN_NO_TEMPLATES = 2,
	}
	
	/// <summary>
	/// The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TlsConfigInput
	{
		
		/// <summary>
		/// A string with a length between [1-512].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ServerNameToVerify { get; set; }
	}
	
	/// <summary>
	/// Creates a new Integration resource to represent an integration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateIntegrationRequest
	{
		
		/// <summary>
		/// A string with a length between [1-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ConnectionId { get; set; }
		
		/// <summary>
		/// Represents a connection type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateIntegrationRequestConnectionType ConnectionType { get; set; }
		
		/// <summary>
		/// Specifies how to handle response payload content type conversions. Supported only for WebSocket APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateIntegrationRequestContentHandlingStrategy ContentHandlingStrategy { get; set; }
		
		/// <summary>
		/// Represents an Amazon Resource Name (ARN).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CredentialsArn { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationMethod { get; set; }
		
		/// <summary>
		/// Represents an API method integration type.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateIntegrationRequestIntegrationType IntegrationType { get; set; }
		
		/// <summary>
		/// A string representation of a URI with a length between [1-2048].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationUri { get; set; }
		
		/// <summary>
		/// Represents passthrough behavior for an integration response. Supported only for WebSocket APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateIntegrationRequestPassthroughBehavior PassthroughBehavior { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PayloadFormatVersion { get; set; }
		
		/// <summary>
		/// A key-value map specifying response parameters that are passed to the method response from the backend. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of method.response.header.{name}, where name is a valid and unique header name. The mapped non-static value must match the pattern of integration.response.header.{name} or integration.response.body.{JSON-expression}, where name is a valid and unique response header name and JSON-expression is a valid JSON expression without the $ prefix.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IntegrationParameters RequestParameters { get; set; }
		
		/// <summary>
		/// A mapping of identifier keys to templates. The value is an actual template script. The key is typically a SelectionKey which is chosen based on evaluating a selection expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TemplateMap RequestTemplates { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string TemplateSelectionExpression { get; set; }
		
		/// <summary>
		/// An integer with a value between [50-30000].
		/// Minimum: 50
		/// Maximum: 30000
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(50, 30000)]
		public System.Nullable<System.Int32> TimeoutInMillis { get; set; }
		
		/// <summary>
		/// The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TlsConfigInput TlsConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateIntegrationRequestConnectionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNET = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VPC_LINK = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateIntegrationRequestContentHandlingStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_BINARY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_TEXT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateIntegrationRequestIntegrationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MOCK = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP_PROXY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_PROXY = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateIntegrationRequestPassthroughBehavior
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WHEN_NO_MATCH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEVER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WHEN_NO_TEMPLATES = 2,
	}
	
	/// <summary>
	/// The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TlsConfig
	{
		
		/// <summary>
		/// A string with a length between [1-512].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ServerNameToVerify { get; set; }
	}
	
	/// <summary>
	/// Creates a new IntegrationResponse resource to represent an integration response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateIntegrationResponseRequest
	{
		
		/// <summary>
		/// Specifies how to handle response payload content type conversions. Supported only for WebSocket APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateIntegrationResponseRequestContentHandlingStrategy ContentHandlingStrategy { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationResponseKey { get; set; }
		
		/// <summary>
		/// A key-value map specifying response parameters that are passed to the method response from the backend. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of method.response.header.{name}, where name is a valid and unique header name. The mapped non-static value must match the pattern of integration.response.header.{name} or integration.response.body.{JSON-expression}, where name is a valid and unique response header name and JSON-expression is a valid JSON expression without the $ prefix.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IntegrationParameters ResponseParameters { get; set; }
		
		/// <summary>
		/// A mapping of identifier keys to templates. The value is an actual template script. The key is typically a SelectionKey which is chosen based on evaluating a selection expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TemplateMap ResponseTemplates { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string TemplateSelectionExpression { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateIntegrationResponseRequestContentHandlingStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_BINARY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_TEXT = 1,
	}
	
	/// <summary>
	/// Creates a new Model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateModelRequest
	{
		
		/// <summary>
		/// A string with a length between [1-256].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ContentType { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// A string with a length between [0-32768].
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Schema { get; set; }
	}
	
	/// <summary>
	/// Creates a new Route resource to represent a route.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateRouteRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApiKeyRequired { get; set; }
		
		/// <summary>
		/// A list of authorization scopes configured on a route. The scopes are used with a JWT authorizer to authorize the method invocation. The authorization works by matching the route scopes against the scopes parsed from the access token in the incoming request. The method invocation is authorized if any route scope matches a claimed scope in the access token. Otherwise, the invocation is not authorized. When the route scope is configured, the client must provide an access token instead of an identity token for authorization purposes.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StringWithLengthBetween1And64[] AuthorizationScopes { get; set; }
		
		/// <summary>
		/// The authorization type. For WebSocket APIs, valid values are NONE for open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer. For HTTP APIs, valid values are NONE for open access, or JWT for using JSON Web Tokens.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateRouteRequestAuthorizationType AuthorizationType { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AuthorizerId { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ModelSelectionExpression { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string OperationName { get; set; }
		
		/// <summary>
		/// The route models.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteModels RequestModels { get; set; }
		
		/// <summary>
		/// The route parameters.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteParameters RequestParameters { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RouteKey { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteResponseSelectionExpression { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Target { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateRouteRequestAuthorizationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_IAM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JWT = 3,
	}
	
	/// <summary>
	/// Creates a new RouteResponse resource to represent a route response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateRouteResponseRequest
	{
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ModelSelectionExpression { get; set; }
		
		/// <summary>
		/// The route models.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteModels ResponseModels { get; set; }
		
		/// <summary>
		/// The route parameters.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteParameters ResponseParameters { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RouteResponseKey { get; set; }
	}
	
	/// <summary>
	/// Creates a new Stage resource to represent a stage.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateStageRequest
	{
		
		/// <summary>
		/// Settings for logging access in a stage.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AccessLogSettings AccessLogSettings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoDeploy { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ClientCertificateId { get; set; }
		
		/// <summary>
		/// Represents a collection of route settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteSettings DefaultRouteSettings { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DeploymentId { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// The route settings map.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteSettingsMap RouteSettings { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StageName { get; set; }
		
		/// <summary>
		/// The stage variable map.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StageVariablesMap StageVariables { get; set; }
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	/// <summary>
	/// Creates a VPC link
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateVpcLinkRequest
	{
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// A list of security group IDs for the VPC link.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public @__string[] SecurityGroupIds { get; set; }
		
		/// <summary>
		/// A list of subnet IDs to include in the VPC link.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public @__string[] SubnetIds { get; set; }
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	/// <summary>
	/// The status of the VPC link.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum VpcLinkStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INACTIVE = 4,
	}
	
	/// <summary>
	/// The version of the VPC link.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum VpcLinkVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		V2 = 0,
	}
	
	/// <summary>
	/// An immutable representation of an API that can be called by users. A Deployment must be associated with a Stage for it to be callable over the internet.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Deployment
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoDeployed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedDate { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DeploymentId { get; set; }
		
		/// <summary>
		/// Represents a deployment status.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DeploymentDeploymentStatus DeploymentStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DeploymentStatusMessage { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DeploymentDeploymentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEPLOYED = 2,
	}
	
	/// <summary>
	/// Represents a domain name.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DomainName
	{
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiMappingSelectionExpression { get; set; }
		
		/// <summary>
		/// A string with a length between [1-512].
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName1 { get; set; }
		
		/// <summary>
		/// The domain name configurations.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DomainNameConfiguration[] DomainNameConfigurations { get; set; }
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	/// <summary>
	/// The status of the domain name migration. The valid values are AVAILABLE and UPDATING. If the status is UPDATING, the domain cannot be modified further until the existing operation is complete. If it is AVAILABLE, the domain can be updated.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DomainNameStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 1,
	}
	
	/// <summary>
	/// Represents an endpoint type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EndpointType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REGIONAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EDGE = 1,
	}
	
	/// <summary>
	/// The Transport Layer Security (TLS) version of the security policy for this domain name. The valid values are TLS_1_0 and TLS_1_2.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SecurityPolicy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TLS_1_0 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TLS_1_2 = 1,
	}
	
	/// <summary>
	/// 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ImportApiRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
	}
	
	/// <summary>
	/// Represents an integration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Integration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApiGatewayManaged { get; set; }
		
		/// <summary>
		/// A string with a length between [1-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ConnectionId { get; set; }
		
		/// <summary>
		/// Represents a connection type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IntegrationConnectionType ConnectionType { get; set; }
		
		/// <summary>
		/// Specifies how to handle response payload content type conversions. Supported only for WebSocket APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IntegrationContentHandlingStrategy ContentHandlingStrategy { get; set; }
		
		/// <summary>
		/// Represents an Amazon Resource Name (ARN).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CredentialsArn { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationId { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationMethod { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationResponseSelectionExpression { get; set; }
		
		/// <summary>
		/// Represents an API method integration type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IntegrationIntegrationType IntegrationType { get; set; }
		
		/// <summary>
		/// A string representation of a URI with a length between [1-2048].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationUri { get; set; }
		
		/// <summary>
		/// Represents passthrough behavior for an integration response. Supported only for WebSocket APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IntegrationPassthroughBehavior PassthroughBehavior { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PayloadFormatVersion { get; set; }
		
		/// <summary>
		/// A key-value map specifying response parameters that are passed to the method response from the backend. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of method.response.header.{name}, where name is a valid and unique header name. The mapped non-static value must match the pattern of integration.response.header.{name} or integration.response.body.{JSON-expression}, where name is a valid and unique response header name and JSON-expression is a valid JSON expression without the $ prefix.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IntegrationParameters RequestParameters { get; set; }
		
		/// <summary>
		/// A mapping of identifier keys to templates. The value is an actual template script. The key is typically a SelectionKey which is chosen based on evaluating a selection expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TemplateMap RequestTemplates { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string TemplateSelectionExpression { get; set; }
		
		/// <summary>
		/// An integer with a value between [50-30000].
		/// Minimum: 50
		/// Maximum: 30000
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(50, 30000)]
		public System.Nullable<System.Int32> TimeoutInMillis { get; set; }
		
		/// <summary>
		/// The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TlsConfig TlsConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum IntegrationConnectionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNET = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VPC_LINK = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum IntegrationContentHandlingStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_BINARY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_TEXT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum IntegrationIntegrationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MOCK = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP_PROXY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_PROXY = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum IntegrationPassthroughBehavior
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WHEN_NO_MATCH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEVER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WHEN_NO_TEMPLATES = 2,
	}
	
	/// <summary>
	/// Represents an integration response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class IntegrationResponse
	{
		
		/// <summary>
		/// Specifies how to handle response payload content type conversions. Supported only for WebSocket APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IntegrationResponseContentHandlingStrategy ContentHandlingStrategy { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationResponseId { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationResponseKey { get; set; }
		
		/// <summary>
		/// A key-value map specifying response parameters that are passed to the method response from the backend. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of method.response.header.{name}, where name is a valid and unique header name. The mapped non-static value must match the pattern of integration.response.header.{name} or integration.response.body.{JSON-expression}, where name is a valid and unique response header name and JSON-expression is a valid JSON expression without the $ prefix.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IntegrationParameters ResponseParameters { get; set; }
		
		/// <summary>
		/// A mapping of identifier keys to templates. The value is an actual template script. The key is typically a SelectionKey which is chosen based on evaluating a selection expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TemplateMap ResponseTemplates { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string TemplateSelectionExpression { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum IntegrationResponseContentHandlingStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_BINARY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_TEXT = 1,
	}
	
	/// <summary>
	/// Represents a data model for an API. Supported only for WebSocket APIs. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/models-mappings.html">Create Models and Mapping Templates for Request and Response Mappings</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Model
	{
		
		/// <summary>
		/// A string with a length between [1-256].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ContentType { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ModelId { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// A string with a length between [0-32768].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Schema { get; set; }
	}
	
	/// <summary>
	/// 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ReimportApiRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
	}
	
	/// <summary>
	/// Represents a route.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Route
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApiGatewayManaged { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApiKeyRequired { get; set; }
		
		/// <summary>
		/// A list of authorization scopes configured on a route. The scopes are used with a JWT authorizer to authorize the method invocation. The authorization works by matching the route scopes against the scopes parsed from the access token in the incoming request. The method invocation is authorized if any route scope matches a claimed scope in the access token. Otherwise, the invocation is not authorized. When the route scope is configured, the client must provide an access token instead of an identity token for authorization purposes.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StringWithLengthBetween1And64[] AuthorizationScopes { get; set; }
		
		/// <summary>
		/// The authorization type. For WebSocket APIs, valid values are NONE for open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer. For HTTP APIs, valid values are NONE for open access, or JWT for using JSON Web Tokens.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteAuthorizationType AuthorizationType { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AuthorizerId { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ModelSelectionExpression { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string OperationName { get; set; }
		
		/// <summary>
		/// The route models.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteModels RequestModels { get; set; }
		
		/// <summary>
		/// The route parameters.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteParameters RequestParameters { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteId { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RouteKey { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteResponseSelectionExpression { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Target { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RouteAuthorizationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_IAM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JWT = 3,
	}
	
	/// <summary>
	/// Represents a route response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RouteResponse
	{
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ModelSelectionExpression { get; set; }
		
		/// <summary>
		/// The route models.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteModels ResponseModels { get; set; }
		
		/// <summary>
		/// The route parameters.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteParameters ResponseParameters { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteResponseId { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RouteResponseKey { get; set; }
	}
	
	/// <summary>
	/// Represents an API stage.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Stage
	{
		
		/// <summary>
		/// Settings for logging access in a stage.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AccessLogSettings AccessLogSettings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApiGatewayManaged { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoDeploy { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ClientCertificateId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedDate { get; set; }
		
		/// <summary>
		/// Represents a collection of route settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteSettings DefaultRouteSettings { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DeploymentId { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastDeploymentStatusMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdatedDate { get; set; }
		
		/// <summary>
		/// The route settings map.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteSettingsMap RouteSettings { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StageName { get; set; }
		
		/// <summary>
		/// The stage variable map.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StageVariablesMap StageVariables { get; set; }
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	/// <summary>
	/// Creates a new Tag resource to represent a tag.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TagResourceRequest
	{
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	/// <summary>
	/// Updates an ApiMapping.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateApiMappingRequest
	{
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApiId { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiMappingKey { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Stage { get; set; }
	}
	
	/// <summary>
	/// Updates an Api.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateApiRequest
	{
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiKeySelectionExpression { get; set; }
		
		/// <summary>
		/// Represents a CORS configuration. Supported only for HTTP APIs. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-cors.html">Configuring CORS</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Cors CorsConfiguration { get; set; }
		
		/// <summary>
		/// Represents an Amazon Resource Name (ARN).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CredentialsArn { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableSchemaValidation { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteKey { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteSelectionExpression { get; set; }
		
		/// <summary>
		/// A string representation of a URI with a length between [1-2048].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Target { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// Updates an Authorizer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateAuthorizerRequest
	{
		
		/// <summary>
		/// Represents an Amazon Resource Name (ARN).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AuthorizerCredentialsArn { get; set; }
		
		/// <summary>
		/// An integer with a value between [0-3600].
		/// Minimum: 0
		/// Maximum: 3600
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 3600)]
		public System.Nullable<System.Int32> AuthorizerResultTtlInSeconds { get; set; }
		
		/// <summary>
		/// The authorizer type. For WebSocket APIs, specify REQUEST for a Lambda function using incoming request parameters. For HTTP APIs, specify JWT to use JSON Web Tokens.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateAuthorizerRequestAuthorizerType AuthorizerType { get; set; }
		
		/// <summary>
		/// A string representation of a URI with a length between [1-2048].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AuthorizerUri { get; set; }
		
		/// <summary>
		/// The identity source for which authorization is requested. For the REQUEST authorizer, this is required when authorization caching is enabled. The value is a comma-separated string of one or more mapping expressions of the specified request parameters. For example, if an Auth header, a Name query string parameter are defined as identity sources, this value is $method.request.header.Auth, $method.request.querystring.Name. These parameters will be used to derive the authorization caching key and to perform runtime validation of the REQUEST authorizer by verifying all of the identity-related request parameters are present, not null and non-empty. Only when this is true does the authorizer invoke the authorizer Lambda function, otherwise, it returns a 401 Unauthorized response without calling the Lambda function. The valid value is a string of comma-separated mapping expressions of the specified request parameters. When the authorization caching is not enabled, this property is optional.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public @__string[] IdentitySource { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IdentityValidationExpression { get; set; }
		
		/// <summary>
		/// Represents the configuration of a JWT authorizer. Required for the JWT authorizer type. Supported only for HTTP APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public JWTConfiguration JwtConfiguration { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateAuthorizerRequestAuthorizerType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REQUEST = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JWT = 1,
	}
	
	/// <summary>
	/// Updates a Deployment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateDeploymentRequest
	{
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	/// <summary>
	/// Updates a DomainName.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateDomainNameRequest
	{
		
		/// <summary>
		/// The domain name configurations.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DomainNameConfiguration[] DomainNameConfigurations { get; set; }
	}
	
	/// <summary>
	/// Updates an Integration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateIntegrationRequest
	{
		
		/// <summary>
		/// A string with a length between [1-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ConnectionId { get; set; }
		
		/// <summary>
		/// Represents a connection type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateIntegrationRequestConnectionType ConnectionType { get; set; }
		
		/// <summary>
		/// Specifies how to handle response payload content type conversions. Supported only for WebSocket APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateIntegrationRequestContentHandlingStrategy ContentHandlingStrategy { get; set; }
		
		/// <summary>
		/// Represents an Amazon Resource Name (ARN).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CredentialsArn { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationMethod { get; set; }
		
		/// <summary>
		/// Represents an API method integration type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateIntegrationRequestIntegrationType IntegrationType { get; set; }
		
		/// <summary>
		/// A string representation of a URI with a length between [1-2048].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationUri { get; set; }
		
		/// <summary>
		/// Represents passthrough behavior for an integration response. Supported only for WebSocket APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateIntegrationRequestPassthroughBehavior PassthroughBehavior { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PayloadFormatVersion { get; set; }
		
		/// <summary>
		/// A key-value map specifying response parameters that are passed to the method response from the backend. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of method.response.header.{name}, where name is a valid and unique header name. The mapped non-static value must match the pattern of integration.response.header.{name} or integration.response.body.{JSON-expression}, where name is a valid and unique response header name and JSON-expression is a valid JSON expression without the $ prefix.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IntegrationParameters RequestParameters { get; set; }
		
		/// <summary>
		/// A mapping of identifier keys to templates. The value is an actual template script. The key is typically a SelectionKey which is chosen based on evaluating a selection expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TemplateMap RequestTemplates { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string TemplateSelectionExpression { get; set; }
		
		/// <summary>
		/// An integer with a value between [50-30000].
		/// Minimum: 50
		/// Maximum: 30000
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(50, 30000)]
		public System.Nullable<System.Int32> TimeoutInMillis { get; set; }
		
		/// <summary>
		/// The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TlsConfigInput TlsConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateIntegrationRequestConnectionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNET = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VPC_LINK = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateIntegrationRequestContentHandlingStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_BINARY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_TEXT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateIntegrationRequestIntegrationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MOCK = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP_PROXY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_PROXY = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateIntegrationRequestPassthroughBehavior
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WHEN_NO_MATCH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEVER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WHEN_NO_TEMPLATES = 2,
	}
	
	/// <summary>
	/// Updates an IntegrationResponses.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateIntegrationResponseRequest
	{
		
		/// <summary>
		/// Specifies how to handle response payload content type conversions. Supported only for WebSocket APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateIntegrationResponseRequestContentHandlingStrategy ContentHandlingStrategy { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationResponseKey { get; set; }
		
		/// <summary>
		/// A key-value map specifying response parameters that are passed to the method response from the backend. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of method.response.header.{name}, where name is a valid and unique header name. The mapped non-static value must match the pattern of integration.response.header.{name} or integration.response.body.{JSON-expression}, where name is a valid and unique response header name and JSON-expression is a valid JSON expression without the $ prefix.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IntegrationParameters ResponseParameters { get; set; }
		
		/// <summary>
		/// A mapping of identifier keys to templates. The value is an actual template script. The key is typically a SelectionKey which is chosen based on evaluating a selection expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TemplateMap ResponseTemplates { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string TemplateSelectionExpression { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateIntegrationResponseRequestContentHandlingStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_BINARY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_TEXT = 1,
	}
	
	/// <summary>
	/// Updates a Model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateModelRequest
	{
		
		/// <summary>
		/// A string with a length between [1-256].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ContentType { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// A string with a length between [0-32768].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Schema { get; set; }
	}
	
	/// <summary>
	/// Updates a Route.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateRouteRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApiKeyRequired { get; set; }
		
		/// <summary>
		/// A list of authorization scopes configured on a route. The scopes are used with a JWT authorizer to authorize the method invocation. The authorization works by matching the route scopes against the scopes parsed from the access token in the incoming request. The method invocation is authorized if any route scope matches a claimed scope in the access token. Otherwise, the invocation is not authorized. When the route scope is configured, the client must provide an access token instead of an identity token for authorization purposes.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StringWithLengthBetween1And64[] AuthorizationScopes { get; set; }
		
		/// <summary>
		/// The authorization type. For WebSocket APIs, valid values are NONE for open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer. For HTTP APIs, valid values are NONE for open access, or JWT for using JSON Web Tokens.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateRouteRequestAuthorizationType AuthorizationType { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AuthorizerId { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ModelSelectionExpression { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string OperationName { get; set; }
		
		/// <summary>
		/// The route models.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteModels RequestModels { get; set; }
		
		/// <summary>
		/// The route parameters.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteParameters RequestParameters { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteKey { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteResponseSelectionExpression { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Target { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateRouteRequestAuthorizationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_IAM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JWT = 3,
	}
	
	/// <summary>
	/// Updates a RouteResponse.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateRouteResponseRequest
	{
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ModelSelectionExpression { get; set; }
		
		/// <summary>
		/// The route models.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteModels ResponseModels { get; set; }
		
		/// <summary>
		/// The route parameters.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteParameters ResponseParameters { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteResponseKey { get; set; }
	}
	
	/// <summary>
	/// Updates a Stage.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateStageRequest
	{
		
		/// <summary>
		/// Settings for logging access in a stage.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AccessLogSettings AccessLogSettings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoDeploy { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ClientCertificateId { get; set; }
		
		/// <summary>
		/// Represents a collection of route settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteSettings DefaultRouteSettings { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DeploymentId { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// The route settings map.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RouteSettingsMap RouteSettings { get; set; }
		
		/// <summary>
		/// The stage variable map.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StageVariablesMap StageVariables { get; set; }
	}
	
	/// <summary>
	/// Updates a VPC link.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateVpcLinkRequest
	{
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Represents a VPC link.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class VpcLink
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedDate { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// A list of security group IDs for the VPC link.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public @__string[] SecurityGroupIds { get; set; }
		
		/// <summary>
		/// A list of subnet IDs to include in the VPC link.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public @__string[] SubnetIds { get; set; }
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VpcLinkId { get; set; }
		
		/// <summary>
		/// The status of the VPC link.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcLinkVpcLinkStatus VpcLinkStatus { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string VpcLinkStatusMessage { get; set; }
		
		/// <summary>
		/// The version of the VPC link.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcLinkVpcLinkVersion VpcLinkVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum VpcLinkVpcLinkStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INACTIVE = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum VpcLinkVpcLinkVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		V2 = 0,
	}
	
	public partial class DemoClient
	{
		
		private System.Net.Http.HttpClient client;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public DemoClient(System.Net.Http.HttpClient client, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (client == null)
				throw new ArgumentNullException("Null HttpClient.", "client");

			if (client.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "client");

			this.client = client;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Creates an Api resource.
		/// CreateApi /v2/apis
		/// </summary>
		public async Task CreateApiAsync(CreateApiBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets a collection of Api resources.
		/// GetApis /v2/apis
		/// </summary>
		/// <param name="maxResults">The maximum number of elements to be returned for this resource.</param>
		/// <param name="nextToken">The next page of elements from this collection. Not valid for the last element of the collection.</param>
		/// <returns>Success</returns>
		public async Task<GetApisResponse> GetApisAsync(string maxResults, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis?maxResults=" + (maxResults==null? "" : Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetApisResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Imports an API.
		/// ImportApi /v2/apis
		/// </summary>
		/// <param name="basepath">Specifies how to interpret the base path of the API during import. Valid values are ignore, prepend, and split. The default value is ignore. To learn more, see <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-import-api-basePath.html">Set the OpenAPI basePath Property</a>. Supported only for HTTP APIs.</param>
		/// <param name="failOnWarnings">Specifies whether to rollback the API creation when a warning is encountered. By default, API creation continues if a warning is encountered.</param>
		public async Task ImportApiAsync(string basepath, bool failOnWarnings, ImportApiBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis?basepath=" + (basepath==null? "" : Uri.EscapeDataString(basepath))+"&failOnWarnings="+failOnWarnings;
			using (var request = new HttpRequestMessage(HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates an API mapping.
		/// CreateApiMapping /v2/domainnames/{domainName}/apimappings
		/// </summary>
		/// <param name="domainName">The domain name.</param>
		public async Task CreateApiMappingAsync(string domainName, CreateApiMappingBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/domainnames/"+ (domainName==null? "" : Uri.EscapeDataString(domainName))+"/apimappings";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets API mappings.
		/// GetApiMappings /v2/domainnames/{domainName}/apimappings
		/// </summary>
		/// <param name="domainName">The domain name.</param>
		/// <param name="maxResults">The maximum number of elements to be returned for this resource.</param>
		/// <param name="nextToken">The next page of elements from this collection. Not valid for the last element of the collection.</param>
		/// <returns>Success</returns>
		public async Task<GetApiMappingsResponse> GetApiMappingsAsync(string domainName, string maxResults, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/domainnames/"+ (domainName==null? "" : Uri.EscapeDataString(domainName))+"/apimappings&maxResults=" + (maxResults==null? "" : Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetApiMappingsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an Authorizer for an API.
		/// CreateAuthorizer /v2/apis/{apiId}/authorizers
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		public async Task CreateAuthorizerAsync(string apiId, CreateAuthorizerBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/authorizers";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets the Authorizers for an API.
		/// GetAuthorizers /v2/apis/{apiId}/authorizers
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="maxResults">The maximum number of elements to be returned for this resource.</param>
		/// <param name="nextToken">The next page of elements from this collection. Not valid for the last element of the collection.</param>
		/// <returns>Success</returns>
		public async Task<GetAuthorizersResponse> GetAuthorizersAsync(string apiId, string maxResults, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/authorizers&maxResults=" + (maxResults==null? "" : Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetAuthorizersResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a Deployment for an API.
		/// CreateDeployment /v2/apis/{apiId}/deployments
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		public async Task CreateDeploymentAsync(string apiId, CreateDeploymentBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/deployments";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets the Deployments for an API.
		/// GetDeployments /v2/apis/{apiId}/deployments
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="maxResults">The maximum number of elements to be returned for this resource.</param>
		/// <param name="nextToken">The next page of elements from this collection. Not valid for the last element of the collection.</param>
		/// <returns>Success</returns>
		public async Task<GetDeploymentsResponse> GetDeploymentsAsync(string apiId, string maxResults, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/deployments&maxResults=" + (maxResults==null? "" : Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetDeploymentsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a domain name.
		/// CreateDomainName /v2/domainnames
		/// </summary>
		public async Task CreateDomainNameAsync(CreateDomainNameBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/domainnames";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets the domain names for an AWS account.
		/// GetDomainNames /v2/domainnames
		/// </summary>
		/// <param name="maxResults">The maximum number of elements to be returned for this resource.</param>
		/// <param name="nextToken">The next page of elements from this collection. Not valid for the last element of the collection.</param>
		/// <returns>Success</returns>
		public async Task<GetDomainNamesResponse> GetDomainNamesAsync(string maxResults, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/domainnames?maxResults=" + (maxResults==null? "" : Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetDomainNamesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an Integration.
		/// CreateIntegration /v2/apis/{apiId}/integrations
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		public async Task CreateIntegrationAsync(string apiId, CreateIntegrationBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/integrations";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets the Integrations for an API.
		/// GetIntegrations /v2/apis/{apiId}/integrations
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="maxResults">The maximum number of elements to be returned for this resource.</param>
		/// <param name="nextToken">The next page of elements from this collection. Not valid for the last element of the collection.</param>
		/// <returns>Success</returns>
		public async Task<GetIntegrationsResponse> GetIntegrationsAsync(string apiId, string maxResults, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/integrations&maxResults=" + (maxResults==null? "" : Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetIntegrationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an IntegrationResponses.
		/// CreateIntegrationResponse /v2/apis/{apiId}/integrations/{integrationId}/integrationresponses
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="integrationId">The integration ID.</param>
		public async Task CreateIntegrationResponseAsync(string apiId, string integrationId, CreateIntegrationResponseBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/integrations/"+ (integrationId==null? "" : Uri.EscapeDataString(integrationId))+"/integrationresponses";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets the IntegrationResponses for an Integration.
		/// GetIntegrationResponses /v2/apis/{apiId}/integrations/{integrationId}/integrationresponses
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="integrationId">The integration ID.</param>
		/// <param name="maxResults">The maximum number of elements to be returned for this resource.</param>
		/// <param name="nextToken">The next page of elements from this collection. Not valid for the last element of the collection.</param>
		/// <returns>Success</returns>
		public async Task<GetIntegrationResponsesResponse> GetIntegrationResponsesAsync(string apiId, string integrationId, string maxResults, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/integrations/"+ (integrationId==null? "" : Uri.EscapeDataString(integrationId))+"/integrationresponses&maxResults=" + (maxResults==null? "" : Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetIntegrationResponsesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a Model for an API.
		/// CreateModel /v2/apis/{apiId}/models
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		public async Task CreateModelAsync(string apiId, CreateModelBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/models";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets the Models for an API.
		/// GetModels /v2/apis/{apiId}/models
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="maxResults">The maximum number of elements to be returned for this resource.</param>
		/// <param name="nextToken">The next page of elements from this collection. Not valid for the last element of the collection.</param>
		/// <returns>Success</returns>
		public async Task<GetModelsResponse> GetModelsAsync(string apiId, string maxResults, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/models&maxResults=" + (maxResults==null? "" : Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetModelsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a Route for an API.
		/// CreateRoute /v2/apis/{apiId}/routes
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		public async Task CreateRouteAsync(string apiId, CreateRouteBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/routes";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets the Routes for an API.
		/// GetRoutes /v2/apis/{apiId}/routes
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="maxResults">The maximum number of elements to be returned for this resource.</param>
		/// <param name="nextToken">The next page of elements from this collection. Not valid for the last element of the collection.</param>
		/// <returns>Success</returns>
		public async Task<GetRoutesResponse> GetRoutesAsync(string apiId, string maxResults, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/routes&maxResults=" + (maxResults==null? "" : Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetRoutesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a RouteResponse for a Route.
		/// CreateRouteResponse /v2/apis/{apiId}/routes/{routeId}/routeresponses
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="routeId">The route ID.</param>
		public async Task CreateRouteResponseAsync(string apiId, string routeId, CreateRouteResponseBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/routes/"+ (routeId==null? "" : Uri.EscapeDataString(routeId))+"/routeresponses";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets the RouteResponses for a Route.
		/// GetRouteResponses /v2/apis/{apiId}/routes/{routeId}/routeresponses
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="maxResults">The maximum number of elements to be returned for this resource.</param>
		/// <param name="nextToken">The next page of elements from this collection. Not valid for the last element of the collection.</param>
		/// <param name="routeId">The route ID.</param>
		/// <returns>Success</returns>
		public async Task<GetRouteResponsesResponse> GetRouteResponsesAsync(string apiId, string maxResults, string nextToken, string routeId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/routes/"+ (routeId==null? "" : Uri.EscapeDataString(routeId))+"/routeresponses&maxResults=" + (maxResults==null? "" : Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetRouteResponsesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a Stage for an API.
		/// CreateStage /v2/apis/{apiId}/stages
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		public async Task CreateStageAsync(string apiId, CreateStageBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/stages";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets the Stages for an API.
		/// GetStages /v2/apis/{apiId}/stages
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="maxResults">The maximum number of elements to be returned for this resource.</param>
		/// <param name="nextToken">The next page of elements from this collection. Not valid for the last element of the collection.</param>
		/// <returns>Success</returns>
		public async Task<GetStagesResponse> GetStagesAsync(string apiId, string maxResults, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/stages&maxResults=" + (maxResults==null? "" : Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetStagesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a VPC link.
		/// CreateVpcLink /v2/vpclinks
		/// </summary>
		public async Task CreateVpcLinkAsync(CreateVpcLinkBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/vpclinks";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets a collection of VPC links.
		/// GetVpcLinks /v2/vpclinks
		/// </summary>
		/// <param name="maxResults">The maximum number of elements to be returned for this resource.</param>
		/// <param name="nextToken">The next page of elements from this collection. Not valid for the last element of the collection.</param>
		/// <returns>Success</returns>
		public async Task<GetVpcLinksResponse> GetVpcLinksAsync(string maxResults, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/vpclinks?maxResults=" + (maxResults==null? "" : Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetVpcLinksResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes the AccessLogSettings for a Stage. To disable access logging for a Stage, delete its AccessLogSettings.
		/// DeleteAccessLogSettings /v2/apis/{apiId}/stages/{stageName}/accesslogsettings
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="stageName">The stage name. Stage names can only contain alphanumeric characters, hyphens, and underscores. Maximum length is 128 characters.</param>
		public async Task DeleteAccessLogSettingsAsync(string apiId, string stageName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/stages/"+ (stageName==null? "" : Uri.EscapeDataString(stageName))+"/accesslogsettings";
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an Api resource.
		/// DeleteApi /v2/apis/{apiId}
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		public async Task DeleteApiAsync(string apiId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets an Api resource.
		/// GetApi /v2/apis/{apiId}
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <returns>Success</returns>
		public async Task<GetApiResponse> GetApiAsync(string apiId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetApiResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Puts an Api resource.
		/// ReimportApi /v2/apis/{apiId}
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="basepath">Specifies how to interpret the base path of the API during import. Valid values are ignore, prepend, and split. The default value is ignore. To learn more, see <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-import-api-basePath.html">Set the OpenAPI basePath Property</a>. Supported only for HTTP APIs.</param>
		/// <param name="failOnWarnings">Specifies whether to rollback the API creation when a warning is encountered. By default, API creation continues if a warning is encountered.</param>
		public async Task ReimportApiAsync(string apiId, string basepath, bool failOnWarnings, ReimportApiBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"&basepath=" + (basepath==null? "" : Uri.EscapeDataString(basepath))+"&failOnWarnings="+failOnWarnings;
			using (var request = new HttpRequestMessage(HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes an API mapping.
		/// DeleteApiMapping /v2/domainnames/{domainName}/apimappings/{apiMappingId}
		/// </summary>
		/// <param name="apiMappingId">The API mapping identifier.</param>
		/// <param name="domainName">The domain name.</param>
		public async Task DeleteApiMappingAsync(string apiMappingId, string domainName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/domainnames/"+ (domainName==null? "" : Uri.EscapeDataString(domainName))+"/apimappings/"+ (apiMappingId==null? "" : Uri.EscapeDataString(apiMappingId));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets an API mapping.
		/// GetApiMapping /v2/domainnames/{domainName}/apimappings/{apiMappingId}
		/// </summary>
		/// <param name="apiMappingId">The API mapping identifier.</param>
		/// <param name="domainName">The domain name.</param>
		/// <returns>Success</returns>
		public async Task<GetApiMappingResponse> GetApiMappingAsync(string apiMappingId, string domainName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/domainnames/"+ (domainName==null? "" : Uri.EscapeDataString(domainName))+"/apimappings/"+ (apiMappingId==null? "" : Uri.EscapeDataString(apiMappingId));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetApiMappingResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an Authorizer.
		/// DeleteAuthorizer /v2/apis/{apiId}/authorizers/{authorizerId}
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="authorizerId">The authorizer identifier.</param>
		public async Task DeleteAuthorizerAsync(string apiId, string authorizerId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/authorizers/"+ (authorizerId==null? "" : Uri.EscapeDataString(authorizerId));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets an Authorizer.
		/// GetAuthorizer /v2/apis/{apiId}/authorizers/{authorizerId}
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="authorizerId">The authorizer identifier.</param>
		/// <returns>Success</returns>
		public async Task<GetAuthorizerResponse> GetAuthorizerAsync(string apiId, string authorizerId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/authorizers/"+ (authorizerId==null? "" : Uri.EscapeDataString(authorizerId));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetAuthorizerResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a CORS configuration.
		/// DeleteCorsConfiguration /v2/apis/{apiId}/cors
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		public async Task DeleteCorsConfigurationAsync(string apiId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/cors";
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a Deployment.
		/// DeleteDeployment /v2/apis/{apiId}/deployments/{deploymentId}
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="deploymentId">The deployment ID.</param>
		public async Task DeleteDeploymentAsync(string apiId, string deploymentId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/deployments/"+ (deploymentId==null? "" : Uri.EscapeDataString(deploymentId));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets a Deployment.
		/// GetDeployment /v2/apis/{apiId}/deployments/{deploymentId}
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="deploymentId">The deployment ID.</param>
		/// <returns>Success</returns>
		public async Task<GetDeploymentResponse> GetDeploymentAsync(string apiId, string deploymentId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/deployments/"+ (deploymentId==null? "" : Uri.EscapeDataString(deploymentId));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetDeploymentResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a domain name.
		/// DeleteDomainName /v2/domainnames/{domainName}
		/// </summary>
		/// <param name="domainName">The domain name.</param>
		public async Task DeleteDomainNameAsync(string domainName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/domainnames/"+ (domainName==null? "" : Uri.EscapeDataString(domainName));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets a domain name.
		/// GetDomainName /v2/domainnames/{domainName}
		/// </summary>
		/// <param name="domainName">The domain name.</param>
		/// <returns>Success</returns>
		public async Task<GetDomainNameResponse> GetDomainNameAsync(string domainName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/domainnames/"+ (domainName==null? "" : Uri.EscapeDataString(domainName));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetDomainNameResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an Integration.
		/// DeleteIntegration /v2/apis/{apiId}/integrations/{integrationId}
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="integrationId">The integration ID.</param>
		public async Task DeleteIntegrationAsync(string apiId, string integrationId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/integrations/"+ (integrationId==null? "" : Uri.EscapeDataString(integrationId));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets an Integration.
		/// GetIntegration /v2/apis/{apiId}/integrations/{integrationId}
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="integrationId">The integration ID.</param>
		/// <returns>Success</returns>
		public async Task<GetIntegrationResult> GetIntegrationAsync(string apiId, string integrationId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/integrations/"+ (integrationId==null? "" : Uri.EscapeDataString(integrationId));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetIntegrationResult>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an IntegrationResponses.
		/// DeleteIntegrationResponse /v2/apis/{apiId}/integrations/{integrationId}/integrationresponses/{integrationResponseId}
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="integrationId">The integration ID.</param>
		/// <param name="integrationResponseId">The integration response ID.</param>
		public async Task DeleteIntegrationResponseAsync(string apiId, string integrationId, string integrationResponseId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/integrations/"+ (integrationId==null? "" : Uri.EscapeDataString(integrationId))+"/integrationresponses/"+ (integrationResponseId==null? "" : Uri.EscapeDataString(integrationResponseId));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets an IntegrationResponses.
		/// GetIntegrationResponse /v2/apis/{apiId}/integrations/{integrationId}/integrationresponses/{integrationResponseId}
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="integrationId">The integration ID.</param>
		/// <param name="integrationResponseId">The integration response ID.</param>
		/// <returns>Success</returns>
		public async Task<GetIntegrationResponseResponse> GetIntegrationResponseAsync(string apiId, string integrationId, string integrationResponseId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/integrations/"+ (integrationId==null? "" : Uri.EscapeDataString(integrationId))+"/integrationresponses/"+ (integrationResponseId==null? "" : Uri.EscapeDataString(integrationResponseId));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetIntegrationResponseResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a Model.
		/// DeleteModel /v2/apis/{apiId}/models/{modelId}
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="modelId">The model ID.</param>
		public async Task DeleteModelAsync(string apiId, string modelId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/models/"+ (modelId==null? "" : Uri.EscapeDataString(modelId));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets a Model.
		/// GetModel /v2/apis/{apiId}/models/{modelId}
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="modelId">The model ID.</param>
		/// <returns>Success</returns>
		public async Task<GetModelResponse> GetModelAsync(string apiId, string modelId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/models/"+ (modelId==null? "" : Uri.EscapeDataString(modelId));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetModelResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a Route.
		/// DeleteRoute /v2/apis/{apiId}/routes/{routeId}
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="routeId">The route ID.</param>
		public async Task DeleteRouteAsync(string apiId, string routeId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/routes/"+ (routeId==null? "" : Uri.EscapeDataString(routeId));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets a Route.
		/// GetRoute /v2/apis/{apiId}/routes/{routeId}
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="routeId">The route ID.</param>
		/// <returns>Success</returns>
		public async Task<GetRouteResult> GetRouteAsync(string apiId, string routeId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/routes/"+ (routeId==null? "" : Uri.EscapeDataString(routeId));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetRouteResult>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a route request parameter.
		/// DeleteRouteRequestParameter /v2/apis/{apiId}/routes/{routeId}/requestparameters/{requestParameterKey}
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="requestParameterKey">The route request parameter key.</param>
		/// <param name="routeId">The route ID.</param>
		public async Task DeleteRouteRequestParameterAsync(string apiId, string requestParameterKey, string routeId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/routes/"+ (routeId==null? "" : Uri.EscapeDataString(routeId))+"/requestparameters/"+ (requestParameterKey==null? "" : Uri.EscapeDataString(requestParameterKey));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a RouteResponse.
		/// DeleteRouteResponse /v2/apis/{apiId}/routes/{routeId}/routeresponses/{routeResponseId}
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="routeId">The route ID.</param>
		/// <param name="routeResponseId">The route response ID.</param>
		public async Task DeleteRouteResponseAsync(string apiId, string routeId, string routeResponseId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/routes/"+ (routeId==null? "" : Uri.EscapeDataString(routeId))+"/routeresponses/"+ (routeResponseId==null? "" : Uri.EscapeDataString(routeResponseId));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets a RouteResponse.
		/// GetRouteResponse /v2/apis/{apiId}/routes/{routeId}/routeresponses/{routeResponseId}
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="routeId">The route ID.</param>
		/// <param name="routeResponseId">The route response ID.</param>
		/// <returns>Success</returns>
		public async Task<GetRouteResponseResponse> GetRouteResponseAsync(string apiId, string routeId, string routeResponseId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/routes/"+ (routeId==null? "" : Uri.EscapeDataString(routeId))+"/routeresponses/"+ (routeResponseId==null? "" : Uri.EscapeDataString(routeResponseId));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetRouteResponseResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes the RouteSettings for a stage.
		/// DeleteRouteSettings /v2/apis/{apiId}/stages/{stageName}/routesettings/{routeKey}
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="routeKey">The route key.</param>
		/// <param name="stageName">The stage name. Stage names can only contain alphanumeric characters, hyphens, and underscores. Maximum length is 128 characters.</param>
		public async Task DeleteRouteSettingsAsync(string apiId, string routeKey, string stageName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/stages/"+ (stageName==null? "" : Uri.EscapeDataString(stageName))+"/routesettings/"+ (routeKey==null? "" : Uri.EscapeDataString(routeKey));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a Stage.
		/// DeleteStage /v2/apis/{apiId}/stages/{stageName}
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="stageName">The stage name. Stage names can only contain alphanumeric characters, hyphens, and underscores. Maximum length is 128 characters.</param>
		public async Task DeleteStageAsync(string apiId, string stageName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/stages/"+ (stageName==null? "" : Uri.EscapeDataString(stageName));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets a Stage.
		/// GetStage /v2/apis/{apiId}/stages/{stageName}
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="stageName">The stage name. Stage names can only contain alphanumeric characters, hyphens, and underscores. Maximum length is 128 characters.</param>
		/// <returns>Success</returns>
		public async Task<GetStageResponse> GetStageAsync(string apiId, string stageName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/stages/"+ (stageName==null? "" : Uri.EscapeDataString(stageName));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetStageResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a VPC link.
		/// DeleteVpcLink /v2/vpclinks/{vpcLinkId}
		/// </summary>
		/// <param name="vpcLinkId">The ID of the VPC link.</param>
		public async Task DeleteVpcLinkAsync(string vpcLinkId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/vpclinks/"+ (vpcLinkId==null? "" : Uri.EscapeDataString(vpcLinkId));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets a VPC link.
		/// GetVpcLink /v2/vpclinks/{vpcLinkId}
		/// </summary>
		/// <param name="vpcLinkId">The ID of the VPC link.</param>
		/// <returns>Success</returns>
		public async Task<GetVpcLinkResponse> GetVpcLinkAsync(string vpcLinkId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/vpclinks/"+ (vpcLinkId==null? "" : Uri.EscapeDataString(vpcLinkId));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetVpcLinkResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// ExportApi /v2/apis/{apiId}/exports/{specification}#outputType
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="exportVersion">The version of the API Gateway export algorithm. API Gateway uses the latest version by default. Currently, the only supported version is 1.0.</param>
		/// <param name="includeExtensions">Specifies whether to include <a href="https://docs.aws.amazon.com//apigateway/latest/developerguide/api-gateway-swagger-extensions.html">API Gateway extensions</a> in the exported API definition. API Gateway extensions are included by default.</param>
		/// <param name="outputType">The output type of the exported definition file. Valid values are JSON and YAML.</param>
		/// <param name="specification">The version of the API specification to use. OAS30, for OpenAPI 3.0, is the only supported value.</param>
		/// <param name="stageName">The name of the API stage to export. If you don't specify this property, a representation of the latest API configuration is exported.</param>
		/// <returns>Success</returns>
		public async Task<ExportApiResponse> ExportApiAsync(string apiId, string exportVersion, bool includeExtensions, string outputType, string specification, string stageName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/exports/"+ (specification==null? "" : Uri.EscapeDataString(specification))+"#outputType&exportVersion=" + (exportVersion==null? "" : Uri.EscapeDataString(exportVersion))+"&includeExtensions="+includeExtensions+"&outputType=" + (outputType==null? "" : Uri.EscapeDataString(outputType))+"&stageName=" + (stageName==null? "" : Uri.EscapeDataString(stageName));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ExportApiResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets a model template.
		/// GetModelTemplate /v2/apis/{apiId}/models/{modelId}/template
		/// </summary>
		/// <param name="apiId">The API identifier.</param>
		/// <param name="modelId">The model ID.</param>
		/// <returns>Success</returns>
		public async Task<GetModelTemplateResponse> GetModelTemplateAsync(string apiId, string modelId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/apis/"+ (apiId==null? "" : Uri.EscapeDataString(apiId))+"/models/"+ (modelId==null? "" : Uri.EscapeDataString(modelId))+"/template";
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetModelTemplateResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets a collection of Tag resources.
		/// GetTags /v2/tags/{resource_arn}
		/// </summary>
		/// <param name="resource_arn">The resource ARN for the tag.</param>
		/// <returns>Success</returns>
		public async Task<GetTagsResponse> GetTagsAsync(string resource_arn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/tags/"+ (resource_arn==null? "" : Uri.EscapeDataString(resource_arn));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetTagsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new Tag resource to represent a tag.
		/// TagResource /v2/tags/{resource_arn}
		/// </summary>
		/// <param name="resource_arn">The resource ARN for the tag.</param>
		public async Task TagResourceAsync(string resource_arn, TagResourceBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/tags/"+ (resource_arn==null? "" : Uri.EscapeDataString(resource_arn));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes a Tag.
		/// UntagResource /v2/tags/{resource_arn}#tagKeys
		/// </summary>
		/// <param name="resource_arn">The resource ARN for the tag.</param>
		/// <param name="tagKeys">The Tag keys to delete</param>
		public async Task UntagResourceAsync(string resource_arn, @__string[] tagKeys, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/v2/tags/"+ (resource_arn==null? "" : Uri.EscapeDataString(resource_arn))+"#tagKeys&"+String.Join("&", tagKeys.Select(z => $"tagKeys={z}"));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateApiBody
	{
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiKeySelectionExpression { get; set; }
		
		/// <summary>
		/// Represents a CORS configuration. Supported only for HTTP APIs. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-cors.html">Configuring CORS</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CorsConfiguration { get; set; }
		
		/// <summary>
		/// Represents an Amazon Resource Name (ARN).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CredentialsArn { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Avoid validating models when creating a deployment. Supported only for WebSocket APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableSchemaValidation { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Represents a protocol type.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateApiBodyProtocolType ProtocolType { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteKey { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteSelectionExpression { get; set; }
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Tags { get; set; }
		
		/// <summary>
		/// A string representation of a URI with a length between [1-2048].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Target { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateApiBodyProtocolType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEBSOCKET = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ImportApiBody
	{
		
		/// <summary>
		/// The OpenAPI definition. Supported only for HTTP APIs.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateApiMappingBody
	{
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApiId { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ApiMappingKey { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Stage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateAuthorizerBody
	{
		
		/// <summary>
		/// Represents an Amazon Resource Name (ARN).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AuthorizerCredentialsArn { get; set; }
		
		/// <summary>
		/// An integer with a value between [0-3600].
		/// Minimum: 0
		/// Maximum: 3600
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 3600)]
		public System.Nullable<System.Int32> AuthorizerResultTtlInSeconds { get; set; }
		
		/// <summary>
		/// The authorizer type. For WebSocket APIs, specify REQUEST for a Lambda function using incoming request parameters. For HTTP APIs, specify JWT to use JSON Web Tokens.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateAuthorizerBodyAuthorizerType AuthorizerType { get; set; }
		
		/// <summary>
		/// A string representation of a URI with a length between [1-2048].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AuthorizerUri { get; set; }
		
		/// <summary>
		/// The identity source for which authorization is requested. For the REQUEST authorizer, this is required when authorization caching is enabled. The value is a comma-separated string of one or more mapping expressions of the specified request parameters. For example, if an Auth header, a Name query string parameter are defined as identity sources, this value is $method.request.header.Auth, $method.request.querystring.Name. These parameters will be used to derive the authorization caching key and to perform runtime validation of the REQUEST authorizer by verifying all of the identity-related request parameters are present, not null and non-empty. Only when this is true does the authorizer invoke the authorizer Lambda function, otherwise, it returns a 401 Unauthorized response without calling the Lambda function. The valid value is a string of comma-separated mapping expressions of the specified request parameters. When the authorization caching is not enabled, this property is optional.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public @__string[] IdentitySource { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IdentityValidationExpression { get; set; }
		
		/// <summary>
		/// Represents the configuration of a JWT authorizer. Required for the JWT authorizer type. Supported only for HTTP APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string JwtConfiguration { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateAuthorizerBodyAuthorizerType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REQUEST = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JWT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDeploymentBody
	{
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string StageName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDomainNameBody
	{
		
		/// <summary>
		/// A string with a length between [1-512].
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		/// <summary>
		/// The domain name configurations.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DomainNameConfiguration[] DomainNameConfigurations { get; set; }
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateIntegrationBody
	{
		
		/// <summary>
		/// A string with a length between [1-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ConnectionId { get; set; }
		
		/// <summary>
		/// Represents a connection type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateIntegrationBodyConnectionType ConnectionType { get; set; }
		
		/// <summary>
		/// Specifies how to handle response payload content type conversions. Supported only for WebSocket APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateIntegrationBodyContentHandlingStrategy ContentHandlingStrategy { get; set; }
		
		/// <summary>
		/// Represents an Amazon Resource Name (ARN).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CredentialsArn { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationMethod { get; set; }
		
		/// <summary>
		/// Represents an API method integration type.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateIntegrationBodyIntegrationType IntegrationType { get; set; }
		
		/// <summary>
		/// A string representation of a URI with a length between [1-2048].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationUri { get; set; }
		
		/// <summary>
		/// Represents passthrough behavior for an integration response. Supported only for WebSocket APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateIntegrationBodyPassthroughBehavior PassthroughBehavior { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PayloadFormatVersion { get; set; }
		
		/// <summary>
		/// A key-value map specifying response parameters that are passed to the method response from the backend. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of method.response.header.{name}, where name is a valid and unique header name. The mapped non-static value must match the pattern of integration.response.header.{name} or integration.response.body.{JSON-expression}, where name is a valid and unique response header name and JSON-expression is a valid JSON expression without the $ prefix.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RequestParameters { get; set; }
		
		/// <summary>
		/// A mapping of identifier keys to templates. The value is an actual template script. The key is typically a SelectionKey which is chosen based on evaluating a selection expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RequestTemplates { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string TemplateSelectionExpression { get; set; }
		
		/// <summary>
		/// An integer with a value between [50-30000].
		/// Minimum: 50
		/// Maximum: 30000
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(50, 30000)]
		public System.Nullable<System.Int32> TimeoutInMillis { get; set; }
		
		/// <summary>
		/// The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string TlsConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateIntegrationBodyConnectionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNET = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VPC_LINK = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateIntegrationBodyContentHandlingStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_BINARY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_TEXT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateIntegrationBodyIntegrationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MOCK = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP_PROXY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_PROXY = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateIntegrationBodyPassthroughBehavior
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WHEN_NO_MATCH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEVER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WHEN_NO_TEMPLATES = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateIntegrationResponseBody
	{
		
		/// <summary>
		/// Specifies how to handle response payload content type conversions. Supported only for WebSocket APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateIntegrationResponseBodyContentHandlingStrategy ContentHandlingStrategy { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationResponseKey { get; set; }
		
		/// <summary>
		/// A key-value map specifying response parameters that are passed to the method response from the backend. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of method.response.header.{name}, where name is a valid and unique header name. The mapped non-static value must match the pattern of integration.response.header.{name} or integration.response.body.{JSON-expression}, where name is a valid and unique response header name and JSON-expression is a valid JSON expression without the $ prefix.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ResponseParameters { get; set; }
		
		/// <summary>
		/// A mapping of identifier keys to templates. The value is an actual template script. The key is typically a SelectionKey which is chosen based on evaluating a selection expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ResponseTemplates { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string TemplateSelectionExpression { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateIntegrationResponseBodyContentHandlingStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_BINARY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERT_TO_TEXT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateModelBody
	{
		
		/// <summary>
		/// A string with a length between [1-256].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ContentType { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// A string with a length between [0-32768].
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Schema { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateRouteBody
	{
		
		/// <summary>
		/// Specifies whether an API key is required for the route. Supported only for WebSocket APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApiKeyRequired { get; set; }
		
		/// <summary>
		/// A list of authorization scopes configured on a route. The scopes are used with a JWT authorizer to authorize the method invocation. The authorization works by matching the route scopes against the scopes parsed from the access token in the incoming request. The method invocation is authorized if any route scope matches a claimed scope in the access token. Otherwise, the invocation is not authorized. When the route scope is configured, the client must provide an access token instead of an identity token for authorization purposes.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StringWithLengthBetween1And64[] AuthorizationScopes { get; set; }
		
		/// <summary>
		/// The authorization type. For WebSocket APIs, valid values are NONE for open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer. For HTTP APIs, valid values are NONE for open access, or JWT for using JSON Web Tokens.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateRouteBodyAuthorizationType AuthorizationType { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AuthorizerId { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ModelSelectionExpression { get; set; }
		
		/// <summary>
		/// A string with a length between [1-64].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string OperationName { get; set; }
		
		/// <summary>
		/// The route models.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RequestModels { get; set; }
		
		/// <summary>
		/// The route parameters.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RequestParameters { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RouteKey { get; set; }
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteResponseSelectionExpression { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Target { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateRouteBodyAuthorizationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_IAM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JWT = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateRouteResponseBody
	{
		
		/// <summary>
		/// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ModelSelectionExpression { get; set; }
		
		/// <summary>
		/// The route models.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ResponseModels { get; set; }
		
		/// <summary>
		/// The route parameters.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ResponseParameters { get; set; }
		
		/// <summary>
		/// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RouteResponseKey { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateStageBody
	{
		
		/// <summary>
		/// Settings for logging access in a stage.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AccessLogSettings { get; set; }
		
		/// <summary>
		/// Specifies whether updates to an API automatically trigger a new deployment. The default value is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoDeploy { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ClientCertificateId { get; set; }
		
		/// <summary>
		/// Represents a collection of route settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DefaultRouteSettings { get; set; }
		
		/// <summary>
		/// The identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DeploymentId { get; set; }
		
		/// <summary>
		/// A string with a length between [0-1024].
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// The route settings map.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RouteSettings { get; set; }
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StageName { get; set; }
		
		/// <summary>
		/// The stage variable map.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string StageVariables { get; set; }
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateVpcLinkBody
	{
		
		/// <summary>
		/// A string with a length between [1-128].
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// A list of security group IDs for the VPC link.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public @__string[] SecurityGroupIds { get; set; }
		
		/// <summary>
		/// A list of subnet IDs to include in the VPC link.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public @__string[] SubnetIds { get; set; }
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ReimportApiBody
	{
		
		/// <summary>
		/// The OpenAPI definition. Supported only for HTTP APIs.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TagResourceBody
	{
		
		/// <summary>
		/// Represents a collection of tags associated with the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Tags { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}
