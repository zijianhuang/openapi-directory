//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace My.Demo.Client
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Net.Http;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchDisableStandardsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StandardsSubscription[] StandardsSubscriptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchEnableStandardsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StandardsSubscription[] StandardsSubscriptions { get; set; }
	}
	
	/// <summary>
	/// The standard that you want to enable.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StandardsSubscriptionRequest
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StandardsArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StandardsInputParameterMap StandardsInput { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchImportFindingsResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int FailedCount { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int SuccessCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ImportFindingsError[] FailedFindings { get; set; }
	}
	
	/// <summary>
	/// <p>Provides consistent format for the contents of the Security Hub-aggregated findings. <code>AwsSecurityFinding</code> format enables you to share findings between AWS security services and third-party solutions, and security standards checks.</p> <note> <p>A finding is a potential security issue generated either by AWS services (Amazon GuardDuty, Amazon Inspector, and Amazon Macie) or by the integrated third-party solutions and standards checks.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsSecurityFinding
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SchemaVersion { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ProductArn { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string GeneratorId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AwsAccountId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] Types { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string FirstObservedAt { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string LastObservedAt { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CreatedAt { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string UpdatedAt { get; set; }
		
		/// <summary>
		/// The severity of the finding.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Severity Severity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Confidence { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Criticality { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Details about the remediation steps for a finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Remediation Remediation { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SourceUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FieldMap ProductFields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FieldMap UserDefinedFields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Malware[] Malware { get; set; }
		
		/// <summary>
		/// The details of network-related information about a finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Network Network { get; set; }
		
		/// <summary>
		/// The details of process-related information about a finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ProcessDetails Process { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ThreatIntelIndicator[] ThreatIntelIndicators { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Resource[] Resources { get; set; }
		
		/// <summary>
		/// Contains finding details that are specific to control-based findings. Only returned for findings generated from controls.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Compliance Compliance { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AwsSecurityFindingVerificationState VerificationState { get; set; }
		
		/// <summary>
		/// This field is deprecated, use Workflow.Status instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsSecurityFindingWorkflowState WorkflowState { get; set; }
		
		/// <summary>
		/// Provides information about the status of the investigation into a finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Workflow Workflow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AwsSecurityFindingRecordState RecordState { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RelatedFinding[] RelatedFindings { get; set; }
		
		/// <summary>
		/// A user-defined note added to a finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Note Note { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AwsSecurityFindingVerificationState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRUE_POSITIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FALSE_POSITIVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BENIGN_POSITIVE = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AwsSecurityFindingWorkflowState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASSIGNED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEFERRED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOLVED = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AwsSecurityFindingRecordState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARCHIVED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchUpdateFindingsResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AwsSecurityFindingIdentifier[] ProcessedFindings { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BatchUpdateFindingsUnprocessedFinding[] UnprocessedFindings { get; set; }
	}
	
	/// <summary>
	/// Identifies a finding to update using <code>BatchUpdateFindings</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsSecurityFindingIdentifier
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ProductArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SeverityLabel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INFORMATIONAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIUM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HIGH = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CRITICAL = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum WorkflowStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOTIFIED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOLVED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUPPRESSED = 3,
	}
	
	/// <summary>
	/// Details about a related finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RelatedFinding
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ProductArn { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateActionTargetResponse
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ActionTargetArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateInsightResponse
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InsightArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateMembersResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Result[] UnprocessedAccounts { get; set; }
	}
	
	/// <summary>
	/// The details of an AWS account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AccountDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Email { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeclineInvitationsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Result[] UnprocessedAccounts { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteActionTargetResponse
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ActionTargetArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteInsightResponse
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InsightArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteInvitationsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Result[] UnprocessedAccounts { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteMembersResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Result[] UnprocessedAccounts { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeActionTargetsResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActionTarget[] ActionTargets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeHubResponse
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string HubArn { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SubscribedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeProductsResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Product[] Products { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeStandardsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Standard[] Standards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeStandardsControlsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StandardsControl[] Controls { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EnableImportFindingsForProductResponse
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ProductSubscriptionArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetEnabledStandardsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StandardsSubscription[] StandardsSubscriptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetFindingsResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AwsSecurityFinding[] Findings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// A collection of finding attributes used to sort findings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SortCriterion
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Field { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SortCriterionSortOrder SortOrder { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SortCriterionSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		asc = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		desc = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetInsightResultsResponse
	{
		
		/// <summary>
		/// The insight results returned by the <code>GetInsightResults</code> operation.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InsightResults InsightResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetInsightsResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Insight[] Insights { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetInvitationsCountResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InvitationsCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetMasterAccountResponse
	{
		
		/// <summary>
		/// Details about an invitation.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Invitation Master { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetMembersResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Member[] Members { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Result[] UnprocessedAccounts { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InviteMembersResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Result[] UnprocessedAccounts { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListEnabledProductsForImportResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] ProductSubscriptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListInvitationsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Invitation[] Invitations { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListMembersResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Member[] Members { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTagsForResourceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AcceptInvitationRequest
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MasterId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InvitationId { get; set; }
	}
	
	/// <summary>
	/// An <code>ActionTarget</code> object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ActionTarget
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ActionTargetArn { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	/// <summary>
	/// Information about an Availability Zone.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AvailabilityZone
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ZoneName { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SubnetId { get; set; }
	}
	
	/// <summary>
	/// A complex type that controls whether access logs are written for the distribution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsCloudFrontDistributionLogging
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeCookies { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Prefix { get; set; }
	}
	
	/// <summary>
	/// A complex type that contains information about origins and origin groups for this distribution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsCloudFrontDistributionOrigins
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AwsCloudFrontDistributionOriginItem[] Items { get; set; }
	}
	
	/// <summary>
	/// A distribution configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsCloudFrontDistributionDetails
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ETag { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedTime { get; set; }
		
		/// <summary>
		/// A complex type that controls whether access logs are written for the distribution.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsCloudFrontDistributionLogging Logging { get; set; }
		
		/// <summary>
		/// A complex type that contains information about origins and origin groups for this distribution.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsCloudFrontDistributionOrigins Origins { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string WebAclId { get; set; }
	}
	
	/// <summary>
	/// A complex type that describes the Amazon S3 bucket, HTTP server (for example, a web server), Amazon Elemental MediaStore, or other server from which CloudFront gets your files.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsCloudFrontDistributionOriginItem
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string OriginPath { get; set; }
	}
	
	/// <summary>
	/// Information about the build environment for this build project.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsCodeBuildProjectEnvironment
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Certificate { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ImagePullCredentialsType { get; set; }
		
		/// <summary>
		/// The credentials for access to a private registry.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsCodeBuildProjectEnvironmentRegistryCredential RegistryCredential { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Information about the build input source code for this build project.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsCodeBuildProjectSource
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Location { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> GitCloneDepth { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> InsecureSsl { get; set; }
	}
	
	/// <summary>
	/// Information about the VPC configuration that AWS CodeBuild accesses.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsCodeBuildProjectVpcConfig
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] Subnets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] SecurityGroupIds { get; set; }
	}
	
	/// <summary>
	/// Information about an AWS CodeBuild project.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsCodeBuildProjectDetails
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string EncryptionKey { get; set; }
		
		/// <summary>
		/// Information about the build environment for this build project.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsCodeBuildProjectEnvironment Environment { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Information about the build input source code for this build project.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsCodeBuildProjectSource Source { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ServiceRole { get; set; }
		
		/// <summary>
		/// Information about the VPC configuration that AWS CodeBuild accesses.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsCodeBuildProjectVpcConfig VpcConfig { get; set; }
	}
	
	/// <summary>
	/// The credentials for access to a private registry.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsCodeBuildProjectEnvironmentRegistryCredential
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Credential { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CredentialProvider { get; set; }
	}
	
	/// <summary>
	/// The details of an Amazon EC2 instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsEc2InstanceDetails
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ImageId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] IpV4Addresses { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] IpV6Addresses { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string KeyName { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IamInstanceProfileArn { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SubnetId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string LaunchedAt { get; set; }
	}
	
	/// <summary>
	/// Information about the network interface attachment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsEc2NetworkInterfaceAttachment
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AttachTime { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AttachmentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeleteOnTermination { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DeviceIndex { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string InstanceOwnerId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// Details about the network interface
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsEc2NetworkInterfaceDetails
	{
		
		/// <summary>
		/// Information about the network interface attachment.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsEc2NetworkInterfaceAttachment Attachment { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NetworkInterfaceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AwsEc2NetworkInterfaceSecurityGroup[] SecurityGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SourceDestCheck { get; set; }
	}
	
	/// <summary>
	/// A security group associated with the network interface.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsEc2NetworkInterfaceSecurityGroup
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string GroupName { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string GroupId { get; set; }
	}
	
	/// <summary>
	/// Details about an EC2 security group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsEc2SecurityGroupDetails
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string GroupName { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string GroupId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string OwnerId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AwsEc2SecurityGroupIpPermission[] IpPermissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AwsEc2SecurityGroupIpPermission[] IpPermissionsEgress { get; set; }
	}
	
	/// <summary>
	/// An IP permission for an EC2 security group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsEc2SecurityGroupIpPermission
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IpProtocol { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FromPort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ToPort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AwsEc2SecurityGroupUserIdGroupPair[] UserIdGroupPairs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AwsEc2SecurityGroupIpRange[] IpRanges { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AwsEc2SecurityGroupIpv6Range[] Ipv6Ranges { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AwsEc2SecurityGroupPrefixListId[] PrefixListIds { get; set; }
	}
	
	/// <summary>
	/// A range of IPv4 addresses.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsEc2SecurityGroupIpRange
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CidrIp { get; set; }
	}
	
	/// <summary>
	/// A range of IPv6 addresses.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsEc2SecurityGroupIpv6Range
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CidrIpv6 { get; set; }
	}
	
	/// <summary>
	/// A prefix list ID.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsEc2SecurityGroupPrefixListId
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PrefixListId { get; set; }
	}
	
	/// <summary>
	/// A relationship between a security group and a user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsEc2SecurityGroupUserIdGroupPair
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string GroupId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string GroupName { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PeeringStatus { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string UserId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string VpcPeeringConnectionId { get; set; }
	}
	
	/// <summary>
	/// Additional options for the domain endpoint, such as whether to require HTTPS for all traffic.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsElasticsearchDomainDomainEndpointOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnforceHTTPS { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string TLSSecurityPolicy { get; set; }
	}
	
	/// <summary>
	/// Details about the configuration for encryption at rest.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsElasticsearchDomainEncryptionAtRestOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
	}
	
	/// <summary>
	/// Details about the configuration for node-to-node encryption.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsElasticsearchDomainNodeToNodeEncryptionOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	/// <summary>
	/// Information that Amazon ES derives based on <code>VPCOptions</code> for the domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsElasticsearchDomainVPCOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] AvailabilityZones { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] SecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] SubnetIds { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string VPCId { get; set; }
	}
	
	/// <summary>
	/// Information about an Elasticsearch domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsElasticsearchDomainDetails
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AccessPolicies { get; set; }
		
		/// <summary>
		/// Additional options for the domain endpoint, such as whether to require HTTPS for all traffic.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsElasticsearchDomainDomainEndpointOptions DomainEndpointOptions { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DomainId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Endpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FieldMap Endpoints { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ElasticsearchVersion { get; set; }
		
		/// <summary>
		/// Details about the configuration for encryption at rest.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsElasticsearchDomainEncryptionAtRestOptions EncryptionAtRestOptions { get; set; }
		
		/// <summary>
		/// Details about the configuration for node-to-node encryption.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsElasticsearchDomainNodeToNodeEncryptionOptions NodeToNodeEncryptionOptions { get; set; }
		
		/// <summary>
		/// Information that Amazon ES derives based on <code>VPCOptions</code> for the domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsElasticsearchDomainVPCOptions VPCOptions { get; set; }
	}
	
	/// <summary>
	/// Information about the state of the load balancer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class LoadBalancerState
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Code { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Reason { get; set; }
	}
	
	/// <summary>
	/// Information about a load balancer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsElbv2LoadBalancerDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AvailabilityZone[] AvailabilityZones { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CanonicalHostedZoneId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DNSName { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IpAddressType { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Scheme { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] SecurityGroups { get; set; }
		
		/// <summary>
		/// Information about the state of the load balancer.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LoadBalancerState State { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AwsIamAccessKeyStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// IAM access key details related to a finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsIamAccessKeyDetails
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string UserName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AwsIamAccessKeyDetailsStatus Status { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CreatedAt { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PrincipalId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PrincipalType { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PrincipalName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AwsIamAccessKeyDetailsStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Contains information about an IAM role, including all of the role's policies.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsIamRoleDetails
	{
		
		/// <summary>
		/// Max length: 131072
		/// Min length: 1
		/// Pattern: [\u0009\u000A\u000D\u0020-\u007E\u00A1-\u00FF]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(131072, MinimumLength=1)]
		public string AssumeRolePolicyDocument { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CreateDate { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RoleId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RoleName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxSessionDuration { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Path { get; set; }
	}
	
	/// <summary>
	/// Contains metadata about a customer master key (CMK).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsKmsKeyDetails
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AWSAccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> CreationDate { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string KeyId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string KeyManager { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string KeyState { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Origin { get; set; }
	}
	
	/// <summary>
	/// The code for the Lambda function. You can specify either an object in Amazon S3, or upload a deployment package directly.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsLambdaFunctionCode
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string S3Bucket { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string S3Key { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string S3ObjectVersion { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ZipFile { get; set; }
	}
	
	/// <summary>
	/// The dead-letter queue for failed asynchronous invocations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsLambdaFunctionDeadLetterConfig
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string TargetArn { get; set; }
	}
	
	/// <summary>
	/// A function's environment variable settings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsLambdaFunctionEnvironment
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FieldMap Variables { get; set; }
		
		/// <summary>
		/// Error messages for environment variables that couldn't be applied.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsLambdaFunctionEnvironmentError Error { get; set; }
	}
	
	/// <summary>
	/// The function's AWS X-Ray tracing configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsLambdaFunctionTracingConfig
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Mode { get; set; }
	}
	
	/// <summary>
	/// The VPC security groups and subnets that are attached to a Lambda function. For more information, see VPC Settings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsLambdaFunctionVpcConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] SecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] SubnetIds { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
	}
	
	/// <summary>
	/// Details about a function's configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsLambdaFunctionDetails
	{
		
		/// <summary>
		/// The code for the Lambda function. You can specify either an object in Amazon S3, or upload a deployment package directly.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsLambdaFunctionCode Code { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CodeSha256 { get; set; }
		
		/// <summary>
		/// The dead-letter queue for failed asynchronous invocations.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsLambdaFunctionDeadLetterConfig DeadLetterConfig { get; set; }
		
		/// <summary>
		/// A function's environment variable settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsLambdaFunctionEnvironment Environment { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string FunctionName { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Handler { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyArn { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string LastModified { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AwsLambdaFunctionLayer[] Layers { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string MasterArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MemorySize { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Role { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Runtime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Timeout { get; set; }
		
		/// <summary>
		/// The function's AWS X-Ray tracing configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsLambdaFunctionTracingConfig TracingConfig { get; set; }
		
		/// <summary>
		/// The VPC security groups and subnets that are attached to a Lambda function. For more information, see VPC Settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsLambdaFunctionVpcConfig VpcConfig { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// Error messages for environment variables that couldn't be applied.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsLambdaFunctionEnvironmentError
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ErrorCode { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// An AWS Lambda layer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsLambdaFunctionLayer
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CodeSize { get; set; }
	}
	
	/// <summary>
	/// Details about a Lambda layer version.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsLambdaLayerVersionDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] CompatibleRuntimes { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CreatedDate { get; set; }
	}
	
	/// <summary>
	/// An AWS Identity and Access Management (IAM) role associated with the DB instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsRdsDbInstanceAssociatedRole
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string FeatureName { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// Specifies the connection endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsRdsDbInstanceEndpoint
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string HostedZoneId { get; set; }
	}
	
	/// <summary>
	/// Contains the details of an Amazon RDS DB instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsRdsDbInstanceDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AwsRdsDbInstanceAssociatedRole[] AssociatedRoles { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CACertificateIdentifier { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DbInstancePort { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DbiResourceId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DBName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		/// <summary>
		/// Specifies the connection endpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsRdsDbInstanceEndpoint Endpoint { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IAMDatabaseAuthenticationEnabled { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string InstanceCreateTime { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PubliclyAccessible { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> StorageEncrypted { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string TdeCredentialArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AwsRdsDbInstanceVpcSecurityGroup[] VpcSecurityGroups { get; set; }
	}
	
	/// <summary>
	/// A VPC security groups that the DB instance belongs to.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsRdsDbInstanceVpcSecurityGroup
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string VpcSecurityGroupId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// The encryption configuration for the S3 bucket.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsS3BucketServerSideEncryptionConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AwsS3BucketServerSideEncryptionRule[] Rules { get; set; }
	}
	
	/// <summary>
	/// The details of an Amazon S3 bucket.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsS3BucketDetails
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string OwnerId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string OwnerName { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CreatedAt { get; set; }
		
		/// <summary>
		/// The encryption configuration for the S3 bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsS3BucketServerSideEncryptionConfiguration ServerSideEncryptionConfiguration { get; set; }
	}
	
	/// <summary>
	/// Specifies the default server-side encryption to apply to new objects in the bucket.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsS3BucketServerSideEncryptionByDefault
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SSEAlgorithm { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string KMSMasterKeyID { get; set; }
	}
	
	/// <summary>
	/// An encryption rule to apply to the S3 bucket.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsS3BucketServerSideEncryptionRule
	{
		
		/// <summary>
		/// Specifies the default server-side encryption to apply to new objects in the bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsS3BucketServerSideEncryptionByDefault ApplyServerSideEncryptionByDefault { get; set; }
	}
	
	/// <summary>
	/// Details about an Amazon S3 object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsS3ObjectDetails
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string LastModified { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ETag { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string VersionId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ContentType { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ServerSideEncryption { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SSEKMSKeyId { get; set; }
	}
	
	/// <summary>
	/// The severity of the finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Severity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Product { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SeverityLabel Label { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Normalized { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Original { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SeverityLabel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INFORMATIONAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIUM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HIGH = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CRITICAL = 4,
	}
	
	/// <summary>
	/// Details about the remediation steps for a finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Remediation
	{
		
		/// <summary>
		/// A recommendation on how to remediate the issue identified in a finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Recommendation Recommendation { get; set; }
	}
	
	/// <summary>
	/// The details of network-related information about a finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Network
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NetworkDirection Direction { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Protocol { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SourceIpV4 { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SourceIpV6 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SourcePort { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SourceDomain { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SourceMac { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DestinationIpV4 { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DestinationIpV6 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DestinationPort { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DestinationDomain { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum NetworkDirection
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OUT = 1,
	}
	
	/// <summary>
	/// The details of process-related information about a finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ProcessDetails
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Path { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Pid { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ParentPid { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string LaunchedAt { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string TerminatedAt { get; set; }
	}
	
	/// <summary>
	/// Contains finding details that are specific to control-based findings. Only returned for findings generated from controls.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Compliance
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ComplianceStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] RelatedRequirements { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StatusReason[] StatusReasons { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ComplianceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PASSED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WARNING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_AVAILABLE = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum VerificationState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRUE_POSITIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FALSE_POSITIVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BENIGN_POSITIVE = 3,
	}
	
	/// <summary>
	/// This field is deprecated, use Workflow.Status instead.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum WorkflowState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASSIGNED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEFERRED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOLVED = 4,
	}
	
	/// <summary>
	/// Provides information about the status of the investigation into a finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Workflow
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WorkflowStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum WorkflowStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOTIFIED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOLVED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUPPRESSED = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RecordState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARCHIVED = 1,
	}
	
	/// <summary>
	/// A user-defined note added to a finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Note
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Text { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string UpdatedAt { get; set; }
	}
	
	/// <summary>
	/// A collection of attributes that are applied to all active Security Hub-aggregated findings and that result in a subset of findings that are included in this insight.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsSecurityFindingFilters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] ProductArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] AwsAccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] GeneratorId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateFilter[] FirstObservedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateFilter[] LastObservedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateFilter[] CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateFilter[] UpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NumberFilter[] SeverityProduct { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NumberFilter[] SeverityNormalized { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] SeverityLabel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NumberFilter[] Confidence { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NumberFilter[] Criticality { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] RecommendationText { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] SourceUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapFilter[] ProductFields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] ProductName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] CompanyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapFilter[] UserDefinedFields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] MalwareName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] MalwareType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] MalwarePath { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] MalwareState { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] NetworkDirection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] NetworkProtocol { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IpFilter[] NetworkSourceIpV4 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IpFilter[] NetworkSourceIpV6 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NumberFilter[] NetworkSourcePort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] NetworkSourceDomain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] NetworkSourceMac { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IpFilter[] NetworkDestinationIpV4 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IpFilter[] NetworkDestinationIpV6 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NumberFilter[] NetworkDestinationPort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] NetworkDestinationDomain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] ProcessName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] ProcessPath { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NumberFilter[] ProcessPid { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NumberFilter[] ProcessParentPid { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateFilter[] ProcessLaunchedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateFilter[] ProcessTerminatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] ThreatIntelIndicatorType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] ThreatIntelIndicatorValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] ThreatIntelIndicatorCategory { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateFilter[] ThreatIntelIndicatorLastObservedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] ThreatIntelIndicatorSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] ThreatIntelIndicatorSourceUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] ResourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] ResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] ResourcePartition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] ResourceRegion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapFilter[] ResourceTags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] ResourceAwsEc2InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] ResourceAwsEc2InstanceImageId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IpFilter[] ResourceAwsEc2InstanceIpV4Addresses { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IpFilter[] ResourceAwsEc2InstanceIpV6Addresses { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] ResourceAwsEc2InstanceKeyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] ResourceAwsEc2InstanceIamInstanceProfileArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] ResourceAwsEc2InstanceVpcId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] ResourceAwsEc2InstanceSubnetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateFilter[] ResourceAwsEc2InstanceLaunchedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] ResourceAwsS3BucketOwnerId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] ResourceAwsS3BucketOwnerName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] ResourceAwsIamAccessKeyUserName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] ResourceAwsIamAccessKeyStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateFilter[] ResourceAwsIamAccessKeyCreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] ResourceContainerName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] ResourceContainerImageId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] ResourceContainerImageName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateFilter[] ResourceContainerLaunchedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapFilter[] ResourceDetailsOther { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] ComplianceStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] VerificationState { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] WorkflowState { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] WorkflowStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] RecordState { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] RelatedFindingsProductArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] RelatedFindingsId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] NoteText { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateFilter[] NoteUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilter[] NoteUpdatedBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KeywordFilter[] Keyword { get; set; }
	}
	
	/// <summary>
	/// A wrapper type for the topic's Amazon Resource Name (ARN).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsSnsTopicDetails
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string KmsMasterKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AwsSnsTopicSubscription[] Subscription { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string TopicName { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Owner { get; set; }
	}
	
	/// <summary>
	/// A wrapper type for the attributes of an Amazon SNS subscription.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsSnsTopicSubscription
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Endpoint { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Protocol { get; set; }
	}
	
	/// <summary>
	/// Data about a queue.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsSqsQueueDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> KmsDataKeyReusePeriodSeconds { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string KmsMasterKeyId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string QueueName { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DeadLetterTargetArn { get; set; }
	}
	
	/// <summary>
	/// Details about a WAF WebACL.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsWafWebAclDetails
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DefaultAction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AwsWafWebAclRule[] Rules { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string WebAclId { get; set; }
	}
	
	/// <summary>
	/// Details about the action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class WafAction
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Details about an override action for a rule.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class WafOverrideAction
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Details for a rule in a WAF WebACL.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AwsWafWebAclRule
	{
		
		/// <summary>
		/// Details about the action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public WafAction Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WafExcludedRule[] ExcludedRules { get; set; }
		
		/// <summary>
		/// Details about an override action for a rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public WafOverrideAction OverrideAction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Priority { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RuleId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchDisableStandardsRequest
	{
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 25
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(25)]
		public NonEmptyString[] StandardsSubscriptionArns { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchEnableStandardsRequest
	{
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 25
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(25)]
		public StandardsSubscriptionRequest[] StandardsSubscriptionRequests { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchImportFindingsRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AwsSecurityFinding[] Findings { get; set; }
	}
	
	/// <summary>
	/// The updated note.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class NoteUpdate
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Text { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string UpdatedBy { get; set; }
	}
	
	/// <summary>
	/// Updates to the severity information for a finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SeverityUpdate
	{
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 100)]
		public System.Nullable<System.Int32> Normalized { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Product { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SeverityUpdateLabel Label { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SeverityUpdateLabel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INFORMATIONAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIUM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HIGH = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CRITICAL = 4,
	}
	
	/// <summary>
	/// Used to update information about the investigation into the finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class WorkflowUpdate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WorkflowUpdateStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum WorkflowUpdateStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOTIFIED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOLVED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUPPRESSED = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchUpdateFindingsRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AwsSecurityFindingIdentifier[] FindingIdentifiers { get; set; }
		
		/// <summary>
		/// The updated note.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public NoteUpdate Note { get; set; }
		
		/// <summary>
		/// Updates to the severity information for a finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SeverityUpdate Severity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BatchUpdateFindingsRequestVerificationState VerificationState { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 100)]
		public System.Nullable<System.Int32> Confidence { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 100)]
		public System.Nullable<System.Int32> Criticality { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] Types { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FieldMap UserDefinedFields { get; set; }
		
		/// <summary>
		/// Used to update information about the investigation into the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public WorkflowUpdate Workflow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RelatedFinding[] RelatedFindings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum BatchUpdateFindingsRequestVerificationState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRUE_POSITIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FALSE_POSITIVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BENIGN_POSITIVE = 3,
	}
	
	/// <summary>
	/// A finding from a <code>BatchUpdateFindings</code> request that Security Hub was unable to update.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchUpdateFindingsUnprocessedFinding
	{
		
		/// <summary>
		/// Identifies a finding to update using <code>BatchUpdateFindings</code>.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AwsSecurityFindingIdentifier FindingIdentifier { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ErrorCode { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ComplianceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PASSED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WARNING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_AVAILABLE = 3,
	}
	
	/// <summary>
	/// Container details related to a finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ContainerDetails
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ImageId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ImageName { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string LaunchedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ControlStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateActionTargetRequest
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateInsightRequest
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// A collection of attributes that are applied to all active Security Hub-aggregated findings and that result in a subset of findings that are included in this insight.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AwsSecurityFindingFilters Filters { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string GroupByAttribute { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateMembersRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AccountDetails[] AccountDetails { get; set; }
	}
	
	/// <summary>
	/// A date range for the date filter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DateRange
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateRangeUnit Unit { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DateRangeUnit
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DAYS = 0,
	}
	
	/// <summary>
	/// A date filter for querying findings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DateFilter
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Start { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string End { get; set; }
		
		/// <summary>
		/// A date range for the date filter.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DateRange DateRange { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DateRangeUnit
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DAYS = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeclineInvitationsRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] AccountIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteInvitationsRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] AccountIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteMembersRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] AccountIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeActionTargetsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] ActionTargetArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DisassociateMembersRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] AccountIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EnableImportFindingsForProductRequest
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ProductArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EnableSecurityHubRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableDefaultStandards { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetEnabledStandardsRequest
	{
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 25
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(25)]
		public NonEmptyString[] StandardsSubscriptionArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetFindingsRequest
	{
		
		/// <summary>
		/// A collection of attributes that are applied to all active Security Hub-aggregated findings and that result in a subset of findings that are included in this insight.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsSecurityFindingFilters Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SortCriterion[] SortCriteria { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	/// <summary>
	/// The insight results returned by the <code>GetInsightResults</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InsightResults
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InsightArn { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string GroupByAttribute { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InsightResultValue[] ResultValues { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetInsightsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] InsightArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	/// <summary>
	/// Details about an invitation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Invitation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string InvitationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> InvitedAt { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string MemberStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetMembersRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] AccountIds { get; set; }
	}
	
	/// <summary>
	/// The list of the findings that cannot be imported. For each finding, the list provides the error.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ImportFindingsError
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ErrorCode { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
	}
	
	/// <summary>
	/// Contains information about a Security Hub insight.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Insight
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InsightArn { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// A collection of attributes that are applied to all active Security Hub-aggregated findings and that result in a subset of findings that are included in this insight.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AwsSecurityFindingFilters Filters { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string GroupByAttribute { get; set; }
	}
	
	/// <summary>
	/// The insight result values returned by the <code>GetInsightResults</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InsightResultValue
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string GroupByAttributeValue { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Count { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum IntegrationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEND_FINDINGS_TO_SECURITY_HUB = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RECEIVE_FINDINGS_FROM_SECURITY_HUB = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InviteMembersRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] AccountIds { get; set; }
	}
	
	/// <summary>
	/// The IP filter for querying findings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class IpFilter
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Cidr { get; set; }
	}
	
	/// <summary>
	/// A keyword filter for querying findings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class KeywordFilter
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MalwareType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADWARE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BLENDED_THREAT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOTNET_AGENT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COIN_MINER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXPLOIT_KIT = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KEYLOGGER = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MACRO = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POTENTIALLY_UNWANTED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPYWARE = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RANSOMWARE = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REMOTE_ACCESS = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROOTKIT = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TROJAN = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VIRUS = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WORM = 14,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MalwareState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OBSERVED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REMOVAL_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REMOVED = 2,
	}
	
	/// <summary>
	/// A list of malware related to a finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Malware
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MalwareType Type { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Path { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MalwareState State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MalwareType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADWARE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BLENDED_THREAT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOTNET_AGENT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COIN_MINER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXPLOIT_KIT = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KEYLOGGER = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MACRO = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POTENTIALLY_UNWANTED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPYWARE = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RANSOMWARE = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REMOTE_ACCESS = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROOTKIT = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TROJAN = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VIRUS = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WORM = 14,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MalwareState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OBSERVED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REMOVAL_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REMOVED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MapFilterComparison
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EQUALS = 0,
	}
	
	/// <summary>
	/// The map filter for querying findings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class MapFilter
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapFilterComparison Comparison { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MapFilterComparison
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EQUALS = 0,
	}
	
	/// <summary>
	/// The details about a member account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Member
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Email { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string MasterId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string MemberStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> InvitedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> UpdatedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum NetworkDirection
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OUT = 1,
	}
	
	/// <summary>
	/// A number filter for querying findings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class NumberFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Gte { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Lte { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Eq { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum Partition
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		aws = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		aws-cn = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		aws-us-gov = 2,
	}
	
	/// <summary>
	/// Contains details about a product.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Product
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ProductArn { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ProductName { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CompanyName { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] Categories { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IntegrationType[] IntegrationTypes { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string MarketplaceUrl { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ActivationUrl { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ProductSubscriptionResourcePolicy { get; set; }
	}
	
	/// <summary>
	/// A recommendation on how to remediate the issue identified in a finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Recommendation
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Text { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// <p>Additional details about a resource related to a finding.</p> <p>To provide the details, use the object that corresponds to the resource type. For example, if the resource type is <code>AwsEc2Instance</code>, then you use the <code>AwsEc2Instance</code> object to provide the details.</p> <p>If the type-specific object does not contain all of the fields you want to populate, then you use the <code>Other</code> object to populate those additional fields.</p> <p>You also use the <code>Other</code> object to populate the details when the selected type does not have a corresponding object.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ResourceDetails
	{
		
		/// <summary>
		/// Information about an AWS CodeBuild project.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsCodeBuildProjectDetails AwsCodeBuildProject { get; set; }
		
		/// <summary>
		/// A distribution configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsCloudFrontDistributionDetails AwsCloudFrontDistribution { get; set; }
		
		/// <summary>
		/// The details of an Amazon EC2 instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsEc2InstanceDetails AwsEc2Instance { get; set; }
		
		/// <summary>
		/// Details about the network interface
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsEc2NetworkInterfaceDetails AwsEc2NetworkInterface { get; set; }
		
		/// <summary>
		/// Details about an EC2 security group.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsEc2SecurityGroupDetails AwsEc2SecurityGroup { get; set; }
		
		/// <summary>
		/// Information about a load balancer.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsElbv2LoadBalancerDetails AwsElbv2LoadBalancer { get; set; }
		
		/// <summary>
		/// Information about an Elasticsearch domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsElasticsearchDomainDetails AwsElasticsearchDomain { get; set; }
		
		/// <summary>
		/// The details of an Amazon S3 bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsS3BucketDetails AwsS3Bucket { get; set; }
		
		/// <summary>
		/// Details about an Amazon S3 object.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsS3ObjectDetails AwsS3Object { get; set; }
		
		/// <summary>
		/// IAM access key details related to a finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsIamAccessKeyDetails AwsIamAccessKey { get; set; }
		
		/// <summary>
		/// Contains information about an IAM role, including all of the role's policies.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsIamRoleDetails AwsIamRole { get; set; }
		
		/// <summary>
		/// Contains metadata about a customer master key (CMK).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsKmsKeyDetails AwsKmsKey { get; set; }
		
		/// <summary>
		/// Details about a function's configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsLambdaFunctionDetails AwsLambdaFunction { get; set; }
		
		/// <summary>
		/// Details about a Lambda layer version.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsLambdaLayerVersionDetails AwsLambdaLayerVersion { get; set; }
		
		/// <summary>
		/// Contains the details of an Amazon RDS DB instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsRdsDbInstanceDetails AwsRdsDbInstance { get; set; }
		
		/// <summary>
		/// A wrapper type for the topic's Amazon Resource Name (ARN).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsSnsTopicDetails AwsSnsTopic { get; set; }
		
		/// <summary>
		/// Data about a queue.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsSqsQueueDetails AwsSqsQueue { get; set; }
		
		/// <summary>
		/// Details about a WAF WebACL.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsWafWebAclDetails AwsWafWebAcl { get; set; }
		
		/// <summary>
		/// Container details related to a finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ContainerDetails Container { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FieldMap Other { get; set; }
	}
	
	/// <summary>
	/// A resource related to a finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Resource
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePartition Partition { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FieldMap Tags { get; set; }
		
		/// <summary>
		/// <p>Additional details about a resource related to a finding.</p> <p>To provide the details, use the object that corresponds to the resource type. For example, if the resource type is <code>AwsEc2Instance</code>, then you use the <code>AwsEc2Instance</code> object to provide the details.</p> <p>If the type-specific object does not contain all of the fields you want to populate, then you use the <code>Other</code> object to populate those additional fields.</p> <p>You also use the <code>Other</code> object to populate the details when the selected type does not have a corresponding object.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourceDetails Details { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ResourcePartition
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		aws = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		aws-cn = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		aws-us-gov = 2,
	}
	
	/// <summary>
	/// Details about the account that was not processed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Result
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ProcessingResult { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SeverityRating
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIUM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HIGH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CRITICAL = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		asc = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		desc = 1,
	}
	
	/// <summary>
	/// Provides information about a specific standard.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Standard
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string StandardsArn { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnabledByDefault { get; set; }
	}
	
	/// <summary>
	/// Details for an individual security standard control.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StandardsControl
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string StandardsControlArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StandardsControlControlStatus ControlStatus { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DisabledReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ControlStatusUpdatedAt { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ControlId { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RemediationUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StandardsControlSeverityRating SeverityRating { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] RelatedRequirements { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StandardsControlControlStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StandardsControlSeverityRating
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIUM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HIGH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CRITICAL = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StandardsStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INCOMPLETE = 4,
	}
	
	/// <summary>
	/// A resource that represents your subscription to a supported standard.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StandardsSubscription
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StandardsSubscriptionArn { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StandardsArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StandardsInputParameterMap StandardsInput { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StandardsSubscriptionStandardsStatus StandardsStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StandardsSubscriptionStandardsStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INCOMPLETE = 4,
	}
	
	/// <summary>
	/// Provides additional context for the value of <code>Compliance.Status</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StatusReason
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ReasonCode { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StringFilterComparison
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EQUALS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREFIX = 1,
	}
	
	/// <summary>
	/// A string filter for querying findings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StringFilter
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFilterComparison Comparison { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StringFilterComparison
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EQUALS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREFIX = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TagResourceRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ThreatIntelIndicatorType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOMAIN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMAIL_ADDRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HASH_MD5 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HASH_SHA1 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HASH_SHA256 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HASH_SHA512 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPV4_ADDRESS = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPV6_ADDRESS = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MUTEX = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROCESS = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		URL = 10,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ThreatIntelIndicatorCategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BACKDOOR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CARD_STEALER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMMAND_AND_CONTROL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DROP_SITE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXPLOIT_SITE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KEYLOGGER = 5,
	}
	
	/// <summary>
	/// Details about the threat intelligence related to a finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ThreatIntelIndicator
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ThreatIntelIndicatorType Type { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ThreatIntelIndicatorCategory Category { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string LastObservedAt { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Source { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SourceUrl { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ThreatIntelIndicatorType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOMAIN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMAIL_ADDRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HASH_MD5 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HASH_SHA1 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HASH_SHA256 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HASH_SHA512 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPV4_ADDRESS = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPV6_ADDRESS = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MUTEX = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROCESS = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		URL = 10,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ThreatIntelIndicatorCategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BACKDOOR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CARD_STEALER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMMAND_AND_CONTROL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DROP_SITE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXPLOIT_SITE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KEYLOGGER = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateActionTargetRequest
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateFindingsRequest
	{
		
		/// <summary>
		/// A collection of attributes that are applied to all active Security Hub-aggregated findings and that result in a subset of findings that are included in this insight.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AwsSecurityFindingFilters Filters { get; set; }
		
		/// <summary>
		/// The updated note.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public NoteUpdate Note { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpdateFindingsRequestRecordState RecordState { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateFindingsRequestRecordState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARCHIVED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateInsightRequest
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// A collection of attributes that are applied to all active Security Hub-aggregated findings and that result in a subset of findings that are included in this insight.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AwsSecurityFindingFilters Filters { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string GroupByAttribute { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateStandardsControlRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UpdateStandardsControlRequestControlStatus ControlStatus { get; set; }
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DisabledReason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateStandardsControlRequestControlStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
	}
	
	/// <summary>
	/// Details about a rule to exclude from a rule group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class WafExcludedRule
	{
		
		/// <summary>
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RuleId { get; set; }
	}
	
	public partial class DemoClient
	{
		
		private System.Net.Http.HttpClient client;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public DemoClient(System.Net.Http.HttpClient client, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (client == null)
				throw new ArgumentNullException("Null HttpClient.", "client");

			if (client.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "client");

			this.client = client;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// <p>Accepts the invitation to be a member account and be monitored by the Security Hub master account that the invitation was sent from.</p> <p>When the member account accepts the invitation, permission is granted to the master account to view findings generated in the member account.</p>
		/// AcceptInvitation /master
		/// </summary>
		/// <returns>Success</returns>
		public async Task<AcceptInvitationResponse> AcceptInvitationAsync(AcceptInvitationBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/master";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<AcceptInvitationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Provides the details for the Security Hub master account for the current member account.
		/// GetMasterAccount /master
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetMasterAccountResponse> GetMasterAccountAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/master";
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetMasterAccountResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Disables the standards specified by the provided <code>StandardsSubscriptionArns</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards.html">Security Standards</a> section of the <i>AWS Security Hub User Guide</i>.</p>
		/// BatchDisableStandards /standards/deregister
		/// </summary>
		/// <returns>Success</returns>
		public async Task<BatchDisableStandardsResponse> BatchDisableStandardsAsync(BatchDisableStandardsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/standards/deregister";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<BatchDisableStandardsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Enables the standards specified by the provided <code>StandardsArn</code>. To obtain the ARN for a standard, use the <code> <a>DescribeStandards</a> </code> operation.</p> <p>For more information, see the <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards.html">Security Standards</a> section of the <i>AWS Security Hub User Guide</i>.</p>
		/// BatchEnableStandards /standards/register
		/// </summary>
		/// <returns>Success</returns>
		public async Task<BatchEnableStandardsResponse> BatchEnableStandardsAsync(BatchEnableStandardsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/standards/register";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<BatchEnableStandardsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Imports security findings generated from an integrated third-party product into Security Hub. This action is requested by the integrated product to import its findings into Security Hub.</p> <p>The maximum allowed size for a finding is 240 Kb. An error is returned for any finding larger than 240 Kb.</p> <p>After a finding is created, <code>BatchImportFindings</code> cannot be used to update the following finding fields and objects, which Security Hub customers use to manage their investigation workflow.</p> <ul> <li> <p> <code>Confidence</code> </p> </li> <li> <p> <code>Criticality</code> </p> </li> <li> <p> <code>Note</code> </p> </li> <li> <p> <code>RelatedFindings</code> </p> </li> <li> <p> <code>Severity</code> </p> </li> <li> <p> <code>Types</code> </p> </li> <li> <p> <code>UserDefinedFields</code> </p> </li> <li> <p> <code>VerificationState</code> </p> </li> <li> <p> <code>Workflow</code> </p> </li> </ul>
		/// BatchImportFindings /findings/import
		/// </summary>
		/// <returns>Success</returns>
		public async Task<BatchImportFindingsResponse> BatchImportFindingsAsync(BatchImportFindingsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/findings/import";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<BatchImportFindingsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a custom action target in Security Hub.</p> <p>You can use custom actions on findings and insights in Security Hub to trigger target actions in Amazon CloudWatch Events.</p>
		/// CreateActionTarget /actionTargets
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateActionTargetResponse> CreateActionTargetAsync(CreateActionTargetBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/actionTargets";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateActionTargetResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a custom insight in Security Hub. An insight is a consolidation of findings that relate to a security issue that requires attention or remediation.</p> <p>To group the related findings in the insight, use the <code>GroupByAttribute</code>.</p>
		/// CreateInsight /insights
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateInsightResponse> CreateInsightAsync(CreateInsightBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/insights";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateInsightResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a member association in Security Hub between the specified accounts and the account used to make the request, which is the master account. To successfully create a member, you must use this action from an account that already has Security Hub enabled. To enable Security Hub, you can use the <code> <a>EnableSecurityHub</a> </code> operation.</p> <p>After you use <code>CreateMembers</code> to create member account associations in Security Hub, you must use the <code> <a>InviteMembers</a> </code> operation to invite the accounts to enable Security Hub and become member accounts in Security Hub.</p> <p>If the account owner accepts the invitation, the account becomes a member account in Security Hub. A permissions policy is added that permits the master account to view the findings generated in the member account. When Security Hub is enabled in the invited account, findings start to be sent to both the member and master accounts.</p> <p>To remove the association between the master and member accounts, use the <code> <a>DisassociateFromMasterAccount</a> </code> or <code> <a>DisassociateMembers</a> </code> operation.</p>
		/// CreateMembers /members
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateMembersResponse> CreateMembersAsync(CreateMembersBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/members";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateMembersResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists details about all member accounts for the current Security Hub master account.
		/// ListMembers /members
		/// </summary>
		/// <param name="OnlyAssociated"><p>Specifies which member accounts to include in the response based on their relationship status with the master account. The default value is <code>TRUE</code>.</p> <p>If <code>OnlyAssociated</code> is set to <code>TRUE</code>, the response includes member accounts whose relationship status with the master is set to <code>ENABLED</code> or <code>DISABLED</code>.</p> <p>If <code>OnlyAssociated</code> is set to <code>FALSE</code>, the response includes all existing member accounts. </p></param>
		/// <param name="MaxResults">The maximum number of items to return in the response. </param>
		/// <param name="NextToken"><p>The token that is required for pagination. On your first call to the <code>ListMembers</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p></param>
		/// <returns>Success</returns>
		public async Task<ListMembersResponse> ListMembersAsync(bool OnlyAssociated, int MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/members?OnlyAssociated="+OnlyAssociated+"&MaxResults="+MaxResults+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListMembersResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Declines invitations to become a member account.
		/// DeclineInvitations /invitations/decline
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeclineInvitationsResponse> DeclineInvitationsAsync(DeclineInvitationsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/invitations/decline";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeclineInvitationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a custom action target from Security Hub.</p> <p>Deleting a custom action target does not affect any findings or insights that were already sent to Amazon CloudWatch Events using the custom action.</p>
		/// DeleteActionTarget /actionTargets/{ActionTargetArn}
		/// </summary>
		/// <param name="ActionTargetArn">The ARN of the custom action target to delete.</param>
		/// <returns>Success</returns>
		public async Task<DeleteActionTargetResponse> DeleteActionTargetAsync(string ActionTargetArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/actionTargets/"+ (ActionTargetArn==null? "" : Uri.EscapeDataString(ActionTargetArn));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteActionTargetResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes the insight specified by the <code>InsightArn</code>.
		/// DeleteInsight /insights/{InsightArn}
		/// </summary>
		/// <param name="InsightArn">The ARN of the insight to delete.</param>
		/// <returns>Success</returns>
		public async Task<DeleteInsightResponse> DeleteInsightAsync(string InsightArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/insights/"+ (InsightArn==null? "" : Uri.EscapeDataString(InsightArn));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteInsightResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes invitations received by the AWS account to become a member account.
		/// DeleteInvitations /invitations/delete
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteInvitationsResponse> DeleteInvitationsAsync(DeleteInvitationsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/invitations/delete";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteInvitationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes the specified member accounts from Security Hub.
		/// DeleteMembers /members/delete
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteMembersResponse> DeleteMembersAsync(DeleteMembersBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/members/delete";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteMembersResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns a list of the custom action targets in Security Hub in your account.
		/// DescribeActionTargets /actionTargets/get
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeActionTargetsResponse> DescribeActionTargetsAsync(string MaxResults, string NextToken, DescribeActionTargetsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/actionTargets/get?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeActionTargetsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns details about the Hub resource in your account, including the <code>HubArn</code> and the time when you enabled Security Hub.
		/// DescribeHub /accounts
		/// </summary>
		/// <param name="HubArn">The ARN of the Hub resource to retrieve.</param>
		/// <returns>Success</returns>
		public async Task<DescribeHubResponse> DescribeHubAsync(string HubArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/accounts?HubArn=" + (HubArn==null? "" : Uri.EscapeDataString(HubArn));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeHubResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Disables Security Hub in your account only in the current Region. To disable Security Hub in all Regions, you must submit one request per Region where you have enabled Security Hub.</p> <p>When you disable Security Hub for a master account, it doesn't disable Security Hub for any associated member accounts.</p> <p>When you disable Security Hub, your existing findings and insights and any Security Hub configuration settings are deleted after 90 days and cannot be recovered. Any standards that were enabled are disabled, and your master and member account associations are removed.</p> <p>If you want to save your existing findings, you must export them before you disable Security Hub.</p>
		/// DisableSecurityHub /accounts
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DisableSecurityHubResponse> DisableSecurityHubAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/accounts";
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DisableSecurityHubResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Enables Security Hub for your account in the current Region or the Region you specify in the request.</p> <p>When you enable Security Hub, you grant to Security Hub the permissions necessary to gather findings from other services that are integrated with Security Hub.</p> <p>When you use the <code>EnableSecurityHub</code> operation to enable Security Hub, you also automatically enable the following standards.</p> <ul> <li> <p>CIS AWS Foundations</p> </li> <li> <p>AWS Foundational Security Best Practices</p> </li> </ul> <p>You do not enable the Payment Card Industry Data Security Standard (PCI DSS) standard. </p> <p>To not enable the automatically enabled standards, set <code>EnableDefaultStandards</code> to <code>false</code>.</p> <p>After you enable Security Hub, to enable a standard, use the <code> <a>BatchEnableStandards</a> </code> operation. To disable a standard, use the <code> <a>BatchDisableStandards</a> </code> operation.</p> <p>To learn more, see <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-settingup.html">Setting Up AWS Security Hub</a> in the <i>AWS Security Hub User Guide</i>.</p>
		/// EnableSecurityHub /accounts
		/// </summary>
		/// <returns>Success</returns>
		public async Task<EnableSecurityHubResponse> EnableSecurityHubAsync(EnableSecurityHubBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/accounts";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<EnableSecurityHubResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns information about the available products that you can subscribe to and integrate with Security Hub in order to consolidate findings.
		/// DescribeProducts /products
		/// </summary>
		/// <param name="NextToken"><p>The token that is required for pagination. On your first call to the <code>DescribeProducts</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p></param>
		/// <param name="MaxResults">The maximum number of results to return.</param>
		/// <returns>Success</returns>
		public async Task<DescribeProductsResponse> DescribeProductsAsync(string NextToken, int MaxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/products?NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken))+"&MaxResults="+MaxResults;
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeProductsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns a list of the available standards in Security Hub.</p> <p>For each standard, the results include the standard ARN, the name, and a description. </p>
		/// DescribeStandards /standards
		/// </summary>
		/// <param name="NextToken"><p>The token that is required for pagination. On your first call to the <code>DescribeStandards</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p></param>
		/// <param name="MaxResults">The maximum number of standards to return.</param>
		/// <returns>Success</returns>
		public async Task<DescribeStandardsResponse> DescribeStandardsAsync(string NextToken, int MaxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/standards?NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken))+"&MaxResults="+MaxResults;
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeStandardsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns a list of security standards controls.</p> <p>For each control, the results include information about whether it is currently enabled, the severity, and a link to remediation information.</p>
		/// DescribeStandardsControls /standards/controls/{StandardsSubscriptionArn}
		/// </summary>
		/// <param name="StandardsSubscriptionArn">The ARN of a resource that represents your subscription to a supported standard.</param>
		/// <param name="NextToken"><p>The token that is required for pagination. On your first call to the <code>DescribeStandardsControls</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p></param>
		/// <param name="MaxResults">The maximum number of security standard controls to return.</param>
		/// <returns>Success</returns>
		public async Task<DescribeStandardsControlsResponse> DescribeStandardsControlsAsync(string StandardsSubscriptionArn, string NextToken, int MaxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/standards/controls/"+ (StandardsSubscriptionArn==null? "" : Uri.EscapeDataString(StandardsSubscriptionArn))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken))+"&MaxResults="+MaxResults;
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeStandardsControlsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Disables the integration of the specified product with Security Hub. After the integration is disabled, findings from that product are no longer sent to Security Hub.
		/// DisableImportFindingsForProduct /productSubscriptions/{ProductSubscriptionArn}
		/// </summary>
		/// <param name="ProductSubscriptionArn">The ARN of the integrated product to disable the integration for.</param>
		/// <returns>Success</returns>
		public async Task<DisableImportFindingsForProductResponse> DisableImportFindingsForProductAsync(string ProductSubscriptionArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/productSubscriptions/"+ (ProductSubscriptionArn==null? "" : Uri.EscapeDataString(ProductSubscriptionArn));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DisableImportFindingsForProductResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Disassociates the current Security Hub member account from the associated master account.
		/// DisassociateFromMasterAccount /master/disassociate
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DisassociateFromMasterAccountResponse> DisassociateFromMasterAccountAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/master/disassociate";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DisassociateFromMasterAccountResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Disassociates the specified member accounts from the associated master account.
		/// DisassociateMembers /members/disassociate
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DisassociateMembersResponse> DisassociateMembersAsync(DisassociateMembersBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/members/disassociate";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DisassociateMembersResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Enables the integration of a partner product with Security Hub. Integrated products send findings to Security Hub.</p> <p>When you enable a product integration, a permissions policy that grants permission for the product to send findings to Security Hub is applied.</p>
		/// EnableImportFindingsForProduct /productSubscriptions
		/// </summary>
		/// <returns>Success</returns>
		public async Task<EnableImportFindingsForProductResponse> EnableImportFindingsForProductAsync(EnableImportFindingsForProductBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/productSubscriptions";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<EnableImportFindingsForProductResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all findings-generating solutions (products) that you are subscribed to receive findings from in Security Hub.
		/// ListEnabledProductsForImport /productSubscriptions
		/// </summary>
		/// <param name="NextToken"><p>The token that is required for pagination. On your first call to the <code>ListEnabledProductsForImport</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p></param>
		/// <param name="MaxResults">The maximum number of items to return in the response.</param>
		/// <returns>Success</returns>
		public async Task<ListEnabledProductsForImportResponse> ListEnabledProductsForImportAsync(string NextToken, int MaxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/productSubscriptions?NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken))+"&MaxResults="+MaxResults;
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListEnabledProductsForImportResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of the standards that are currently enabled.
		/// GetEnabledStandards /standards/get
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<GetEnabledStandardsResponse> GetEnabledStandardsAsync(string MaxResults, string NextToken, GetEnabledStandardsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/standards/get?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetEnabledStandardsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns a list of findings that match the specified criteria.
		/// GetFindings /findings
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<GetFindingsResponse> GetFindingsAsync(string MaxResults, string NextToken, GetFindingsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/findings?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetFindingsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists the results of the Security Hub insight specified by the insight ARN.
		/// GetInsightResults /insights/results/{InsightArn}
		/// </summary>
		/// <param name="InsightArn">The ARN of the insight for which to return results.</param>
		/// <returns>Success</returns>
		public async Task<GetInsightResultsResponse> GetInsightResultsAsync(string InsightArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/insights/results/"+ (InsightArn==null? "" : Uri.EscapeDataString(InsightArn));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetInsightResultsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists and describes insights for the specified insight ARNs.
		/// GetInsights /insights/get
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<GetInsightsResponse> GetInsightsAsync(string MaxResults, string NextToken, GetInsightsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/insights/get?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetInsightsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns the count of all Security Hub membership invitations that were sent to the current member account, not including the currently accepted invitation.
		/// GetInvitationsCount /invitations/count
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetInvitationsCountResponse> GetInvitationsCountAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/invitations/count";
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetInvitationsCountResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns the details for the Security Hub member accounts for the specified account IDs.
		/// GetMembers /members/get
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetMembersResponse> GetMembersAsync(GetMembersBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/members/get";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetMembersResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Invites other AWS accounts to become member accounts for the Security Hub master account that the invitation is sent from.</p> <p>Before you can use this action to invite a member, you must first use the <code> <a>CreateMembers</a> </code> action to create the member account in Security Hub.</p> <p>When the account owner accepts the invitation to become a member account and enables Security Hub, the master account can view the findings generated from the member account.</p>
		/// InviteMembers /members/invite
		/// </summary>
		/// <returns>Success</returns>
		public async Task<InviteMembersResponse> InviteMembersAsync(InviteMembersBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/members/invite";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<InviteMembersResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all Security Hub membership invitations that were sent to the current AWS account.
		/// ListInvitations /invitations
		/// </summary>
		/// <param name="MaxResults">The maximum number of items to return in the response. </param>
		/// <param name="NextToken"><p>The token that is required for pagination. On your first call to the <code>ListInvitations</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p></param>
		/// <returns>Success</returns>
		public async Task<ListInvitationsResponse> ListInvitationsAsync(int MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/invitations?MaxResults="+MaxResults+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListInvitationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of tags associated with a resource.
		/// ListTagsForResource /tags/{ResourceArn}
		/// </summary>
		/// <param name="ResourceArn">The ARN of the resource to retrieve tags for.</param>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceResponse> ListTagsForResourceAsync(string ResourceArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/tags/"+ (ResourceArn==null? "" : Uri.EscapeDataString(ResourceArn));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListTagsForResourceResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Adds one or more tags to a resource.
		/// TagResource /tags/{ResourceArn}
		/// </summary>
		/// <param name="ResourceArn">The ARN of the resource to apply the tags to.</param>
		/// <returns>Success</returns>
		public async Task<TagResourceResponse> TagResourceAsync(string ResourceArn, TagResourceBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/tags/"+ (ResourceArn==null? "" : Uri.EscapeDataString(ResourceArn));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<TagResourceResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Removes one or more tags from a resource.
		/// UntagResource /tags/{ResourceArn}#tagKeys
		/// </summary>
		/// <param name="ResourceArn">The ARN of the resource to remove the tags from.</param>
		/// <param name="tagKeys">The tag keys associated with the tags to remove from the resource.</param>
		/// <returns>Success</returns>
		public async Task<UntagResourceResponse> UntagResourceAsync(string ResourceArn, TagKey[] tagKeys, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/tags/"+ (ResourceArn==null? "" : Uri.EscapeDataString(ResourceArn))+"#tagKeys&"+String.Join("&", tagKeys.Select(z => $"tagKeys={z}"));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UntagResourceResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AcceptInvitationBody
	{
		
		/// <summary>
		/// The account ID of the Security Hub master account that sent the invitation.
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MasterId { get; set; }
		
		/// <summary>
		/// The ID of the invitation sent from the Security Hub master account.
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InvitationId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchDisableStandardsBody
	{
		
		/// <summary>
		/// The ARNs of the standards subscriptions to disable.
		/// Minimum items: 1
		/// Maximum items: 25
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(25)]
		public NonEmptyString[] StandardsSubscriptionArns { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchEnableStandardsBody
	{
		
		/// <summary>
		/// The list of standards checks to enable.
		/// Minimum items: 1
		/// Maximum items: 25
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(25)]
		public StandardsSubscriptionRequest[] StandardsSubscriptionRequests { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchImportFindingsBody
	{
		
		/// <summary>
		/// A list of findings to import. To successfully import a finding, it must follow the <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-findings-format.html">AWS Security Finding Format</a>. Maximum of 100 findings per request.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AwsSecurityFinding[] Findings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateActionTargetBody
	{
		
		/// <summary>
		/// The name of the custom action target.
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// The description for the custom action target.
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// The ID for the custom action target.
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateInsightBody
	{
		
		/// <summary>
		/// The name of the custom insight to create.
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// A collection of attributes that are applied to all active Security Hub-aggregated findings and that result in a subset of findings that are included in this insight.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Filters { get; set; }
		
		/// <summary>
		/// The attribute used to group the findings for the insight. The grouping attribute identifies the type of item that the insight applies to. For example, if an insight is grouped by resource identifier, then the insight produces a list of resource identifiers.
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string GroupByAttribute { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateMembersBody
	{
		
		/// <summary>
		/// The list of accounts to associate with the Security Hub master account. For each account, the list includes the account ID and the email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AccountDetails[] AccountDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeclineInvitationsBody
	{
		
		/// <summary>
		/// The list of account IDs for the accounts from which to decline the invitations to Security Hub.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] AccountIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteInvitationsBody
	{
		
		/// <summary>
		/// The list of the account IDs that sent the invitations to delete.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] AccountIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteMembersBody
	{
		
		/// <summary>
		/// The list of account IDs for the member accounts to delete.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] AccountIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeActionTargetsBody
	{
		
		/// <summary>
		/// A list of custom action target ARNs for the custom action targets to retrieve.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] ActionTargetArns { get; set; }
		
		/// <summary>
		/// <p>The token that is required for pagination. On your first call to the <code>DescribeActionTargets</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The maximum number of results to return.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EnableSecurityHubBody
	{
		
		/// <summary>
		/// The tags to add to the hub resource when you enable Security Hub.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Tags { get; set; }
		
		/// <summary>
		/// Whether to enable the security standards that Security Hub has designated as automatically enabled. If you do not provide a value for <code>EnableDefaultStandards</code>, it is set to <code>true</code>. To not enable the automatically enabled standards, set <code>EnableDefaultStandards</code> to <code>false</code>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableDefaultStandards { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DisassociateMembersBody
	{
		
		/// <summary>
		/// The account IDs of the member accounts to disassociate from the master account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] AccountIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EnableImportFindingsForProductBody
	{
		
		/// <summary>
		/// The ARN of the product to enable the integration for.
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ProductArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetEnabledStandardsBody
	{
		
		/// <summary>
		/// The list of the standards subscription ARNs for the standards to retrieve.
		/// Minimum items: 1
		/// Maximum items: 25
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(25)]
		public NonEmptyString[] StandardsSubscriptionArns { get; set; }
		
		/// <summary>
		/// <p>The token that is required for pagination. On your first call to the <code>GetEnabledStandards</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The maximum number of results to return in the response.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetFindingsBody
	{
		
		/// <summary>
		/// A collection of attributes that are applied to all active Security Hub-aggregated findings and that result in a subset of findings that are included in this insight.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Filters { get; set; }
		
		/// <summary>
		/// The finding attributes used to sort the list of returned findings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SortCriterion[] SortCriteria { get; set; }
		
		/// <summary>
		/// <p>The token that is required for pagination. On your first call to the <code>GetFindings</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The maximum number of findings to return.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetInsightsBody
	{
		
		/// <summary>
		/// The ARNs of the insights to describe. If you do not provide any insight ARNs, then <code>GetInsights</code> returns all of your custom insights. It does not return any managed insights.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] InsightArns { get; set; }
		
		/// <summary>
		/// <p>The token that is required for pagination. On your first call to the <code>GetInsights</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The maximum number of items to return in the response.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetMembersBody
	{
		
		/// <summary>
		/// The list of account IDs for the Security Hub member accounts to return the details for. 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] AccountIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InviteMembersBody
	{
		
		/// <summary>
		/// The list of account IDs of the AWS accounts to invite to Security Hub as members. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public NonEmptyString[] AccountIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TagResourceBody
	{
		
		/// <summary>
		/// The tags to add to the resource.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Tags { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}
