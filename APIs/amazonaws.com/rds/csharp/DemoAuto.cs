//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace My.Demo.Client
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Net.Http;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AddSourceIdentifierToSubscriptionResult
	{
		
		/// <summary>
		/// Contains the results of a successful invocation of the <code>DescribeEventSubscriptions</code> action.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EventSubscription EventSubscription { get; set; }
	}
	
	/// <summary>
	/// Metadata assigned to an Amazon RDS resource consisting of a key-value pair.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Tag
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ApplyPendingMaintenanceActionResult
	{
		
		/// <summary>
		/// Describes the pending maintenance actions for a resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourcePendingMaintenanceActions ResourcePendingMaintenanceActions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AuthorizeDBSecurityGroupIngressResult
	{
		
		/// <summary>
		/// <p>Contains the details for an Amazon RDS DB security group. </p> <p>This data type is used as a response element in the <code>DescribeDBSecurityGroups</code> action. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBSecurityGroup DBSecurityGroup { get; set; }
	}
	
	/// <summary>
	/// This data type is used as a response element in the <code>DescribeDBClusterBacktracks</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBClusterBacktrack
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BacktrackIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> BacktrackTo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> BacktrackedFrom { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> BacktrackRequestCreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the details of a snapshot export to Amazon S3. </p> <p>This data type is used as a response element in the <code>DescribeExportTasks</code> action. </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ExportTask
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ExportTaskIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] ExportOnly { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SnapshotTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> TaskStartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> TaskEndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Prefix { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IamRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PercentProgress { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalExtractedDataInGB { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FailureCause { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string WarningMessage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CopyDBClusterParameterGroupResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB cluster parameter group. </p> <p>This data type is used as a response element in the <code>DescribeDBClusterParameterGroups</code> action. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBClusterParameterGroup DBClusterParameterGroup { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CopyDBClusterSnapshotResult
	{
		
		/// <summary>
		/// <p>Contains the details for an Amazon RDS DB cluster snapshot </p> <p>This data type is used as a response element in the <code>DescribeDBClusterSnapshots</code> action. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBClusterSnapshot DBClusterSnapshot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CopyDBParameterGroupResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB parameter group. </p> <p>This data type is used as a response element in the <code>DescribeDBParameterGroups</code> action. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBParameterGroup DBParameterGroup { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CopyDBSnapshotResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB snapshot. </p> <p>This data type is used as a response element in the <code>DescribeDBSnapshots</code> action. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBSnapshot DBSnapshot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CopyOptionGroupResult
	{
		
		/// <summary>
		/// <p/>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OptionGroup OptionGroup { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateCustomAvailabilityZoneResult
	{
		
		/// <summary>
		/// <p>A custom Availability Zone (AZ) is an on-premises AZ that is integrated with a VMware vSphere cluster.</p> <p>For more information about RDS on VMware, see the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html"> <i>RDS on VMware User Guide.</i> </a> </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CustomAvailabilityZone CustomAvailabilityZone { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDBClusterResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon Aurora DB cluster. </p> <p>This data type is used as a response element in the <code>DescribeDBClusters</code>, <code>StopDBCluster</code>, and <code>StartDBCluster</code> actions. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBCluster DBCluster { get; set; }
	}
	
	/// <summary>
	/// <p>This data type represents the information you need to connect to an Amazon Aurora DB cluster. This data type is used as a response element in the following actions:</p> <ul> <li> <p> <code>CreateDBClusterEndpoint</code> </p> </li> <li> <p> <code>DescribeDBClusterEndpoints</code> </p> </li> <li> <p> <code>ModifyDBClusterEndpoint</code> </p> </li> <li> <p> <code>DeleteDBClusterEndpoint</code> </p> </li> </ul> <p>For the data structure that represents Amazon RDS DB instance endpoints, see <code>Endpoint</code>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBClusterEndpoint
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterEndpointIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterEndpointResourceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Endpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EndpointType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomEndpointType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] StaticMembers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] ExcludedMembers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterEndpointArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDBClusterParameterGroupResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB cluster parameter group. </p> <p>This data type is used as a response element in the <code>DescribeDBClusterParameterGroups</code> action. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBClusterParameterGroup DBClusterParameterGroup { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDBClusterSnapshotResult
	{
		
		/// <summary>
		/// <p>Contains the details for an Amazon RDS DB cluster snapshot </p> <p>This data type is used as a response element in the <code>DescribeDBClusterSnapshots</code> action. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBClusterSnapshot DBClusterSnapshot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDBInstanceResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB instance. </p> <p>This data type is used as a response element in the <code>DescribeDBInstances</code> action. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBInstance DBInstance { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the processor features of a DB instance class.</p> <p>To specify the number of CPU cores, use the <code>coreCount</code> feature name for the <code>Name</code> parameter. To specify the number of threads per core, use the <code>threadsPerCore</code> feature name for the <code>Name</code> parameter.</p> <p>You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:</p> <ul> <li> <p> <code>CreateDBInstance</code> </p> </li> <li> <p> <code>ModifyDBInstance</code> </p> </li> <li> <p> <code>RestoreDBInstanceFromDBSnapshot</code> </p> </li> <li> <p> <code>RestoreDBInstanceFromS3</code> </p> </li> <li> <p> <code>RestoreDBInstanceToPointInTime</code> </p> </li> </ul> <p>You can view the valid processor values for a particular instance class by calling the <code>DescribeOrderableDBInstanceOptions</code> action and specifying the instance class for the <code>DBInstanceClass</code> parameter.</p> <p>In addition, you can use the following actions for DB instance class processor information:</p> <ul> <li> <p> <code>DescribeDBInstances</code> </p> </li> <li> <p> <code>DescribeDBSnapshots</code> </p> </li> <li> <p> <code>DescribeValidDBInstanceModifications</code> </p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor">Configuring the Processor of the DB Instance Class</a> in the <i>Amazon RDS User Guide. </i> </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ProcessorFeature
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDBInstanceReadReplicaResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB instance. </p> <p>This data type is used as a response element in the <code>DescribeDBInstances</code> action. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBInstance DBInstance { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDBParameterGroupResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB parameter group. </p> <p>This data type is used as a response element in the <code>DescribeDBParameterGroups</code> action. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBParameterGroup DBParameterGroup { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDBProxyResponse
	{
		
		/// <summary>
		/// <note> <p>This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.</p> </note> <p>The data structure representing a proxy managed by the RDS Proxy.</p> <p>This data type is used as a response element in the <code>DescribeDBProxies</code> action.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBProxy DBProxy { get; set; }
	}
	
	/// <summary>
	/// <note> <p>This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.</p> </note> <p>Specifies the details of authentication used by a proxy to log in as a specific database user.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UserAuthConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UserName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserAuthConfigAuthScheme AuthScheme { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecretArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserAuthConfigIAMAuth IAMAuth { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UserAuthConfigAuthScheme
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SECRETS = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UserAuthConfigIAMAuth
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REQUIRED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDBSecurityGroupResult
	{
		
		/// <summary>
		/// <p>Contains the details for an Amazon RDS DB security group. </p> <p>This data type is used as a response element in the <code>DescribeDBSecurityGroups</code> action. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBSecurityGroup DBSecurityGroup { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDBSnapshotResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB snapshot. </p> <p>This data type is used as a response element in the <code>DescribeDBSnapshots</code> action. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBSnapshot DBSnapshot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDBSubnetGroupResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB subnet group. </p> <p>This data type is used as a response element in the <code>DescribeDBSubnetGroups</code> action. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBSubnetGroup DBSubnetGroup { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateEventSubscriptionResult
	{
		
		/// <summary>
		/// Contains the results of a successful invocation of the <code>DescribeEventSubscriptions</code> action.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EventSubscription EventSubscription { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateGlobalClusterResult
	{
		
		/// <summary>
		/// A data type representing an Aurora global database.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GlobalCluster GlobalCluster { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateOptionGroupResult
	{
		
		/// <summary>
		/// <p/>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OptionGroup OptionGroup { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteCustomAvailabilityZoneResult
	{
		
		/// <summary>
		/// <p>A custom Availability Zone (AZ) is an on-premises AZ that is integrated with a VMware vSphere cluster.</p> <p>For more information about RDS on VMware, see the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html"> <i>RDS on VMware User Guide.</i> </a> </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CustomAvailabilityZone CustomAvailabilityZone { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteDBClusterResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon Aurora DB cluster. </p> <p>This data type is used as a response element in the <code>DescribeDBClusters</code>, <code>StopDBCluster</code>, and <code>StartDBCluster</code> actions. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBCluster DBCluster { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteDBClusterSnapshotResult
	{
		
		/// <summary>
		/// <p>Contains the details for an Amazon RDS DB cluster snapshot </p> <p>This data type is used as a response element in the <code>DescribeDBClusterSnapshots</code> action. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBClusterSnapshot DBClusterSnapshot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteDBInstanceResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB instance. </p> <p>This data type is used as a response element in the <code>DescribeDBInstances</code> action. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBInstance DBInstance { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteDBInstanceAutomatedBackupResult
	{
		
		/// <summary>
		/// An automated backup of a DB instance. It it consists of system backups, transaction logs, and the database instance properties that existed at the time you deleted the source instance. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBInstanceAutomatedBackup DBInstanceAutomatedBackup { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteDBProxyResponse
	{
		
		/// <summary>
		/// <note> <p>This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.</p> </note> <p>The data structure representing a proxy managed by the RDS Proxy.</p> <p>This data type is used as a response element in the <code>DescribeDBProxies</code> action.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBProxy DBProxy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteDBSnapshotResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB snapshot. </p> <p>This data type is used as a response element in the <code>DescribeDBSnapshots</code> action. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBSnapshot DBSnapshot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteEventSubscriptionResult
	{
		
		/// <summary>
		/// Contains the results of a successful invocation of the <code>DescribeEventSubscriptions</code> action.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EventSubscription EventSubscription { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteGlobalClusterResult
	{
		
		/// <summary>
		/// A data type representing an Aurora global database.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GlobalCluster GlobalCluster { get; set; }
	}
	
	/// <summary>
	/// Contains the installation media for a DB engine that requires an on-premises customer provided license, such as Microsoft SQL Server.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InstallationMedia
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InstallationMediaId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomAvailabilityZoneId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineInstallationMediaPath { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OSInstallationMediaPath { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		/// <summary>
		/// Contains the cause of an installation media failure. Installation media is used for a DB engine that requires an on-premises customer provided license, such as Microsoft SQL Server.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InstallationMediaFailureCause FailureCause { get; set; }
	}
	
	/// <summary>
	/// Data returned by the <b>DescribeAccountAttributes</b> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AccountAttributesMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AccountQuota[] AccountQuotas { get; set; }
	}
	
	/// <summary>
	/// Data returned by the <b>DescribeCertificates</b> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CertificateMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Certificate[] Certificates { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p>A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.</p> <note> <p>Currently, wildcards are not supported in filters.</p> </note> <p>The following actions can be filtered:</p> <ul> <li> <p> <code>DescribeDBClusterBacktracks</code> </p> </li> <li> <p> <code>DescribeDBClusterEndpoints</code> </p> </li> <li> <p> <code>DescribeDBClusters</code> </p> </li> <li> <p> <code>DescribeDBInstances</code> </p> </li> <li> <p> <code>DescribePendingMaintenanceActions</code> </p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Filter
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public String[] Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CustomAvailabilityZoneMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomAvailabilityZone[] CustomAvailabilityZones { get; set; }
	}
	
	/// <summary>
	/// Contains the result of a successful invocation of the <code>DescribeDBClusterBacktracks</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBClusterBacktrackMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBClusterBacktrack[] DBClusterBacktracks { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBClusterEndpointMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBClusterEndpoint[] DBClusterEndpoints { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBClusterParameterGroupsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBClusterParameterGroup[] DBClusterParameterGroups { get; set; }
	}
	
	/// <summary>
	/// Provides details about a DB cluster parameter group including the parameters in the DB cluster parameter group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBClusterParameterGroupDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDBClusterSnapshotAttributesResult
	{
		
		/// <summary>
		/// <p>Contains the results of a successful call to the <code>DescribeDBClusterSnapshotAttributes</code> API action.</p> <p>Manual DB cluster snapshot attributes are used to authorize other AWS accounts to copy or restore a manual DB cluster snapshot. For more information, see the <code>ModifyDBClusterSnapshotAttribute</code> API action.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBClusterSnapshotAttributesResult DBClusterSnapshotAttributesResult { get; set; }
	}
	
	/// <summary>
	///  Provides a list of DB cluster snapshots for the user as the result of a call to the <code>DescribeDBClusterSnapshots</code> action. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBClusterSnapshotMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBClusterSnapshot[] DBClusterSnapshots { get; set; }
	}
	
	/// <summary>
	/// Contains the result of a successful invocation of the <code>DescribeDBClusters</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBClusterMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBCluster[] DBClusters { get; set; }
	}
	
	/// <summary>
	///  Contains the result of a successful invocation of the <code>DescribeDBEngineVersions</code> action. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBEngineVersionMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBEngineVersion[] DBEngineVersions { get; set; }
	}
	
	/// <summary>
	///  Contains the result of a successful invocation of the <code>DescribeDBInstanceAutomatedBackups</code> action. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBInstanceAutomatedBackupMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBInstanceAutomatedBackup[] DBInstanceAutomatedBackups { get; set; }
	}
	
	/// <summary>
	///  Contains the result of a successful invocation of the <code>DescribeDBInstances</code> action. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBInstanceMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBInstance[] DBInstances { get; set; }
	}
	
	/// <summary>
	///  The response from a call to <code>DescribeDBLogFiles</code>. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDBLogFilesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeDBLogFilesDetails[] DescribeDBLogFiles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	///  Contains the result of a successful invocation of the <code>DescribeDBParameterGroups</code> action. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBParameterGroupsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBParameterGroup[] DBParameterGroups { get; set; }
	}
	
	/// <summary>
	///  Contains the result of a successful invocation of the <code>DescribeDBParameters</code> action. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBParameterGroupDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDBProxiesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DBProxy[] DBProxies { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDBProxyTargetGroupsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DBProxyTargetGroup[] TargetGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDBProxyTargetsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DBProxyTarget[] Targets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	///  Contains the result of a successful invocation of the <code>DescribeDBSecurityGroups</code> action. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBSecurityGroupMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBSecurityGroup[] DBSecurityGroups { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDBSnapshotAttributesResult
	{
		
		/// <summary>
		/// <p>Contains the results of a successful call to the <code>DescribeDBSnapshotAttributes</code> API action.</p> <p>Manual DB snapshot attributes are used to authorize other AWS accounts to copy or restore a manual DB snapshot. For more information, see the <code>ModifyDBSnapshotAttribute</code> API action.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBSnapshotAttributesResult DBSnapshotAttributesResult { get; set; }
	}
	
	/// <summary>
	///  Contains the result of a successful invocation of the <code>DescribeDBSnapshots</code> action. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBSnapshotMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBSnapshot[] DBSnapshots { get; set; }
	}
	
	/// <summary>
	///  Contains the result of a successful invocation of the <code>DescribeDBSubnetGroups</code> action. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBSubnetGroupMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBSubnetGroup[] DBSubnetGroups { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeEngineDefaultClusterParametersResult
	{
		
		/// <summary>
		///  Contains the result of a successful invocation of the <code>DescribeEngineDefaultParameters</code> action. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EngineDefaults EngineDefaults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeEngineDefaultParametersResult
	{
		
		/// <summary>
		///  Contains the result of a successful invocation of the <code>DescribeEngineDefaultParameters</code> action. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EngineDefaults EngineDefaults { get; set; }
	}
	
	/// <summary>
	/// Data returned from the <b>DescribeEventCategories</b> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EventCategoriesMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EventCategoriesMap[] EventCategoriesMapList { get; set; }
	}
	
	/// <summary>
	/// Data returned by the <b>DescribeEventSubscriptions</b> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EventSubscriptionsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EventSubscription[] EventSubscriptionsList { get; set; }
	}
	
	/// <summary>
	///  Contains the result of a successful invocation of the <code>DescribeEvents</code> action. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EventsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Event[] Events { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ExportTasksMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExportTask[] ExportTasks { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GlobalClustersMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GlobalCluster[] GlobalClusters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InstallationMediaMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstallationMedia[] InstallationMedia { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class OptionGroupOptionsMessage
	{
		
		/// <summary>
		/// List of available option group options.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OptionGroupOption[] OptionGroupOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// List of option groups.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class OptionGroups
	{
		
		[System.Runtime.Serialization.DataMember()]
		public OptionGroup[] OptionGroupsList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	///  Contains the result of a successful invocation of the <code>DescribeOrderableDBInstanceOptions</code> action. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class OrderableDBInstanceOptionsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public OrderableDBInstanceOption[] OrderableDBInstanceOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// Data returned from the <b>DescribePendingMaintenanceActions</b> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PendingMaintenanceActionsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePendingMaintenanceActions[] PendingMaintenanceActions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	///  Contains the result of a successful invocation of the <code>DescribeReservedDBInstances</code> action. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ReservedDBInstanceMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReservedDBInstance[] ReservedDBInstances { get; set; }
	}
	
	/// <summary>
	///  Contains the result of a successful invocation of the <code>DescribeReservedDBInstancesOfferings</code> action. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ReservedDBInstancesOfferingMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReservedDBInstancesOffering[] ReservedDBInstancesOfferings { get; set; }
	}
	
	/// <summary>
	/// Contains the result of a successful invocation of the <code>DescribeSourceRegions</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SourceRegionMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SourceRegion[] SourceRegions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeValidDBInstanceModificationsResult
	{
		
		/// <summary>
		/// Information about valid modifications that you can make to your DB instance. Contains the result of a successful call to the <code>DescribeValidDBInstanceModifications</code> action. You can use this information when you call <code>ModifyDBInstance</code>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ValidDBInstanceModificationsMessage ValidDBInstanceModificationsMessage { get; set; }
	}
	
	/// <summary>
	/// This data type is used as a response element to <code>DownloadDBLogFilePortion</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DownloadDBLogFilePortionDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LogFileData { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AdditionalDataPending { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FailoverDBClusterResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon Aurora DB cluster. </p> <p>This data type is used as a response element in the <code>DescribeDBClusters</code>, <code>StopDBCluster</code>, and <code>StartDBCluster</code> actions. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBCluster DBCluster { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TagListMessage
	{
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] TagList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModifyCertificatesResult
	{
		
		/// <summary>
		/// A CA certificate for an AWS account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Certificate Certificate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBClusterCapacityInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PendingCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CurrentCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SecondsBeforeTimeout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TimeoutAction { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModifyDBClusterResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon Aurora DB cluster. </p> <p>This data type is used as a response element in the <code>DescribeDBClusters</code>, <code>StopDBCluster</code>, and <code>StartDBCluster</code> actions. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBCluster DBCluster { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBClusterParameterGroupNameMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupName { get; set; }
	}
	
	/// <summary>
	/// <p> This data type is used as a request parameter in the <code>ModifyDBParameterGroup</code> and <code>ResetDBParameterGroup</code> actions. </p> <p>This data type is used as a response element in the <code>DescribeEngineDefaultParameters</code> and <code>DescribeDBParameters</code> actions.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Parameter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ParameterName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ParameterValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Source { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplyType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AllowedValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsModifiable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MinimumEngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ParameterApplyMethod ApplyMethod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] SupportedEngineModes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ParameterApplyMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		immediate = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending-reboot = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModifyDBClusterSnapshotAttributeResult
	{
		
		/// <summary>
		/// <p>Contains the results of a successful call to the <code>DescribeDBClusterSnapshotAttributes</code> API action.</p> <p>Manual DB cluster snapshot attributes are used to authorize other AWS accounts to copy or restore a manual DB cluster snapshot. For more information, see the <code>ModifyDBClusterSnapshotAttribute</code> API action.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBClusterSnapshotAttributesResult DBClusterSnapshotAttributesResult { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModifyDBInstanceResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB instance. </p> <p>This data type is used as a response element in the <code>DescribeDBInstances</code> action. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBInstance DBInstance { get; set; }
	}
	
	/// <summary>
	///  Contains the result of a successful invocation of the <code>ModifyDBParameterGroup</code> or <code>ResetDBParameterGroup</code> action. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBParameterGroupNameMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModifyDBProxyResponse
	{
		
		/// <summary>
		/// <note> <p>This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.</p> </note> <p>The data structure representing a proxy managed by the RDS Proxy.</p> <p>This data type is used as a response element in the <code>DescribeDBProxies</code> action.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBProxy DBProxy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModifyDBProxyTargetGroupResponse
	{
		
		/// <summary>
		/// <note> <p>This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.</p> </note> <p>Represents a set of RDS DB instances, Aurora DB clusters, or both that a proxy can connect to. Currently, each target group is associated with exactly one RDS DB instance or Aurora DB cluster.</p> <p>This data type is used as a response element in the <code>DescribeDBProxyTargetGroups</code> action.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBProxyTargetGroup DBProxyTargetGroup { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModifyDBSnapshotResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB snapshot. </p> <p>This data type is used as a response element in the <code>DescribeDBSnapshots</code> action. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBSnapshot DBSnapshot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModifyDBSnapshotAttributeResult
	{
		
		/// <summary>
		/// <p>Contains the results of a successful call to the <code>DescribeDBSnapshotAttributes</code> API action.</p> <p>Manual DB snapshot attributes are used to authorize other AWS accounts to copy or restore a manual DB snapshot. For more information, see the <code>ModifyDBSnapshotAttribute</code> API action.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBSnapshotAttributesResult DBSnapshotAttributesResult { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModifyDBSubnetGroupResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB subnet group. </p> <p>This data type is used as a response element in the <code>DescribeDBSubnetGroups</code> action. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBSubnetGroup DBSubnetGroup { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModifyEventSubscriptionResult
	{
		
		/// <summary>
		/// Contains the results of a successful invocation of the <code>DescribeEventSubscriptions</code> action.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EventSubscription EventSubscription { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModifyGlobalClusterResult
	{
		
		/// <summary>
		/// A data type representing an Aurora global database.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GlobalCluster GlobalCluster { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModifyOptionGroupResult
	{
		
		/// <summary>
		/// <p/>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OptionGroup OptionGroup { get; set; }
	}
	
	/// <summary>
	/// A list of all available options
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class OptionConfiguration
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OptionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] DBSecurityGroupMemberships { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] VpcSecurityGroupMemberships { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OptionSetting[] OptionSettings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PromoteReadReplicaResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB instance. </p> <p>This data type is used as a response element in the <code>DescribeDBInstances</code> action. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBInstance DBInstance { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PromoteReadReplicaDBClusterResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon Aurora DB cluster. </p> <p>This data type is used as a response element in the <code>DescribeDBClusters</code>, <code>StopDBCluster</code>, and <code>StartDBCluster</code> actions. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBCluster DBCluster { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PurchaseReservedDBInstancesOfferingResult
	{
		
		/// <summary>
		///  This data type is used as a response element in the <code>DescribeReservedDBInstances</code> and <code>PurchaseReservedDBInstancesOffering</code> actions. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ReservedDBInstance ReservedDBInstance { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RebootDBInstanceResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB instance. </p> <p>This data type is used as a response element in the <code>DescribeDBInstances</code> action. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBInstance DBInstance { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RegisterDBProxyTargetsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DBProxyTarget[] DBProxyTargets { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RemoveFromGlobalClusterResult
	{
		
		/// <summary>
		/// A data type representing an Aurora global database.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GlobalCluster GlobalCluster { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RemoveSourceIdentifierFromSubscriptionResult
	{
		
		/// <summary>
		/// Contains the results of a successful invocation of the <code>DescribeEventSubscriptions</code> action.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EventSubscription EventSubscription { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RestoreDBClusterFromS3Result
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon Aurora DB cluster. </p> <p>This data type is used as a response element in the <code>DescribeDBClusters</code>, <code>StopDBCluster</code>, and <code>StartDBCluster</code> actions. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBCluster DBCluster { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RestoreDBClusterFromSnapshotResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon Aurora DB cluster. </p> <p>This data type is used as a response element in the <code>DescribeDBClusters</code>, <code>StopDBCluster</code>, and <code>StartDBCluster</code> actions. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBCluster DBCluster { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RestoreDBClusterToPointInTimeResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon Aurora DB cluster. </p> <p>This data type is used as a response element in the <code>DescribeDBClusters</code>, <code>StopDBCluster</code>, and <code>StartDBCluster</code> actions. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBCluster DBCluster { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RestoreDBInstanceFromDBSnapshotResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB instance. </p> <p>This data type is used as a response element in the <code>DescribeDBInstances</code> action. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBInstance DBInstance { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RestoreDBInstanceFromS3Result
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB instance. </p> <p>This data type is used as a response element in the <code>DescribeDBInstances</code> action. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBInstance DBInstance { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RestoreDBInstanceToPointInTimeResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB instance. </p> <p>This data type is used as a response element in the <code>DescribeDBInstances</code> action. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBInstance DBInstance { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RevokeDBSecurityGroupIngressResult
	{
		
		/// <summary>
		/// <p>Contains the details for an Amazon RDS DB security group. </p> <p>This data type is used as a response element in the <code>DescribeDBSecurityGroups</code> action. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBSecurityGroup DBSecurityGroup { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartActivityStreamResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KinesisStreamName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StartActivityStreamResponseStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StartActivityStreamResponseMode Mode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApplyImmediately { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StartActivityStreamResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		stopped = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		starting = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		started = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		stopping = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StartActivityStreamResponseMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sync = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		async = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartDBClusterResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon Aurora DB cluster. </p> <p>This data type is used as a response element in the <code>DescribeDBClusters</code>, <code>StopDBCluster</code>, and <code>StartDBCluster</code> actions. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBCluster DBCluster { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartDBInstanceResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB instance. </p> <p>This data type is used as a response element in the <code>DescribeDBInstances</code> action. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBInstance DBInstance { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopActivityStreamResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KinesisStreamName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StopActivityStreamResponseStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StopActivityStreamResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		stopped = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		starting = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		started = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		stopping = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopDBClusterResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon Aurora DB cluster. </p> <p>This data type is used as a response element in the <code>DescribeDBClusters</code>, <code>StopDBCluster</code>, and <code>StartDBCluster</code> actions. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBCluster DBCluster { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopDBInstanceResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB instance. </p> <p>This data type is used as a response element in the <code>DescribeDBInstances</code> action. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBInstance DBInstance { get; set; }
	}
	
	/// <summary>
	/// <p>Describes a quota for an AWS account.</p> <p>The following are account quotas:</p> <ul> <li> <p> <code>AllocatedStorage</code> - The total allocated storage per account, in GiB. The used value is the total allocated storage in the account, in GiB.</p> </li> <li> <p> <code>AuthorizationsPerDBSecurityGroup</code> - The number of ingress rules per DB security group. The used value is the highest number of ingress rules in a DB security group in the account. Other DB security groups in the account might have a lower number of ingress rules.</p> </li> <li> <p> <code>CustomEndpointsPerDBCluster</code> - The number of custom endpoints per DB cluster. The used value is the highest number of custom endpoints in a DB clusters in the account. Other DB clusters in the account might have a lower number of custom endpoints.</p> </li> <li> <p> <code>DBClusterParameterGroups</code> - The number of DB cluster parameter groups per account, excluding default parameter groups. The used value is the count of nondefault DB cluster parameter groups in the account.</p> </li> <li> <p> <code>DBClusterRoles</code> - The number of associated AWS Identity and Access Management (IAM) roles per DB cluster. The used value is the highest number of associated IAM roles for a DB cluster in the account. Other DB clusters in the account might have a lower number of associated IAM roles.</p> </li> <li> <p> <code>DBClusters</code> - The number of DB clusters per account. The used value is the count of DB clusters in the account.</p> </li> <li> <p> <code>DBInstanceRoles</code> - The number of associated IAM roles per DB instance. The used value is the highest number of associated IAM roles for a DB instance in the account. Other DB instances in the account might have a lower number of associated IAM roles.</p> </li> <li> <p> <code>DBInstances</code> - The number of DB instances per account. The used value is the count of the DB instances in the account.</p> <p>Amazon RDS DB instances, Amazon Aurora DB instances, Amazon Neptune instances, and Amazon DocumentDB instances apply to this quota.</p> </li> <li> <p> <code>DBParameterGroups</code> - The number of DB parameter groups per account, excluding default parameter groups. The used value is the count of nondefault DB parameter groups in the account.</p> </li> <li> <p> <code>DBSecurityGroups</code> - The number of DB security groups (not VPC security groups) per account, excluding the default security group. The used value is the count of nondefault DB security groups in the account.</p> </li> <li> <p> <code>DBSubnetGroups</code> - The number of DB subnet groups per account. The used value is the count of the DB subnet groups in the account.</p> </li> <li> <p> <code>EventSubscriptions</code> - The number of event subscriptions per account. The used value is the count of the event subscriptions in the account.</p> </li> <li> <p> <code>ManualSnapshots</code> - The number of manual DB snapshots per account. The used value is the count of the manual DB snapshots in the account.</p> </li> <li> <p> <code>OptionGroups</code> - The number of DB option groups per account, excluding default option groups. The used value is the count of nondefault DB option groups in the account.</p> </li> <li> <p> <code>ReadReplicasPerMaster</code> - The number of read replicas per DB instance. The used value is the highest number of read replicas for a DB instance in the account. Other DB instances in the account might have a lower number of read replicas.</p> </li> <li> <p> <code>ReservedDBInstances</code> - The number of reserved DB instances per account. The used value is the count of the active reserved DB instances in the account.</p> </li> <li> <p> <code>SubnetsPerDBSubnetGroup</code> - The number of subnets per DB subnet group. The used value is highest number of subnets for a DB subnet group in the account. Other DB subnet groups in the account might have a lower number of subnets.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html">Quotas for Amazon RDS</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_Limits.html">Quotas for Amazon Aurora</a> in the <i>Amazon Aurora User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AccountQuota
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountQuotaName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Used { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Max { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ActivityStreamMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sync = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		async = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ActivityStreamStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		stopped = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		starting = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		started = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		stopping = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AddRoleToDBClusterMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FeatureName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AddRoleToDBInstanceMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FeatureName { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AddSourceIdentifierToSubscriptionMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SubscriptionName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceIdentifier { get; set; }
	}
	
	/// <summary>
	/// Contains the results of a successful invocation of the <code>DescribeEventSubscriptions</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EventSubscription
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomerAwsId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustSubscriptionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SnsTopicArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SubscriptionCreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] SourceIdsList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] EventCategoriesList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EventSubscriptionArn { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AddTagsToResourceMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceName { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ApplyMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		immediate = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending-reboot = 1,
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ApplyPendingMaintenanceActionMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceIdentifier { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplyAction { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OptInType { get; set; }
	}
	
	/// <summary>
	/// Describes the pending maintenance actions for a resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ResourcePendingMaintenanceActions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PendingMaintenanceAction[] PendingMaintenanceActionDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AuthScheme
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SECRETS = 0,
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AuthorizeDBSecurityGroupIngressMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSecurityGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CIDRIP { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EC2SecurityGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EC2SecurityGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EC2SecurityGroupOwnerId { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the details for an Amazon RDS DB security group. </p> <p>This data type is used as a response element in the <code>DescribeDBSecurityGroups</code> action. </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBSecurityGroup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OwnerId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSecurityGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSecurityGroupDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EC2SecurityGroup[] EC2SecurityGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IPRange[] IPRanges { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSecurityGroupArn { get; set; }
	}
	
	/// <summary>
	/// <p>Contains Availability Zone information.</p> <p> This data type is used as an element in the <code>OrderableDBInstanceOption</code> data type.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AvailabilityZone
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the available processor feature information for the DB instance class of a DB instance.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor">Configuring the Processor of the DB Instance Class</a> in the <i>Amazon RDS User Guide. </i> </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AvailableProcessorFeature
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AllowedValues { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BacktrackDBClusterMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset BacktrackTo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Force { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseEarliestTimeOnPointInTimeUnavailable { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CancelExportTaskMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ExportTaskIdentifier { get; set; }
	}
	
	/// <summary>
	/// A CA certificate for an AWS account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Certificate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CertificateIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CertificateType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Thumbprint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ValidFrom { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ValidTill { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CertificateArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CustomerOverride { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CustomerOverrideValidTill { get; set; }
	}
	
	/// <summary>
	///  This data type is used as a response element in the action <code>DescribeDBEngineVersions</code>. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CharacterSet
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CharacterSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CharacterSetDescription { get; set; }
	}
	
	/// <summary>
	/// <p>The configuration setting for the log types to be enabled for export to CloudWatch Logs for a specific DB instance or DB cluster.</p> <p>The <code>EnableLogTypes</code> and <code>DisableLogTypes</code> arrays determine which logs will be exported (or not exported) to CloudWatch Logs. The values within these arrays depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs </a> in the <i>Amazon RDS User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CloudwatchLogsExportConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public String[] EnableLogTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] DisableLogTypes { get; set; }
	}
	
	/// <summary>
	/// <note> <p>This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.</p> </note> <p>Specifies the settings that control the size and behavior of the connection pool associated with a <code>DBProxyTargetGroup</code>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ConnectionPoolConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxConnectionsPercent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxIdleConnectionsPercent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ConnectionBorrowTimeout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] SessionPinningFilters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InitQuery { get; set; }
	}
	
	/// <summary>
	/// <note> <p>This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.</p> </note> <p>Displays the settings that control the size and behavior of the connection pool associated with a <code>DBProxyTarget</code>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ConnectionPoolConfigurationInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxConnectionsPercent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxIdleConnectionsPercent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ConnectionBorrowTimeout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] SessionPinningFilters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InitQuery { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CopyDBClusterParameterGroupMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceDBClusterParameterGroupIdentifier { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetDBClusterParameterGroupIdentifier { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetDBClusterParameterGroupDescription { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the details of an Amazon RDS DB cluster parameter group. </p> <p>This data type is used as a response element in the <code>DescribeDBClusterParameterGroups</code> action. </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBClusterParameterGroup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupFamily { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupArn { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CopyDBClusterSnapshotMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceDBClusterSnapshotIdentifier { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetDBClusterSnapshotIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreSignedUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTags { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceRegion { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the details for an Amazon RDS DB cluster snapshot </p> <p>This data type is used as a response element in the <code>DescribeDBClusterSnapshots</code> action. </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBClusterSnapshot
	{
		
		[System.Runtime.Serialization.DataMember()]
		public String[] AvailabilityZones { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterSnapshotIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SnapshotCreateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllocatedStorage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ClusterCreateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUsername { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SnapshotType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PercentProgress { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> StorageEncrypted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterSnapshotArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceDBClusterSnapshotArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IAMDatabaseAuthenticationEnabled { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CopyDBParameterGroupMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceDBParameterGroupIdentifier { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetDBParameterGroupIdentifier { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetDBParameterGroupDescription { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the details of an Amazon RDS DB parameter group. </p> <p>This data type is used as a response element in the <code>DescribeDBParameterGroups</code> action. </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBParameterGroup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupFamily { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupArn { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CopyDBSnapshotMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceDBSnapshotIdentifier { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetDBSnapshotIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreSignedUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceRegion { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the details of an Amazon RDS DB snapshot. </p> <p>This data type is used as a response element in the <code>DescribeDBSnapshots</code> action. </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBSnapshot
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSnapshotIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SnapshotCreateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllocatedStorage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> InstanceCreateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUsername { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SnapshotType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PercentProgress { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceRegion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceDBSnapshotIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TdeCredentialArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Encrypted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSnapshotArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Timezone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IAMDatabaseAuthenticationEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ProcessorFeature[] ProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DbiResourceId { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CopyOptionGroupMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceOptionGroupIdentifier { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetOptionGroupIdentifier { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetOptionGroupDescription { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class OptionGroup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MajorEngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Option[] Options { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AllowsVpcAndNonVpcInstanceMemberships { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupArn { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateCustomAvailabilityZoneMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CustomAvailabilityZoneName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExistingVpnId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NewVpnTunnelName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpnTunnelOriginatorIP { get; set; }
	}
	
	/// <summary>
	/// <p>A custom Availability Zone (AZ) is an on-premises AZ that is integrated with a VMware vSphere cluster.</p> <p>For more information about RDS on VMware, see the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html"> <i>RDS on VMware User Guide.</i> </a> </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CustomAvailabilityZone
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomAvailabilityZoneId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomAvailabilityZoneName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomAvailabilityZoneStatus { get; set; }
		
		/// <summary>
		/// <p>Information about the virtual private network (VPN) between the VMware vSphere cluster and the AWS website.</p> <p>For more information about RDS on VMware, see the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html"> <i>RDS on VMware User Guide.</i> </a> </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpnDetails VpnDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDBClusterEndpointMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterEndpointIdentifier { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EndpointType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] StaticMembers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] ExcludedMembers { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the scaling configuration of an Aurora Serverless DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html">Using Amazon Aurora Serverless</a> in the <i>Amazon Aurora User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ScalingConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoPause { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SecondsUntilAutoPause { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TimeoutAction { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDBClusterMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public String[] AvailabilityZones { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BackupRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CharacterSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] VpcSecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUsername { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredBackupWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredMaintenanceWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReplicationSourceIdentifier { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> StorageEncrypted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreSignedUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableIAMDatabaseAuthentication { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BacktrackWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] EnableCloudwatchLogsExports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineMode { get; set; }
		
		/// <summary>
		/// <p>Contains the scaling configuration of an Aurora Serverless DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html">Using Amazon Aurora Serverless</a> in the <i>Amazon Aurora User Guide</i>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ScalingConfiguration ScalingConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string GlobalClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableHttpEndpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTagsToSnapshot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainIAMRoleName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceRegion { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDBClusterParameterGroupMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupFamily { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the details of an Amazon Aurora DB cluster. </p> <p>This data type is used as a response element in the <code>DescribeDBClusters</code>, <code>StopDBCluster</code>, and <code>StartDBCluster</code> actions. </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBCluster
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllocatedStorage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] AvailabilityZones { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BackupRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CharacterSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PercentProgress { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EarliestRestorableTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Endpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReaderEndpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] CustomEndpoints { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZ { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LatestRestorableTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUsername { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBClusterOptionGroupStatus[] DBClusterOptionGroupMemberships { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredBackupWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredMaintenanceWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReplicationSourceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] ReadReplicaIdentifiers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBClusterMember[] DBClusterMembers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VpcSecurityGroupMembership[] VpcSecurityGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HostedZoneId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> StorageEncrypted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DbClusterResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBClusterRole[] AssociatedRoles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IAMDatabaseAuthenticationEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CloneGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ClusterCreateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EarliestBacktrackTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BacktrackWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BacktrackConsumedChangeRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] EnabledCloudwatchLogsExports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Capacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineMode { get; set; }
		
		/// <summary>
		/// <p>Shows the scaling configuration for an Aurora DB cluster in <code>serverless</code> DB engine mode.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html">Using Amazon Aurora Serverless</a> in the <i>Amazon Aurora User Guide</i>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ScalingConfigurationInfo ScalingConfigurationInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> HttpEndpointEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBClusterActivityStreamMode ActivityStreamMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBClusterActivityStreamStatus ActivityStreamStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ActivityStreamKmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ActivityStreamKinesisStreamName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTagsToSnapshot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CrossAccountClone { get; set; }
		
		/// <summary>
		/// List of Active Directory Domain membership records associated with a DB instance or cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DomainMembership[] DomainMemberships { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DBClusterActivityStreamMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sync = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		async = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DBClusterActivityStreamStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		stopped = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		starting = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		started = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		stopping = 3,
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDBClusterSnapshotMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterSnapshotIdentifier { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDBInstanceMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllocatedStorage { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUsername { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] DBSecurityGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] VpcSecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredMaintenanceWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BackupRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredBackupWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZ { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoMinorVersionUpgrade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CharacterSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PubliclyAccessible { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TdeCredentialArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TdeCredentialPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> StorageEncrypted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTagsToSnapshot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MonitoringInterval { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MonitoringRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainIAMRoleName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PromotionTier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Timezone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableIAMDatabaseAuthentication { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnablePerformanceInsights { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PerformanceInsightsKMSKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PerformanceInsightsRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] EnableCloudwatchLogsExports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ProcessorFeature[] ProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxAllocatedStorage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDBInstanceReadReplicaMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceDBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZ { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoMinorVersionUpgrade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PubliclyAccessible { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] VpcSecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTagsToSnapshot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MonitoringInterval { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MonitoringRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreSignedUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableIAMDatabaseAuthentication { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnablePerformanceInsights { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PerformanceInsightsKMSKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PerformanceInsightsRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] EnableCloudwatchLogsExports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ProcessorFeature[] ProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseDefaultProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainIAMRoleName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceRegion { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the details of an Amazon RDS DB instance. </p> <p>This data type is used as a response element in the <code>DescribeDBInstances</code> action. </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBInstance
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUsername { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBName { get; set; }
		
		/// <summary>
		/// <p>This data type represents the information you need to connect to an Amazon RDS DB instance. This data type is used as a response element in the following actions:</p> <ul> <li> <p> <code>CreateDBInstance</code> </p> </li> <li> <p> <code>DescribeDBInstances</code> </p> </li> <li> <p> <code>DeleteDBInstance</code> </p> </li> </ul> <p>For the data structure that represents Amazon Aurora DB cluster endpoints, see <code>DBClusterEndpoint</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Endpoint Endpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllocatedStorage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> InstanceCreateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredBackupWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BackupRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBSecurityGroupMembership[] DBSecurityGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VpcSecurityGroupMembership[] VpcSecurityGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBParameterGroupStatus[] DBParameterGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZone { get; set; }
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB subnet group. </p> <p>This data type is used as a response element in the <code>DescribeDBSubnetGroups</code> action. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBSubnetGroup DBSubnetGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredMaintenanceWindow { get; set; }
		
		/// <summary>
		///  This data type is used as a response element in the <code>ModifyDBInstance</code> action. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PendingModifiedValues PendingModifiedValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LatestRestorableTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZ { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoMinorVersionUpgrade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReadReplicaSourceDBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] ReadReplicaDBInstanceIdentifiers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] ReadReplicaDBClusterIdentifiers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OptionGroupMembership[] OptionGroupMemberships { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CharacterSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecondaryAvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PubliclyAccessible { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBInstanceStatusInfo[] StatusInfos { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TdeCredentialArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DbInstancePort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> StorageEncrypted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DbiResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CACertificateIdentifier { get; set; }
		
		/// <summary>
		/// List of Active Directory Domain membership records associated with a DB instance or cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DomainMembership[] DomainMemberships { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTagsToSnapshot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MonitoringInterval { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EnhancedMonitoringResourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MonitoringRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PromotionTier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Timezone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IAMDatabaseAuthenticationEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PerformanceInsightsEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PerformanceInsightsKMSKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PerformanceInsightsRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] EnabledCloudwatchLogsExports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ProcessorFeature[] ProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBInstanceRole[] AssociatedRoles { get; set; }
		
		/// <summary>
		/// <p>This data type represents the information you need to connect to an Amazon RDS DB instance. This data type is used as a response element in the following actions:</p> <ul> <li> <p> <code>CreateDBInstance</code> </p> </li> <li> <p> <code>DescribeDBInstances</code> </p> </li> <li> <p> <code>DeleteDBInstance</code> </p> </li> </ul> <p>For the data structure that represents Amazon Aurora DB cluster endpoints, see <code>DBClusterEndpoint</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Endpoint ListenerEndpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxAllocatedStorage { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDBParameterGroupMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupFamily { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EngineFamily
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MYSQL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POSTGRESQL = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDBProxyRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateDBProxyRequestEngineFamily EngineFamily { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UserAuthConfig[] Auth { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public String[] VpcSubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] VpcSecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RequireTLS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> IdleClientTimeout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DebugLogging { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateDBProxyRequestEngineFamily
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MYSQL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POSTGRESQL = 1,
	}
	
	/// <summary>
	/// <note> <p>This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.</p> </note> <p>The data structure representing a proxy managed by the RDS Proxy.</p> <p>This data type is used as a response element in the <code>DescribeDBProxies</code> action.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBProxy
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBProxyStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineFamily { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] VpcSecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] VpcSubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserAuthConfigInfo[] Auth { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Endpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RequireTLS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> IdleClientTimeout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DebugLogging { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> UpdatedDate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DBProxyStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		available = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		modifying = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		incompatible-network = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		insufficient-resource-limits = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		creating = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		deleting = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		suspended = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		suspending = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		reactivating = 8,
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDBSecurityGroupMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSecurityGroupName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSecurityGroupDescription { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDBSnapshotMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSnapshotIdentifier { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDBSubnetGroupMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupDescription { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public String[] SubnetIds { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the details of an Amazon RDS DB subnet group. </p> <p>This data type is used as a response element in the <code>DescribeDBSubnetGroups</code> action. </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBSubnetGroup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SubnetGroupStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Subnet[] Subnets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupArn { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateEventSubscriptionMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SubscriptionName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SnsTopicArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] EventCategories { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] SourceIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateGlobalClusterMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string GlobalClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceDBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> StorageEncrypted { get; set; }
	}
	
	/// <summary>
	/// A data type representing an Aurora global database.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GlobalCluster
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string GlobalClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string GlobalClusterResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string GlobalClusterArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> StorageEncrypted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GlobalClusterMember[] GlobalClusterMembers { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateOptionGroupMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EngineName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MajorEngineVersion { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupDescription { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	/// <summary>
	/// <p>Information about the virtual private network (VPN) between the VMware vSphere cluster and the AWS website.</p> <p>For more information about RDS on VMware, see the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html"> <i>RDS on VMware User Guide.</i> </a> </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class VpnDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string VpnId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpnTunnelOriginatorIP { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpnGatewayIp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpnPSK { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpnName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpnState { get; set; }
	}
	
	/// <summary>
	/// <p>Shows the scaling configuration for an Aurora DB cluster in <code>serverless</code> DB engine mode.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html">Using Amazon Aurora Serverless</a> in the <i>Amazon Aurora User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ScalingConfigurationInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoPause { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SecondsUntilAutoPause { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TimeoutAction { get; set; }
	}
	
	/// <summary>
	/// Contains information about an instance that is part of a DB cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBClusterMember
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsClusterWriter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PromotionTier { get; set; }
	}
	
	/// <summary>
	/// Contains status information for a DB cluster option group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBClusterOptionGroupStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterOptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBClusterRole
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FeatureName { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the name and values of a manual DB cluster snapshot attribute.</p> <p>Manual DB cluster snapshot attributes are used to authorize other AWS accounts to restore a manual DB cluster snapshot. For more information, see the <code>ModifyDBClusterSnapshotAttribute</code> API action.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBClusterSnapshotAttribute
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AttributeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] AttributeValues { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the results of a successful call to the <code>DescribeDBClusterSnapshotAttributes</code> API action.</p> <p>Manual DB cluster snapshot attributes are used to authorize other AWS accounts to copy or restore a manual DB cluster snapshot. For more information, see the <code>ModifyDBClusterSnapshotAttribute</code> API action.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBClusterSnapshotAttributesResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterSnapshotIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBClusterSnapshotAttribute[] DBClusterSnapshotAttributes { get; set; }
	}
	
	/// <summary>
	///  This data type is used as a response element in the action <code>DescribeDBEngineVersions</code>. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBEngineVersion
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupFamily { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBEngineDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBEngineVersionDescription { get; set; }
		
		/// <summary>
		///  This data type is used as a response element in the action <code>DescribeDBEngineVersions</code>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CharacterSet DefaultCharacterSet { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CharacterSet[] SupportedCharacterSets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpgradeTarget[] ValidUpgradeTarget { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Timezone[] SupportedTimezones { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] ExportableLogTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsLogExportsToCloudwatchLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsReadReplica { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] SupportedEngineModes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] SupportedFeatureNames { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// <p>This data type represents the information you need to connect to an Amazon RDS DB instance. This data type is used as a response element in the following actions:</p> <ul> <li> <p> <code>CreateDBInstance</code> </p> </li> <li> <p> <code>DescribeDBInstances</code> </p> </li> <li> <p> <code>DeleteDBInstance</code> </p> </li> </ul> <p>For the data structure that represents Amazon Aurora DB cluster endpoints, see <code>DBClusterEndpoint</code>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Endpoint
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HostedZoneId { get; set; }
	}
	
	/// <summary>
	///  This data type is used as a response element in the <code>ModifyDBInstance</code> action. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PendingModifiedValues
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllocatedStorage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BackupRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZ { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CACertificateIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		/// <summary>
		/// A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PendingCloudwatchLogsExports PendingCloudwatchLogsExports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ProcessorFeature[] ProcessorFeatures { get; set; }
	}
	
	/// <summary>
	/// Earliest and latest time an instance can be restored to:
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RestoreWindow
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EarliestTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LatestTime { get; set; }
	}
	
	/// <summary>
	/// An automated backup of a DB instance. It it consists of system backups, transaction logs, and the database instance properties that existed at the time you deleted the source instance. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBInstanceAutomatedBackup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DbiResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		/// <summary>
		/// Earliest and latest time an instance can be restored to:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RestoreWindow RestoreWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllocatedStorage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> InstanceCreateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUsername { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TdeCredentialArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Encrypted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Timezone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IAMDatabaseAuthenticationEnabled { get; set; }
	}
	
	/// <summary>
	/// Describes an AWS Identity and Access Management (IAM) role that is associated with a DB instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBInstanceRole
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FeatureName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// Provides a list of status information for a DB instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBInstanceStatusInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Normal { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// <p>The status of the DB parameter group.</p> <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <code>CreateDBInstance</code> </p> </li> <li> <p> <code>CreateDBInstanceReadReplica</code> </p> </li> <li> <p> <code>DeleteDBInstance</code> </p> </li> <li> <p> <code>ModifyDBInstance</code> </p> </li> <li> <p> <code>RebootDBInstance</code> </p> </li> <li> <p> <code>RestoreDBInstanceFromDBSnapshot</code> </p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBParameterGroupStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ParameterApplyStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DBProxyStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		available = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		modifying = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		incompatible-network = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		insufficient-resource-limits = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		creating = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		deleting = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		suspended = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		suspending = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		reactivating = 8,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TargetType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RDS_INSTANCE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RDS_SERVERLESS_ENDPOINT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRACKED_CLUSTER = 2,
	}
	
	/// <summary>
	/// <note> <p>This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.</p> </note> <p>Information about the connection health of an RDS Proxy target.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TargetHealth
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TargetHealthState State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TargetHealthReason Reason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TargetHealthState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REGISTERING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNAVAILABLE = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TargetHealthReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNREACHABLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONNECTION_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTH_FAILURE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_PROXY_CAPACITY = 3,
	}
	
	/// <summary>
	/// <note> <p>This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.</p> </note> <p>Contains the details for an RDS Proxy target. It represents an RDS DB instance or Aurora DB cluster that the proxy can connect to. One or more targets are associated with an RDS Proxy target group.</p> <p>This data type is used as a response element in the <code>DescribeDBProxyTargets</code> action.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBProxyTarget
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Endpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TrackedClusterId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RdsResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBProxyTargetType Type { get; set; }
		
		/// <summary>
		/// <note> <p>This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.</p> </note> <p>Information about the connection health of an RDS Proxy target.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TargetHealth TargetHealth { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DBProxyTargetType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RDS_INSTANCE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RDS_SERVERLESS_ENDPOINT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRACKED_CLUSTER = 2,
	}
	
	/// <summary>
	/// <note> <p>This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.</p> </note> <p>Represents a set of RDS DB instances, Aurora DB clusters, or both that a proxy can connect to. Currently, each target group is associated with exactly one RDS DB instance or Aurora DB cluster.</p> <p>This data type is used as a response element in the <code>DescribeDBProxyTargetGroups</code> action.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBProxyTargetGroup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetGroupArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsDefault { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		/// <summary>
		/// <note> <p>This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.</p> </note> <p>Displays the settings that control the size and behavior of the connection pool associated with a <code>DBProxyTarget</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ConnectionPoolConfigurationInfo ConnectionPoolConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> UpdatedDate { get; set; }
	}
	
	/// <summary>
	/// <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <code>ModifyDBInstance</code> </p> </li> <li> <p> <code>RebootDBInstance</code> </p> </li> <li> <p> <code>RestoreDBInstanceFromDBSnapshot</code> </p> </li> <li> <p> <code>RestoreDBInstanceToPointInTime</code> </p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBSecurityGroupMembership
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSecurityGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the name and values of a manual DB snapshot attribute</p> <p>Manual DB snapshot attributes are used to authorize other AWS accounts to restore a manual DB snapshot. For more information, see the <code>ModifyDBSnapshotAttribute</code> API.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBSnapshotAttribute
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AttributeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] AttributeValues { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the results of a successful call to the <code>DescribeDBSnapshotAttributes</code> API action.</p> <p>Manual DB snapshot attributes are used to authorize other AWS accounts to copy or restore a manual DB snapshot. For more information, see the <code>ModifyDBSnapshotAttribute</code> API action.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DBSnapshotAttributesResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSnapshotIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBSnapshotAttribute[] DBSnapshotAttributes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteCustomAvailabilityZoneMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CustomAvailabilityZoneId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteDBClusterEndpointMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterEndpointIdentifier { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteDBClusterMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SkipFinalSnapshot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FinalDBSnapshotIdentifier { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteDBClusterParameterGroupMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupName { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteDBClusterSnapshotMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterSnapshotIdentifier { get; set; }
	}
	
	/// <summary>
	/// Parameter input for the <code>DeleteDBInstanceAutomatedBackup</code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteDBInstanceAutomatedBackupMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DbiResourceId { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteDBInstanceMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SkipFinalSnapshot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FinalDBSnapshotIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeleteAutomatedBackups { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteDBParameterGroupMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteDBProxyRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyName { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteDBSecurityGroupMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSecurityGroupName { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteDBSnapshotMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSnapshotIdentifier { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteDBSubnetGroupMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteEventSubscriptionMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SubscriptionName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteGlobalClusterMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string GlobalClusterIdentifier { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteInstallationMediaMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstallationMediaId { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteOptionGroupMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeregisterDBProxyTargetsRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] DBInstanceIdentifiers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] DBClusterIdentifiers { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeCertificatesMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CertificateIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeCustomAvailabilityZonesMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomAvailabilityZoneId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDBClusterBacktracksMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BacktrackIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDBClusterEndpointsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterEndpointIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDBClusterParameterGroupsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDBClusterParametersMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Source { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDBClusterSnapshotAttributesMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterSnapshotIdentifier { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDBClusterSnapshotsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterSnapshotIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SnapshotType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeShared { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludePublic { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDBClustersMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeShared { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDBEngineVersionsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupFamily { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DefaultOnly { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ListSupportedCharacterSets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ListSupportedTimezones { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeAll { get; set; }
	}
	
	/// <summary>
	/// Parameter input for DescribeDBInstanceAutomatedBackups. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDBInstanceAutomatedBackupsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DbiResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDBInstancesMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// This data type is used as a response element to <code>DescribeDBLogFiles</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDBLogFilesDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LogFileName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> LastWritten { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Size { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDBLogFilesMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FilenameContains { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FileLastWritten { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FileSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDBParameterGroupsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDBParametersMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Source { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDBProxiesRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		/// <summary>
		/// Minimum: 20
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(20, 100)]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDBProxyTargetGroupsRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		/// <summary>
		/// Minimum: 20
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(20, 100)]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDBProxyTargetsRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		/// <summary>
		/// Minimum: 20
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(20, 100)]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDBSecurityGroupsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSecurityGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDBSnapshotAttributesMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSnapshotIdentifier { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDBSnapshotsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSnapshotIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SnapshotType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeShared { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludePublic { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DbiResourceId { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDBSubnetGroupsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeEngineDefaultClusterParametersMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupFamily { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	///  Contains the result of a successful invocation of the <code>DescribeEngineDefaultParameters</code> action. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EngineDefaults
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupFamily { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] Parameters { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeEngineDefaultParametersMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupFamily { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeEventCategoriesMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeEventSubscriptionsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SubscriptionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		db-instance = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		db-parameter-group = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		db-security-group = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		db-snapshot = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		db-cluster = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		db-cluster-snapshot = 5,
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeEventsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeEventsMessageSourceType SourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Duration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] EventCategories { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeEventsMessageSourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		db-instance = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		db-parameter-group = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		db-security-group = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		db-snapshot = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		db-cluster = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		db-cluster-snapshot = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeExportTasksMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ExportTaskIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		/// <summary>
		/// Minimum: 20
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(20, 100)]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeGlobalClustersMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string GlobalClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeInstallationMediaMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InstallationMediaId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeOptionGroupOptionsMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EngineName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MajorEngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeOptionGroupsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MajorEngineVersion { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeOrderableDBInstanceOptionsMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZoneGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Vpc { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribePendingMaintenanceActionsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeReservedDBInstancesMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservedDBInstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservedDBInstancesOfferingId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Duration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ProductDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OfferingType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZ { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LeaseId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeReservedDBInstancesOfferingsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservedDBInstancesOfferingId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Duration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ProductDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OfferingType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZ { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeSourceRegionsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RegionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeValidDBInstanceModificationsMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
	}
	
	/// <summary>
	/// Information about valid modifications that you can make to your DB instance. Contains the result of a successful call to the <code>DescribeValidDBInstanceModifications</code> action. You can use this information when you call <code>ModifyDBInstance</code>. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ValidDBInstanceModificationsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ValidStorageOptions[] Storage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AvailableProcessorFeature[] ValidProcessorFeatures { get; set; }
	}
	
	/// <summary>
	/// An Active Directory Domain membership record associated with the DB instance or cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DomainMembership
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FQDN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IAMRoleName { get; set; }
	}
	
	/// <summary>
	/// A range of double values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DoubleRange
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> From { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> To { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DownloadDBLogFilePortionMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LogFileName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> NumberOfLines { get; set; }
	}
	
	/// <summary>
	/// <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <code>AuthorizeDBSecurityGroupIngress</code> </p> </li> <li> <p> <code>DescribeDBSecurityGroups</code> </p> </li> <li> <p> <code>RevokeDBSecurityGroupIngress</code> </p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EC2SecurityGroup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EC2SecurityGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EC2SecurityGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EC2SecurityGroupOwnerId { get; set; }
	}
	
	/// <summary>
	///  This data type is used as a response element in the <code>DescribeEvents</code> action. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Event
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EventSourceType SourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] EventCategories { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> Date { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EventSourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		db-instance = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		db-parameter-group = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		db-security-group = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		db-snapshot = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		db-cluster = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		db-cluster-snapshot = 5,
	}
	
	/// <summary>
	/// Contains the results of a successful invocation of the <code>DescribeEventCategories</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EventCategoriesMap
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] EventCategories { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FailoverDBClusterMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetDBInstanceIdentifier { get; set; }
	}
	
	/// <summary>
	///  A data structure with information about any primary and secondary clusters associated with an Aurora global database. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GlobalClusterMember
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] Readers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsWriter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum IAMAuthMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REQUIRED = 1,
	}
	
	/// <summary>
	///  This data type is used as a response element in the <code>DescribeDBSecurityGroups</code> action. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class IPRange
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CIDRIP { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ImportInstallationMediaMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CustomAvailabilityZoneId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EngineInstallationMediaPath { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OSInstallationMediaPath { get; set; }
	}
	
	/// <summary>
	/// Contains the cause of an installation media failure. Installation media is used for a DB engine that requires an on-premises customer provided license, such as Microsoft SQL Server.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InstallationMediaFailureCause
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTagsForResourceMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
	}
	
	/// <summary>
	/// The minimum DB engine version required for each corresponding allowed value for an option setting.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class MinimumEngineVersionPerAllowedValue
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AllowedValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MinimumEngineVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModifyCertificatesMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CertificateIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RemoveCustomerOverride { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModifyCurrentDBClusterCapacityMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Capacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SecondsBeforeTimeout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TimeoutAction { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModifyDBClusterEndpointMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterEndpointIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EndpointType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] StaticMembers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] ExcludedMembers { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModifyDBClusterMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NewDBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApplyImmediately { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BackupRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] VpcSecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredBackupWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredMaintenanceWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableIAMDatabaseAuthentication { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BacktrackWindow { get; set; }
		
		/// <summary>
		/// <p>The configuration setting for the log types to be enabled for export to CloudWatch Logs for a specific DB instance or DB cluster.</p> <p>The <code>EnableLogTypes</code> and <code>DisableLogTypes</code> arrays determine which logs will be exported (or not exported) to CloudWatch Logs. The values within these arrays depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs </a> in the <i>Amazon RDS User Guide</i>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CloudwatchLogsExportConfiguration CloudwatchLogsExportConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AllowMajorVersionUpgrade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainIAMRoleName { get; set; }
		
		/// <summary>
		/// <p>Contains the scaling configuration of an Aurora Serverless DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html">Using Amazon Aurora Serverless</a> in the <i>Amazon Aurora User Guide</i>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ScalingConfiguration ScalingConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableHttpEndpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTagsToSnapshot { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModifyDBClusterParameterGroupMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] Parameters { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModifyDBClusterSnapshotAttributeMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterSnapshotIdentifier { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AttributeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] ValuesToAdd { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] ValuesToRemove { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModifyDBInstanceMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllocatedStorage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] DBSecurityGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] VpcSecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApplyImmediately { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BackupRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredBackupWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredMaintenanceWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZ { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AllowMajorVersionUpgrade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoMinorVersionUpgrade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NewDBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TdeCredentialArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TdeCredentialPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CACertificateIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTagsToSnapshot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MonitoringInterval { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DBPortNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PubliclyAccessible { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MonitoringRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainIAMRoleName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PromotionTier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableIAMDatabaseAuthentication { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnablePerformanceInsights { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PerformanceInsightsKMSKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PerformanceInsightsRetentionPeriod { get; set; }
		
		/// <summary>
		/// <p>The configuration setting for the log types to be enabled for export to CloudWatch Logs for a specific DB instance or DB cluster.</p> <p>The <code>EnableLogTypes</code> and <code>DisableLogTypes</code> arrays determine which logs will be exported (or not exported) to CloudWatch Logs. The values within these arrays depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs </a> in the <i>Amazon RDS User Guide</i>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CloudwatchLogsExportConfiguration CloudwatchLogsExportConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ProcessorFeature[] ProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseDefaultProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxAllocatedStorage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CertificateRotationRestart { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModifyDBParameterGroupMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] Parameters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModifyDBProxyRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NewDBProxyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserAuthConfig[] Auth { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RequireTLS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> IdleClientTimeout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DebugLogging { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] SecurityGroups { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModifyDBProxyTargetGroupRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetGroupName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyName { get; set; }
		
		/// <summary>
		/// <note> <p>This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.</p> </note> <p>Specifies the settings that control the size and behavior of the connection pool associated with a <code>DBProxyTargetGroup</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ConnectionPoolConfiguration ConnectionPoolConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NewName { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModifyDBSnapshotAttributeMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSnapshotIdentifier { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AttributeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] ValuesToAdd { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] ValuesToRemove { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModifyDBSnapshotMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSnapshotIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModifyDBSubnetGroupMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupDescription { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public String[] SubnetIds { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModifyEventSubscriptionMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SubscriptionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SnsTopicArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] EventCategories { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModifyGlobalClusterMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string GlobalClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NewGlobalClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModifyOptionGroupMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OptionConfiguration[] OptionsToInclude { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] OptionsToRemove { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApplyImmediately { get; set; }
	}
	
	/// <summary>
	/// Option details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Option
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Persistent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Permanent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OptionSetting[] OptionSettings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBSecurityGroupMembership[] DBSecurityGroupMemberships { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VpcSecurityGroupMembership[] VpcSecurityGroupMemberships { get; set; }
	}
	
	/// <summary>
	/// Provides information on the option groups the DB instance is a member of.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class OptionGroupMembership
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// Available option.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class OptionGroupOption
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MajorEngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MinimumRequiredMinorEngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PortRequired { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DefaultPort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] OptionsDependedOn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] OptionsConflictsWith { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Persistent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Permanent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RequiresAutoMinorEngineVersionUpgrade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> VpcOnly { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsOptionVersionDowngrade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OptionGroupOptionSetting[] OptionGroupOptionSettings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OptionVersion[] OptionGroupOptionVersions { get; set; }
	}
	
	/// <summary>
	/// Option group option settings are used to display settings available for each option with their default values and other information. These values are used with the DescribeOptionGroupOptions action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class OptionGroupOptionSetting
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SettingName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SettingDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplyType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AllowedValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsModifiable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsRequired { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MinimumEngineVersionPerAllowedValue[] MinimumEngineVersionPerAllowedValue { get; set; }
	}
	
	/// <summary>
	/// The version for an option. Option group option versions are returned by the <code>DescribeOptionGroupOptions</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class OptionVersion
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsDefault { get; set; }
	}
	
	/// <summary>
	/// Option settings are the actual settings being applied or configured for that option. It is used when you modify an option group or describe option groups. For example, the NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER that can have several different values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class OptionSetting
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplyType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AllowedValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsModifiable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsCollection { get; set; }
	}
	
	/// <summary>
	/// <p>Contains a list of available options for a DB instance.</p> <p> This data type is used as a response element in the <code>DescribeOrderableDBInstanceOptions</code> action. </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class OrderableDBInstanceOption
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZoneGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AvailabilityZone[] AvailabilityZones { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZCapable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ReadReplicaCapable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Vpc { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsStorageEncryption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsIops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsEnhancedMonitoring { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsIAMDatabaseAuthentication { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsPerformanceInsights { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinStorageSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxStorageSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinIopsPerDbInstance { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxIopsPerDbInstance { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MinIopsPerGib { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MaxIopsPerGib { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AvailableProcessorFeature[] AvailableProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] SupportedEngineModes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsStorageAutoscaling { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsKerberosAuthentication { get; set; }
	}
	
	/// <summary>
	/// A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PendingCloudwatchLogsExports
	{
		
		[System.Runtime.Serialization.DataMember()]
		public String[] LogTypesToEnable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] LogTypesToDisable { get; set; }
	}
	
	/// <summary>
	/// Provides information about a pending maintenance action for a resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PendingMaintenanceAction
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> AutoAppliedAfterDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ForcedApplyDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptInStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CurrentApplyDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PromoteReadReplicaDBClusterMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PromoteReadReplicaMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BackupRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredBackupWindow { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PurchaseReservedDBInstancesOfferingMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ReservedDBInstancesOfferingId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservedDBInstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DBInstanceCount { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	/// <summary>
	///  This data type is used as a response element in the <code>DescribeReservedDBInstances</code> and <code>PurchaseReservedDBInstancesOffering</code> actions. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ReservedDBInstance
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservedDBInstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservedDBInstancesOfferingId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Duration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FixedPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> UsagePrice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrencyCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DBInstanceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ProductDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OfferingType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZ { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RecurringCharge[] RecurringCharges { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservedDBInstanceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LeaseId { get; set; }
	}
	
	/// <summary>
	/// A range of integer values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Range
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> From { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> To { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Step { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RebootDBInstanceMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ForceFailover { get; set; }
	}
	
	/// <summary>
	///  This data type is used as a response element in the <code>DescribeReservedDBInstances</code> and <code>DescribeReservedDBInstancesOfferings</code> actions. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RecurringCharge
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> RecurringChargeAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecurringChargeFrequency { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RegisterDBProxyTargetsRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] DBInstanceIdentifiers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] DBClusterIdentifiers { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RemoveFromGlobalClusterMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string GlobalClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DbClusterIdentifier { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RemoveRoleFromDBClusterMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FeatureName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RemoveRoleFromDBInstanceMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FeatureName { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RemoveSourceIdentifierFromSubscriptionMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SubscriptionName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceIdentifier { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RemoveTagsFromResourceMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public String[] TagKeys { get; set; }
	}
	
	/// <summary>
	///  This data type is used as a response element in the <code>DescribeReservedDBInstancesOfferings</code> action. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ReservedDBInstancesOffering
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservedDBInstancesOfferingId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Duration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FixedPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> UsagePrice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrencyCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ProductDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OfferingType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZ { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RecurringCharge[] RecurringCharges { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ResetDBClusterParameterGroupMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ResetAllParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] Parameters { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ResetDBParameterGroupMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ResetAllParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] Parameters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RestoreDBClusterFromS3Message
	{
		
		[System.Runtime.Serialization.DataMember()]
		public String[] AvailabilityZones { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BackupRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CharacterSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] VpcSecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MasterUsername { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredBackupWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredMaintenanceWindow { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> StorageEncrypted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableIAMDatabaseAuthentication { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceEngine { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceEngineVersion { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string S3BucketName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Prefix { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string S3IngestionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BacktrackWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] EnableCloudwatchLogsExports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTagsToSnapshot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainIAMRoleName { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RestoreDBClusterFromSnapshotMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public String[] AvailabilityZones { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SnapshotIdentifier { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] VpcSecurityGroupIds { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableIAMDatabaseAuthentication { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BacktrackWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] EnableCloudwatchLogsExports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineMode { get; set; }
		
		/// <summary>
		/// <p>Contains the scaling configuration of an Aurora Serverless DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html">Using Amazon Aurora Serverless</a> in the <i>Amazon Aurora User Guide</i>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ScalingConfiguration ScalingConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTagsToSnapshot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainIAMRoleName { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RestoreDBClusterToPointInTimeMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RestoreType { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceDBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> RestoreToTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseLatestRestorableTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] VpcSecurityGroupIds { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableIAMDatabaseAuthentication { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BacktrackWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] EnableCloudwatchLogsExports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTagsToSnapshot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainIAMRoleName { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RestoreDBInstanceFromDBSnapshotMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSnapshotIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZ { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PubliclyAccessible { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoMinorVersionUpgrade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TdeCredentialArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TdeCredentialPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] VpcSecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTagsToSnapshot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainIAMRoleName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableIAMDatabaseAuthentication { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] EnableCloudwatchLogsExports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ProcessorFeature[] ProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseDefaultProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RestoreDBInstanceFromS3Message
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllocatedStorage { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUsername { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] DBSecurityGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] VpcSecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredMaintenanceWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BackupRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredBackupWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZ { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoMinorVersionUpgrade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PubliclyAccessible { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> StorageEncrypted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTagsToSnapshot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MonitoringInterval { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MonitoringRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableIAMDatabaseAuthentication { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceEngine { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceEngineVersion { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string S3BucketName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Prefix { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string S3IngestionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnablePerformanceInsights { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PerformanceInsightsKMSKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PerformanceInsightsRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] EnableCloudwatchLogsExports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ProcessorFeature[] ProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseDefaultProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RestoreDBInstanceToPointInTimeMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceDBInstanceIdentifier { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetDBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> RestoreTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseLatestRestorableTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZ { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PubliclyAccessible { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoMinorVersionUpgrade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTagsToSnapshot { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TdeCredentialArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TdeCredentialPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] VpcSecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainIAMRoleName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableIAMDatabaseAuthentication { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] EnableCloudwatchLogsExports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ProcessorFeature[] ProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseDefaultProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceDbiResourceId { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RevokeDBSecurityGroupIngressMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSecurityGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CIDRIP { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EC2SecurityGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EC2SecurityGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EC2SecurityGroupOwnerId { get; set; }
	}
	
	/// <summary>
	/// Contains an AWS Region name as the result of a successful call to the <code>DescribeSourceRegions</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SourceRegion
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RegionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Endpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartActivityStreamRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StartActivityStreamRequestMode Mode { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApplyImmediately { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StartActivityStreamRequestMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sync = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		async = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartDBClusterMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartDBInstanceMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartExportTaskMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ExportTaskIdentifier { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string S3BucketName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IamRoleArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Prefix { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] ExportOnly { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopActivityStreamRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApplyImmediately { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopDBClusterMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopDBInstanceMessage
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSnapshotIdentifier { get; set; }
	}
	
	/// <summary>
	///  This data type is used as a response element in the <code>DescribeDBSubnetGroups</code> action. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Subnet
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SubnetIdentifier { get; set; }
		
		/// <summary>
		/// <p>Contains Availability Zone information.</p> <p> This data type is used as an element in the <code>OrderableDBInstanceOption</code> data type.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AvailabilityZone SubnetAvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SubnetStatus { get; set; }
	}
	
	/// <summary>
	/// A time zone associated with a <code>DBInstance</code> or a <code>DBSnapshot</code>. This data type is an element in the response to the <code>DescribeDBInstances</code>, the <code>DescribeDBSnapshots</code>, and the <code>DescribeDBEngineVersions</code> actions. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Timezone
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TimezoneName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TargetState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REGISTERING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNAVAILABLE = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TargetHealthReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNREACHABLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONNECTION_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTH_FAILURE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_PROXY_CAPACITY = 3,
	}
	
	/// <summary>
	/// The version of the database engine that a DB instance can be upgraded to.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpgradeTarget
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoUpgrade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsMajorVersionUpgrade { get; set; }
	}
	
	/// <summary>
	/// <note> <p>This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.</p> </note> <p>Returns the details of authentication used by a proxy to log in as a specific database user.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UserAuthConfigInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UserName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserAuthConfigInfoAuthScheme AuthScheme { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecretArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserAuthConfigInfoIAMAuth IAMAuth { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UserAuthConfigInfoAuthScheme
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SECRETS = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UserAuthConfigInfoIAMAuth
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REQUIRED = 1,
	}
	
	/// <summary>
	/// Information about valid modifications that you can make to your DB instance. Contains the result of a successful call to the <code>DescribeValidDBInstanceModifications</code> action. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ValidStorageOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Range[] StorageSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Range[] ProvisionedIops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DoubleRange[] IopsToStorageRatio { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsStorageAutoscaling { get; set; }
	}
	
	/// <summary>
	/// This data type is used as a response element for queries on VPC security group membership.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class VpcSecurityGroupMembership
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcSecurityGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
	}
	
	public partial class DemoClient
	{
		
		private System.Net.Http.HttpClient client;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public DemoClient(System.Net.Http.HttpClient client, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (client == null)
				throw new ArgumentNullException("Null HttpClient.", "client");

			if (client.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "client");

			this.client = client;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// <p>Associates an Identity and Access Management (IAM) role from an Amazon Aurora DB cluster. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Integrating.Authorizing.html">Authorizing Amazon Aurora MySQL to Access Other AWS Services on Your Behalf</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_AddRoleToDBCluster /#Action=AddRoleToDBCluster
		/// </summary>
		/// <param name="DBClusterIdentifier">The name of the DB cluster to associate the IAM role with.</param>
		/// <param name="RoleArn">The Amazon Resource Name (ARN) of the IAM role to associate with the Aurora DB cluster, for example <code>arn:aws:iam::123456789012:role/AuroraAccessRole</code>.</param>
		/// <param name="FeatureName">The name of the feature for the DB cluster that the IAM role is to be associated with. For the list of supported feature names, see <a>DBEngineVersion</a>.</param>
		/// <returns>Success</returns>
		public async Task GET_AddRoleToDBClusterAsync(string DBClusterIdentifier, string RoleArn, string FeatureName, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=AddRoleToDBCluster?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : Uri.EscapeDataString(DBClusterIdentifier))+"&RoleArn=" + (RoleArn==null? "" : Uri.EscapeDataString(RoleArn))+"&FeatureName=" + (FeatureName==null? "" : Uri.EscapeDataString(FeatureName))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Associates an AWS Identity and Access Management (IAM) role with a DB instance.</p> <note> <p>To add a role to a DB instance, the status of the DB instance must be <code>available</code>.</p> </note>
		/// GET_AddRoleToDBInstance /#Action=AddRoleToDBInstance
		/// </summary>
		/// <param name="DBInstanceIdentifier">The name of the DB instance to associate the IAM role with.</param>
		/// <param name="RoleArn">The Amazon Resource Name (ARN) of the IAM role to associate with the DB instance, for example <code>arn:aws:iam::123456789012:role/AccessRole</code>. </param>
		/// <param name="FeatureName">The name of the feature for the DB instance that the IAM role is to be associated with. For the list of supported feature names, see <a>DBEngineVersion</a>. </param>
		/// <returns>Success</returns>
		public async Task GET_AddRoleToDBInstanceAsync(string DBInstanceIdentifier, string RoleArn, string FeatureName, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=AddRoleToDBInstance?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : Uri.EscapeDataString(DBInstanceIdentifier))+"&RoleArn=" + (RoleArn==null? "" : Uri.EscapeDataString(RoleArn))+"&FeatureName=" + (FeatureName==null? "" : Uri.EscapeDataString(FeatureName))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Adds a source identifier to an existing RDS event notification subscription.
		/// GET_AddSourceIdentifierToSubscription /#Action=AddSourceIdentifierToSubscription
		/// </summary>
		/// <param name="SubscriptionName">The name of the RDS event notification subscription you want to add a source identifier to.</param>
		/// <param name="SourceIdentifier"><p>The identifier of the event source to be added.</p> <p>Constraints:</p> <ul> <li> <p>If the source type is a DB instance, then a <code>DBInstanceIdentifier</code> must be supplied.</p> </li> <li> <p>If the source type is a DB security group, a <code>DBSecurityGroupName</code> must be supplied.</p> </li> <li> <p>If the source type is a DB parameter group, a <code>DBParameterGroupName</code> must be supplied.</p> </li> <li> <p>If the source type is a DB snapshot, a <code>DBSnapshotIdentifier</code> must be supplied.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_AddSourceIdentifierToSubscriptionAsync(string SubscriptionName, string SourceIdentifier, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=AddSourceIdentifierToSubscription?SubscriptionName=" + (SubscriptionName==null? "" : Uri.EscapeDataString(SubscriptionName))+"&SourceIdentifier=" + (SourceIdentifier==null? "" : Uri.EscapeDataString(SourceIdentifier))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Adds metadata tags to an Amazon RDS resource. These tags can also be used with cost allocation reporting to track cost associated with Amazon RDS resources, or used in a Condition statement in an IAM policy for Amazon RDS.</p> <p>For an overview on tagging Amazon RDS resources, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html">Tagging Amazon RDS Resources</a>.</p>
		/// GET_AddTagsToResource /#Action=AddTagsToResource
		/// </summary>
		/// <param name="ResourceName">The Amazon RDS resource that the tags are added to. This value is an Amazon Resource Name (ARN). For information about creating an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing"> Constructing an RDS Amazon Resource Name (ARN)</a>.</param>
		/// <param name="Tags">The tags to be assigned to the Amazon RDS resource.</param>
		/// <returns>Success</returns>
		public async Task GET_AddTagsToResourceAsync(string ResourceName, Tag[] Tags, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=AddTagsToResource?ResourceName=" + (ResourceName==null? "" : Uri.EscapeDataString(ResourceName))+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Applies a pending maintenance action to a resource (for example, to a DB instance).
		/// GET_ApplyPendingMaintenanceAction /#Action=ApplyPendingMaintenanceAction
		/// </summary>
		/// <param name="ResourceIdentifier">The RDS Amazon Resource Name (ARN) of the resource that the pending maintenance action applies to. For information about creating an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing"> Constructing an RDS Amazon Resource Name (ARN)</a>.</param>
		/// <param name="ApplyAction"><p>The pending maintenance action to apply to this resource.</p> <p>Valid values: <code>system-update</code>, <code>db-upgrade</code>, <code>hardware-maintenance</code>, <code>ca-certificate-rotation</code> </p></param>
		/// <param name="OptInType"><p>A value that specifies the type of opt-in request, or undoes an opt-in request. An opt-in request of type <code>immediate</code> can't be undone.</p> <p>Valid values:</p> <ul> <li> <p> <code>immediate</code> - Apply the maintenance action immediately.</p> </li> <li> <p> <code>next-maintenance</code> - Apply the maintenance action during the next maintenance window for the resource.</p> </li> <li> <p> <code>undo-opt-in</code> - Cancel any existing <code>next-maintenance</code> opt-in requests.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_ApplyPendingMaintenanceActionAsync(string ResourceIdentifier, string ApplyAction, string OptInType, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ApplyPendingMaintenanceAction?ResourceIdentifier=" + (ResourceIdentifier==null? "" : Uri.EscapeDataString(ResourceIdentifier))+"&ApplyAction=" + (ApplyAction==null? "" : Uri.EscapeDataString(ApplyAction))+"&OptInType=" + (OptInType==null? "" : Uri.EscapeDataString(OptInType))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Enables ingress to a DBSecurityGroup using one of two forms of authorization. First, EC2 or VPC security groups can be added to the DBSecurityGroup if the application using the database is running on EC2 or VPC instances. Second, IP ranges are available if the application accessing your database is running on the Internet. Required parameters for this API are one of CIDR range, EC2SecurityGroupId for VPC, or (EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId for non-VPC).</p> <note> <p>You can't authorize ingress from an EC2 security group in one AWS Region to an Amazon RDS DB instance in another. You can't authorize ingress from a VPC security group in one VPC to an Amazon RDS DB instance in another.</p> </note> <p>For an overview of CIDR ranges, go to the <a href="http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Wikipedia Tutorial</a>. </p>
		/// GET_AuthorizeDBSecurityGroupIngress /#Action=AuthorizeDBSecurityGroupIngress
		/// </summary>
		/// <param name="DBSecurityGroupName">The name of the DB security group to add authorization to.</param>
		/// <param name="CIDRIP">The IP range to authorize.</param>
		/// <param name="EC2SecurityGroupName"> Name of the EC2 security group to authorize. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, <code>EC2SecurityGroupOwnerId</code> and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided. </param>
		/// <param name="EC2SecurityGroupId"> Id of the EC2 security group to authorize. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, <code>EC2SecurityGroupOwnerId</code> and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided. </param>
		/// <param name="EC2SecurityGroupOwnerId"> AWS account number of the owner of the EC2 security group specified in the <code>EC2SecurityGroupName</code> parameter. The AWS access key ID isn't an acceptable value. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, <code>EC2SecurityGroupOwnerId</code> and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided. </param>
		/// <returns>Success</returns>
		public async Task GET_AuthorizeDBSecurityGroupIngressAsync(string DBSecurityGroupName, string CIDRIP, string EC2SecurityGroupName, string EC2SecurityGroupId, string EC2SecurityGroupOwnerId, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=AuthorizeDBSecurityGroupIngress?DBSecurityGroupName=" + (DBSecurityGroupName==null? "" : Uri.EscapeDataString(DBSecurityGroupName))+"&CIDRIP=" + (CIDRIP==null? "" : Uri.EscapeDataString(CIDRIP))+"&EC2SecurityGroupName=" + (EC2SecurityGroupName==null? "" : Uri.EscapeDataString(EC2SecurityGroupName))+"&EC2SecurityGroupId=" + (EC2SecurityGroupId==null? "" : Uri.EscapeDataString(EC2SecurityGroupId))+"&EC2SecurityGroupOwnerId=" + (EC2SecurityGroupOwnerId==null? "" : Uri.EscapeDataString(EC2SecurityGroupOwnerId))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Backtracks a DB cluster to a specific time, without creating a new DB cluster.</p> <p>For more information on backtracking, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Managing.Backtrack.html"> Backtracking an Aurora DB Cluster</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_BacktrackDBCluster /#Action=BacktrackDBCluster
		/// </summary>
		/// <param name="DBClusterIdentifier"><p>The DB cluster identifier of the DB cluster to be backtracked. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster1</code> </p></param>
		/// <param name="BacktrackTo"><p>The timestamp of the time to backtrack the DB cluster to, specified in ISO 8601 format. For more information about ISO 8601, see the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601 Wikipedia page.</a> </p> <note> <p>If the specified time isn't a consistent time for the DB cluster, Aurora automatically chooses the nearest possible consistent time for the DB cluster.</p> </note> <p>Constraints:</p> <ul> <li> <p>Must contain a valid ISO 8601 timestamp.</p> </li> <li> <p>Can't contain a timestamp set in the future.</p> </li> </ul> <p>Example: <code>2017-07-08T18:00Z</code> </p></param>
		/// <param name="Force">A value that indicates whether to force the DB cluster to backtrack when binary logging is enabled. Otherwise, an error occurs when binary logging is enabled.</param>
		/// <param name="UseEarliestTimeOnPointInTimeUnavailable">A value that indicates whether to backtrack the DB cluster to the earliest possible backtrack time when <i>BacktrackTo</i> is set to a timestamp earlier than the earliest backtrack time. When this parameter is disabled and <i>BacktrackTo</i> is set to a timestamp earlier than the earliest backtrack time, an error occurs.</param>
		/// <returns>Success</returns>
		public async Task GET_BacktrackDBClusterAsync(string DBClusterIdentifier, System.DateTimeOffset BacktrackTo, bool Force, bool UseEarliestTimeOnPointInTimeUnavailable, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=BacktrackDBCluster?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : Uri.EscapeDataString(DBClusterIdentifier))+"&BacktrackTo=" + BacktrackTo.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&Force="+Force+"&UseEarliestTimeOnPointInTimeUnavailable="+UseEarliestTimeOnPointInTimeUnavailable+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Cancels an export task in progress that is exporting a snapshot to Amazon S3. Any data that has already been written to the S3 bucket isn't removed.
		/// GET_CancelExportTask /#Action=CancelExportTask
		/// </summary>
		/// <param name="ExportTaskIdentifier">The identifier of the snapshot export task to cancel.</param>
		/// <returns>Success</returns>
		public async Task GET_CancelExportTaskAsync(string ExportTaskIdentifier, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=CancelExportTask?ExportTaskIdentifier=" + (ExportTaskIdentifier==null? "" : Uri.EscapeDataString(ExportTaskIdentifier))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Copies the specified DB cluster parameter group.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_CopyDBClusterParameterGroup /#Action=CopyDBClusterParameterGroup
		/// </summary>
		/// <param name="SourceDBClusterParameterGroupIdentifier"><p>The identifier or Amazon Resource Name (ARN) for the source DB cluster parameter group. For information about creating an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing"> Constructing an ARN for Amazon RDS</a> in the <i>Amazon Aurora User Guide</i>. </p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid DB cluster parameter group.</p> </li> <li> <p>If the source DB cluster parameter group is in the same AWS Region as the copy, specify a valid DB parameter group identifier, for example <code>my-db-cluster-param-group</code>, or a valid ARN.</p> </li> <li> <p>If the source DB parameter group is in a different AWS Region than the copy, specify a valid DB cluster parameter group ARN, for example <code>arn:aws:rds:us-east-1:123456789012:cluster-pg:custom-cluster-group1</code>.</p> </li> </ul></param>
		/// <param name="TargetDBClusterParameterGroupIdentifier"><p>The identifier for the copied DB cluster parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Can't be null, empty, or blank</p> </li> <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-cluster-param-group1</code> </p></param>
		/// <param name="TargetDBClusterParameterGroupDescription">A description for the copied DB cluster parameter group.</param>
		/// <returns>Success</returns>
		public async Task GET_CopyDBClusterParameterGroupAsync(string SourceDBClusterParameterGroupIdentifier, string TargetDBClusterParameterGroupIdentifier, string TargetDBClusterParameterGroupDescription, Tag[] Tags, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=CopyDBClusterParameterGroup?SourceDBClusterParameterGroupIdentifier=" + (SourceDBClusterParameterGroupIdentifier==null? "" : Uri.EscapeDataString(SourceDBClusterParameterGroupIdentifier))+"&TargetDBClusterParameterGroupIdentifier=" + (TargetDBClusterParameterGroupIdentifier==null? "" : Uri.EscapeDataString(TargetDBClusterParameterGroupIdentifier))+"&TargetDBClusterParameterGroupDescription=" + (TargetDBClusterParameterGroupDescription==null? "" : Uri.EscapeDataString(TargetDBClusterParameterGroupDescription))+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Copies a snapshot of a DB cluster.</p> <p>To copy a DB cluster snapshot from a shared manual DB cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code> must be the Amazon Resource Name (ARN) of the shared DB cluster snapshot.</p> <p>You can copy an encrypted DB cluster snapshot from another AWS Region. In that case, the AWS Region where you call the <code>CopyDBClusterSnapshot</code> action is the destination AWS Region for the encrypted DB cluster snapshot to be copied to. To copy an encrypted DB cluster snapshot from another AWS Region, you must provide the following values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The AWS Key Management System (AWS KMS) key identifier for the key to use to encrypt the copy of the DB cluster snapshot in the destination AWS Region.</p> </li> <li> <p> <code>PreSignedUrl</code> - A URL that contains a Signature Version 4 signed request for the <code>CopyDBClusterSnapshot</code> action to be called in the source AWS Region where the DB cluster snapshot is copied from. The pre-signed URL must be a valid request for the <code>CopyDBClusterSnapshot</code> API action that can be executed in the source AWS Region that contains the encrypted DB cluster snapshot to be copied.</p> <p>The pre-signed URL request must contain the following parameter values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The KMS key identifier for the key to use to encrypt the copy of the DB cluster snapshot in the destination AWS Region. This is the same identifier for both the <code>CopyDBClusterSnapshot</code> action that is called in the destination AWS Region, and the action contained in the pre-signed URL.</p> </li> <li> <p> <code>DestinationRegion</code> - The name of the AWS Region that the DB cluster snapshot is to be created in.</p> </li> <li> <p> <code>SourceDBClusterSnapshotIdentifier</code> - The DB cluster snapshot identifier for the encrypted DB cluster snapshot to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source AWS Region. For example, if you are copying an encrypted DB cluster snapshot from the us-west-2 AWS Region, then your <code>SourceDBClusterSnapshotIdentifier</code> looks like the following example: <code>arn:aws:rds:us-west-2:123456789012:cluster-snapshot:aurora-cluster1-snapshot-20161115</code>.</p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html"> Authenticating Requests: Using Query Parameters (AWS Signature Version 4)</a> and <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html"> Signature Version 4 Signing Process</a>.</p> <note> <p>If you are using an AWS SDK tool or the AWS CLI, you can specify <code>SourceRegion</code> (or <code>--source-region</code> for the AWS CLI) instead of specifying <code>PreSignedUrl</code> manually. Specifying <code>SourceRegion</code> autogenerates a pre-signed URL that is a valid request for the operation that can be executed in the source AWS Region.</p> </note> </li> <li> <p> <code>TargetDBClusterSnapshotIdentifier</code> - The identifier for the new copy of the DB cluster snapshot in the destination AWS Region.</p> </li> <li> <p> <code>SourceDBClusterSnapshotIdentifier</code> - The DB cluster snapshot identifier for the encrypted DB cluster snapshot to be copied. This identifier must be in the ARN format for the source AWS Region and is the same value as the <code>SourceDBClusterSnapshotIdentifier</code> in the pre-signed URL. </p> </li> </ul> <p>To cancel the copy operation once it is in progress, delete the target DB cluster snapshot identified by <code>TargetDBClusterSnapshotIdentifier</code> while that DB cluster snapshot is in "copying" status.</p> <p>For more information on copying encrypted DB cluster snapshots from one AWS Region to another, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_CopySnapshot.html"> Copying a Snapshot</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_CopyDBClusterSnapshot /#Action=CopyDBClusterSnapshot
		/// </summary>
		/// <param name="SourceDBClusterSnapshotIdentifier"><p>The identifier of the DB cluster snapshot to copy. This parameter isn't case-sensitive.</p> <p>You can't copy an encrypted, shared DB cluster snapshot from one AWS Region to another.</p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid system snapshot in the "available" state.</p> </li> <li> <p>If the source snapshot is in the same AWS Region as the copy, specify a valid DB snapshot identifier.</p> </li> <li> <p>If the source snapshot is in a different AWS Region than the copy, specify a valid DB cluster snapshot ARN. For more information, go to <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_CopySnapshot.html#USER_CopySnapshot.AcrossRegions"> Copying Snapshots Across AWS Regions</a> in the <i>Amazon Aurora User Guide.</i> </p> </li> </ul> <p>Example: <code>my-cluster-snapshot1</code> </p></param>
		/// <param name="TargetDBClusterSnapshotIdentifier"><p>The identifier of the new DB cluster snapshot to create from the source DB cluster snapshot. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster-snapshot2</code> </p></param>
		/// <param name="KmsKeyId"><p>The AWS KMS key ID for an encrypted DB cluster snapshot. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key. </p> <p>If you copy an encrypted DB cluster snapshot from your AWS account, you can specify a value for <code>KmsKeyId</code> to encrypt the copy with a new KMS encryption key. If you don't specify a value for <code>KmsKeyId</code>, then the copy of the DB cluster snapshot is encrypted with the same KMS key as the source DB cluster snapshot. </p> <p>If you copy an encrypted DB cluster snapshot that is shared from another AWS account, then you must specify a value for <code>KmsKeyId</code>. </p> <p>To copy an encrypted DB cluster snapshot to another AWS Region, you must set <code>KmsKeyId</code> to the KMS key ID you want to use to encrypt the copy of the DB cluster snapshot in the destination AWS Region. KMS encryption keys are specific to the AWS Region that they are created in, and you can't use encryption keys from one AWS Region in another AWS Region.</p> <p>If you copy an unencrypted DB cluster snapshot and specify a value for the <code>KmsKeyId</code> parameter, an error is returned.</p></param>
		/// <param name="PreSignedUrl"><p>The URL that contains a Signature Version 4 signed request for the <code>CopyDBClusterSnapshot</code> API action in the AWS Region that contains the source DB cluster snapshot to copy. The <code>PreSignedUrl</code> parameter must be used when copying an encrypted DB cluster snapshot from another AWS Region. Don't specify <code>PreSignedUrl</code> when you are copying an encrypted DB cluster snapshot in the same AWS Region.</p> <p>The pre-signed URL must be a valid request for the <code>CopyDBClusterSnapshot</code> API action that can be executed in the source AWS Region that contains the encrypted DB cluster snapshot to be copied. The pre-signed URL request must contain the following parameter values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The AWS KMS key identifier for the key to use to encrypt the copy of the DB cluster snapshot in the destination AWS Region. This is the same identifier for both the <code>CopyDBClusterSnapshot</code> action that is called in the destination AWS Region, and the action contained in the pre-signed URL.</p> </li> <li> <p> <code>DestinationRegion</code> - The name of the AWS Region that the DB cluster snapshot is to be created in.</p> </li> <li> <p> <code>SourceDBClusterSnapshotIdentifier</code> - The DB cluster snapshot identifier for the encrypted DB cluster snapshot to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source AWS Region. For example, if you are copying an encrypted DB cluster snapshot from the us-west-2 AWS Region, then your <code>SourceDBClusterSnapshotIdentifier</code> looks like the following example: <code>arn:aws:rds:us-west-2:123456789012:cluster-snapshot:aurora-cluster1-snapshot-20161115</code>.</p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html"> Authenticating Requests: Using Query Parameters (AWS Signature Version 4)</a> and <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html"> Signature Version 4 Signing Process</a>.</p> <note> <p>If you are using an AWS SDK tool or the AWS CLI, you can specify <code>SourceRegion</code> (or <code>--source-region</code> for the AWS CLI) instead of specifying <code>PreSignedUrl</code> manually. Specifying <code>SourceRegion</code> autogenerates a pre-signed URL that is a valid request for the operation that can be executed in the source AWS Region.</p> </note><note><p>If you supply a value for this operation's <code>SourceRegion</code> parameter, a pre-signed URL will be calculated on your behalf.</p></note></param>
		/// <param name="CopyTags">A value that indicates whether to copy all tags from the source DB cluster snapshot to the target DB cluster snapshot. By default, tags are not copied.</param>
		/// <param name="SourceRegion">The ID of the region that contains the snapshot to be copied.</param>
		/// <returns>Success</returns>
		public async Task GET_CopyDBClusterSnapshotAsync(string SourceDBClusterSnapshotIdentifier, string TargetDBClusterSnapshotIdentifier, string KmsKeyId, string PreSignedUrl, bool CopyTags, Tag[] Tags, string SourceRegion, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=CopyDBClusterSnapshot?SourceDBClusterSnapshotIdentifier=" + (SourceDBClusterSnapshotIdentifier==null? "" : Uri.EscapeDataString(SourceDBClusterSnapshotIdentifier))+"&TargetDBClusterSnapshotIdentifier=" + (TargetDBClusterSnapshotIdentifier==null? "" : Uri.EscapeDataString(TargetDBClusterSnapshotIdentifier))+"&KmsKeyId=" + (KmsKeyId==null? "" : Uri.EscapeDataString(KmsKeyId))+"&PreSignedUrl=" + (PreSignedUrl==null? "" : Uri.EscapeDataString(PreSignedUrl))+"&CopyTags="+CopyTags+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&SourceRegion=" + (SourceRegion==null? "" : Uri.EscapeDataString(SourceRegion))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Copies the specified DB parameter group.
		/// GET_CopyDBParameterGroup /#Action=CopyDBParameterGroup
		/// </summary>
		/// <param name="SourceDBParameterGroupIdentifier"><p> The identifier or ARN for the source DB parameter group. For information about creating an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing"> Constructing an ARN for Amazon RDS</a> in the <i>Amazon RDS User Guide</i>. </p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid DB parameter group.</p> </li> <li> <p>Must specify a valid DB parameter group identifier, for example <code>my-db-param-group</code>, or a valid ARN.</p> </li> </ul></param>
		/// <param name="TargetDBParameterGroupIdentifier"><p>The identifier for the copied DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Can't be null, empty, or blank</p> </li> <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-db-parameter-group</code> </p></param>
		/// <param name="TargetDBParameterGroupDescription">A description for the copied DB parameter group.</param>
		/// <returns>Success</returns>
		public async Task GET_CopyDBParameterGroupAsync(string SourceDBParameterGroupIdentifier, string TargetDBParameterGroupIdentifier, string TargetDBParameterGroupDescription, Tag[] Tags, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=CopyDBParameterGroup?SourceDBParameterGroupIdentifier=" + (SourceDBParameterGroupIdentifier==null? "" : Uri.EscapeDataString(SourceDBParameterGroupIdentifier))+"&TargetDBParameterGroupIdentifier=" + (TargetDBParameterGroupIdentifier==null? "" : Uri.EscapeDataString(TargetDBParameterGroupIdentifier))+"&TargetDBParameterGroupDescription=" + (TargetDBParameterGroupDescription==null? "" : Uri.EscapeDataString(TargetDBParameterGroupDescription))+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Copies the specified DB snapshot. The source DB snapshot must be in the "available" state.</p> <p>You can copy a snapshot from one AWS Region to another. In that case, the AWS Region where you call the <code>CopyDBSnapshot</code> action is the destination AWS Region for the DB snapshot copy. </p> <p>For more information about copying snapshots, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_CopySnapshot.html#USER_CopyDBSnapshot">Copying a DB Snapshot</a> in the <i>Amazon RDS User Guide.</i> </p>
		/// GET_CopyDBSnapshot /#Action=CopyDBSnapshot
		/// </summary>
		/// <param name="SourceDBSnapshotIdentifier"><p>The identifier for the source DB snapshot.</p> <p>If the source snapshot is in the same AWS Region as the copy, specify a valid DB snapshot identifier. For example, you might specify <code>rds:mysql-instance1-snapshot-20130805</code>. </p> <p>If the source snapshot is in a different AWS Region than the copy, specify a valid DB snapshot ARN. For example, you might specify <code>arn:aws:rds:us-west-2:123456789012:snapshot:mysql-instance1-snapshot-20130805</code>. </p> <p>If you are copying from a shared manual DB snapshot, this parameter must be the Amazon Resource Name (ARN) of the shared DB snapshot. </p> <p>If you are copying an encrypted snapshot this parameter must be in the ARN format for the source AWS Region, and must match the <code>SourceDBSnapshotIdentifier</code> in the <code>PreSignedUrl</code> parameter. </p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid system snapshot in the "available" state.</p> </li> </ul> <p>Example: <code>rds:mydb-2012-04-02-00-01</code> </p> <p>Example: <code>arn:aws:rds:us-west-2:123456789012:snapshot:mysql-instance1-snapshot-20130805</code> </p></param>
		/// <param name="TargetDBSnapshotIdentifier"><p>The identifier for the copy of the snapshot. </p> <p>Constraints:</p> <ul> <li> <p>Can't be null, empty, or blank</p> </li> <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-db-snapshot</code> </p></param>
		/// <param name="KmsKeyId"><p>The AWS KMS key ID for an encrypted DB snapshot. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key. </p> <p>If you copy an encrypted DB snapshot from your AWS account, you can specify a value for this parameter to encrypt the copy with a new KMS encryption key. If you don't specify a value for this parameter, then the copy of the DB snapshot is encrypted with the same KMS key as the source DB snapshot. </p> <p>If you copy an encrypted DB snapshot that is shared from another AWS account, then you must specify a value for this parameter. </p> <p>If you specify this parameter when you copy an unencrypted snapshot, the copy is encrypted. </p> <p>If you copy an encrypted snapshot to a different AWS Region, then you must specify a KMS key for the destination AWS Region. KMS encryption keys are specific to the AWS Region that they are created in, and you can't use encryption keys from one AWS Region in another AWS Region. </p></param>
		/// <param name="CopyTags">A value that indicates whether to copy all tags from the source DB snapshot to the target DB snapshot. By default, tags are not copied.</param>
		/// <param name="PreSignedUrl"><p>The URL that contains a Signature Version 4 signed request for the <code>CopyDBSnapshot</code> API action in the source AWS Region that contains the source DB snapshot to copy. </p> <p>You must specify this parameter when you copy an encrypted DB snapshot from another AWS Region by using the Amazon RDS API. Don't specify <code>PreSignedUrl</code> when you are copying an encrypted DB snapshot in the same AWS Region.</p> <p>The presigned URL must be a valid request for the <code>CopyDBSnapshot</code> API action that can be executed in the source AWS Region that contains the encrypted DB snapshot to be copied. The presigned URL request must contain the following parameter values: </p> <ul> <li> <p> <code>DestinationRegion</code> - The AWS Region that the encrypted DB snapshot is copied to. This AWS Region is the same one where the <code>CopyDBSnapshot</code> action is called that contains this presigned URL. </p> <p>For example, if you copy an encrypted DB snapshot from the us-west-2 AWS Region to the us-east-1 AWS Region, then you call the <code>CopyDBSnapshot</code> action in the us-east-1 AWS Region and provide a presigned URL that contains a call to the <code>CopyDBSnapshot</code> action in the us-west-2 AWS Region. For this example, the <code>DestinationRegion</code> in the presigned URL must be set to the us-east-1 AWS Region. </p> </li> <li> <p> <code>KmsKeyId</code> - The AWS KMS key identifier for the key to use to encrypt the copy of the DB snapshot in the destination AWS Region. This is the same identifier for both the <code>CopyDBSnapshot</code> action that is called in the destination AWS Region, and the action contained in the presigned URL. </p> </li> <li> <p> <code>SourceDBSnapshotIdentifier</code> - The DB snapshot identifier for the encrypted snapshot to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source AWS Region. For example, if you are copying an encrypted DB snapshot from the us-west-2 AWS Region, then your <code>SourceDBSnapshotIdentifier</code> looks like the following example: <code>arn:aws:rds:us-west-2:123456789012:snapshot:mysql-instance1-snapshot-20161115</code>. </p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html">Authenticating Requests: Using Query Parameters (AWS Signature Version 4)</a> and <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4 Signing Process</a>. </p> <note> <p>If you are using an AWS SDK tool or the AWS CLI, you can specify <code>SourceRegion</code> (or <code>--source-region</code> for the AWS CLI) instead of specifying <code>PreSignedUrl</code> manually. Specifying <code>SourceRegion</code> autogenerates a pre-signed URL that is a valid request for the operation that can be executed in the source AWS Region.</p> </note><note><p>If you supply a value for this operation's <code>SourceRegion</code> parameter, a pre-signed URL will be calculated on your behalf.</p></note></param>
		/// <param name="OptionGroupName"><p>The name of an option group to associate with the copy of the snapshot.</p> <p>Specify this option if you are copying a snapshot from one AWS Region to another, and your DB instance uses a nondefault option group. If your source DB instance uses Transparent Data Encryption for Oracle or Microsoft SQL Server, you must specify this option when copying across AWS Regions. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_CopySnapshot.html#USER_CopySnapshot.Options">Option Group Considerations</a> in the <i>Amazon RDS User Guide.</i> </p></param>
		/// <param name="SourceRegion">The ID of the region that contains the snapshot to be copied.</param>
		/// <returns>Success</returns>
		public async Task GET_CopyDBSnapshotAsync(string SourceDBSnapshotIdentifier, string TargetDBSnapshotIdentifier, string KmsKeyId, Tag[] Tags, bool CopyTags, string PreSignedUrl, string OptionGroupName, string SourceRegion, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=CopyDBSnapshot?SourceDBSnapshotIdentifier=" + (SourceDBSnapshotIdentifier==null? "" : Uri.EscapeDataString(SourceDBSnapshotIdentifier))+"&TargetDBSnapshotIdentifier=" + (TargetDBSnapshotIdentifier==null? "" : Uri.EscapeDataString(TargetDBSnapshotIdentifier))+"&KmsKeyId=" + (KmsKeyId==null? "" : Uri.EscapeDataString(KmsKeyId))+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&CopyTags="+CopyTags+"&PreSignedUrl=" + (PreSignedUrl==null? "" : Uri.EscapeDataString(PreSignedUrl))+"&OptionGroupName=" + (OptionGroupName==null? "" : Uri.EscapeDataString(OptionGroupName))+"&SourceRegion=" + (SourceRegion==null? "" : Uri.EscapeDataString(SourceRegion))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Copies the specified option group.
		/// GET_CopyOptionGroup /#Action=CopyOptionGroup
		/// </summary>
		/// <param name="SourceOptionGroupIdentifier"><p>The identifier or ARN for the source option group. For information about creating an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing"> Constructing an ARN for Amazon RDS</a> in the <i>Amazon RDS User Guide</i>. </p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid option group.</p> </li> <li> <p>If the source option group is in the same AWS Region as the copy, specify a valid option group identifier, for example <code>my-option-group</code>, or a valid ARN.</p> </li> <li> <p>If the source option group is in a different AWS Region than the copy, specify a valid option group ARN, for example <code>arn:aws:rds:us-west-2:123456789012:og:special-options</code>.</p> </li> </ul></param>
		/// <param name="TargetOptionGroupIdentifier"><p>The identifier for the copied option group.</p> <p>Constraints:</p> <ul> <li> <p>Can't be null, empty, or blank</p> </li> <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-option-group</code> </p></param>
		/// <param name="TargetOptionGroupDescription">The description for the copied option group.</param>
		/// <returns>Success</returns>
		public async Task GET_CopyOptionGroupAsync(string SourceOptionGroupIdentifier, string TargetOptionGroupIdentifier, string TargetOptionGroupDescription, Tag[] Tags, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=CopyOptionGroup?SourceOptionGroupIdentifier=" + (SourceOptionGroupIdentifier==null? "" : Uri.EscapeDataString(SourceOptionGroupIdentifier))+"&TargetOptionGroupIdentifier=" + (TargetOptionGroupIdentifier==null? "" : Uri.EscapeDataString(TargetOptionGroupIdentifier))+"&TargetOptionGroupDescription=" + (TargetOptionGroupDescription==null? "" : Uri.EscapeDataString(TargetOptionGroupDescription))+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a custom Availability Zone (AZ).</p> <p>A custom AZ is an on-premises AZ that is integrated with a VMware vSphere cluster.</p> <p>For more information about RDS on VMware, see the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html"> <i>RDS on VMware User Guide.</i> </a> </p>
		/// GET_CreateCustomAvailabilityZone /#Action=CreateCustomAvailabilityZone
		/// </summary>
		/// <param name="CustomAvailabilityZoneName">The name of the custom Availability Zone (AZ).</param>
		/// <param name="ExistingVpnId">The ID of an existing virtual private network (VPN) between the Amazon RDS website and the VMware vSphere cluster.</param>
		/// <param name="NewVpnTunnelName"><p>The name of a new VPN tunnel between the Amazon RDS website and the VMware vSphere cluster.</p> <p>Specify this parameter only if <code>ExistingVpnId</code> isn't specified.</p></param>
		/// <param name="VpnTunnelOriginatorIP"><p>The IP address of network traffic from your on-premises data center. A custom AZ receives the network traffic.</p> <p>Specify this parameter only if <code>ExistingVpnId</code> isn't specified.</p></param>
		/// <returns>Success</returns>
		public async Task GET_CreateCustomAvailabilityZoneAsync(string CustomAvailabilityZoneName, string ExistingVpnId, string NewVpnTunnelName, string VpnTunnelOriginatorIP, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=CreateCustomAvailabilityZone?CustomAvailabilityZoneName=" + (CustomAvailabilityZoneName==null? "" : Uri.EscapeDataString(CustomAvailabilityZoneName))+"&ExistingVpnId=" + (ExistingVpnId==null? "" : Uri.EscapeDataString(ExistingVpnId))+"&NewVpnTunnelName=" + (NewVpnTunnelName==null? "" : Uri.EscapeDataString(NewVpnTunnelName))+"&VpnTunnelOriginatorIP=" + (VpnTunnelOriginatorIP==null? "" : Uri.EscapeDataString(VpnTunnelOriginatorIP))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a new Amazon Aurora DB cluster.</p> <p>You can use the <code>ReplicationSourceIdentifier</code> parameter to create the DB cluster as a read replica of another DB cluster or Amazon RDS MySQL DB instance. For cross-region replication where the DB cluster identified by <code>ReplicationSourceIdentifier</code> is encrypted, you must also specify the <code>PreSignedUrl</code> parameter.</p> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_CreateDBCluster /#Action=CreateDBCluster
		/// </summary>
		/// <param name="AvailabilityZones">A list of Availability Zones (AZs) where instances in the DB cluster can be created. For information on AWS Regions and Availability Zones, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.RegionsAndAvailabilityZones.html">Choosing the Regions and Availability Zones</a> in the <i>Amazon Aurora User Guide</i>. </param>
		/// <param name="BackupRetentionPeriod"><p>The number of days for which automated backups are retained.</p> <p>Default: 1</p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 1 to 35</p> </li> </ul></param>
		/// <param name="CharacterSetName">A value that indicates that the DB cluster should be associated with the specified CharacterSet.</param>
		/// <param name="DatabaseName">The name for your database of up to 64 alphanumeric characters. If you do not provide a name, Amazon RDS doesn't create a database in the DB cluster you are creating.</param>
		/// <param name="DBClusterIdentifier"><p>The DB cluster identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster1</code> </p></param>
		/// <param name="DBClusterParameterGroupName"><p> The name of the DB cluster parameter group to associate with this DB cluster. If you do not specify a value, then the default DB cluster parameter group for the specified DB engine and version is used. </p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DB cluster parameter group.</p> </li> </ul></param>
		/// <param name="VpcSecurityGroupIds">A list of EC2 VPC security groups to associate with this DB cluster.</param>
		/// <param name="DBSubnetGroupName"><p>A DB subnet group to associate with this DB cluster.</p> <p>Constraints: Must match the name of an existing DBSubnetGroup. Must not be default.</p> <p>Example: <code>mySubnetgroup</code> </p></param>
		/// <param name="Engine"><p>The name of the database engine to be used for this DB cluster.</p> <p>Valid Values: <code>aurora</code> (for MySQL 5.6-compatible Aurora), <code>aurora-mysql</code> (for MySQL 5.7-compatible Aurora), and <code>aurora-postgresql</code> </p></param>
		/// <param name="EngineVersion"><p>The version number of the database engine to use.</p> <p>To list all of the available engine versions for <code>aurora</code> (for MySQL 5.6-compatible Aurora), use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora --query "DBEngineVersions[].EngineVersion"</code> </p> <p>To list all of the available engine versions for <code>aurora-mysql</code> (for MySQL 5.7-compatible Aurora), use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"</code> </p> <p>To list all of the available engine versions for <code>aurora-postgresql</code>, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"</code> </p> <p> <b>Aurora MySQL</b> </p> <p>Example: <code>5.6.10a</code>, <code>5.6.mysql_aurora.1.19.2</code>, <code>5.7.12</code>, <code>5.7.mysql_aurora.2.04.5</code> </p> <p> <b>Aurora PostgreSQL</b> </p> <p>Example: <code>9.6.3</code>, <code>10.7</code> </p></param>
		/// <param name="Port"><p>The port number on which the instances in the DB cluster accept connections.</p> <p> Default: <code>3306</code> if engine is set as aurora or <code>5432</code> if set to aurora-postgresql. </p></param>
		/// <param name="MasterUsername"><p>The name of the master user for the DB cluster.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 16 letters or numbers.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't be a reserved word for the chosen database engine.</p> </li> </ul></param>
		/// <param name="MasterUserPassword"><p>The password for the master database user. This password can contain any printable ASCII character except "/", """, or "@".</p> <p>Constraints: Must contain from 8 to 41 characters.</p></param>
		/// <param name="OptionGroupName"><p>A value that indicates that the DB cluster should be associated with the specified option group.</p> <p>Permanent options can't be removed from an option group. The option group can't be removed from a DB cluster once it is associated with a DB cluster.</p></param>
		/// <param name="PreferredBackupWindow"><p>The daily time range during which automated backups are created if automated backups are enabled using the <code>BackupRetentionPeriod</code> parameter. </p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region. To see the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora"> Adjusting the Preferred DB Cluster Maintenance Window</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul></param>
		/// <param name="PreferredMaintenanceWindow"><p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p> <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. To see the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora"> Adjusting the Preferred DB Cluster Maintenance Window</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p> <p>Constraints: Minimum 30-minute window.</p></param>
		/// <param name="ReplicationSourceIdentifier">The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB cluster is created as a read replica.</param>
		/// <param name="Tags">Tags to assign to the DB cluster.</param>
		/// <param name="StorageEncrypted">A value that indicates whether the DB cluster is encrypted.</param>
		/// <param name="KmsKeyId"><p>The AWS KMS key identifier for an encrypted DB cluster.</p> <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are creating a DB cluster with the same AWS account that owns the KMS encryption key used to encrypt the new DB cluster, then you can use the KMS key alias instead of the ARN for the KMS encryption key.</p> <p>If an encryption key isn't specified in <code>KmsKeyId</code>:</p> <ul> <li> <p>If <code>ReplicationSourceIdentifier</code> identifies an encrypted source, then Amazon RDS will use the encryption key used to encrypt the source. Otherwise, Amazon RDS will use your default encryption key. </p> </li> <li> <p>If the <code>StorageEncrypted</code> parameter is enabled and <code>ReplicationSourceIdentifier</code> isn't specified, then Amazon RDS will use your default encryption key.</p> </li> </ul> <p>AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.</p> <p>If you create a read replica of an encrypted DB cluster in another AWS Region, you must set <code>KmsKeyId</code> to a KMS key ID that is valid in the destination AWS Region. This key is used to encrypt the read replica in that AWS Region.</p></param>
		/// <param name="PreSignedUrl"><p>A URL that contains a Signature Version 4 signed request for the <code>CreateDBCluster</code> action to be called in the source AWS Region where the DB cluster is replicated from. You only need to specify <code>PreSignedUrl</code> when you are performing cross-region replication from an encrypted DB cluster.</p> <p>The pre-signed URL must be a valid request for the <code>CreateDBCluster</code> API action that can be executed in the source AWS Region that contains the encrypted DB cluster to be copied.</p> <p>The pre-signed URL request must contain the following parameter values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The AWS KMS key identifier for the key to use to encrypt the copy of the DB cluster in the destination AWS Region. This should refer to the same KMS key for both the <code>CreateDBCluster</code> action that is called in the destination AWS Region, and the action contained in the pre-signed URL.</p> </li> <li> <p> <code>DestinationRegion</code> - The name of the AWS Region that Aurora read replica will be created in.</p> </li> <li> <p> <code>ReplicationSourceIdentifier</code> - The DB cluster identifier for the encrypted DB cluster to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source AWS Region. For example, if you are copying an encrypted DB cluster from the us-west-2 AWS Region, then your <code>ReplicationSourceIdentifier</code> would look like Example: <code>arn:aws:rds:us-west-2:123456789012:cluster:aurora-cluster1</code>.</p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html"> Authenticating Requests: Using Query Parameters (AWS Signature Version 4)</a> and <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html"> Signature Version 4 Signing Process</a>.</p> <note> <p>If you are using an AWS SDK tool or the AWS CLI, you can specify <code>SourceRegion</code> (or <code>--source-region</code> for the AWS CLI) instead of specifying <code>PreSignedUrl</code> manually. Specifying <code>SourceRegion</code> autogenerates a pre-signed URL that is a valid request for the operation that can be executed in the source AWS Region.</p> </note><note><p>If you supply a value for this operation's <code>SourceRegion</code> parameter, a pre-signed URL will be calculated on your behalf.</p></note></param>
		/// <param name="EnableIAMDatabaseAuthentication"><p>A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication</a> in the <i>Amazon Aurora User Guide.</i> </p></param>
		/// <param name="BacktrackWindow"><p>The target backtrack window, in seconds. To disable backtracking, set this value to 0. </p> <p>Default: 0</p> <p>Constraints:</p> <ul> <li> <p>If specified, this value must be set to a number from 0 to 259,200 (72 hours).</p> </li> </ul></param>
		/// <param name="EnableCloudwatchLogsExports">The list of log types that need to be enabled for exporting to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon Aurora User Guide</i>.</param>
		/// <param name="EngineMode"><p>The DB engine mode of the DB cluster, either <code>provisioned</code>, <code>serverless</code>, <code>parallelquery</code>, <code>global</code>, or <code>multimaster</code>.</p> <note> <p> <code>global</code> engine mode only applies for global database clusters created with Aurora MySQL version 5.6.10a. For higher Aurora MySQL versions, the clusters in a global database use <code>provisioned</code> engine mode. </p> </note> <p>Limitations and requirements apply to some DB engine modes. For more information, see the following sections in the <i>Amazon Aurora User Guide</i>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html#aurora-serverless.limitations"> Limitations of Aurora Serverless</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-mysql-parallel-query.html#aurora-mysql-parallel-query-limitations"> Limitations of Parallel Query</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html#aurora-global-database.limitations"> Requirements for Aurora Global Databases</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-multi-master.html#aurora-multi-master-limitations"> Limitations of Multi-Master Clusters</a> </p> </li> </ul></param>
		/// <param name="ScalingConfiguration">For DB clusters in <code>serverless</code> DB engine mode, the scaling properties of the DB cluster.</param>
		/// <param name="DeletionProtection">A value that indicates whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled.</param>
		/// <param name="GlobalClusterIdentifier"> The global cluster ID of an Aurora cluster that becomes the primary cluster in the new global database cluster. </param>
		/// <param name="EnableHttpEndpoint"><p>A value that indicates whether to enable the HTTP endpoint for an Aurora Serverless DB cluster. By default, the HTTP endpoint is disabled.</p> <p>When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless DB cluster. You can also query your database from inside the RDS console with the query editor.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html">Using the Data API for Aurora Serverless</a> in the <i>Amazon Aurora User Guide</i>.</p></param>
		/// <param name="CopyTagsToSnapshot">A value that indicates whether to copy all tags from the DB cluster to snapshots of the DB cluster. The default is not to copy them.</param>
		/// <param name="Domain"><p>The Active Directory directory ID to create the DB cluster in.</p> <p> For Amazon Aurora DB clusters, Amazon RDS can use Kerberos Authentication to authenticate users that connect to the DB cluster. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html">Kerberos Authentication</a> in the <i>Amazon Aurora User Guide</i>. </p></param>
		/// <param name="DomainIAMRoleName">Specify the name of the IAM role to be used when making API calls to the Directory Service.</param>
		/// <param name="SourceRegion">The ID of the region that contains the source for the read replica.</param>
		/// <returns>Success</returns>
		public async Task GET_CreateDBClusterAsync(
					String[] AvailabilityZones, 
					int BackupRetentionPeriod, 
					string CharacterSetName, 
					string DatabaseName, 
					string DBClusterIdentifier, 
					string DBClusterParameterGroupName, 
					String[] VpcSecurityGroupIds, 
					string DBSubnetGroupName, 
					string Engine, 
					string EngineVersion, 
					int Port, 
					string MasterUsername, 
					string MasterUserPassword, 
					string OptionGroupName, 
					string PreferredBackupWindow, 
					string PreferredMaintenanceWindow, 
					string ReplicationSourceIdentifier, 
					Tag[] Tags, 
					bool StorageEncrypted, 
					string KmsKeyId, 
					string PreSignedUrl, 
					bool EnableIAMDatabaseAuthentication, 
					int BacktrackWindow, 
					String[] EnableCloudwatchLogsExports, 
					string EngineMode, 
					string ScalingConfiguration, 
					bool DeletionProtection, 
					string GlobalClusterIdentifier, 
					bool EnableHttpEndpoint, 
					bool CopyTagsToSnapshot, 
					string Domain, 
					string DomainIAMRoleName, 
					string SourceRegion, 
					string Action, 
					string Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=CreateDBCluster?"+String.Join("&", AvailabilityZones.Select(z => $"AvailabilityZones={z}"))+"&BackupRetentionPeriod="+BackupRetentionPeriod+"&CharacterSetName=" + (CharacterSetName==null? "" : Uri.EscapeDataString(CharacterSetName))+"&DatabaseName=" + (DatabaseName==null? "" : Uri.EscapeDataString(DatabaseName))+"&DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : Uri.EscapeDataString(DBClusterIdentifier))+"&DBClusterParameterGroupName=" + (DBClusterParameterGroupName==null? "" : Uri.EscapeDataString(DBClusterParameterGroupName))+"&"+String.Join("&", VpcSecurityGroupIds.Select(z => $"VpcSecurityGroupIds={z}"))+"&DBSubnetGroupName=" + (DBSubnetGroupName==null? "" : Uri.EscapeDataString(DBSubnetGroupName))+"&Engine=" + (Engine==null? "" : Uri.EscapeDataString(Engine))+"&EngineVersion=" + (EngineVersion==null? "" : Uri.EscapeDataString(EngineVersion))+"&Port="+Port+"&MasterUsername=" + (MasterUsername==null? "" : Uri.EscapeDataString(MasterUsername))+"&MasterUserPassword=" + (MasterUserPassword==null? "" : Uri.EscapeDataString(MasterUserPassword))+"&OptionGroupName=" + (OptionGroupName==null? "" : Uri.EscapeDataString(OptionGroupName))+"&PreferredBackupWindow=" + (PreferredBackupWindow==null? "" : Uri.EscapeDataString(PreferredBackupWindow))+"&PreferredMaintenanceWindow=" + (PreferredMaintenanceWindow==null? "" : Uri.EscapeDataString(PreferredMaintenanceWindow))+"&ReplicationSourceIdentifier=" + (ReplicationSourceIdentifier==null? "" : Uri.EscapeDataString(ReplicationSourceIdentifier))+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&StorageEncrypted="+StorageEncrypted+"&KmsKeyId=" + (KmsKeyId==null? "" : Uri.EscapeDataString(KmsKeyId))+"&PreSignedUrl=" + (PreSignedUrl==null? "" : Uri.EscapeDataString(PreSignedUrl))+"&EnableIAMDatabaseAuthentication="+EnableIAMDatabaseAuthentication+"&BacktrackWindow="+BacktrackWindow+"&"+String.Join("&", EnableCloudwatchLogsExports.Select(z => $"EnableCloudwatchLogsExports={z}"))+"&EngineMode=" + (EngineMode==null? "" : Uri.EscapeDataString(EngineMode))+"&ScalingConfiguration=" + (ScalingConfiguration==null? "" : Uri.EscapeDataString(ScalingConfiguration))+"&DeletionProtection="+DeletionProtection+"&GlobalClusterIdentifier=" + (GlobalClusterIdentifier==null? "" : Uri.EscapeDataString(GlobalClusterIdentifier))+"&EnableHttpEndpoint="+EnableHttpEndpoint+"&CopyTagsToSnapshot="+CopyTagsToSnapshot+"&Domain=" + (Domain==null? "" : Uri.EscapeDataString(Domain))+"&DomainIAMRoleName=" + (DomainIAMRoleName==null? "" : Uri.EscapeDataString(DomainIAMRoleName))+"&SourceRegion=" + (SourceRegion==null? "" : Uri.EscapeDataString(SourceRegion))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a new custom endpoint and associates it with an Amazon Aurora DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_CreateDBClusterEndpoint /#Action=CreateDBClusterEndpoint
		/// </summary>
		/// <param name="DBClusterIdentifier">The DB cluster identifier of the DB cluster associated with the endpoint. This parameter is stored as a lowercase string.</param>
		/// <param name="DBClusterEndpointIdentifier">The identifier to use for the new endpoint. This parameter is stored as a lowercase string.</param>
		/// <param name="EndpointType">The type of the endpoint. One of: <code>READER</code>, <code>WRITER</code>, <code>ANY</code>.</param>
		/// <param name="StaticMembers">List of DB instance identifiers that are part of the custom endpoint group.</param>
		/// <param name="ExcludedMembers">List of DB instance identifiers that aren't part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty.</param>
		/// <param name="Tags">The tags to be assigned to the Amazon RDS resource.</param>
		/// <returns>Success</returns>
		public async Task GET_CreateDBClusterEndpointAsync(string DBClusterIdentifier, string DBClusterEndpointIdentifier, string EndpointType, String[] StaticMembers, String[] ExcludedMembers, Tag[] Tags, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=CreateDBClusterEndpoint?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : Uri.EscapeDataString(DBClusterIdentifier))+"&DBClusterEndpointIdentifier=" + (DBClusterEndpointIdentifier==null? "" : Uri.EscapeDataString(DBClusterEndpointIdentifier))+"&EndpointType=" + (EndpointType==null? "" : Uri.EscapeDataString(EndpointType))+"&"+String.Join("&", StaticMembers.Select(z => $"StaticMembers={z}"))+"&"+String.Join("&", ExcludedMembers.Select(z => $"ExcludedMembers={z}"))+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a new DB cluster parameter group.</p> <p>Parameters in a DB cluster parameter group apply to all of the instances in a DB cluster.</p> <p> A DB cluster parameter group is initially created with the default parameters for the database engine used by instances in the DB cluster. To provide custom values for any of the parameters, you must modify the group after creating it using <code>ModifyDBClusterParameterGroup</code>. Once you've created a DB cluster parameter group, you need to associate it with your DB cluster using <code>ModifyDBCluster</code>. When you associate a new DB cluster parameter group with a running DB cluster, you need to reboot the DB instances in the DB cluster without failover for the new DB cluster parameter group and associated settings to take effect. </p> <important> <p>After you create a DB cluster parameter group, you should wait at least 5 minutes before creating your first DB cluster that uses that DB cluster parameter group as the default parameter group. This allows Amazon RDS to fully complete the create action before the DB cluster parameter group is used as the default for a new DB cluster. This is especially important for parameters that are critical when creating the default database for a DB cluster, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href="https://console.aws.amazon.com/rds/">Amazon RDS console</a> or the <code>DescribeDBClusterParameters</code> action to verify that your DB cluster parameter group has been created or modified.</p> </important> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_CreateDBClusterParameterGroup /#Action=CreateDBClusterParameterGroup
		/// </summary>
		/// <param name="DBClusterParameterGroupName"><p>The name of the DB cluster parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must match the name of an existing DB cluster parameter group.</p> </li> </ul> <note> <p>This value is stored as a lowercase string.</p> </note></param>
		/// <param name="DBParameterGroupFamily"><p>The DB cluster parameter group family name. A DB cluster parameter group can be associated with one and only one DB cluster parameter group family, and can be applied only to a DB cluster running a database engine and engine version compatible with that DB cluster parameter group family.</p> <p> <b>Aurora MySQL</b> </p> <p>Example: <code>aurora5.6</code>, <code>aurora-mysql5.7</code> </p> <p> <b>Aurora PostgreSQL</b> </p> <p>Example: <code>aurora-postgresql9.6</code> </p></param>
		/// <param name="Description">The description for the DB cluster parameter group.</param>
		/// <param name="Tags">Tags to assign to the DB cluster parameter group.</param>
		/// <returns>Success</returns>
		public async Task GET_CreateDBClusterParameterGroupAsync(string DBClusterParameterGroupName, string DBParameterGroupFamily, string Description, Tag[] Tags, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=CreateDBClusterParameterGroup?DBClusterParameterGroupName=" + (DBClusterParameterGroupName==null? "" : Uri.EscapeDataString(DBClusterParameterGroupName))+"&DBParameterGroupFamily=" + (DBParameterGroupFamily==null? "" : Uri.EscapeDataString(DBParameterGroupFamily))+"&Description=" + (Description==null? "" : Uri.EscapeDataString(Description))+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a snapshot of a DB cluster. For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_CreateDBClusterSnapshot /#Action=CreateDBClusterSnapshot
		/// </summary>
		/// <param name="DBClusterSnapshotIdentifier"><p>The identifier of the DB cluster snapshot. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster1-snapshot1</code> </p></param>
		/// <param name="DBClusterIdentifier"><p>The identifier of the DB cluster to create a snapshot for. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBCluster.</p> </li> </ul> <p>Example: <code>my-cluster1</code> </p></param>
		/// <param name="Tags">The tags to be assigned to the DB cluster snapshot.</param>
		/// <returns>Success</returns>
		public async Task GET_CreateDBClusterSnapshotAsync(string DBClusterSnapshotIdentifier, string DBClusterIdentifier, Tag[] Tags, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=CreateDBClusterSnapshot?DBClusterSnapshotIdentifier=" + (DBClusterSnapshotIdentifier==null? "" : Uri.EscapeDataString(DBClusterSnapshotIdentifier))+"&DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : Uri.EscapeDataString(DBClusterIdentifier))+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new DB instance.
		/// GET_CreateDBInstance /#Action=CreateDBInstance
		/// </summary>
		/// <param name="DBName"><p>The meaning of this parameter differs according to the database engine you use.</p> <p> <b>MySQL</b> </p> <p>The name of the database to create when the DB instance is created. If this parameter isn't specified, no database is created in the DB instance.</p> <p>Constraints:</p> <ul> <li> <p>Must contain 1 to 64 letters or numbers.</p> </li> <li> <p>Can't be a word reserved by the specified database engine</p> </li> </ul> <p> <b>MariaDB</b> </p> <p>The name of the database to create when the DB instance is created. If this parameter isn't specified, no database is created in the DB instance.</p> <p>Constraints:</p> <ul> <li> <p>Must contain 1 to 64 letters or numbers.</p> </li> <li> <p>Can't be a word reserved by the specified database engine</p> </li> </ul> <p> <b>PostgreSQL</b> </p> <p>The name of the database to create when the DB instance is created. If this parameter isn't specified, the default "postgres" database is created in the DB instance.</p> <p>Constraints:</p> <ul> <li> <p>Must contain 1 to 63 letters, numbers, or underscores.</p> </li> <li> <p>Must begin with a letter or an underscore. Subsequent characters can be letters, underscores, or digits (0-9).</p> </li> <li> <p>Can't be a word reserved by the specified database engine</p> </li> </ul> <p> <b>Oracle</b> </p> <p>The Oracle System ID (SID) of the created DB instance. If you specify <code>null</code>, the default value <code>ORCL</code> is used. You can't specify the string NULL, or any other reserved word, for <code>DBName</code>. </p> <p>Default: <code>ORCL</code> </p> <p>Constraints:</p> <ul> <li> <p>Can't be longer than 8 characters</p> </li> </ul> <p> <b>SQL Server</b> </p> <p>Not applicable. Must be null.</p> <p> <b>Amazon Aurora</b> </p> <p>The name of the database to create when the primary instance of the DB cluster is created. If this parameter isn't specified, no database is created in the DB instance.</p> <p>Constraints:</p> <ul> <li> <p>Must contain 1 to 64 letters or numbers.</p> </li> <li> <p>Can't be a word reserved by the specified database engine</p> </li> </ul></param>
		/// <param name="DBInstanceIdentifier"><p>The DB instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>mydbinstance</code> </p></param>
		/// <param name="AllocatedStorage"><p>The amount of storage (in gibibytes) to allocate for the DB instance.</p> <p>Type: Integer</p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. Aurora cluster volumes automatically grow as the amount of data in your database increases, though you are only charged for the space that you use in an Aurora cluster volume.</p> <p> <b>MySQL</b> </p> <p>Constraints to the amount of storage for each storage type are the following: </p> <ul> <li> <p>General Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536.</p> </li> <li> <p>Provisioned IOPS storage (io1): Must be an integer from 100 to 65536.</p> </li> <li> <p>Magnetic storage (standard): Must be an integer from 5 to 3072.</p> </li> </ul> <p> <b>MariaDB</b> </p> <p>Constraints to the amount of storage for each storage type are the following: </p> <ul> <li> <p>General Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536.</p> </li> <li> <p>Provisioned IOPS storage (io1): Must be an integer from 100 to 65536.</p> </li> <li> <p>Magnetic storage (standard): Must be an integer from 5 to 3072.</p> </li> </ul> <p> <b>PostgreSQL</b> </p> <p>Constraints to the amount of storage for each storage type are the following: </p> <ul> <li> <p>General Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536.</p> </li> <li> <p>Provisioned IOPS storage (io1): Must be an integer from 100 to 65536.</p> </li> <li> <p>Magnetic storage (standard): Must be an integer from 5 to 3072.</p> </li> </ul> <p> <b>Oracle</b> </p> <p>Constraints to the amount of storage for each storage type are the following: </p> <ul> <li> <p>General Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536.</p> </li> <li> <p>Provisioned IOPS storage (io1): Must be an integer from 100 to 65536.</p> </li> <li> <p>Magnetic storage (standard): Must be an integer from 10 to 3072.</p> </li> </ul> <p> <b>SQL Server</b> </p> <p>Constraints to the amount of storage for each storage type are the following: </p> <ul> <li> <p>General Purpose (SSD) storage (gp2):</p> <ul> <li> <p>Enterprise and Standard editions: Must be an integer from 200 to 16384.</p> </li> <li> <p>Web and Express editions: Must be an integer from 20 to 16384.</p> </li> </ul> </li> <li> <p>Provisioned IOPS storage (io1):</p> <ul> <li> <p>Enterprise and Standard editions: Must be an integer from 200 to 16384.</p> </li> <li> <p>Web and Express editions: Must be an integer from 100 to 16384.</p> </li> </ul> </li> <li> <p>Magnetic storage (standard):</p> <ul> <li> <p>Enterprise and Standard editions: Must be an integer from 200 to 1024.</p> </li> <li> <p>Web and Express editions: Must be an integer from 20 to 1024.</p> </li> </ul> </li> </ul></param>
		/// <param name="DBInstanceClass">The compute and memory capacity of the DB instance, for example, <code>db.m4.large</code>. Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB Instance Class</a> in the <i>Amazon RDS User Guide.</i> </param>
		/// <param name="Engine"><p>The name of the database engine to be used for this instance. </p> <p>Not every database engine is available for every AWS Region. </p> <p>Valid Values: </p> <ul> <li> <p> <code>aurora</code> (for MySQL 5.6-compatible Aurora)</p> </li> <li> <p> <code>aurora-mysql</code> (for MySQL 5.7-compatible Aurora)</p> </li> <li> <p> <code>aurora-postgresql</code> </p> </li> <li> <p> <code>mariadb</code> </p> </li> <li> <p> <code>mysql</code> </p> </li> <li> <p> <code>oracle-ee</code> </p> </li> <li> <p> <code>oracle-se2</code> </p> </li> <li> <p> <code>oracle-se1</code> </p> </li> <li> <p> <code>oracle-se</code> </p> </li> <li> <p> <code>postgres</code> </p> </li> <li> <p> <code>sqlserver-ee</code> </p> </li> <li> <p> <code>sqlserver-se</code> </p> </li> <li> <p> <code>sqlserver-ex</code> </p> </li> <li> <p> <code>sqlserver-web</code> </p> </li> </ul></param>
		/// <param name="MasterUsername"><p>The name for the master user.</p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. The name for the master user is managed by the DB cluster. </p> <p> <b>MariaDB</b> </p> <p>Constraints:</p> <ul> <li> <p>Required for MariaDB.</p> </li> <li> <p>Must be 1 to 16 letters or numbers.</p> </li> <li> <p>Can't be a reserved word for the chosen database engine.</p> </li> </ul> <p> <b>Microsoft SQL Server</b> </p> <p>Constraints:</p> <ul> <li> <p>Required for SQL Server.</p> </li> <li> <p>Must be 1 to 128 letters or numbers.</p> </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>Can't be a reserved word for the chosen database engine.</p> </li> </ul> <p> <b>MySQL</b> </p> <p>Constraints:</p> <ul> <li> <p>Required for MySQL.</p> </li> <li> <p>Must be 1 to 16 letters or numbers.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't be a reserved word for the chosen database engine.</p> </li> </ul> <p> <b>Oracle</b> </p> <p>Constraints:</p> <ul> <li> <p>Required for Oracle.</p> </li> <li> <p>Must be 1 to 30 letters or numbers.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't be a reserved word for the chosen database engine.</p> </li> </ul> <p> <b>PostgreSQL</b> </p> <p>Constraints:</p> <ul> <li> <p>Required for PostgreSQL.</p> </li> <li> <p>Must be 1 to 63 letters or numbers.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't be a reserved word for the chosen database engine.</p> </li> </ul></param>
		/// <param name="MasterUserPassword"><p>The password for the master user. The password can include any printable ASCII character except "/", """, or "@".</p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. The password for the master user is managed by the DB cluster.</p> <p> <b>MariaDB</b> </p> <p>Constraints: Must contain from 8 to 41 characters.</p> <p> <b>Microsoft SQL Server</b> </p> <p>Constraints: Must contain from 8 to 128 characters.</p> <p> <b>MySQL</b> </p> <p>Constraints: Must contain from 8 to 41 characters.</p> <p> <b>Oracle</b> </p> <p>Constraints: Must contain from 8 to 30 characters.</p> <p> <b>PostgreSQL</b> </p> <p>Constraints: Must contain from 8 to 128 characters.</p></param>
		/// <param name="DBSecurityGroups"><p>A list of DB security groups to associate with this DB instance.</p> <p>Default: The default DB security group for the database engine.</p></param>
		/// <param name="VpcSecurityGroupIds"><p>A list of Amazon EC2 VPC security groups to associate with this DB instance.</p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. The associated list of EC2 VPC security groups is managed by the DB cluster.</p> <p>Default: The default EC2 VPC security group for the DB subnet group's VPC.</p></param>
		/// <param name="AvailabilityZone"><p> The Availability Zone (AZ) where the database will be created. For information on AWS Regions and Availability Zones, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html">Regions and Availability Zones</a>. </p> <p>Default: A random, system-chosen Availability Zone in the endpoint's AWS Region.</p> <p> Example: <code>us-east-1d</code> </p> <p> Constraint: The <code>AvailabilityZone</code> parameter can't be specified if the DB instance is a Multi-AZ deployment. The specified Availability Zone must be in the same AWS Region as the current endpoint. </p> <note> <p>If you're creating a DB instance in an RDS on VMware environment, specify the identifier of the custom Availability Zone to create the DB instance in.</p> <p>For more information about RDS on VMware, see the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html"> <i>RDS on VMware User Guide.</i> </a> </p> </note></param>
		/// <param name="DBSubnetGroupName"><p>A DB subnet group to associate with this DB instance.</p> <p>If there is no DB subnet group, then it is a non-VPC DB instance.</p></param>
		/// <param name="PreferredMaintenanceWindow"><p>The time range each week during which system maintenance can occur, in Universal Coordinated Time (UTC). For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#Concepts.DBMaintenance">Amazon RDS Maintenance Window</a>. </p> <p> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. </p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p> <p>Constraints: Minimum 30-minute window.</p></param>
		/// <param name="DBParameterGroupName"><p>The name of the DB parameter group to associate with this DB instance. If you do not specify a value, then the default DB parameter group for the specified DB engine and version is used.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul></param>
		/// <param name="BackupRetentionPeriod"><p>The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.</p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. The retention period for automated backups is managed by the DB cluster.</p> <p>Default: 1</p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 0 to 35</p> </li> <li> <p>Can't be set to 0 if the DB instance is a source to read replicas</p> </li> </ul></param>
		/// <param name="PreferredBackupWindow"><p> The daily time range during which automated backups are created if automated backups are enabled, using the <code>BackupRetentionPeriod</code> parameter. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow">The Backup Window</a> in the <i>Amazon RDS User Guide</i>. </p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. The daily time range for creating automated backups is managed by the DB cluster.</p> <p> The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region. To see the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow"> Adjusting the Preferred DB Instance Maintenance Window</a> in the <i>Amazon RDS User Guide</i>. </p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul></param>
		/// <param name="Port"><p>The port number on which the database accepts connections.</p> <p> <b>MySQL</b> </p> <p> Default: <code>3306</code> </p> <p> Valid values: <code>1150-65535</code> </p> <p>Type: Integer</p> <p> <b>MariaDB</b> </p> <p> Default: <code>3306</code> </p> <p> Valid values: <code>1150-65535</code> </p> <p>Type: Integer</p> <p> <b>PostgreSQL</b> </p> <p> Default: <code>5432</code> </p> <p> Valid values: <code>1150-65535</code> </p> <p>Type: Integer</p> <p> <b>Oracle</b> </p> <p> Default: <code>1521</code> </p> <p> Valid values: <code>1150-65535</code> </p> <p> <b>SQL Server</b> </p> <p> Default: <code>1433</code> </p> <p> Valid values: <code>1150-65535</code> except <code>1234</code>, <code>1434</code>, <code>3260</code>, <code>3343</code>, <code>3389</code>, <code>47001</code>, and <code>49152-49156</code>.</p> <p> <b>Amazon Aurora</b> </p> <p> Default: <code>3306</code> </p> <p> Valid values: <code>1150-65535</code> </p> <p>Type: Integer</p></param>
		/// <param name="MultiAZ">A value that indicates whether the DB instance is a Multi-AZ deployment. You can't set the <code>AvailabilityZone</code> parameter if the DB instance is a Multi-AZ deployment.</param>
		/// <param name="EngineVersion"><p>The version number of the database engine to use.</p> <p>For a list of valid engine versions, use the <code>DescribeDBEngineVersions</code> action.</p> <p>The following are the database engines and links to information about the major and minor versions that are available with Amazon RDS. Not every database engine is available for every AWS Region.</p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. The version number of the database engine to be used by the DB instance is managed by the DB cluster.</p> <p> <b>MariaDB</b> </p> <p>See <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MariaDB.html#MariaDB.Concepts.VersionMgmt">MariaDB on Amazon RDS Versions</a> in the <i>Amazon RDS User Guide.</i> </p> <p> <b>Microsoft SQL Server</b> </p> <p>See <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.FeatureSupport">Version and Feature Support on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p> <p> <b>MySQL</b> </p> <p>See <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.VersionMgmt">MySQL on Amazon RDS Versions</a> in the <i>Amazon RDS User Guide.</i> </p> <p> <b>Oracle</b> </p> <p>See <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.Oracle.PatchComposition.html">Oracle Database Engine Release Notes</a> in the <i>Amazon RDS User Guide.</i> </p> <p> <b>PostgreSQL</b> </p> <p>See <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts.General.DBVersions">Supported PostgreSQL Database Versions</a> in the <i>Amazon RDS User Guide.</i> </p></param>
		/// <param name="AutoMinorVersionUpgrade">A value that indicates whether minor engine upgrades are applied automatically to the DB instance during the maintenance window. By default, minor engine upgrades are applied automatically.</param>
		/// <param name="LicenseModel"><p>License model information for this DB instance.</p> <p> Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p></param>
		/// <param name="Iops"><p>The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for the DB instance. For information about valid Iops values, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS">Amazon RDS Provisioned IOPS Storage to Improve Performance</a> in the <i>Amazon RDS User Guide</i>. </p> <p>Constraints: For MariaDB, MySQL, Oracle, and PostgreSQL DB instances, must be a multiple between .5 and 50 of the storage amount for the DB instance. For SQL Server DB instances, must be a multiple between 1 and 50 of the storage amount for the DB instance. </p></param>
		/// <param name="OptionGroupName"><p>Indicates that the DB instance should be associated with the specified option group.</p> <p>Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't be removed from an option group. Also, that option group can't be removed from a DB instance once it is associated with a DB instance</p></param>
		/// <param name="CharacterSetName"><p>For supported engines, indicates that the DB instance should be associated with the specified CharacterSet.</p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. The character set is managed by the DB cluster. For more information, see <code>CreateDBCluster</code>.</p></param>
		/// <param name="PubliclyAccessible"><p>A value that indicates whether the DB instance is publicly accessible. When the DB instance is publicly accessible, it is an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. When the DB instance isn't publicly accessible, it is an internal instance with a DNS name that resolves to a private IP address.</p> <p>Default: The default behavior varies depending on whether <code>DBSubnetGroupName</code> is specified.</p> <p>If <code>DBSubnetGroupName</code> isn't specified, and <code>PubliclyAccessible</code> isn't specified, the following applies:</p> <ul> <li> <p>If the default VPC in the target region doesn’t have an Internet gateway attached to it, the DB instance is private.</p> </li> <li> <p>If the default VPC in the target region has an Internet gateway attached to it, the DB instance is public.</p> </li> </ul> <p>If <code>DBSubnetGroupName</code> is specified, and <code>PubliclyAccessible</code> isn't specified, the following applies:</p> <ul> <li> <p>If the subnets are part of a VPC that doesn’t have an Internet gateway attached to it, the DB instance is private.</p> </li> <li> <p>If the subnets are part of a VPC that has an Internet gateway attached to it, the DB instance is public.</p> </li> </ul></param>
		/// <param name="Tags">Tags to assign to the DB instance.</param>
		/// <param name="DBClusterIdentifier">The identifier of the DB cluster that the instance will belong to.</param>
		/// <param name="StorageType"><p>Specifies the storage type to be associated with the DB instance.</p> <p> Valid values: <code>standard | gp2 | io1</code> </p> <p> If you specify <code>io1</code>, you must also include a value for the <code>Iops</code> parameter. </p> <p> Default: <code>io1</code> if the <code>Iops</code> parameter is specified, otherwise <code>gp2</code> </p></param>
		/// <param name="TdeCredentialArn">The ARN from the key store with which to associate the instance for TDE encryption.</param>
		/// <param name="TdeCredentialPassword">The password for the given ARN from the key store in order to access the device.</param>
		/// <param name="StorageEncrypted"><p>A value that indicates whether the DB instance is encrypted. By default, it isn't encrypted.</p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. The encryption for DB instances is managed by the DB cluster.</p></param>
		/// <param name="KmsKeyId"><p>The AWS KMS key identifier for an encrypted DB instance.</p> <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are creating a DB instance with the same AWS account that owns the KMS encryption key used to encrypt the new DB instance, then you can use the KMS key alias instead of the ARN for the KM encryption key.</p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. The KMS key identifier is managed by the DB cluster. For more information, see <code>CreateDBCluster</code>.</p> <p>If <code>StorageEncrypted</code> is enabled, and you do not specify a value for the <code>KmsKeyId</code> parameter, then Amazon RDS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.</p></param>
		/// <param name="Domain"><p>The Active Directory directory ID to create the DB instance in. Currently, only Microsoft SQL Server and Oracle DB instances can be created in an Active Directory Domain.</p> <p>For Microsoft SQL Server DB instances, Amazon RDS can use Windows Authentication to authenticate users that connect to the DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_SQLServerWinAuth.html"> Using Windows Authentication with an Amazon RDS DB Instance Running Microsoft SQL Server</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For Oracle DB instances, Amazon RDS can use Kerberos Authentication to authenticate users that connect to the DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-kerberos.html"> Using Kerberos Authentication with Amazon RDS for Oracle</a> in the <i>Amazon RDS User Guide</i>.</p></param>
		/// <param name="CopyTagsToSnapshot"><p>A value that indicates whether to copy tags from the DB instance to snapshots of the DB instance. By default, tags are not copied.</p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value for an Aurora DB instance has no effect on the DB cluster setting.</p></param>
		/// <param name="MonitoringInterval"><p>The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0.</p> <p>If <code>MonitoringRoleArn</code> is specified, then you must also set <code>MonitoringInterval</code> to a value other than 0.</p> <p>Valid Values: <code>0, 1, 5, 10, 15, 30, 60</code> </p></param>
		/// <param name="MonitoringRoleArn"><p>The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>. For information on creating a monitoring role, go to <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling">Setting Up and Enabling Enhanced Monitoring</a> in the <i>Amazon RDS User Guide</i>.</p> <p>If <code>MonitoringInterval</code> is set to a value other than 0, then you must supply a <code>MonitoringRoleArn</code> value.</p></param>
		/// <param name="DomainIAMRoleName">Specify the name of the IAM role to be used when making API calls to the Directory Service.</param>
		/// <param name="PromotionTier"><p>A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance"> Fault Tolerance for an Aurora DB Cluster</a> in the <i>Amazon Aurora User Guide</i>. </p> <p>Default: 1</p> <p>Valid Values: 0 - 15</p></param>
		/// <param name="Timezone">The time zone of the DB instance. The time zone parameter is currently supported only by <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.TimeZone">Microsoft SQL Server</a>. </param>
		/// <param name="EnableIAMDatabaseAuthentication"><p>A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled.</p> <p>You can enable IAM database authentication for the following database engines:</p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. Mapping AWS IAM accounts to database accounts is managed by the DB cluster.</p> <p> <b>MySQL</b> </p> <ul> <li> <p>For MySQL 5.6, minor version 5.6.34 or higher</p> </li> <li> <p>For MySQL 5.7, minor version 5.7.16 or higher</p> </li> <li> <p>For MySQL 8.0, minor version 8.0.16 or higher</p> </li> </ul> <p> <b>PostgreSQL</b> </p> <ul> <li> <p>For PostgreSQL 9.5, minor version 9.5.15 or higher</p> </li> <li> <p>For PostgreSQL 9.6, minor version 9.6.11 or higher</p> </li> <li> <p>PostgreSQL 10.6, 10.7, and 10.9</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication for MySQL and PostgreSQL</a> in the <i>Amazon RDS User Guide.</i> </p></param>
		/// <param name="EnablePerformanceInsights"><p>A value that indicates whether to enable Performance Insights for the DB instance. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html">Using Amazon Performance Insights</a> in the <i>Amazon Relational Database Service User Guide</i>. </p></param>
		/// <param name="PerformanceInsightsKMSKeyId"><p>The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.</p> <p>If you do not specify a value for <code>PerformanceInsightsKMSKeyId</code>, then Amazon RDS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.</p></param>
		/// <param name="PerformanceInsightsRetentionPeriod">The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years). </param>
		/// <param name="EnableCloudwatchLogsExports">The list of log types that need to be enabled for exporting to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs </a> in the <i>Amazon Relational Database Service User Guide</i>.</param>
		/// <param name="ProcessorFeatures">The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.</param>
		/// <param name="DeletionProtection"><p>A value that indicates whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html"> Deleting a DB Instance</a>. </p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. You can enable or disable deletion protection for the DB cluster. For more information, see <code>CreateDBCluster</code>. DB instances in a DB cluster can be deleted even when deletion protection is enabled for the DB cluster. </p></param>
		/// <param name="MaxAllocatedStorage">The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.</param>
		/// <returns>Success</returns>
		public async Task GET_CreateDBInstanceAsync(
					string DBName, 
					string DBInstanceIdentifier, 
					int AllocatedStorage, 
					string DBInstanceClass, 
					string Engine, 
					string MasterUsername, 
					string MasterUserPassword, 
					String[] DBSecurityGroups, 
					String[] VpcSecurityGroupIds, 
					string AvailabilityZone, 
					string DBSubnetGroupName, 
					string PreferredMaintenanceWindow, 
					string DBParameterGroupName, 
					int BackupRetentionPeriod, 
					string PreferredBackupWindow, 
					int Port, 
					bool MultiAZ, 
					string EngineVersion, 
					bool AutoMinorVersionUpgrade, 
					string LicenseModel, 
					int Iops, 
					string OptionGroupName, 
					string CharacterSetName, 
					bool PubliclyAccessible, 
					Tag[] Tags, 
					string DBClusterIdentifier, 
					string StorageType, 
					string TdeCredentialArn, 
					string TdeCredentialPassword, 
					bool StorageEncrypted, 
					string KmsKeyId, 
					string Domain, 
					bool CopyTagsToSnapshot, 
					int MonitoringInterval, 
					string MonitoringRoleArn, 
					string DomainIAMRoleName, 
					int PromotionTier, 
					string Timezone, 
					bool EnableIAMDatabaseAuthentication, 
					bool EnablePerformanceInsights, 
					string PerformanceInsightsKMSKeyId, 
					int PerformanceInsightsRetentionPeriod, 
					String[] EnableCloudwatchLogsExports, 
					ProcessorFeature[] ProcessorFeatures, 
					bool DeletionProtection, 
					int MaxAllocatedStorage, 
					string Action, 
					string Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=CreateDBInstance?DBName=" + (DBName==null? "" : Uri.EscapeDataString(DBName))+"&DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : Uri.EscapeDataString(DBInstanceIdentifier))+"&AllocatedStorage="+AllocatedStorage+"&DBInstanceClass=" + (DBInstanceClass==null? "" : Uri.EscapeDataString(DBInstanceClass))+"&Engine=" + (Engine==null? "" : Uri.EscapeDataString(Engine))+"&MasterUsername=" + (MasterUsername==null? "" : Uri.EscapeDataString(MasterUsername))+"&MasterUserPassword=" + (MasterUserPassword==null? "" : Uri.EscapeDataString(MasterUserPassword))+"&"+String.Join("&", DBSecurityGroups.Select(z => $"DBSecurityGroups={z}"))+"&"+String.Join("&", VpcSecurityGroupIds.Select(z => $"VpcSecurityGroupIds={z}"))+"&AvailabilityZone=" + (AvailabilityZone==null? "" : Uri.EscapeDataString(AvailabilityZone))+"&DBSubnetGroupName=" + (DBSubnetGroupName==null? "" : Uri.EscapeDataString(DBSubnetGroupName))+"&PreferredMaintenanceWindow=" + (PreferredMaintenanceWindow==null? "" : Uri.EscapeDataString(PreferredMaintenanceWindow))+"&DBParameterGroupName=" + (DBParameterGroupName==null? "" : Uri.EscapeDataString(DBParameterGroupName))+"&BackupRetentionPeriod="+BackupRetentionPeriod+"&PreferredBackupWindow=" + (PreferredBackupWindow==null? "" : Uri.EscapeDataString(PreferredBackupWindow))+"&Port="+Port+"&MultiAZ="+MultiAZ+"&EngineVersion=" + (EngineVersion==null? "" : Uri.EscapeDataString(EngineVersion))+"&AutoMinorVersionUpgrade="+AutoMinorVersionUpgrade+"&LicenseModel=" + (LicenseModel==null? "" : Uri.EscapeDataString(LicenseModel))+"&Iops="+Iops+"&OptionGroupName=" + (OptionGroupName==null? "" : Uri.EscapeDataString(OptionGroupName))+"&CharacterSetName=" + (CharacterSetName==null? "" : Uri.EscapeDataString(CharacterSetName))+"&PubliclyAccessible="+PubliclyAccessible+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : Uri.EscapeDataString(DBClusterIdentifier))+"&StorageType=" + (StorageType==null? "" : Uri.EscapeDataString(StorageType))+"&TdeCredentialArn=" + (TdeCredentialArn==null? "" : Uri.EscapeDataString(TdeCredentialArn))+"&TdeCredentialPassword=" + (TdeCredentialPassword==null? "" : Uri.EscapeDataString(TdeCredentialPassword))+"&StorageEncrypted="+StorageEncrypted+"&KmsKeyId=" + (KmsKeyId==null? "" : Uri.EscapeDataString(KmsKeyId))+"&Domain=" + (Domain==null? "" : Uri.EscapeDataString(Domain))+"&CopyTagsToSnapshot="+CopyTagsToSnapshot+"&MonitoringInterval="+MonitoringInterval+"&MonitoringRoleArn=" + (MonitoringRoleArn==null? "" : Uri.EscapeDataString(MonitoringRoleArn))+"&DomainIAMRoleName=" + (DomainIAMRoleName==null? "" : Uri.EscapeDataString(DomainIAMRoleName))+"&PromotionTier="+PromotionTier+"&Timezone=" + (Timezone==null? "" : Uri.EscapeDataString(Timezone))+"&EnableIAMDatabaseAuthentication="+EnableIAMDatabaseAuthentication+"&EnablePerformanceInsights="+EnablePerformanceInsights+"&PerformanceInsightsKMSKeyId=" + (PerformanceInsightsKMSKeyId==null? "" : Uri.EscapeDataString(PerformanceInsightsKMSKeyId))+"&PerformanceInsightsRetentionPeriod="+PerformanceInsightsRetentionPeriod+"&"+String.Join("&", EnableCloudwatchLogsExports.Select(z => $"EnableCloudwatchLogsExports={z}"))+"&"+String.Join("&", ProcessorFeatures.Select(z => $"ProcessorFeatures={z}"))+"&DeletionProtection="+DeletionProtection+"&MaxAllocatedStorage="+MaxAllocatedStorage+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a new DB instance that acts as a read replica for an existing source DB instance. You can create a read replica for a DB instance running MySQL, MariaDB, Oracle, PostgreSQL, or SQL Server. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReadRepl.html">Working with Read Replicas</a> in the <i>Amazon RDS User Guide</i>. </p> <p>Amazon Aurora doesn't support this action. Call the <code>CreateDBInstance</code> action to create a DB instance for an Aurora DB cluster.</p> <p>All read replica DB instances are created with backups disabled. All other DB instance attributes (including DB security groups and DB parameter groups) are inherited from the source DB instance, except as specified.</p> <important> <p>Your source DB instance must have backup retention enabled. </p> </important>
		/// GET_CreateDBInstanceReadReplica /#Action=CreateDBInstanceReadReplica
		/// </summary>
		/// <param name="DBInstanceIdentifier">The DB instance identifier of the read replica. This identifier is the unique key that identifies a DB instance. This parameter is stored as a lowercase string.</param>
		/// <param name="SourceDBInstanceIdentifier"><p>The identifier of the DB instance that will act as the source for the read replica. Each DB instance can have up to five read replicas.</p> <p>Constraints:</p> <ul> <li> <p>Must be the identifier of an existing MySQL, MariaDB, Oracle, PostgreSQL, or SQL Server DB instance.</p> </li> <li> <p>Can specify a DB instance that is a MySQL read replica only if the source is running MySQL 5.6 or later.</p> </li> <li> <p>For the limitations of Oracle read replicas, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-read-replicas.html">Read Replica Limitations with Oracle</a> in the <i>Amazon RDS User Guide</i>.</p> </li> <li> <p>For the limitations of SQL Server read replicas, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/SQLServer.ReadReplicas.Limitations.html">Read Replica Limitations with Microsoft SQL Server</a> in the <i>Amazon RDS User Guide</i>.</p> </li> <li> <p>Can specify a PostgreSQL DB instance only if the source is running PostgreSQL 9.3.5 or later (9.4.7 and higher for cross-region replication).</p> </li> <li> <p>The specified DB instance must have automatic backups enabled, that is, its backup retention period must be greater than 0.</p> </li> <li> <p>If the source DB instance is in the same AWS Region as the read replica, specify a valid DB instance identifier.</p> </li> <li> <p>If the source DB instance is in a different AWS Region from the read replica, specify a valid DB instance ARN. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing">Constructing an ARN for Amazon RDS</a> in the <i>Amazon RDS User Guide</i>. This doesn't apply to SQL Server, which doesn't support cross-region replicas.</p> </li> </ul></param>
		/// <param name="DBInstanceClass"><p>The compute and memory capacity of the read replica, for example, <code>db.m4.large</code>. Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB Instance Class</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Default: Inherits from the source DB instance.</p></param>
		/// <param name="AvailabilityZone"><p>The Availability Zone (AZ) where the read replica will be created.</p> <p>Default: A random, system-chosen Availability Zone in the endpoint's AWS Region.</p> <p> Example: <code>us-east-1d</code> </p></param>
		/// <param name="Port"><p>The port number that the DB instance uses for connections.</p> <p>Default: Inherits from the source DB instance</p> <p>Valid Values: <code>1150-65535</code> </p></param>
		/// <param name="MultiAZ"><p>A value that indicates whether the read replica is in a Multi-AZ deployment. </p> <p>You can create a read replica as a Multi-AZ DB instance. RDS creates a standby of your replica in another Availability Zone for failover support for the replica. Creating your read replica as a Multi-AZ DB instance is independent of whether the source database is a Multi-AZ DB instance. </p></param>
		/// <param name="AutoMinorVersionUpgrade"><p>A value that indicates whether minor engine upgrades are applied automatically to the read replica during the maintenance window.</p> <p>Default: Inherits from the source DB instance</p></param>
		/// <param name="Iops">The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for the DB instance.</param>
		/// <param name="OptionGroupName"><p>The option group the DB instance is associated with. If omitted, the option group associated with the source instance is used.</p> <note> <p>For SQL Server, you must use the option group associated with the source instance.</p> </note></param>
		/// <param name="DBParameterGroupName"><p>The name of the DB parameter group to associate with this DB instance.</p> <p>If you do not specify a value for <code>DBParameterGroupName</code>, then Amazon RDS uses the <code>DBParameterGroup</code> of source DB instance for a same region read replica, or the default <code>DBParameterGroup</code> for the specified DB engine for a cross region read replica.</p> <note> <p>Currently, specifying a parameter group for this operation is only supported for Oracle DB instances.</p> </note> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul></param>
		/// <param name="PubliclyAccessible">A value that indicates whether the DB instance is publicly accessible. When the DB instance is publicly accessible, it is an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. When the DB instance isn't publicly accessible, it is an internal instance with a DNS name that resolves to a private IP address. For more information, see <a>CreateDBInstance</a>.</param>
		/// <param name="DBSubnetGroupName"><p>Specifies a DB subnet group for the DB instance. The new DB instance is created in the VPC associated with the DB subnet group. If no DB subnet group is specified, then the new DB instance isn't created in a VPC.</p> <p>Constraints:</p> <ul> <li> <p>Can only be specified if the source DB instance identifier specifies a DB instance in another AWS Region.</p> </li> <li> <p>If supplied, must match the name of an existing DBSubnetGroup.</p> </li> <li> <p>The specified DB subnet group must be in the same AWS Region in which the operation is running.</p> </li> <li> <p>All read replicas in one AWS Region that are created from the same source DB instance must either:&gt;</p> <ul> <li> <p>Specify DB subnet groups from the same VPC. All these read replicas are created in the same VPC.</p> </li> <li> <p>Not specify a DB subnet group. All these read replicas are created outside of any VPC.</p> </li> </ul> </li> </ul> <p>Example: <code>mySubnetgroup</code> </p></param>
		/// <param name="VpcSecurityGroupIds"><p> A list of EC2 VPC security groups to associate with the read replica. </p> <p> Default: The default EC2 VPC security group for the DB subnet group's VPC. </p></param>
		/// <param name="StorageType"><p>Specifies the storage type to be associated with the read replica.</p> <p> Valid values: <code>standard | gp2 | io1</code> </p> <p> If you specify <code>io1</code>, you must also include a value for the <code>Iops</code> parameter. </p> <p> Default: <code>io1</code> if the <code>Iops</code> parameter is specified, otherwise <code>gp2</code> </p></param>
		/// <param name="CopyTagsToSnapshot">A value that indicates whether to copy all tags from the read replica to snapshots of the read replica. By default, tags are not copied.</param>
		/// <param name="MonitoringInterval"><p>The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the read replica. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0.</p> <p>If <code>MonitoringRoleArn</code> is specified, then you must also set <code>MonitoringInterval</code> to a value other than 0.</p> <p>Valid Values: <code>0, 1, 5, 10, 15, 30, 60</code> </p></param>
		/// <param name="MonitoringRoleArn"><p>The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>. For information on creating a monitoring role, go to <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.html#USER_Monitoring.OS.IAMRole">To create an IAM role for Amazon RDS Enhanced Monitoring</a> in the <i>Amazon RDS User Guide</i>.</p> <p>If <code>MonitoringInterval</code> is set to a value other than 0, then you must supply a <code>MonitoringRoleArn</code> value.</p></param>
		/// <param name="KmsKeyId"><p>The AWS KMS key ID for an encrypted read replica. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.</p> <p>If you create an encrypted read replica in the same AWS Region as the source DB instance, then you do not have to specify a value for this parameter. The read replica is encrypted with the same KMS key as the source DB instance.</p> <p>If you create an encrypted read replica in a different AWS Region, then you must specify a KMS key for the destination AWS Region. KMS encryption keys are specific to the AWS Region that they are created in, and you can't use encryption keys from one AWS Region in another AWS Region.</p> <p>You can't create an encrypted read replica from an unencrypted DB instance.</p></param>
		/// <param name="PreSignedUrl"><p>The URL that contains a Signature Version 4 signed request for the <code>CreateDBInstanceReadReplica</code> API action in the source AWS Region that contains the source DB instance. </p> <p>You must specify this parameter when you create an encrypted read replica from another AWS Region by using the Amazon RDS API. Don't specify <code>PreSignedUrl</code> when you are creating an encrypted read replica in the same AWS Region.</p> <p>The presigned URL must be a valid request for the <code>CreateDBInstanceReadReplica</code> API action that can be executed in the source AWS Region that contains the encrypted source DB instance. The presigned URL request must contain the following parameter values: </p> <ul> <li> <p> <code>DestinationRegion</code> - The AWS Region that the encrypted read replica is created in. This AWS Region is the same one where the <code>CreateDBInstanceReadReplica</code> action is called that contains this presigned URL.</p> <p>For example, if you create an encrypted DB instance in the us-west-1 AWS Region, from a source DB instance in the us-east-2 AWS Region, then you call the <code>CreateDBInstanceReadReplica</code> action in the us-east-1 AWS Region and provide a presigned URL that contains a call to the <code>CreateDBInstanceReadReplica</code> action in the us-west-2 AWS Region. For this example, the <code>DestinationRegion</code> in the presigned URL must be set to the us-east-1 AWS Region. </p> </li> <li> <p> <code>KmsKeyId</code> - The AWS KMS key identifier for the key to use to encrypt the read replica in the destination AWS Region. This is the same identifier for both the <code>CreateDBInstanceReadReplica</code> action that is called in the destination AWS Region, and the action contained in the presigned URL. </p> </li> <li> <p> <code>SourceDBInstanceIdentifier</code> - The DB instance identifier for the encrypted DB instance to be replicated. This identifier must be in the Amazon Resource Name (ARN) format for the source AWS Region. For example, if you are creating an encrypted read replica from a DB instance in the us-west-2 AWS Region, then your <code>SourceDBInstanceIdentifier</code> looks like the following example: <code>arn:aws:rds:us-west-2:123456789012:instance:mysql-instance1-20161115</code>. </p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html">Authenticating Requests: Using Query Parameters (AWS Signature Version 4)</a> and <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4 Signing Process</a>. </p> <note> <p>If you are using an AWS SDK tool or the AWS CLI, you can specify <code>SourceRegion</code> (or <code>--source-region</code> for the AWS CLI) instead of specifying <code>PreSignedUrl</code> manually. Specifying <code>SourceRegion</code> autogenerates a presigned URL that is a valid request for the operation that can be executed in the source AWS Region.</p> <p> <code>SourceRegion</code> isn't supported for SQL Server, because SQL Server on Amazon RDS doesn't support cross-region read replicas.</p> </note><note><p>If you supply a value for this operation's <code>SourceRegion</code> parameter, a pre-signed URL will be calculated on your behalf.</p></note></param>
		/// <param name="EnableIAMDatabaseAuthentication"><p>A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled. For information about the supported DB engines, see <a>CreateDBInstance</a>.</p> <p>For more information about IAM database authentication, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication for MySQL and PostgreSQL</a> in the <i>Amazon RDS User Guide.</i> </p></param>
		/// <param name="EnablePerformanceInsights"><p>A value that indicates whether to enable Performance Insights for the read replica. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html">Using Amazon Performance Insights</a> in the <i>Amazon RDS User Guide</i>. </p></param>
		/// <param name="PerformanceInsightsKMSKeyId"><p>The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.</p> <p>If you do not specify a value for <code>PerformanceInsightsKMSKeyId</code>, then Amazon RDS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.</p></param>
		/// <param name="PerformanceInsightsRetentionPeriod">The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years). </param>
		/// <param name="EnableCloudwatchLogsExports">The list of logs that the new DB instance is to export to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs </a> in the <i>Amazon RDS User Guide</i>.</param>
		/// <param name="ProcessorFeatures">The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.</param>
		/// <param name="UseDefaultProcessorFeatures">A value that indicates whether the DB instance class of the DB instance uses its default processor features.</param>
		/// <param name="DeletionProtection">A value that indicates whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html"> Deleting a DB Instance</a>. </param>
		/// <param name="Domain"><p>The Active Directory directory ID to create the DB instance in.</p> <p>For Oracle DB instances, Amazon RDS can use Kerberos Authentication to authenticate users that connect to the DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-kerberos.html"> Using Kerberos Authentication with Amazon RDS for Oracle</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For Microsoft SQL Server DB instances, Amazon RDS can use Windows Authentication to authenticate users that connect to the DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_SQLServerWinAuth.html"> Using Windows Authentication with an Amazon RDS DB Instance Running Microsoft SQL Server</a> in the <i>Amazon RDS User Guide</i>.</p></param>
		/// <param name="DomainIAMRoleName">Specify the name of the IAM role to be used when making API calls to the Directory Service.</param>
		/// <param name="SourceRegion">The ID of the region that contains the source for the read replica.</param>
		/// <returns>Success</returns>
		public async Task GET_CreateDBInstanceReadReplicaAsync(
					string DBInstanceIdentifier, 
					string SourceDBInstanceIdentifier, 
					string DBInstanceClass, 
					string AvailabilityZone, 
					int Port, 
					bool MultiAZ, 
					bool AutoMinorVersionUpgrade, 
					int Iops, 
					string OptionGroupName, 
					string DBParameterGroupName, 
					bool PubliclyAccessible, 
					Tag[] Tags, 
					string DBSubnetGroupName, 
					String[] VpcSecurityGroupIds, 
					string StorageType, 
					bool CopyTagsToSnapshot, 
					int MonitoringInterval, 
					string MonitoringRoleArn, 
					string KmsKeyId, 
					string PreSignedUrl, 
					bool EnableIAMDatabaseAuthentication, 
					bool EnablePerformanceInsights, 
					string PerformanceInsightsKMSKeyId, 
					int PerformanceInsightsRetentionPeriod, 
					String[] EnableCloudwatchLogsExports, 
					ProcessorFeature[] ProcessorFeatures, 
					bool UseDefaultProcessorFeatures, 
					bool DeletionProtection, 
					string Domain, 
					string DomainIAMRoleName, 
					string SourceRegion, 
					string Action, 
					string Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=CreateDBInstanceReadReplica?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : Uri.EscapeDataString(DBInstanceIdentifier))+"&SourceDBInstanceIdentifier=" + (SourceDBInstanceIdentifier==null? "" : Uri.EscapeDataString(SourceDBInstanceIdentifier))+"&DBInstanceClass=" + (DBInstanceClass==null? "" : Uri.EscapeDataString(DBInstanceClass))+"&AvailabilityZone=" + (AvailabilityZone==null? "" : Uri.EscapeDataString(AvailabilityZone))+"&Port="+Port+"&MultiAZ="+MultiAZ+"&AutoMinorVersionUpgrade="+AutoMinorVersionUpgrade+"&Iops="+Iops+"&OptionGroupName=" + (OptionGroupName==null? "" : Uri.EscapeDataString(OptionGroupName))+"&DBParameterGroupName=" + (DBParameterGroupName==null? "" : Uri.EscapeDataString(DBParameterGroupName))+"&PubliclyAccessible="+PubliclyAccessible+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&DBSubnetGroupName=" + (DBSubnetGroupName==null? "" : Uri.EscapeDataString(DBSubnetGroupName))+"&"+String.Join("&", VpcSecurityGroupIds.Select(z => $"VpcSecurityGroupIds={z}"))+"&StorageType=" + (StorageType==null? "" : Uri.EscapeDataString(StorageType))+"&CopyTagsToSnapshot="+CopyTagsToSnapshot+"&MonitoringInterval="+MonitoringInterval+"&MonitoringRoleArn=" + (MonitoringRoleArn==null? "" : Uri.EscapeDataString(MonitoringRoleArn))+"&KmsKeyId=" + (KmsKeyId==null? "" : Uri.EscapeDataString(KmsKeyId))+"&PreSignedUrl=" + (PreSignedUrl==null? "" : Uri.EscapeDataString(PreSignedUrl))+"&EnableIAMDatabaseAuthentication="+EnableIAMDatabaseAuthentication+"&EnablePerformanceInsights="+EnablePerformanceInsights+"&PerformanceInsightsKMSKeyId=" + (PerformanceInsightsKMSKeyId==null? "" : Uri.EscapeDataString(PerformanceInsightsKMSKeyId))+"&PerformanceInsightsRetentionPeriod="+PerformanceInsightsRetentionPeriod+"&"+String.Join("&", EnableCloudwatchLogsExports.Select(z => $"EnableCloudwatchLogsExports={z}"))+"&"+String.Join("&", ProcessorFeatures.Select(z => $"ProcessorFeatures={z}"))+"&UseDefaultProcessorFeatures="+UseDefaultProcessorFeatures+"&DeletionProtection="+DeletionProtection+"&Domain=" + (Domain==null? "" : Uri.EscapeDataString(Domain))+"&DomainIAMRoleName=" + (DomainIAMRoleName==null? "" : Uri.EscapeDataString(DomainIAMRoleName))+"&SourceRegion=" + (SourceRegion==null? "" : Uri.EscapeDataString(SourceRegion))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a new DB parameter group.</p> <p> A DB parameter group is initially created with the default parameters for the database engine used by the DB instance. To provide custom values for any of the parameters, you must modify the group after creating it using <i>ModifyDBParameterGroup</i>. Once you've created a DB parameter group, you need to associate it with your DB instance using <i>ModifyDBInstance</i>. When you associate a new DB parameter group with a running DB instance, you need to reboot the DB instance without failover for the new DB parameter group and associated settings to take effect. </p> <important> <p>After you create a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group. This allows Amazon RDS to fully complete the create action before the parameter group is used as the default for a new DB instance. This is especially important for parameters that are critical when creating the default database for a DB instance, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href="https://console.aws.amazon.com/rds/">Amazon RDS console</a> or the <i>DescribeDBParameters</i> command to verify that your DB parameter group has been created or modified.</p> </important>
		/// GET_CreateDBParameterGroup /#Action=CreateDBParameterGroup
		/// </summary>
		/// <param name="DBParameterGroupName"><p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <note> <p>This value is stored as a lowercase string.</p> </note></param>
		/// <param name="DBParameterGroupFamily"><p>The DB parameter group family name. A DB parameter group can be associated with one and only one DB parameter group family, and can be applied only to a DB instance running a database engine and engine version compatible with that DB parameter group family.</p> <p>To list all of the available parameter group families, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily"</code> </p> <note> <p>The output contains duplicates.</p> </note></param>
		/// <param name="Description">The description for the DB parameter group.</param>
		/// <param name="Tags">Tags to assign to the DB parameter group.</param>
		/// <returns>Success</returns>
		public async Task GET_CreateDBParameterGroupAsync(string DBParameterGroupName, string DBParameterGroupFamily, string Description, Tag[] Tags, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=CreateDBParameterGroup?DBParameterGroupName=" + (DBParameterGroupName==null? "" : Uri.EscapeDataString(DBParameterGroupName))+"&DBParameterGroupFamily=" + (DBParameterGroupFamily==null? "" : Uri.EscapeDataString(DBParameterGroupFamily))+"&Description=" + (Description==null? "" : Uri.EscapeDataString(Description))+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <note> <p>This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.</p> </note> <p>Creates a new DB proxy.</p>
		/// GET_CreateDBProxy /#Action=CreateDBProxy
		/// </summary>
		/// <param name="DBProxyName">The identifier for the proxy. This name must be unique for all proxies owned by your AWS account in the specified AWS Region. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens.</param>
		/// <param name="EngineFamily">The kinds of databases that the proxy can connect to. This value determines which database network protocol the proxy recognizes when it interprets network traffic to and from the database. The engine family applies to MySQL and PostgreSQL for both RDS and Aurora.</param>
		/// <param name="Auth">The authorization mechanism that the proxy uses.</param>
		/// <param name="RoleArn">The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets in AWS Secrets Manager.</param>
		/// <param name="VpcSubnetIds">One or more VPC subnet IDs to associate with the new proxy.</param>
		/// <param name="VpcSecurityGroupIds">One or more VPC security group IDs to associate with the new proxy.</param>
		/// <param name="RequireTLS">A Boolean parameter that specifies whether Transport Layer Security (TLS) encryption is required for connections to the proxy. By enabling this setting, you can enforce encrypted TLS connections to the proxy.</param>
		/// <param name="IdleClientTimeout">The number of seconds that a connection to the proxy can be inactive before the proxy disconnects it. You can set this value higher or lower than the connection timeout limit for the associated database.</param>
		/// <param name="DebugLogging">Whether the proxy includes detailed information about SQL statements in its logs. This information helps you to debug issues involving SQL behavior or the performance and scalability of the proxy connections. The debug information includes the text of SQL statements that you submit through the proxy. Thus, only enable this setting when needed for debugging, and only when you have security measures in place to safeguard any sensitive information that appears in the logs.</param>
		/// <param name="Tags">An optional set of key-value pairs to associate arbitrary data of your choosing with the proxy.</param>
		/// <returns>Success</returns>
		public async Task GET_CreateDBProxyAsync(string DBProxyName, EngineFamily EngineFamily, UserAuthConfig[] Auth, string RoleArn, String[] VpcSubnetIds, String[] VpcSecurityGroupIds, bool RequireTLS, int IdleClientTimeout, bool DebugLogging, Tag[] Tags, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=CreateDBProxy?DBProxyName=" + (DBProxyName==null? "" : Uri.EscapeDataString(DBProxyName))+"&EngineFamily=" + EngineFamily+"&"+String.Join("&", Auth.Select(z => $"Auth={z}"))+"&RoleArn=" + (RoleArn==null? "" : Uri.EscapeDataString(RoleArn))+"&"+String.Join("&", VpcSubnetIds.Select(z => $"VpcSubnetIds={z}"))+"&"+String.Join("&", VpcSecurityGroupIds.Select(z => $"VpcSecurityGroupIds={z}"))+"&RequireTLS="+RequireTLS+"&IdleClientTimeout="+IdleClientTimeout+"&DebugLogging="+DebugLogging+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a new DB security group. DB security groups control access to a DB instance.</p> <note> <p>A DB security group controls access to EC2-Classic DB instances that are not in a VPC.</p> </note>
		/// GET_CreateDBSecurityGroup /#Action=CreateDBSecurityGroup
		/// </summary>
		/// <param name="DBSecurityGroupName"><p>The name for the DB security group. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> <li> <p>Must not be "Default"</p> </li> </ul> <p>Example: <code>mysecuritygroup</code> </p></param>
		/// <param name="DBSecurityGroupDescription">The description for the DB security group.</param>
		/// <param name="Tags">Tags to assign to the DB security group.</param>
		/// <returns>Success</returns>
		public async Task GET_CreateDBSecurityGroupAsync(string DBSecurityGroupName, string DBSecurityGroupDescription, Tag[] Tags, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=CreateDBSecurityGroup?DBSecurityGroupName=" + (DBSecurityGroupName==null? "" : Uri.EscapeDataString(DBSecurityGroupName))+"&DBSecurityGroupDescription=" + (DBSecurityGroupDescription==null? "" : Uri.EscapeDataString(DBSecurityGroupDescription))+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a DBSnapshot. The source DBInstance must be in "available" state.
		/// GET_CreateDBSnapshot /#Action=CreateDBSnapshot
		/// </summary>
		/// <param name="DBSnapshotIdentifier"><p>The identifier for the DB snapshot.</p> <p>Constraints:</p> <ul> <li> <p>Can't be null, empty, or blank</p> </li> <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-snapshot-id</code> </p></param>
		/// <param name="DBInstanceIdentifier"><p>The identifier of the DB instance that you want to create the snapshot of.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBInstance.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_CreateDBSnapshotAsync(string DBSnapshotIdentifier, string DBInstanceIdentifier, Tag[] Tags, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=CreateDBSnapshot?DBSnapshotIdentifier=" + (DBSnapshotIdentifier==null? "" : Uri.EscapeDataString(DBSnapshotIdentifier))+"&DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : Uri.EscapeDataString(DBInstanceIdentifier))+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the AWS Region.
		/// GET_CreateDBSubnetGroup /#Action=CreateDBSubnetGroup
		/// </summary>
		/// <param name="DBSubnetGroupName"><p>The name for the DB subnet group. This value is stored as a lowercase string.</p> <p>Constraints: Must contain no more than 255 letters, numbers, periods, underscores, spaces, or hyphens. Must not be default.</p> <p>Example: <code>mySubnetgroup</code> </p></param>
		/// <param name="DBSubnetGroupDescription">The description for the DB subnet group.</param>
		/// <param name="SubnetIds">The EC2 Subnet IDs for the DB subnet group.</param>
		/// <param name="Tags">Tags to assign to the DB subnet group.</param>
		/// <returns>Success</returns>
		public async Task GET_CreateDBSubnetGroupAsync(string DBSubnetGroupName, string DBSubnetGroupDescription, String[] SubnetIds, Tag[] Tags, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=CreateDBSubnetGroup?DBSubnetGroupName=" + (DBSubnetGroupName==null? "" : Uri.EscapeDataString(DBSubnetGroupName))+"&DBSubnetGroupDescription=" + (DBSubnetGroupDescription==null? "" : Uri.EscapeDataString(DBSubnetGroupDescription))+"&"+String.Join("&", SubnetIds.Select(z => $"SubnetIds={z}"))+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates an RDS event notification subscription. This action requires a topic Amazon Resource Name (ARN) created by either the RDS console, the SNS console, or the SNS API. To obtain an ARN with SNS, you must create a topic in Amazon SNS and subscribe to the topic. The ARN is displayed in the SNS console.</p> <p>You can specify the type of source (SourceType) you want to be notified of, provide a list of RDS sources (SourceIds) that triggers the events, and provide a list of event categories (EventCategories) for events you want to be notified of. For example, you can specify SourceType = db-instance, SourceIds = mydbinstance1, mydbinstance2 and EventCategories = Availability, Backup.</p> <p>If you specify both the SourceType and SourceIds, such as SourceType = db-instance and SourceIdentifier = myDBInstance1, you are notified of all the db-instance events for the specified source. If you specify a SourceType but do not specify a SourceIdentifier, you receive notice of the events for that source type for all your RDS sources. If you don't specify either the SourceType or the SourceIdentifier, you are notified of events generated from all RDS sources belonging to your customer account.</p> <note> <p>RDS event notification is only available for unencrypted SNS topics. If you specify an encrypted SNS topic, event notifications aren't sent for the topic.</p> </note>
		/// GET_CreateEventSubscription /#Action=CreateEventSubscription
		/// </summary>
		/// <param name="SubscriptionName"><p>The name of the subscription.</p> <p>Constraints: The name must be less than 255 characters.</p></param>
		/// <param name="SnsTopicArn">The Amazon Resource Name (ARN) of the SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.</param>
		/// <param name="SourceType"><p>The type of source that is generating the events. For example, if you want to be notified of events generated by a DB instance, you would set this parameter to db-instance. if this value isn't specified, all events are returned.</p> <p>Valid values: <code>db-instance</code> | <code>db-cluster</code> | <code>db-parameter-group</code> | <code>db-security-group</code> | <code>db-snapshot</code> | <code>db-cluster-snapshot</code> </p></param>
		/// <param name="EventCategories"> A list of event categories for a SourceType that you want to subscribe to. You can see a list of the categories for a given SourceType in the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html">Events</a> topic in the <i>Amazon RDS User Guide</i> or by using the <b>DescribeEventCategories</b> action. </param>
		/// <param name="SourceIds"><p>The list of identifiers of the event sources for which events are returned. If not specified, then all sources are included in the response. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens. It can't end with a hyphen or contain two consecutive hyphens.</p> <p>Constraints:</p> <ul> <li> <p>If SourceIds are supplied, SourceType must also be provided.</p> </li> <li> <p>If the source type is a DB instance, then a <code>DBInstanceIdentifier</code> must be supplied.</p> </li> <li> <p>If the source type is a DB security group, a <code>DBSecurityGroupName</code> must be supplied.</p> </li> <li> <p>If the source type is a DB parameter group, a <code>DBParameterGroupName</code> must be supplied.</p> </li> <li> <p>If the source type is a DB snapshot, a <code>DBSnapshotIdentifier</code> must be supplied.</p> </li> </ul></param>
		/// <param name="Enabled"> A value that indicates whether to activate the subscription. If the event notification subscription isn't activated, the subscription is created but not active. </param>
		/// <returns>Success</returns>
		public async Task GET_CreateEventSubscriptionAsync(string SubscriptionName, string SnsTopicArn, string SourceType, String[] EventCategories, String[] SourceIds, bool Enabled, Tag[] Tags, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=CreateEventSubscription?SubscriptionName=" + (SubscriptionName==null? "" : Uri.EscapeDataString(SubscriptionName))+"&SnsTopicArn=" + (SnsTopicArn==null? "" : Uri.EscapeDataString(SnsTopicArn))+"&SourceType=" + (SourceType==null? "" : Uri.EscapeDataString(SourceType))+"&"+String.Join("&", EventCategories.Select(z => $"EventCategories={z}"))+"&"+String.Join("&", SourceIds.Select(z => $"SourceIds={z}"))+"&Enabled="+Enabled+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p> </p> <p> Creates an Aurora global database spread across multiple regions. The global database contains a single primary cluster with read-write capability, and a read-only secondary cluster that receives data from the primary cluster through high-speed replication performed by the Aurora storage subsystem. </p> <p> You can create a global database that is initially empty, and then add a primary cluster and a secondary cluster to it. Or you can specify an existing Aurora cluster during the create operation, and this cluster becomes the primary cluster of the global database. </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_CreateGlobalCluster /#Action=CreateGlobalCluster
		/// </summary>
		/// <param name="GlobalClusterIdentifier">The cluster identifier of the new global database cluster.</param>
		/// <param name="SourceDBClusterIdentifier"> The Amazon Resource Name (ARN) to use as the primary cluster of the global database. This parameter is optional. </param>
		/// <param name="Engine">Provides the name of the database engine to be used for this DB cluster.</param>
		/// <param name="EngineVersion">The engine version of the Aurora global database.</param>
		/// <param name="DeletionProtection"> The deletion protection setting for the new global database. The global database can't be deleted when deletion protection is enabled. </param>
		/// <param name="DatabaseName"> The name for your database of up to 64 alpha-numeric characters. If you do not provide a name, Amazon Aurora will not create a database in the global database cluster you are creating. </param>
		/// <param name="StorageEncrypted"> The storage encryption setting for the new global database cluster. </param>
		/// <returns>Success</returns>
		public async Task GET_CreateGlobalClusterAsync(string GlobalClusterIdentifier, string SourceDBClusterIdentifier, string Engine, string EngineVersion, bool DeletionProtection, string DatabaseName, bool StorageEncrypted, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=CreateGlobalCluster?GlobalClusterIdentifier=" + (GlobalClusterIdentifier==null? "" : Uri.EscapeDataString(GlobalClusterIdentifier))+"&SourceDBClusterIdentifier=" + (SourceDBClusterIdentifier==null? "" : Uri.EscapeDataString(SourceDBClusterIdentifier))+"&Engine=" + (Engine==null? "" : Uri.EscapeDataString(Engine))+"&EngineVersion=" + (EngineVersion==null? "" : Uri.EscapeDataString(EngineVersion))+"&DeletionProtection="+DeletionProtection+"&DatabaseName=" + (DatabaseName==null? "" : Uri.EscapeDataString(DatabaseName))+"&StorageEncrypted="+StorageEncrypted+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new option group. You can create up to 20 option groups.
		/// GET_CreateOptionGroup /#Action=CreateOptionGroup
		/// </summary>
		/// <param name="OptionGroupName"><p>Specifies the name of the option group to be created.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>myoptiongroup</code> </p></param>
		/// <param name="EngineName">Specifies the name of the engine that this option group should be associated with.</param>
		/// <param name="MajorEngineVersion">Specifies the major version of the engine that this option group should be associated with.</param>
		/// <param name="OptionGroupDescription">The description of the option group.</param>
		/// <param name="Tags">Tags to assign to the option group.</param>
		/// <returns>Success</returns>
		public async Task GET_CreateOptionGroupAsync(string OptionGroupName, string EngineName, string MajorEngineVersion, string OptionGroupDescription, Tag[] Tags, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=CreateOptionGroup?OptionGroupName=" + (OptionGroupName==null? "" : Uri.EscapeDataString(OptionGroupName))+"&EngineName=" + (EngineName==null? "" : Uri.EscapeDataString(EngineName))+"&MajorEngineVersion=" + (MajorEngineVersion==null? "" : Uri.EscapeDataString(MajorEngineVersion))+"&OptionGroupDescription=" + (OptionGroupDescription==null? "" : Uri.EscapeDataString(OptionGroupDescription))+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a custom Availability Zone (AZ).</p> <p>A custom AZ is an on-premises AZ that is integrated with a VMware vSphere cluster.</p> <p>For more information about RDS on VMware, see the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html"> <i>RDS on VMware User Guide.</i> </a> </p>
		/// GET_DeleteCustomAvailabilityZone /#Action=DeleteCustomAvailabilityZone
		/// </summary>
		/// <param name="CustomAvailabilityZoneId">The custom AZ identifier.</param>
		/// <returns>Success</returns>
		public async Task GET_DeleteCustomAvailabilityZoneAsync(string CustomAvailabilityZoneId, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DeleteCustomAvailabilityZone?CustomAvailabilityZoneId=" + (CustomAvailabilityZoneId==null? "" : Uri.EscapeDataString(CustomAvailabilityZoneId))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>The DeleteDBCluster action deletes a previously provisioned DB cluster. When you delete a DB cluster, all automated backups for that DB cluster are deleted and can't be recovered. Manual DB cluster snapshots of the specified DB cluster are not deleted.</p> <p/> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_DeleteDBCluster /#Action=DeleteDBCluster
		/// </summary>
		/// <param name="DBClusterIdentifier"><p>The DB cluster identifier for the DB cluster to be deleted. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match an existing DBClusterIdentifier.</p> </li> </ul></param>
		/// <param name="SkipFinalSnapshot"><p>A value that indicates whether to skip the creation of a final DB cluster snapshot before the DB cluster is deleted. If skip is specified, no DB cluster snapshot is created. If skip isn't specified, a DB cluster snapshot is created before the DB cluster is deleted. By default, skip isn't specified, and the DB cluster snapshot is created. By default, this parameter is disabled.</p> <note> <p>You must specify a <code>FinalDBSnapshotIdentifier</code> parameter if <code>SkipFinalSnapshot</code> is disabled.</p> </note></param>
		/// <param name="FinalDBSnapshotIdentifier"><p> The DB cluster snapshot identifier of the new DB cluster snapshot created when <code>SkipFinalSnapshot</code> is disabled. </p> <note> <p> Specifying this parameter and also skipping the creation of a final DB cluster snapshot with the <code>SkipFinalShapshot</code> parameter results in an error.</p> </note> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_DeleteDBClusterAsync(string DBClusterIdentifier, bool SkipFinalSnapshot, string FinalDBSnapshotIdentifier, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DeleteDBCluster?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : Uri.EscapeDataString(DBClusterIdentifier))+"&SkipFinalSnapshot="+SkipFinalSnapshot+"&FinalDBSnapshotIdentifier=" + (FinalDBSnapshotIdentifier==null? "" : Uri.EscapeDataString(FinalDBSnapshotIdentifier))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a custom endpoint and removes it from an Amazon Aurora DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_DeleteDBClusterEndpoint /#Action=DeleteDBClusterEndpoint
		/// </summary>
		/// <param name="DBClusterEndpointIdentifier">The identifier associated with the custom endpoint. This parameter is stored as a lowercase string.</param>
		/// <returns>Success</returns>
		public async Task GET_DeleteDBClusterEndpointAsync(string DBClusterEndpointIdentifier, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DeleteDBClusterEndpoint?DBClusterEndpointIdentifier=" + (DBClusterEndpointIdentifier==null? "" : Uri.EscapeDataString(DBClusterEndpointIdentifier))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a specified DB cluster parameter group. The DB cluster parameter group to be deleted can't be associated with any DB clusters.</p> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_DeleteDBClusterParameterGroup /#Action=DeleteDBClusterParameterGroup
		/// </summary>
		/// <param name="DBClusterParameterGroupName"><p>The name of the DB cluster parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must be the name of an existing DB cluster parameter group.</p> </li> <li> <p>You can't delete a default DB cluster parameter group.</p> </li> <li> <p>Can't be associated with any DB clusters.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_DeleteDBClusterParameterGroupAsync(string DBClusterParameterGroupName, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DeleteDBClusterParameterGroup?DBClusterParameterGroupName=" + (DBClusterParameterGroupName==null? "" : Uri.EscapeDataString(DBClusterParameterGroupName))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a DB cluster snapshot. If the snapshot is being copied, the copy operation is terminated.</p> <note> <p>The DB cluster snapshot must be in the <code>available</code> state to be deleted.</p> </note> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_DeleteDBClusterSnapshot /#Action=DeleteDBClusterSnapshot
		/// </summary>
		/// <param name="DBClusterSnapshotIdentifier"><p>The identifier of the DB cluster snapshot to delete.</p> <p>Constraints: Must be the name of an existing DB cluster snapshot in the <code>available</code> state.</p></param>
		/// <returns>Success</returns>
		public async Task GET_DeleteDBClusterSnapshotAsync(string DBClusterSnapshotIdentifier, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DeleteDBClusterSnapshot?DBClusterSnapshotIdentifier=" + (DBClusterSnapshotIdentifier==null? "" : Uri.EscapeDataString(DBClusterSnapshotIdentifier))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>The DeleteDBInstance action deletes a previously provisioned DB instance. When you delete a DB instance, all automated backups for that instance are deleted and can't be recovered. Manual DB snapshots of the DB instance to be deleted by <code>DeleteDBInstance</code> are not deleted.</p> <p> If you request a final DB snapshot the status of the Amazon RDS DB instance is <code>deleting</code> until the DB snapshot is created. The API action <code>DescribeDBInstance</code> is used to monitor the status of this operation. The action can't be canceled or reverted once submitted. </p> <p>When a DB instance is in a failure state and has a status of <code>failed</code>, <code>incompatible-restore</code>, or <code>incompatible-network</code>, you can only delete it when you skip creation of the final snapshot with the <code>SkipFinalSnapshot</code> parameter.</p> <p>If the specified DB instance is part of an Amazon Aurora DB cluster, you can't delete the DB instance if both of the following conditions are true:</p> <ul> <li> <p>The DB cluster is a read replica of another Amazon Aurora DB cluster.</p> </li> <li> <p>The DB instance is the only instance in the DB cluster.</p> </li> </ul> <p>To delete a DB instance in this case, first call the <code>PromoteReadReplicaDBCluster</code> API action to promote the DB cluster so it's no longer a read replica. After the promotion completes, then call the <code>DeleteDBInstance</code> API action to delete the final instance in the DB cluster.</p>
		/// GET_DeleteDBInstance /#Action=DeleteDBInstance
		/// </summary>
		/// <param name="DBInstanceIdentifier"><p>The DB instance identifier for the DB instance to be deleted. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match the name of an existing DB instance.</p> </li> </ul></param>
		/// <param name="SkipFinalSnapshot"><p>A value that indicates whether to skip the creation of a final DB snapshot before the DB instance is deleted. If skip is specified, no DB snapshot is created. If skip isn't specified, a DB snapshot is created before the DB instance is deleted. By default, skip isn't specified, and the DB snapshot is created.</p> <p>When a DB instance is in a failure state and has a status of 'failed', 'incompatible-restore', or 'incompatible-network', it can only be deleted when skip is specified.</p> <p>Specify skip when deleting a read replica.</p> <note> <p>The FinalDBSnapshotIdentifier parameter must be specified if skip isn't specified.</p> </note></param>
		/// <param name="FinalDBSnapshotIdentifier"><p> The <code>DBSnapshotIdentifier</code> of the new <code>DBSnapshot</code> created when the <code>SkipFinalSnapshot</code> parameter is disabled. </p> <note> <p>Specifying this parameter and also specifying to skip final DB snapshot creation in SkipFinalShapshot results in an error.</p> </note> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters or numbers.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> <li> <p>Can't be specified when deleting a read replica.</p> </li> </ul></param>
		/// <param name="DeleteAutomatedBackups">A value that indicates whether to remove automated backups immediately after the DB instance is deleted. This parameter isn't case-sensitive. The default is to remove automated backups immediately after the DB instance is deleted.</param>
		/// <returns>Success</returns>
		public async Task GET_DeleteDBInstanceAsync(string DBInstanceIdentifier, bool SkipFinalSnapshot, string FinalDBSnapshotIdentifier, bool DeleteAutomatedBackups, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DeleteDBInstance?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : Uri.EscapeDataString(DBInstanceIdentifier))+"&SkipFinalSnapshot="+SkipFinalSnapshot+"&FinalDBSnapshotIdentifier=" + (FinalDBSnapshotIdentifier==null? "" : Uri.EscapeDataString(FinalDBSnapshotIdentifier))+"&DeleteAutomatedBackups="+DeleteAutomatedBackups+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes automated backups based on the source instance's <code>DbiResourceId</code> value or the restorable instance's resource ID.
		/// GET_DeleteDBInstanceAutomatedBackup /#Action=DeleteDBInstanceAutomatedBackup
		/// </summary>
		/// <param name="DbiResourceId">The identifier for the source DB instance, which can't be changed and which is unique to an AWS Region.</param>
		/// <returns>Success</returns>
		public async Task GET_DeleteDBInstanceAutomatedBackupAsync(string DbiResourceId, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DeleteDBInstanceAutomatedBackup?DbiResourceId=" + (DbiResourceId==null? "" : Uri.EscapeDataString(DbiResourceId))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a specified DB parameter group. The DB parameter group to be deleted can't be associated with any DB instances.
		/// GET_DeleteDBParameterGroup /#Action=DeleteDBParameterGroup
		/// </summary>
		/// <param name="DBParameterGroupName"><p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must be the name of an existing DB parameter group</p> </li> <li> <p>You can't delete a default DB parameter group</p> </li> <li> <p>Can't be associated with any DB instances</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_DeleteDBParameterGroupAsync(string DBParameterGroupName, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DeleteDBParameterGroup?DBParameterGroupName=" + (DBParameterGroupName==null? "" : Uri.EscapeDataString(DBParameterGroupName))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <note> <p>This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.</p> </note> <p>Deletes an existing proxy.</p>
		/// GET_DeleteDBProxy /#Action=DeleteDBProxy
		/// </summary>
		/// <param name="DBProxyName">The name of the DB proxy to delete.</param>
		/// <returns>Success</returns>
		public async Task GET_DeleteDBProxyAsync(string DBProxyName, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DeleteDBProxy?DBProxyName=" + (DBProxyName==null? "" : Uri.EscapeDataString(DBProxyName))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a DB security group.</p> <note> <p>The specified DB security group must not be associated with any DB instances.</p> </note>
		/// GET_DeleteDBSecurityGroup /#Action=DeleteDBSecurityGroup
		/// </summary>
		/// <param name="DBSecurityGroupName"><p>The name of the DB security group to delete.</p> <note> <p>You can't delete the default DB security group.</p> </note> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> <li> <p>Must not be "Default"</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_DeleteDBSecurityGroupAsync(string DBSecurityGroupName, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DeleteDBSecurityGroup?DBSecurityGroupName=" + (DBSecurityGroupName==null? "" : Uri.EscapeDataString(DBSecurityGroupName))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a DB snapshot. If the snapshot is being copied, the copy operation is terminated.</p> <note> <p>The DB snapshot must be in the <code>available</code> state to be deleted.</p> </note>
		/// GET_DeleteDBSnapshot /#Action=DeleteDBSnapshot
		/// </summary>
		/// <param name="DBSnapshotIdentifier"><p>The DB snapshot identifier.</p> <p>Constraints: Must be the name of an existing DB snapshot in the <code>available</code> state.</p></param>
		/// <returns>Success</returns>
		public async Task GET_DeleteDBSnapshotAsync(string DBSnapshotIdentifier, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DeleteDBSnapshot?DBSnapshotIdentifier=" + (DBSnapshotIdentifier==null? "" : Uri.EscapeDataString(DBSnapshotIdentifier))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a DB subnet group.</p> <note> <p>The specified database subnet group must not be associated with any DB instances.</p> </note>
		/// GET_DeleteDBSubnetGroup /#Action=DeleteDBSubnetGroup
		/// </summary>
		/// <param name="DBSubnetGroupName"><p>The name of the database subnet group to delete.</p> <note> <p>You can't delete the default subnet group.</p> </note> <p>Constraints:</p> <p>Constraints: Must match the name of an existing DBSubnetGroup. Must not be default.</p> <p>Example: <code>mySubnetgroup</code> </p></param>
		/// <returns>Success</returns>
		public async Task GET_DeleteDBSubnetGroupAsync(string DBSubnetGroupName, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DeleteDBSubnetGroup?DBSubnetGroupName=" + (DBSubnetGroupName==null? "" : Uri.EscapeDataString(DBSubnetGroupName))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an RDS event notification subscription.
		/// GET_DeleteEventSubscription /#Action=DeleteEventSubscription
		/// </summary>
		/// <param name="SubscriptionName">The name of the RDS event notification subscription you want to delete.</param>
		/// <returns>Success</returns>
		public async Task GET_DeleteEventSubscriptionAsync(string SubscriptionName, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DeleteEventSubscription?SubscriptionName=" + (SubscriptionName==null? "" : Uri.EscapeDataString(SubscriptionName))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p> Deletes a global database cluster. The primary and secondary clusters must already be detached or destroyed first. </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_DeleteGlobalCluster /#Action=DeleteGlobalCluster
		/// </summary>
		/// <param name="GlobalClusterIdentifier"> The cluster identifier of the global database cluster being deleted. </param>
		/// <returns>Success</returns>
		public async Task GET_DeleteGlobalClusterAsync(string GlobalClusterIdentifier, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DeleteGlobalCluster?GlobalClusterIdentifier=" + (GlobalClusterIdentifier==null? "" : Uri.EscapeDataString(GlobalClusterIdentifier))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes the installation medium for a DB engine that requires an on-premises customer provided license, such as Microsoft SQL Server.
		/// GET_DeleteInstallationMedia /#Action=DeleteInstallationMedia
		/// </summary>
		/// <param name="InstallationMediaId">The installation medium ID.</param>
		/// <returns>Success</returns>
		public async Task GET_DeleteInstallationMediaAsync(string InstallationMediaId, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DeleteInstallationMedia?InstallationMediaId=" + (InstallationMediaId==null? "" : Uri.EscapeDataString(InstallationMediaId))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an existing option group.
		/// GET_DeleteOptionGroup /#Action=DeleteOptionGroup
		/// </summary>
		/// <param name="OptionGroupName"><p>The name of the option group to be deleted.</p> <note> <p>You can't delete default option groups.</p> </note></param>
		/// <returns>Success</returns>
		public async Task GET_DeleteOptionGroupAsync(string OptionGroupName, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DeleteOptionGroup?OptionGroupName=" + (OptionGroupName==null? "" : Uri.EscapeDataString(OptionGroupName))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <note> <p>This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.</p> </note> <p>Remove the association between one or more <code>DBProxyTarget</code> data structures and a <code>DBProxyTargetGroup</code>.</p>
		/// GET_DeregisterDBProxyTargets /#Action=DeregisterDBProxyTargets
		/// </summary>
		/// <param name="DBProxyName">The identifier of the <code>DBProxy</code> that is associated with the <code>DBProxyTargetGroup</code>.</param>
		/// <param name="TargetGroupName">The identifier of the <code>DBProxyTargetGroup</code>.</param>
		/// <param name="DBInstanceIdentifiers">One or more DB instance identifiers.</param>
		/// <param name="DBClusterIdentifiers">One or more DB cluster identifiers.</param>
		/// <returns>Success</returns>
		public async Task GET_DeregisterDBProxyTargetsAsync(string DBProxyName, string TargetGroupName, String[] DBInstanceIdentifiers, String[] DBClusterIdentifiers, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DeregisterDBProxyTargets?DBProxyName=" + (DBProxyName==null? "" : Uri.EscapeDataString(DBProxyName))+"&TargetGroupName=" + (TargetGroupName==null? "" : Uri.EscapeDataString(TargetGroupName))+"&"+String.Join("&", DBInstanceIdentifiers.Select(z => $"DBInstanceIdentifiers={z}"))+"&"+String.Join("&", DBClusterIdentifiers.Select(z => $"DBClusterIdentifiers={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Lists all of the attributes for a customer account. The attributes include Amazon RDS quotas for the account, such as the number of DB instances allowed. The description for a quota includes the quota name, current usage toward that quota, and the quota's maximum value.</p> <p>This command doesn't take any parameters.</p>
		/// GET_DescribeAccountAttributes /#Action=DescribeAccountAttributes
		/// </summary>
		/// <returns>Success</returns>
		public async Task GET_DescribeAccountAttributesAsync(string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeAccountAttributes?Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the set of CA certificates provided by Amazon RDS for this AWS account.
		/// GET_DescribeCertificates /#Action=DescribeCertificates
		/// </summary>
		/// <param name="CertificateIdentifier"><p>The user-supplied certificate identifier. If this parameter is specified, information for only the identified certificate is returned. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match an existing CertificateIdentifier.</p> </li> </ul></param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker"> An optional pagination token provided by a previous <code>DescribeCertificates</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeCertificatesAsync(string CertificateIdentifier, Filter[] Filters, int MaxRecords, string Marker, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeCertificates?CertificateIdentifier=" + (CertificateIdentifier==null? "" : Uri.EscapeDataString(CertificateIdentifier))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns information about custom Availability Zones (AZs).</p> <p>A custom AZ is an on-premises AZ that is integrated with a VMware vSphere cluster.</p> <p>For more information about RDS on VMware, see the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html"> <i>RDS on VMware User Guide.</i> </a> </p>
		/// GET_DescribeCustomAvailabilityZones /#Action=DescribeCustomAvailabilityZones
		/// </summary>
		/// <param name="CustomAvailabilityZoneId">The custom AZ identifier. If this parameter is specified, information from only the specific custom AZ is returned.</param>
		/// <param name="Filters">A filter that specifies one or more custom AZs to describe.</param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous <code>DescribeCustomAvailabilityZones</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeCustomAvailabilityZonesAsync(string CustomAvailabilityZoneId, Filter[] Filters, int MaxRecords, string Marker, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeCustomAvailabilityZones?CustomAvailabilityZoneId=" + (CustomAvailabilityZoneId==null? "" : Uri.EscapeDataString(CustomAvailabilityZoneId))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns information about backtracks for a DB cluster.</p> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_DescribeDBClusterBacktracks /#Action=DescribeDBClusterBacktracks
		/// </summary>
		/// <param name="DBClusterIdentifier"><p>The DB cluster identifier of the DB cluster to be described. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster1</code> </p></param>
		/// <param name="BacktrackIdentifier"><p>If specified, this value is the backtrack identifier of the backtrack to be described.</p> <p>Constraints:</p> <ul> <li> <p>Must contain a valid universally unique identifier (UUID). For more information about UUIDs, see <a href="http://www.ietf.org/rfc/rfc4122.txt">A Universally Unique Identifier (UUID) URN Namespace</a>.</p> </li> </ul> <p>Example: <code>123e4567-e89b-12d3-a456-426655440000</code> </p></param>
		/// <param name="Filters"><p>A filter that specifies one or more DB clusters to describe. Supported filters include the following:</p> <ul> <li> <p> <code>db-cluster-backtrack-id</code> - Accepts backtrack identifiers. The results list includes information about only the backtracks identified by these identifiers.</p> </li> <li> <p> <code>db-cluster-backtrack-status</code> - Accepts any of the following backtrack status values:</p> <ul> <li> <p> <code>applying</code> </p> </li> <li> <p> <code>completed</code> </p> </li> <li> <p> <code>failed</code> </p> </li> <li> <p> <code>pending</code> </p> </li> </ul> <p>The results list includes information about only the backtracks identified by these values.</p> </li> </ul></param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker"> An optional pagination token provided by a previous <code>DescribeDBClusterBacktracks</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBClusterBacktracksAsync(string DBClusterIdentifier, string BacktrackIdentifier, Filter[] Filters, int MaxRecords, string Marker, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeDBClusterBacktracks?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : Uri.EscapeDataString(DBClusterIdentifier))+"&BacktrackIdentifier=" + (BacktrackIdentifier==null? "" : Uri.EscapeDataString(BacktrackIdentifier))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns information about endpoints for an Amazon Aurora DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_DescribeDBClusterEndpoints /#Action=DescribeDBClusterEndpoints
		/// </summary>
		/// <param name="DBClusterIdentifier">The DB cluster identifier of the DB cluster associated with the endpoint. This parameter is stored as a lowercase string.</param>
		/// <param name="DBClusterEndpointIdentifier">The identifier of the endpoint to describe. This parameter is stored as a lowercase string.</param>
		/// <param name="Filters">A set of name-value pairs that define which endpoints to include in the output. The filters are specified as name-value pairs, in the format <code>Name=<i>endpoint_type</i>,Values=<i>endpoint_type1</i>,<i>endpoint_type2</i>,...</code>. <code>Name</code> can be one of: <code>db-cluster-endpoint-type</code>, <code>db-cluster-endpoint-custom-type</code>, <code>db-cluster-endpoint-id</code>, <code>db-cluster-endpoint-status</code>. <code>Values</code> for the <code> db-cluster-endpoint-type</code> filter can be one or more of: <code>reader</code>, <code>writer</code>, <code>custom</code>. <code>Values</code> for the <code>db-cluster-endpoint-custom-type</code> filter can be one or more of: <code>reader</code>, <code>any</code>. <code>Values</code> for the <code>db-cluster-endpoint-status</code> filter can be one or more of: <code>available</code>, <code>creating</code>, <code>deleting</code>, <code>modifying</code>. </param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker"> An optional pagination token provided by a previous <code>DescribeDBClusterEndpoints</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBClusterEndpointsAsync(string DBClusterIdentifier, string DBClusterEndpointIdentifier, Filter[] Filters, int MaxRecords, string Marker, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeDBClusterEndpoints?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : Uri.EscapeDataString(DBClusterIdentifier))+"&DBClusterEndpointIdentifier=" + (DBClusterEndpointIdentifier==null? "" : Uri.EscapeDataString(DBClusterEndpointIdentifier))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p> Returns a list of <code>DBClusterParameterGroup</code> descriptions. If a <code>DBClusterParameterGroupName</code> parameter is specified, the list will contain only the description of the specified DB cluster parameter group. </p> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_DescribeDBClusterParameterGroups /#Action=DescribeDBClusterParameterGroups
		/// </summary>
		/// <param name="DBClusterParameterGroupName"><p>The name of a specific DB cluster parameter group to return details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBClusterParameterGroup.</p> </li> </ul></param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker"> An optional pagination token provided by a previous <code>DescribeDBClusterParameterGroups</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBClusterParameterGroupsAsync(string DBClusterParameterGroupName, Filter[] Filters, int MaxRecords, string Marker, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeDBClusterParameterGroups?DBClusterParameterGroupName=" + (DBClusterParameterGroupName==null? "" : Uri.EscapeDataString(DBClusterParameterGroupName))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns the detailed parameter list for a particular DB cluster parameter group.</p> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_DescribeDBClusterParameters /#Action=DescribeDBClusterParameters
		/// </summary>
		/// <param name="DBClusterParameterGroupName"><p>The name of a specific DB cluster parameter group to return parameter details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBClusterParameterGroup.</p> </li> </ul></param>
		/// <param name="Source"> A value that indicates to return only parameters for a specific source. Parameter sources can be <code>engine</code>, <code>service</code>, or <code>customer</code>. </param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker"> An optional pagination token provided by a previous <code>DescribeDBClusterParameters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBClusterParametersAsync(string DBClusterParameterGroupName, string Source, Filter[] Filters, int MaxRecords, string Marker, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeDBClusterParameters?DBClusterParameterGroupName=" + (DBClusterParameterGroupName==null? "" : Uri.EscapeDataString(DBClusterParameterGroupName))+"&Source=" + (Source==null? "" : Uri.EscapeDataString(Source))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns a list of DB cluster snapshot attribute names and values for a manual DB cluster snapshot.</p> <p>When sharing snapshots with other AWS accounts, <code>DescribeDBClusterSnapshotAttributes</code> returns the <code>restore</code> attribute and a list of IDs for the AWS accounts that are authorized to copy or restore the manual DB cluster snapshot. If <code>all</code> is included in the list of values for the <code>restore</code> attribute, then the manual DB cluster snapshot is public and can be copied or restored by all AWS accounts.</p> <p>To add or remove access for an AWS account to copy or restore a manual DB cluster snapshot, or to make the manual DB cluster snapshot public or private, use the <code>ModifyDBClusterSnapshotAttribute</code> API action.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_DescribeDBClusterSnapshotAttributes /#Action=DescribeDBClusterSnapshotAttributes
		/// </summary>
		/// <param name="DBClusterSnapshotIdentifier">The identifier for the DB cluster snapshot to describe the attributes for.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBClusterSnapshotAttributesAsync(string DBClusterSnapshotIdentifier, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeDBClusterSnapshotAttributes?DBClusterSnapshotIdentifier=" + (DBClusterSnapshotIdentifier==null? "" : Uri.EscapeDataString(DBClusterSnapshotIdentifier))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns information about DB cluster snapshots. This API action supports pagination.</p> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_DescribeDBClusterSnapshots /#Action=DescribeDBClusterSnapshots
		/// </summary>
		/// <param name="DBClusterIdentifier"><p>The ID of the DB cluster to retrieve the list of DB cluster snapshots for. This parameter can't be used in conjunction with the <code>DBClusterSnapshotIdentifier</code> parameter. This parameter isn't case-sensitive. </p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the identifier of an existing DBCluster.</p> </li> </ul></param>
		/// <param name="DBClusterSnapshotIdentifier"><p>A specific DB cluster snapshot identifier to describe. This parameter can't be used in conjunction with the <code>DBClusterIdentifier</code> parameter. This value is stored as a lowercase string. </p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the identifier of an existing DBClusterSnapshot.</p> </li> <li> <p>If this identifier is for an automated snapshot, the <code>SnapshotType</code> parameter must also be specified.</p> </li> </ul></param>
		/// <param name="SnapshotType"><p>The type of DB cluster snapshots to be returned. You can specify one of the following values:</p> <ul> <li> <p> <code>automated</code> - Return all DB cluster snapshots that have been automatically taken by Amazon RDS for my AWS account.</p> </li> <li> <p> <code>manual</code> - Return all DB cluster snapshots that have been taken by my AWS account.</p> </li> <li> <p> <code>shared</code> - Return all manual DB cluster snapshots that have been shared to my AWS account.</p> </li> <li> <p> <code>public</code> - Return all DB cluster snapshots that have been marked as public.</p> </li> </ul> <p>If you don't specify a <code>SnapshotType</code> value, then both automated and manual DB cluster snapshots are returned. You can include shared DB cluster snapshots with these results by enabling the <code>IncludeShared</code> parameter. You can include public DB cluster snapshots with these results by enabling the <code>IncludePublic</code> parameter.</p> <p>The <code>IncludeShared</code> and <code>IncludePublic</code> parameters don't apply for <code>SnapshotType</code> values of <code>manual</code> or <code>automated</code>. The <code>IncludePublic</code> parameter doesn't apply when <code>SnapshotType</code> is set to <code>shared</code>. The <code>IncludeShared</code> parameter doesn't apply when <code>SnapshotType</code> is set to <code>public</code>.</p></param>
		/// <param name="Filters"><p>A filter that specifies one or more DB cluster snapshots to describe.</p> <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon Resource Names (ARNs).</p> </li> <li> <p> <code>db-cluster-snapshot-id</code> - Accepts DB cluster snapshot identifiers.</p> </li> <li> <p> <code>snapshot-type</code> - Accepts types of DB cluster snapshots.</p> </li> <li> <p> <code>engine</code> - Accepts names of database engines.</p> </li> </ul></param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous <code>DescribeDBClusterSnapshots</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </param>
		/// <param name="IncludeShared"><p>A value that indicates whether to include shared manual DB cluster snapshots from other AWS accounts that this AWS account has been given permission to copy or restore. By default, these snapshots are not included.</p> <p>You can give an AWS account permission to restore a manual DB cluster snapshot from another AWS account by the <code>ModifyDBClusterSnapshotAttribute</code> API action.</p></param>
		/// <param name="IncludePublic"><p>A value that indicates whether to include manual DB cluster snapshots that are public and can be copied or restored by any AWS account. By default, the public snapshots are not included.</p> <p>You can share a manual DB cluster snapshot as public by using the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p></param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBClusterSnapshotsAsync(string DBClusterIdentifier, string DBClusterSnapshotIdentifier, string SnapshotType, Filter[] Filters, int MaxRecords, string Marker, bool IncludeShared, bool IncludePublic, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeDBClusterSnapshots?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : Uri.EscapeDataString(DBClusterIdentifier))+"&DBClusterSnapshotIdentifier=" + (DBClusterSnapshotIdentifier==null? "" : Uri.EscapeDataString(DBClusterSnapshotIdentifier))+"&SnapshotType=" + (SnapshotType==null? "" : Uri.EscapeDataString(SnapshotType))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&IncludeShared="+IncludeShared+"&IncludePublic="+IncludePublic+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns information about provisioned Aurora DB clusters. This API supports pagination.</p> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This operation can also return information for Amazon Neptune DB instances and Amazon DocumentDB instances.</p> </note>
		/// GET_DescribeDBClusters /#Action=DescribeDBClusters
		/// </summary>
		/// <param name="DBClusterIdentifier"><p>The user-supplied DB cluster identifier. If this parameter is specified, information from only the specific DB cluster is returned. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match an existing DBClusterIdentifier.</p> </li> </ul></param>
		/// <param name="Filters"><p>A filter that specifies one or more DB clusters to describe.</p> <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon Resource Names (ARNs). The results list will only include information about the DB clusters identified by these ARNs.</p> </li> </ul></param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous <code>DescribeDBClusters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </param>
		/// <param name="IncludeShared">Optional Boolean parameter that specifies whether the output includes information about clusters shared from other AWS accounts.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBClustersAsync(string DBClusterIdentifier, Filter[] Filters, int MaxRecords, string Marker, bool IncludeShared, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeDBClusters?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : Uri.EscapeDataString(DBClusterIdentifier))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&IncludeShared="+IncludeShared+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of the available DB engines.
		/// GET_DescribeDBEngineVersions /#Action=DescribeDBEngineVersions
		/// </summary>
		/// <param name="Engine">The database engine to return.</param>
		/// <param name="EngineVersion"><p>The database engine version to return.</p> <p>Example: <code>5.1.49</code> </p></param>
		/// <param name="DBParameterGroupFamily"><p>The name of a specific DB parameter group family to return details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match an existing DBParameterGroupFamily.</p> </li> </ul></param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p> The maximum number of records to include in the response. If more than the <code>MaxRecords</code> value is available, a pagination token called a marker is included in the response so you can retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker"> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </param>
		/// <param name="DefaultOnly">A value that indicates whether only the default version of the specified engine or engine and major version combination is returned.</param>
		/// <param name="ListSupportedCharacterSets"><p>A value that indicates whether to list the supported character sets for each engine version.</p> <p>If this parameter is enabled and the requested engine supports the <code>CharacterSetName</code> parameter for <code>CreateDBInstance</code>, the response includes a list of supported character sets for each engine version. </p></param>
		/// <param name="ListSupportedTimezones"><p>A value that indicates whether to list the supported time zones for each engine version.</p> <p>If this parameter is enabled and the requested engine supports the <code>TimeZone</code> parameter for <code>CreateDBInstance</code>, the response includes a list of supported time zones for each engine version. </p></param>
		/// <param name="IncludeAll">A value that indicates whether to include engine versions that aren't available in the list. The default is to list only available engine versions.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBEngineVersionsAsync(string Engine, string EngineVersion, string DBParameterGroupFamily, Filter[] Filters, int MaxRecords, string Marker, bool DefaultOnly, bool ListSupportedCharacterSets, bool ListSupportedTimezones, bool IncludeAll, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeDBEngineVersions?Engine=" + (Engine==null? "" : Uri.EscapeDataString(Engine))+"&EngineVersion=" + (EngineVersion==null? "" : Uri.EscapeDataString(EngineVersion))+"&DBParameterGroupFamily=" + (DBParameterGroupFamily==null? "" : Uri.EscapeDataString(DBParameterGroupFamily))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&DefaultOnly="+DefaultOnly+"&ListSupportedCharacterSets="+ListSupportedCharacterSets+"&ListSupportedTimezones="+ListSupportedTimezones+"&IncludeAll="+IncludeAll+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Displays backups for both current and deleted instances. For example, use this operation to find details about automated backups for previously deleted instances. Current instances with retention periods greater than zero (0) are returned for both the <code>DescribeDBInstanceAutomatedBackups</code> and <code>DescribeDBInstances</code> operations.</p> <p>All parameters are optional.</p>
		/// GET_DescribeDBInstanceAutomatedBackups /#Action=DescribeDBInstanceAutomatedBackups
		/// </summary>
		/// <param name="DbiResourceId">The resource ID of the DB instance that is the source of the automated backup. This parameter isn't case-sensitive. </param>
		/// <param name="DBInstanceIdentifier">(Optional) The user-supplied instance identifier. If this parameter is specified, it must match the identifier of an existing DB instance. It returns information from the specific DB instance' automated backup. This parameter isn't case-sensitive. </param>
		/// <param name="Filters"><p>A filter that specifies which resources to return based on status.</p> <p>Supported filters are the following:</p> <ul> <li> <p> <code>status</code> </p> <ul> <li> <p> <code>active</code> - automated backups for current instances</p> </li> <li> <p> <code>retained</code> - automated backups for deleted instances</p> </li> <li> <p> <code>creating</code> - automated backups that are waiting for the first automated snapshot to be available</p> </li> </ul> </li> <li> <p> <code>db-instance-id</code> - Accepts DB instance identifiers and Amazon Resource Names (ARNs) for DB instances. The results list includes only information about the DB instance automated backupss identified by these ARNs.</p> </li> <li> <p> <code>dbi-resource-id</code> - Accepts DB instance resource identifiers and DB Amazon Resource Names (ARNs) for DB instances. The results list includes only information about the DB instance resources identified by these ARNs.</p> </li> </ul> <p>Returns all resources by default. The status for each resource is specified in the response.</p></param>
		/// <param name="MaxRecords">The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</param>
		/// <param name="Marker">The pagination token provided in the previous request. If this parameter is specified the response includes only records beyond the marker, up to <code>MaxRecords</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBInstanceAutomatedBackupsAsync(string DbiResourceId, string DBInstanceIdentifier, Filter[] Filters, int MaxRecords, string Marker, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeDBInstanceAutomatedBackups?DbiResourceId=" + (DbiResourceId==null? "" : Uri.EscapeDataString(DbiResourceId))+"&DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : Uri.EscapeDataString(DBInstanceIdentifier))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns information about provisioned RDS instances. This API supports pagination.</p> <note> <p>This operation can also return information for Amazon Neptune DB instances and Amazon DocumentDB instances.</p> </note>
		/// GET_DescribeDBInstances /#Action=DescribeDBInstances
		/// </summary>
		/// <param name="DBInstanceIdentifier"><p>The user-supplied instance identifier. If this parameter is specified, information from only the specific DB instance is returned. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the identifier of an existing DBInstance.</p> </li> </ul></param>
		/// <param name="Filters"><p>A filter that specifies one or more DB instances to describe.</p> <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon Resource Names (ARNs). The results list will only include information about the DB instances associated with the DB clusters identified by these ARNs.</p> </li> <li> <p> <code>db-instance-id</code> - Accepts DB instance identifiers and DB instance Amazon Resource Names (ARNs). The results list will only include information about the DB instances identified by these ARNs.</p> </li> <li> <p> <code>dbi-resource-id</code> - Accepts DB instance resource identifiers. The results list will only include information about the DB instances identified by these DB instance resource identifiers.</p> </li> <li> <p> <code>domain</code> - Accepts Active Directory directory IDs. The results list will only include information about the DB instances associated with these domains.</p> </li> <li> <p> <code>engine</code> - Accepts engine names. The results list will only include information about the DB instances for these engines.</p> </li> </ul></param>
		/// <param name="MaxRecords"><p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker"> An optional pagination token provided by a previous <code>DescribeDBInstances</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBInstancesAsync(string DBInstanceIdentifier, Filter[] Filters, int MaxRecords, string Marker, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeDBInstances?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : Uri.EscapeDataString(DBInstanceIdentifier))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of DB log files for the DB instance.
		/// GET_DescribeDBLogFiles /#Action=DescribeDBLogFiles
		/// </summary>
		/// <param name="DBInstanceIdentifier"><p>The customer-assigned name of the DB instance that contains the log files you want to list.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBInstance.</p> </li> </ul></param>
		/// <param name="FilenameContains">Filters the available log files for log file names that contain the specified string.</param>
		/// <param name="FileLastWritten">Filters the available log files for files written since the specified date, in POSIX timestamp format with milliseconds.</param>
		/// <param name="FileSize">Filters the available log files for files larger than the specified size.</param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords">The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</param>
		/// <param name="Marker">The pagination token provided in the previous request. If this parameter is specified the response includes only records beyond the marker, up to MaxRecords.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBLogFilesAsync(string DBInstanceIdentifier, string FilenameContains, int FileLastWritten, int FileSize, Filter[] Filters, int MaxRecords, string Marker, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeDBLogFiles?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : Uri.EscapeDataString(DBInstanceIdentifier))+"&FilenameContains=" + (FilenameContains==null? "" : Uri.EscapeDataString(FilenameContains))+"&FileLastWritten="+FileLastWritten+"&FileSize="+FileSize+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of <code>DBParameterGroup</code> descriptions. If a <code>DBParameterGroupName</code> is specified, the list will contain only the description of the specified DB parameter group.
		/// GET_DescribeDBParameterGroups /#Action=DescribeDBParameterGroups
		/// </summary>
		/// <param name="DBParameterGroupName"><p>The name of a specific DB parameter group to return details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBClusterParameterGroup.</p> </li> </ul></param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker"> An optional pagination token provided by a previous <code>DescribeDBParameterGroups</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBParameterGroupsAsync(string DBParameterGroupName, Filter[] Filters, int MaxRecords, string Marker, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeDBParameterGroups?DBParameterGroupName=" + (DBParameterGroupName==null? "" : Uri.EscapeDataString(DBParameterGroupName))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns the detailed parameter list for a particular DB parameter group.
		/// GET_DescribeDBParameters /#Action=DescribeDBParameters
		/// </summary>
		/// <param name="DBParameterGroupName"><p>The name of a specific DB parameter group to return details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBParameterGroup.</p> </li> </ul></param>
		/// <param name="Source"><p>The parameter types to return.</p> <p>Default: All parameter types returned</p> <p>Valid Values: <code>user | system | engine-default</code> </p></param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker"> An optional pagination token provided by a previous <code>DescribeDBParameters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBParametersAsync(string DBParameterGroupName, string Source, Filter[] Filters, int MaxRecords, string Marker, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeDBParameters?DBParameterGroupName=" + (DBParameterGroupName==null? "" : Uri.EscapeDataString(DBParameterGroupName))+"&Source=" + (Source==null? "" : Uri.EscapeDataString(Source))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <note> <p>This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.</p> </note> <p>Returns information about DB proxies.</p>
		/// GET_DescribeDBProxies /#Action=DescribeDBProxies
		/// </summary>
		/// <param name="DBProxyName">The name of the DB proxy.</param>
		/// <param name="Filters">This parameter is not currently supported.</param>
		/// <param name="Marker"> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBProxiesAsync(string DBProxyName, Filter[] Filters, string Marker, int MaxRecords, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeDBProxies?DBProxyName=" + (DBProxyName==null? "" : Uri.EscapeDataString(DBProxyName))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&MaxRecords="+MaxRecords+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <note> <p>This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.</p> </note> <p>Returns information about DB proxy target groups, represented by <code>DBProxyTargetGroup</code> data structures.</p>
		/// GET_DescribeDBProxyTargetGroups /#Action=DescribeDBProxyTargetGroups
		/// </summary>
		/// <param name="DBProxyName">The identifier of the <code>DBProxy</code> associated with the target group.</param>
		/// <param name="TargetGroupName">The identifier of the <code>DBProxyTargetGroup</code> to describe.</param>
		/// <param name="Filters">This parameter is not currently supported.</param>
		/// <param name="Marker"> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </param>
		/// <param name="MaxRecords"><p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBProxyTargetGroupsAsync(string DBProxyName, string TargetGroupName, Filter[] Filters, string Marker, int MaxRecords, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeDBProxyTargetGroups?DBProxyName=" + (DBProxyName==null? "" : Uri.EscapeDataString(DBProxyName))+"&TargetGroupName=" + (TargetGroupName==null? "" : Uri.EscapeDataString(TargetGroupName))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&MaxRecords="+MaxRecords+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <note> <p>This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.</p> </note> <p>Returns information about <code>DBProxyTarget</code> objects. This API supports pagination.</p>
		/// GET_DescribeDBProxyTargets /#Action=DescribeDBProxyTargets
		/// </summary>
		/// <param name="DBProxyName">The identifier of the <code>DBProxyTarget</code> to describe.</param>
		/// <param name="TargetGroupName">The identifier of the <code>DBProxyTargetGroup</code> to describe.</param>
		/// <param name="Filters">This parameter is not currently supported.</param>
		/// <param name="Marker"> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </param>
		/// <param name="MaxRecords"><p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBProxyTargetsAsync(string DBProxyName, string TargetGroupName, Filter[] Filters, string Marker, int MaxRecords, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeDBProxyTargets?DBProxyName=" + (DBProxyName==null? "" : Uri.EscapeDataString(DBProxyName))+"&TargetGroupName=" + (TargetGroupName==null? "" : Uri.EscapeDataString(TargetGroupName))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&MaxRecords="+MaxRecords+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of <code>DBSecurityGroup</code> descriptions. If a <code>DBSecurityGroupName</code> is specified, the list will contain only the descriptions of the specified DB security group.
		/// GET_DescribeDBSecurityGroups /#Action=DescribeDBSecurityGroups
		/// </summary>
		/// <param name="DBSecurityGroupName">The name of the DB security group to return details for.</param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker"> An optional pagination token provided by a previous <code>DescribeDBSecurityGroups</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBSecurityGroupsAsync(string DBSecurityGroupName, Filter[] Filters, int MaxRecords, string Marker, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeDBSecurityGroups?DBSecurityGroupName=" + (DBSecurityGroupName==null? "" : Uri.EscapeDataString(DBSecurityGroupName))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns a list of DB snapshot attribute names and values for a manual DB snapshot.</p> <p>When sharing snapshots with other AWS accounts, <code>DescribeDBSnapshotAttributes</code> returns the <code>restore</code> attribute and a list of IDs for the AWS accounts that are authorized to copy or restore the manual DB snapshot. If <code>all</code> is included in the list of values for the <code>restore</code> attribute, then the manual DB snapshot is public and can be copied or restored by all AWS accounts.</p> <p>To add or remove access for an AWS account to copy or restore a manual DB snapshot, or to make the manual DB snapshot public or private, use the <code>ModifyDBSnapshotAttribute</code> API action.</p>
		/// GET_DescribeDBSnapshotAttributes /#Action=DescribeDBSnapshotAttributes
		/// </summary>
		/// <param name="DBSnapshotIdentifier">The identifier for the DB snapshot to describe the attributes for.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBSnapshotAttributesAsync(string DBSnapshotIdentifier, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeDBSnapshotAttributes?DBSnapshotIdentifier=" + (DBSnapshotIdentifier==null? "" : Uri.EscapeDataString(DBSnapshotIdentifier))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns information about DB snapshots. This API action supports pagination.
		/// GET_DescribeDBSnapshots /#Action=DescribeDBSnapshots
		/// </summary>
		/// <param name="DBInstanceIdentifier"><p>The ID of the DB instance to retrieve the list of DB snapshots for. This parameter can't be used in conjunction with <code>DBSnapshotIdentifier</code>. This parameter isn't case-sensitive. </p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the identifier of an existing DBInstance.</p> </li> </ul></param>
		/// <param name="DBSnapshotIdentifier"><p> A specific DB snapshot identifier to describe. This parameter can't be used in conjunction with <code>DBInstanceIdentifier</code>. This value is stored as a lowercase string. </p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the identifier of an existing DBSnapshot.</p> </li> <li> <p>If this identifier is for an automated snapshot, the <code>SnapshotType</code> parameter must also be specified.</p> </li> </ul></param>
		/// <param name="SnapshotType"><p>The type of snapshots to be returned. You can specify one of the following values:</p> <ul> <li> <p> <code>automated</code> - Return all DB snapshots that have been automatically taken by Amazon RDS for my AWS account.</p> </li> <li> <p> <code>manual</code> - Return all DB snapshots that have been taken by my AWS account.</p> </li> <li> <p> <code>shared</code> - Return all manual DB snapshots that have been shared to my AWS account.</p> </li> <li> <p> <code>public</code> - Return all DB snapshots that have been marked as public.</p> </li> <li> <p> <code>awsbackup</code> - Return the DB snapshots managed by the AWS Backup service.</p> <p>For information about AWS Backup, see the <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/whatisbackup.html"> <i>AWS Backup Developer Guide.</i> </a> </p> <p>The <code>awsbackup</code> type does not apply to Aurora.</p> </li> </ul> <p>If you don't specify a <code>SnapshotType</code> value, then both automated and manual snapshots are returned. Shared and public DB snapshots are not included in the returned results by default. You can include shared snapshots with these results by enabling the <code>IncludeShared</code> parameter. You can include public snapshots with these results by enabling the <code>IncludePublic</code> parameter.</p> <p>The <code>IncludeShared</code> and <code>IncludePublic</code> parameters don't apply for <code>SnapshotType</code> values of <code>manual</code> or <code>automated</code>. The <code>IncludePublic</code> parameter doesn't apply when <code>SnapshotType</code> is set to <code>shared</code>. The <code>IncludeShared</code> parameter doesn't apply when <code>SnapshotType</code> is set to <code>public</code>.</p></param>
		/// <param name="Filters"><p>A filter that specifies one or more DB snapshots to describe.</p> <p>Supported filters:</p> <ul> <li> <p> <code>db-instance-id</code> - Accepts DB instance identifiers and DB instance Amazon Resource Names (ARNs).</p> </li> <li> <p> <code>db-snapshot-id</code> - Accepts DB snapshot identifiers.</p> </li> <li> <p> <code>dbi-resource-id</code> - Accepts identifiers of source DB instances.</p> </li> <li> <p> <code>snapshot-type</code> - Accepts types of DB snapshots.</p> </li> <li> <p> <code>engine</code> - Accepts names of database engines.</p> </li> </ul></param>
		/// <param name="MaxRecords"><p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker"> An optional pagination token provided by a previous <code>DescribeDBSnapshots</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </param>
		/// <param name="IncludeShared"><p>A value that indicates whether to include shared manual DB cluster snapshots from other AWS accounts that this AWS account has been given permission to copy or restore. By default, these snapshots are not included.</p> <p>You can give an AWS account permission to restore a manual DB snapshot from another AWS account by using the <code>ModifyDBSnapshotAttribute</code> API action.</p></param>
		/// <param name="IncludePublic"><p>A value that indicates whether to include manual DB cluster snapshots that are public and can be copied or restored by any AWS account. By default, the public snapshots are not included.</p> <p>You can share a manual DB snapshot as public by using the <a>ModifyDBSnapshotAttribute</a> API.</p></param>
		/// <param name="DbiResourceId">A specific DB resource ID to describe.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBSnapshotsAsync(string DBInstanceIdentifier, string DBSnapshotIdentifier, string SnapshotType, Filter[] Filters, int MaxRecords, string Marker, bool IncludeShared, bool IncludePublic, string DbiResourceId, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeDBSnapshots?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : Uri.EscapeDataString(DBInstanceIdentifier))+"&DBSnapshotIdentifier=" + (DBSnapshotIdentifier==null? "" : Uri.EscapeDataString(DBSnapshotIdentifier))+"&SnapshotType=" + (SnapshotType==null? "" : Uri.EscapeDataString(SnapshotType))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&IncludeShared="+IncludeShared+"&IncludePublic="+IncludePublic+"&DbiResourceId=" + (DbiResourceId==null? "" : Uri.EscapeDataString(DbiResourceId))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns a list of DBSubnetGroup descriptions. If a DBSubnetGroupName is specified, the list will contain only the descriptions of the specified DBSubnetGroup.</p> <p>For an overview of CIDR ranges, go to the <a href="http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Wikipedia Tutorial</a>. </p>
		/// GET_DescribeDBSubnetGroups /#Action=DescribeDBSubnetGroups
		/// </summary>
		/// <param name="DBSubnetGroupName">The name of the DB subnet group to return details for.</param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker"> An optional pagination token provided by a previous DescribeDBSubnetGroups request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBSubnetGroupsAsync(string DBSubnetGroupName, Filter[] Filters, int MaxRecords, string Marker, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeDBSubnetGroups?DBSubnetGroupName=" + (DBSubnetGroupName==null? "" : Uri.EscapeDataString(DBSubnetGroupName))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns the default engine and system parameter information for the cluster database engine.</p> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p>
		/// GET_DescribeEngineDefaultClusterParameters /#Action=DescribeEngineDefaultClusterParameters
		/// </summary>
		/// <param name="DBParameterGroupFamily">The name of the DB cluster parameter group family to return engine parameter information for.</param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker"> An optional pagination token provided by a previous <code>DescribeEngineDefaultClusterParameters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeEngineDefaultClusterParametersAsync(string DBParameterGroupFamily, Filter[] Filters, int MaxRecords, string Marker, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeEngineDefaultClusterParameters?DBParameterGroupFamily=" + (DBParameterGroupFamily==null? "" : Uri.EscapeDataString(DBParameterGroupFamily))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns the default engine and system parameter information for the specified database engine.
		/// GET_DescribeEngineDefaultParameters /#Action=DescribeEngineDefaultParameters
		/// </summary>
		/// <param name="DBParameterGroupFamily">The name of the DB parameter group family.</param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker"> An optional pagination token provided by a previous <code>DescribeEngineDefaultParameters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeEngineDefaultParametersAsync(string DBParameterGroupFamily, Filter[] Filters, int MaxRecords, string Marker, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeEngineDefaultParameters?DBParameterGroupFamily=" + (DBParameterGroupFamily==null? "" : Uri.EscapeDataString(DBParameterGroupFamily))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Displays a list of categories for all event source types, or, if specified, for a specified source type. You can see a list of the event categories and source types in the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html"> Events</a> topic in the <i>Amazon RDS User Guide.</i>
		/// GET_DescribeEventCategories /#Action=DescribeEventCategories
		/// </summary>
		/// <param name="SourceType"><p>The type of source that is generating the events.</p> <p>Valid values: db-instance | db-parameter-group | db-security-group | db-snapshot</p></param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeEventCategoriesAsync(string SourceType, Filter[] Filters, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeEventCategories?SourceType=" + (SourceType==null? "" : Uri.EscapeDataString(SourceType))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Lists all the subscription descriptions for a customer account. The description for a subscription includes SubscriptionName, SNSTopicARN, CustomerID, SourceType, SourceID, CreationTime, and Status.</p> <p>If you specify a SubscriptionName, lists the description for that subscription.</p>
		/// GET_DescribeEventSubscriptions /#Action=DescribeEventSubscriptions
		/// </summary>
		/// <param name="SubscriptionName">The name of the RDS event notification subscription you want to describe.</param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker"> An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeEventSubscriptionsAsync(string SubscriptionName, Filter[] Filters, int MaxRecords, string Marker, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeEventSubscriptions?SubscriptionName=" + (SubscriptionName==null? "" : Uri.EscapeDataString(SubscriptionName))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns events related to DB instances, DB security groups, DB snapshots, and DB parameter groups for the past 14 days. Events specific to a particular DB instance, DB security group, database snapshot, or DB parameter group can be obtained by providing the name as a parameter. By default, the past hour of events are returned.
		/// GET_DescribeEvents /#Action=DescribeEvents
		/// </summary>
		/// <param name="SourceIdentifier"><p>The identifier of the event source for which events are returned. If not specified, then all sources are included in the response.</p> <p>Constraints:</p> <ul> <li> <p>If SourceIdentifier is supplied, SourceType must also be provided.</p> </li> <li> <p>If the source type is <code>DBInstance</code>, then a <code>DBInstanceIdentifier</code> must be supplied.</p> </li> <li> <p>If the source type is <code>DBSecurityGroup</code>, a <code>DBSecurityGroupName</code> must be supplied.</p> </li> <li> <p>If the source type is <code>DBParameterGroup</code>, a <code>DBParameterGroupName</code> must be supplied.</p> </li> <li> <p>If the source type is <code>DBSnapshot</code>, a <code>DBSnapshotIdentifier</code> must be supplied.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul></param>
		/// <param name="SourceType">The event source to retrieve events for. If no value is specified, all events are returned.</param>
		/// <param name="StartTime"><p> The beginning of the time interval to retrieve events for, specified in ISO 8601 format. For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601 Wikipedia page.</a> </p> <p>Example: 2009-07-08T18:00Z</p></param>
		/// <param name="EndTime"><p> The end of the time interval for which to retrieve events, specified in ISO 8601 format. For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601 Wikipedia page.</a> </p> <p>Example: 2009-07-08T18:00Z</p></param>
		/// <param name="Duration"><p>The number of minutes to retrieve events for.</p> <p>Default: 60</p></param>
		/// <param name="EventCategories">A list of event categories that trigger notifications for a event notification subscription.</param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker"> An optional pagination token provided by a previous DescribeEvents request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeEventsAsync(string SourceIdentifier, SourceType SourceType, System.DateTimeOffset StartTime, System.DateTimeOffset EndTime, int Duration, String[] EventCategories, Filter[] Filters, int MaxRecords, string Marker, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeEvents?SourceIdentifier=" + (SourceIdentifier==null? "" : Uri.EscapeDataString(SourceIdentifier))+"&SourceType=" + SourceType+"&StartTime=" + StartTime.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&EndTime=" + EndTime.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&Duration="+Duration+"&"+String.Join("&", EventCategories.Select(z => $"EventCategories={z}"))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns information about a snapshot export to Amazon S3. This API operation supports pagination.
		/// GET_DescribeExportTasks /#Action=DescribeExportTasks
		/// </summary>
		/// <param name="ExportTaskIdentifier">The identifier of the snapshot export task to be described.</param>
		/// <param name="SourceArn">The Amazon Resource Name (ARN) of the snapshot exported to Amazon S3.</param>
		/// <param name="Filters"><p>Filters specify one or more snapshot exports to describe. The filters are specified as name-value pairs that define what to include in the output.</p> <p>Supported filters include the following: </p> <ul> <li> <p> <code>export-task-identifier</code> - An identifier for the snapshot export task.</p> </li> <li> <p> <code>s3-bucket</code> - The Amazon S3 bucket the snapshot is exported to.</p> </li> <li> <p> <code>source-arn</code> - The Amazon Resource Name (ARN) of the snapshot exported to Amazon S3</p> </li> <li> <p> <code>status</code> - The status of the export task.</p> </li> </ul></param>
		/// <param name="Marker"> An optional pagination token provided by a previous <code>DescribeExportTasks</code> request. If you specify this parameter, the response includes only records beyond the marker, up to the value specified by the <code>MaxRecords</code> parameter. </param>
		/// <param name="MaxRecords"><p> The maximum number of records to include in the response. If more records exist than the specified value, a pagination token called a marker is included in the response. You can use the marker in a later <code>DescribeExportTasks</code> request to retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <returns>Success</returns>
		public async Task GET_DescribeExportTasksAsync(string ExportTaskIdentifier, string SourceArn, Filter[] Filters, string Marker, int MaxRecords, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeExportTasks?ExportTaskIdentifier=" + (ExportTaskIdentifier==null? "" : Uri.EscapeDataString(ExportTaskIdentifier))+"&SourceArn=" + (SourceArn==null? "" : Uri.EscapeDataString(SourceArn))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&MaxRecords="+MaxRecords+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p> Returns information about Aurora global database clusters. This API supports pagination. </p> <p> For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_DescribeGlobalClusters /#Action=DescribeGlobalClusters
		/// </summary>
		/// <param name="GlobalClusterIdentifier"><p> The user-supplied DB cluster identifier. If this parameter is specified, information from only the specific DB cluster is returned. This parameter isn't case-sensitive. </p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match an existing DBClusterIdentifier.</p> </li> </ul></param>
		/// <param name="Filters"><p>A filter that specifies one or more global DB clusters to describe.</p> <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon Resource Names (ARNs). The results list will only include information about the DB clusters identified by these ARNs.</p> </li> </ul></param>
		/// <param name="MaxRecords"><p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker"> An optional pagination token provided by a previous <code>DescribeGlobalClusters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeGlobalClustersAsync(string GlobalClusterIdentifier, Filter[] Filters, int MaxRecords, string Marker, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeGlobalClusters?GlobalClusterIdentifier=" + (GlobalClusterIdentifier==null? "" : Uri.EscapeDataString(GlobalClusterIdentifier))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes the available installation media for a DB engine that requires an on-premises customer provided license, such as Microsoft SQL Server.
		/// GET_DescribeInstallationMedia /#Action=DescribeInstallationMedia
		/// </summary>
		/// <param name="InstallationMediaId">The installation medium ID.</param>
		/// <param name="Filters"><p>A filter that specifies one or more installation media to describe. Supported filters include the following:</p> <ul> <li> <p> <code>custom-availability-zone-id</code> - Accepts custom Availability Zone (AZ) identifiers. The results list includes information about only the custom AZs identified by these identifiers.</p> </li> <li> <p> <code>engine</code> - Accepts database engines. The results list includes information about only the database engines identified by these identifiers.</p> <p>For more information about the valid engines for installation media, see <a>ImportInstallationMedia</a>.</p> </li> </ul></param>
		/// <param name="MaxRecords">An optional pagination token provided by a previous DescribeInstallationMedia request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <param name="Marker">An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeInstallationMediaAsync(string InstallationMediaId, Filter[] Filters, int MaxRecords, string Marker, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeInstallationMedia?InstallationMediaId=" + (InstallationMediaId==null? "" : Uri.EscapeDataString(InstallationMediaId))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes all available options.
		/// GET_DescribeOptionGroupOptions /#Action=DescribeOptionGroupOptions
		/// </summary>
		/// <param name="EngineName">A required parameter. Options available for the given engine name are described.</param>
		/// <param name="MajorEngineVersion">If specified, filters the results to include only options for the specified major engine version.</param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeOptionGroupOptionsAsync(string EngineName, string MajorEngineVersion, Filter[] Filters, int MaxRecords, string Marker, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeOptionGroupOptions?EngineName=" + (EngineName==null? "" : Uri.EscapeDataString(EngineName))+"&MajorEngineVersion=" + (MajorEngineVersion==null? "" : Uri.EscapeDataString(MajorEngineVersion))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes the available option groups.
		/// GET_DescribeOptionGroups /#Action=DescribeOptionGroups
		/// </summary>
		/// <param name="OptionGroupName">The name of the option group to describe. Can't be supplied together with EngineName or MajorEngineVersion.</param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="Marker"> An optional pagination token provided by a previous DescribeOptionGroups request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </param>
		/// <param name="MaxRecords"><p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="EngineName">Filters the list of option groups to only include groups associated with a specific database engine.</param>
		/// <param name="MajorEngineVersion">Filters the list of option groups to only include groups associated with a specific database engine version. If specified, then EngineName must also be specified.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeOptionGroupsAsync(string OptionGroupName, Filter[] Filters, string Marker, int MaxRecords, string EngineName, string MajorEngineVersion, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeOptionGroups?OptionGroupName=" + (OptionGroupName==null? "" : Uri.EscapeDataString(OptionGroupName))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&MaxRecords="+MaxRecords+"&EngineName=" + (EngineName==null? "" : Uri.EscapeDataString(EngineName))+"&MajorEngineVersion=" + (MajorEngineVersion==null? "" : Uri.EscapeDataString(MajorEngineVersion))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of orderable DB instance options for the specified engine.
		/// GET_DescribeOrderableDBInstanceOptions /#Action=DescribeOrderableDBInstanceOptions
		/// </summary>
		/// <param name="Engine">The name of the engine to retrieve DB instance options for.</param>
		/// <param name="EngineVersion">The engine version filter value. Specify this parameter to show only the available offerings matching the specified engine version.</param>
		/// <param name="DBInstanceClass">The DB instance class filter value. Specify this parameter to show only the available offerings matching the specified DB instance class.</param>
		/// <param name="LicenseModel">The license model filter value. Specify this parameter to show only the available offerings matching the specified license model.</param>
		/// <param name="AvailabilityZoneGroup"><p>The Availability Zone group associated with a Local Zone. Specify this parameter to retrieve available offerings for the Local Zones in the group.</p> <p>Omit this parameter to show the available offerings in the specified AWS Region.</p></param>
		/// <param name="Vpc">A value that indicates whether to show only VPC or non-VPC offerings.</param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker"> An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeOrderableDBInstanceOptionsAsync(string Engine, string EngineVersion, string DBInstanceClass, string LicenseModel, string AvailabilityZoneGroup, bool Vpc, Filter[] Filters, int MaxRecords, string Marker, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeOrderableDBInstanceOptions?Engine=" + (Engine==null? "" : Uri.EscapeDataString(Engine))+"&EngineVersion=" + (EngineVersion==null? "" : Uri.EscapeDataString(EngineVersion))+"&DBInstanceClass=" + (DBInstanceClass==null? "" : Uri.EscapeDataString(DBInstanceClass))+"&LicenseModel=" + (LicenseModel==null? "" : Uri.EscapeDataString(LicenseModel))+"&AvailabilityZoneGroup=" + (AvailabilityZoneGroup==null? "" : Uri.EscapeDataString(AvailabilityZoneGroup))+"&Vpc="+Vpc+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of resources (for example, DB instances) that have at least one pending maintenance action.
		/// GET_DescribePendingMaintenanceActions /#Action=DescribePendingMaintenanceActions
		/// </summary>
		/// <param name="ResourceIdentifier">The ARN of a resource to return pending maintenance actions for.</param>
		/// <param name="Filters"><p>A filter that specifies one or more resources to return pending maintenance actions for.</p> <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon Resource Names (ARNs). The results list will only include pending maintenance actions for the DB clusters identified by these ARNs.</p> </li> <li> <p> <code>db-instance-id</code> - Accepts DB instance identifiers and DB instance ARNs. The results list will only include pending maintenance actions for the DB instances identified by these ARNs.</p> </li> </ul></param>
		/// <param name="Marker"> An optional pagination token provided by a previous <code>DescribePendingMaintenanceActions</code> request. If this parameter is specified, the response includes only records beyond the marker, up to a number of records specified by <code>MaxRecords</code>. </param>
		/// <param name="MaxRecords"><p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <returns>Success</returns>
		public async Task GET_DescribePendingMaintenanceActionsAsync(string ResourceIdentifier, Filter[] Filters, string Marker, int MaxRecords, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribePendingMaintenanceActions?ResourceIdentifier=" + (ResourceIdentifier==null? "" : Uri.EscapeDataString(ResourceIdentifier))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&MaxRecords="+MaxRecords+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns information about reserved DB instances for this account, or about a specified reserved DB instance.
		/// GET_DescribeReservedDBInstances /#Action=DescribeReservedDBInstances
		/// </summary>
		/// <param name="ReservedDBInstanceId">The reserved DB instance identifier filter value. Specify this parameter to show only the reservation that matches the specified reservation ID.</param>
		/// <param name="ReservedDBInstancesOfferingId">The offering identifier filter value. Specify this parameter to show only purchased reservations matching the specified offering identifier.</param>
		/// <param name="DBInstanceClass">The DB instance class filter value. Specify this parameter to show only those reservations matching the specified DB instances class.</param>
		/// <param name="Duration"><p>The duration filter value, specified in years or seconds. Specify this parameter to show only reservations for this duration.</p> <p>Valid Values: <code>1 | 3 | 31536000 | 94608000</code> </p></param>
		/// <param name="ProductDescription">The product description filter value. Specify this parameter to show only those reservations matching the specified product description.</param>
		/// <param name="OfferingType"><p>The offering type filter value. Specify this parameter to show only the available offerings matching the specified offering type.</p> <p>Valid Values: <code>"Partial Upfront" | "All Upfront" | "No Upfront" </code> </p></param>
		/// <param name="MultiAZ">A value that indicates whether to show only those reservations that support Multi-AZ.</param>
		/// <param name="LeaseId"><p>The lease identifier filter value. Specify this parameter to show only the reservation that matches the specified lease ID.</p> <note> <p>AWS Support might request the lease ID for an issue related to a reserved DB instance.</p> </note></param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p> The maximum number of records to include in the response. If more than the <code>MaxRecords</code> value is available, a pagination token called a marker is included in the response so you can retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker"> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeReservedDBInstancesAsync(string ReservedDBInstanceId, string ReservedDBInstancesOfferingId, string DBInstanceClass, string Duration, string ProductDescription, string OfferingType, bool MultiAZ, string LeaseId, Filter[] Filters, int MaxRecords, string Marker, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeReservedDBInstances?ReservedDBInstanceId=" + (ReservedDBInstanceId==null? "" : Uri.EscapeDataString(ReservedDBInstanceId))+"&ReservedDBInstancesOfferingId=" + (ReservedDBInstancesOfferingId==null? "" : Uri.EscapeDataString(ReservedDBInstancesOfferingId))+"&DBInstanceClass=" + (DBInstanceClass==null? "" : Uri.EscapeDataString(DBInstanceClass))+"&Duration=" + (Duration==null? "" : Uri.EscapeDataString(Duration))+"&ProductDescription=" + (ProductDescription==null? "" : Uri.EscapeDataString(ProductDescription))+"&OfferingType=" + (OfferingType==null? "" : Uri.EscapeDataString(OfferingType))+"&MultiAZ="+MultiAZ+"&LeaseId=" + (LeaseId==null? "" : Uri.EscapeDataString(LeaseId))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists available reserved DB instance offerings.
		/// GET_DescribeReservedDBInstancesOfferings /#Action=DescribeReservedDBInstancesOfferings
		/// </summary>
		/// <param name="ReservedDBInstancesOfferingId"><p>The offering identifier filter value. Specify this parameter to show only the available offering that matches the specified reservation identifier.</p> <p>Example: <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code> </p></param>
		/// <param name="DBInstanceClass">The DB instance class filter value. Specify this parameter to show only the available offerings matching the specified DB instance class.</param>
		/// <param name="Duration"><p>Duration filter value, specified in years or seconds. Specify this parameter to show only reservations for this duration.</p> <p>Valid Values: <code>1 | 3 | 31536000 | 94608000</code> </p></param>
		/// <param name="ProductDescription"><p>Product description filter value. Specify this parameter to show only the available offerings that contain the specified product description.</p> <note> <p>The results show offerings that partially match the filter value.</p> </note></param>
		/// <param name="OfferingType"><p>The offering type filter value. Specify this parameter to show only the available offerings matching the specified offering type.</p> <p>Valid Values: <code>"Partial Upfront" | "All Upfront" | "No Upfront" </code> </p></param>
		/// <param name="MultiAZ">A value that indicates whether to show only those reservations that support Multi-AZ.</param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p> The maximum number of records to include in the response. If more than the <code>MaxRecords</code> value is available, a pagination token called a marker is included in the response so you can retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker"> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeReservedDBInstancesOfferingsAsync(string ReservedDBInstancesOfferingId, string DBInstanceClass, string Duration, string ProductDescription, string OfferingType, bool MultiAZ, Filter[] Filters, int MaxRecords, string Marker, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeReservedDBInstancesOfferings?ReservedDBInstancesOfferingId=" + (ReservedDBInstancesOfferingId==null? "" : Uri.EscapeDataString(ReservedDBInstancesOfferingId))+"&DBInstanceClass=" + (DBInstanceClass==null? "" : Uri.EscapeDataString(DBInstanceClass))+"&Duration=" + (Duration==null? "" : Uri.EscapeDataString(Duration))+"&ProductDescription=" + (ProductDescription==null? "" : Uri.EscapeDataString(ProductDescription))+"&OfferingType=" + (OfferingType==null? "" : Uri.EscapeDataString(OfferingType))+"&MultiAZ="+MultiAZ+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of the source AWS Regions where the current AWS Region can create a read replica or copy a DB snapshot from. This API action supports pagination.
		/// GET_DescribeSourceRegions /#Action=DescribeSourceRegions
		/// </summary>
		/// <param name="RegionName"><p>The source AWS Region name. For example, <code>us-east-1</code>.</p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid AWS Region name.</p> </li> </ul></param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous <code>DescribeSourceRegions</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeSourceRegionsAsync(string RegionName, int MaxRecords, string Marker, Filter[] Filters, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeSourceRegions?RegionName=" + (RegionName==null? "" : Uri.EscapeDataString(RegionName))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// You can call <code>DescribeValidDBInstanceModifications</code> to learn what modifications you can make to your DB instance. You can use this information when you call <code>ModifyDBInstance</code>.
		/// GET_DescribeValidDBInstanceModifications /#Action=DescribeValidDBInstanceModifications
		/// </summary>
		/// <param name="DBInstanceIdentifier">The customer identifier or the ARN of your DB instance. </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeValidDBInstanceModificationsAsync(string DBInstanceIdentifier, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeValidDBInstanceModifications?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : Uri.EscapeDataString(DBInstanceIdentifier))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Downloads all or a portion of the specified log file, up to 1 MB in size.
		/// GET_DownloadDBLogFilePortion /#Action=DownloadDBLogFilePortion
		/// </summary>
		/// <param name="DBInstanceIdentifier"><p>The customer-assigned name of the DB instance that contains the log files you want to list.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBInstance.</p> </li> </ul></param>
		/// <param name="LogFileName">The name of the log file to be downloaded.</param>
		/// <param name="Marker">The pagination token provided in the previous request or "0". If the Marker parameter is specified the response includes only records beyond the marker until the end of the file or up to NumberOfLines.</param>
		/// <param name="NumberOfLines"><p>The number of lines to download. If the number of lines specified results in a file over 1 MB in size, the file is truncated at 1 MB in size.</p> <p>If the NumberOfLines parameter is specified, then the block of lines returned can be from the beginning or the end of the log file, depending on the value of the Marker parameter.</p> <ul> <li> <p>If neither Marker or NumberOfLines are specified, the entire log file is returned up to a maximum of 10000 lines, starting with the most recent log entries first.</p> </li> <li> <p>If NumberOfLines is specified and Marker isn't specified, then the most recent lines from the end of the log file are returned.</p> </li> <li> <p>If Marker is specified as "0", then the specified number of lines from the beginning of the log file are returned.</p> </li> <li> <p>You can download the log file in blocks of lines by specifying the size of the block using the NumberOfLines parameter, and by specifying a value of "0" for the Marker parameter in your first request. Include the Marker value returned in the response as the Marker value for the next request, continuing until the AdditionalDataPending response element returns false.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_DownloadDBLogFilePortionAsync(string DBInstanceIdentifier, string LogFileName, string Marker, int NumberOfLines, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DownloadDBLogFilePortion?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : Uri.EscapeDataString(DBInstanceIdentifier))+"&LogFileName=" + (LogFileName==null? "" : Uri.EscapeDataString(LogFileName))+"&Marker=" + (Marker==null? "" : Uri.EscapeDataString(Marker))+"&NumberOfLines="+NumberOfLines+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Forces a failover for a DB cluster.</p> <p>A failover for a DB cluster promotes one of the Aurora Replicas (read-only instances) in the DB cluster to be the primary instance (the cluster writer).</p> <p>Amazon Aurora will automatically fail over to an Aurora Replica, if one exists, when the primary instance fails. You can force a failover when you want to simulate a failure of a primary instance for testing. Because each instance in a DB cluster has its own endpoint address, you will need to clean up and re-establish any existing connections that use those endpoint addresses when the failover is complete.</p> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_FailoverDBCluster /#Action=FailoverDBCluster
		/// </summary>
		/// <param name="DBClusterIdentifier"><p>A DB cluster identifier to force a failover for. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBCluster.</p> </li> </ul></param>
		/// <param name="TargetDBInstanceIdentifier"><p>The name of the instance to promote to the primary instance.</p> <p>You must specify the instance identifier for an Aurora Replica in the DB cluster. For example, <code>mydbcluster-replica1</code>.</p></param>
		/// <returns>Success</returns>
		public async Task GET_FailoverDBClusterAsync(string DBClusterIdentifier, string TargetDBInstanceIdentifier, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=FailoverDBCluster?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : Uri.EscapeDataString(DBClusterIdentifier))+"&TargetDBInstanceIdentifier=" + (TargetDBInstanceIdentifier==null? "" : Uri.EscapeDataString(TargetDBInstanceIdentifier))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Imports the installation media for a DB engine that requires an on-premises customer provided license, such as SQL Server.
		/// GET_ImportInstallationMedia /#Action=ImportInstallationMedia
		/// </summary>
		/// <param name="CustomAvailabilityZoneId">The identifier of the custom Availability Zone (AZ) to import the installation media to.</param>
		/// <param name="Engine"><p>The name of the database engine to be used for this instance. </p> <p>The list only includes supported DB engines that require an on-premises customer provided license. </p> <p>Valid Values: </p> <ul> <li> <p> <code>sqlserver-ee</code> </p> </li> <li> <p> <code>sqlserver-se</code> </p> </li> <li> <p> <code>sqlserver-ex</code> </p> </li> <li> <p> <code>sqlserver-web</code> </p> </li> </ul></param>
		/// <param name="EngineVersion"><p>The version number of the database engine to use.</p> <p>For a list of valid engine versions, call <a>DescribeDBEngineVersions</a>.</p> <p>The following are the database engines and links to information about the major and minor versions. The list only includes DB engines that require an on-premises customer provided license.</p> <p> <b>Microsoft SQL Server</b> </p> <p>See <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.FeatureSupport">Version and Feature Support on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p></param>
		/// <param name="EngineInstallationMediaPath"><p>The path to the installation medium for the specified DB engine.</p> <p>Example: <code>SQLServerISO/en_sql_server_2016_enterprise_x64_dvd_8701793.iso</code> </p></param>
		/// <param name="OSInstallationMediaPath"><p>The path to the installation medium for the operating system associated with the specified DB engine.</p> <p>Example: <code>WindowsISO/en_windows_server_2016_x64_dvd_9327751.iso</code> </p></param>
		/// <returns>Success</returns>
		public async Task GET_ImportInstallationMediaAsync(string CustomAvailabilityZoneId, string Engine, string EngineVersion, string EngineInstallationMediaPath, string OSInstallationMediaPath, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ImportInstallationMedia?CustomAvailabilityZoneId=" + (CustomAvailabilityZoneId==null? "" : Uri.EscapeDataString(CustomAvailabilityZoneId))+"&Engine=" + (Engine==null? "" : Uri.EscapeDataString(Engine))+"&EngineVersion=" + (EngineVersion==null? "" : Uri.EscapeDataString(EngineVersion))+"&EngineInstallationMediaPath=" + (EngineInstallationMediaPath==null? "" : Uri.EscapeDataString(EngineInstallationMediaPath))+"&OSInstallationMediaPath=" + (OSInstallationMediaPath==null? "" : Uri.EscapeDataString(OSInstallationMediaPath))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Lists all tags on an Amazon RDS resource.</p> <p>For an overview on tagging an Amazon RDS resource, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide</i>.</p>
		/// GET_ListTagsForResource /#Action=ListTagsForResource
		/// </summary>
		/// <param name="ResourceName">The Amazon RDS resource with tags to be listed. This value is an Amazon Resource Name (ARN). For information about creating an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing"> Constructing an ARN for Amazon RDS</a> in the <i>Amazon RDS User Guide</i>.</param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <returns>Success</returns>
		public async Task GET_ListTagsForResourceAsync(string ResourceName, Filter[] Filters, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ListTagsForResource?ResourceName=" + (ResourceName==null? "" : Uri.EscapeDataString(ResourceName))+"&"+String.Join("&", Filters.Select(z => $"Filters={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Override the system-default Secure Sockets Layer/Transport Layer Security (SSL/TLS) certificate for Amazon RDS for new DB instances temporarily, or remove the override.</p> <p>By using this operation, you can specify an RDS-approved SSL/TLS certificate for new DB instances that is different from the default certificate provided by RDS. You can also use this operation to remove the override, so that new DB instances use the default certificate provided by RDS.</p> <p>You might need to override the default certificate in the following situations:</p> <ul> <li> <p>You already migrated your applications to support the latest certificate authority (CA) certificate, but the new CA certificate is not yet the RDS default CA certificate for the specified AWS Region.</p> </li> <li> <p>RDS has already moved to a new default CA certificate for the specified AWS Region, but you are still in the process of supporting the new CA certificate. In this case, you temporarily need additional time to finish your application changes.</p> </li> </ul> <p>For more information about rotating your SSL/TLS certificate for RDS DB engines, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL-certificate-rotation.html"> Rotating Your SSL/TLS Certificate</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about rotating your SSL/TLS certificate for Aurora DB engines, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL-certificate-rotation.html"> Rotating Your SSL/TLS Certificate</a> in the <i>Amazon Aurora User Guide</i>.</p>
		/// GET_ModifyCertificates /#Action=ModifyCertificates
		/// </summary>
		/// <param name="CertificateIdentifier"><p>The new default certificate identifier to override the current one with.</p> <p>To determine the valid values, use the <code>describe-certificates</code> AWS CLI command or the <code>DescribeCertificates</code> API operation.</p></param>
		/// <param name="RemoveCustomerOverride">A value that indicates whether to remove the override for the default certificate. If the override is removed, the default certificate is the system default.</param>
		/// <returns>Success</returns>
		public async Task GET_ModifyCertificatesAsync(string CertificateIdentifier, bool RemoveCustomerOverride, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ModifyCertificates?CertificateIdentifier=" + (CertificateIdentifier==null? "" : Uri.EscapeDataString(CertificateIdentifier))+"&RemoveCustomerOverride="+RemoveCustomerOverride+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Set the capacity of an Aurora Serverless DB cluster to a specific value.</p> <p>Aurora Serverless scales seamlessly based on the workload on the DB cluster. In some cases, the capacity might not scale fast enough to meet a sudden change in workload, such as a large number of new transactions. Call <code>ModifyCurrentDBClusterCapacity</code> to set the capacity explicitly.</p> <p>After this call sets the DB cluster capacity, Aurora Serverless can automatically scale the DB cluster based on the cooldown period for scaling up and the cooldown period for scaling down.</p> <p>For more information about Aurora Serverless, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html">Using Amazon Aurora Serverless</a> in the <i>Amazon Aurora User Guide</i>.</p> <important> <p>If you call <code>ModifyCurrentDBClusterCapacity</code> with the default <code>TimeoutAction</code>, connections that prevent Aurora Serverless from finding a scaling point might be dropped. For more information about scaling points, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.how-it-works.html#aurora-serverless.how-it-works.auto-scaling"> Autoscaling for Aurora Serverless</a> in the <i>Amazon Aurora User Guide</i>.</p> </important> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_ModifyCurrentDBClusterCapacity /#Action=ModifyCurrentDBClusterCapacity
		/// </summary>
		/// <param name="DBClusterIdentifier"><p>The DB cluster identifier for the cluster being modified. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DB cluster.</p> </li> </ul></param>
		/// <param name="Capacity"><p>The DB cluster capacity.</p> <p>When you change the capacity of a paused Aurora Serverless DB cluster, it automatically resumes.</p> <p>Constraints:</p> <ul> <li> <p>For Aurora MySQL, valid capacity values are <code>1</code>, <code>2</code>, <code>4</code>, <code>8</code>, <code>16</code>, <code>32</code>, <code>64</code>, <code>128</code>, and <code>256</code>.</p> </li> <li> <p>For Aurora PostgreSQL, valid capacity values are <code>2</code>, <code>4</code>, <code>8</code>, <code>16</code>, <code>32</code>, <code>64</code>, <code>192</code>, and <code>384</code>.</p> </li> </ul></param>
		/// <param name="SecondsBeforeTimeout"><p>The amount of time, in seconds, that Aurora Serverless tries to find a scaling point to perform seamless scaling before enforcing the timeout action. The default is 300.</p> <ul> <li> <p>Value must be from 10 through 600.</p> </li> </ul></param>
		/// <param name="TimeoutAction"><p>The action to take when the timeout is reached, either <code>ForceApplyCapacityChange</code> or <code>RollbackCapacityChange</code>.</p> <p> <code>ForceApplyCapacityChange</code>, the default, sets the capacity to the specified value as soon as possible.</p> <p> <code>RollbackCapacityChange</code> ignores the capacity change if a scaling point isn't found in the timeout period.</p></param>
		/// <returns>Success</returns>
		public async Task GET_ModifyCurrentDBClusterCapacityAsync(string DBClusterIdentifier, int Capacity, int SecondsBeforeTimeout, string TimeoutAction, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ModifyCurrentDBClusterCapacity?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : Uri.EscapeDataString(DBClusterIdentifier))+"&Capacity="+Capacity+"&SecondsBeforeTimeout="+SecondsBeforeTimeout+"&TimeoutAction=" + (TimeoutAction==null? "" : Uri.EscapeDataString(TimeoutAction))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Modify a setting for an Amazon Aurora DB cluster. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_ModifyDBCluster /#Action=ModifyDBCluster
		/// </summary>
		/// <param name="DBClusterIdentifier"><p>The DB cluster identifier for the cluster being modified. This parameter isn't case-sensitive.</p> <p>Constraints: This identifier must match the identifier of an existing DB cluster.</p></param>
		/// <param name="NewDBClusterIdentifier"><p>The new DB cluster identifier for the DB cluster when renaming a DB cluster. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens</p> </li> <li> <p>The first character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-cluster2</code> </p></param>
		/// <param name="ApplyImmediately"><p>A value that indicates whether the modifications in this request and any pending modifications are asynchronously applied as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code> setting for the DB cluster. If this parameter is disabled, changes to the DB cluster are applied during the next maintenance window.</p> <p>The <code>ApplyImmediately</code> parameter only affects the <code>EnableIAMDatabaseAuthentication</code>, <code>MasterUserPassword</code>, and <code>NewDBClusterIdentifier</code> values. If the <code>ApplyImmediately</code> parameter is disabled, then changes to the <code>EnableIAMDatabaseAuthentication</code>, <code>MasterUserPassword</code>, and <code>NewDBClusterIdentifier</code> values are applied during the next maintenance window. All other changes are applied immediately, regardless of the value of the <code>ApplyImmediately</code> parameter.</p> <p>By default, this parameter is disabled.</p></param>
		/// <param name="BackupRetentionPeriod"><p>The number of days for which automated backups are retained. You must specify a minimum value of 1.</p> <p>Default: 1</p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 1 to 35</p> </li> </ul></param>
		/// <param name="DBClusterParameterGroupName">The name of the DB cluster parameter group to use for the DB cluster.</param>
		/// <param name="VpcSecurityGroupIds">A list of VPC security groups that the DB cluster will belong to.</param>
		/// <param name="Port"><p>The port number on which the DB cluster accepts connections.</p> <p>Constraints: Value must be <code>1150-65535</code> </p> <p>Default: The same port as the original DB cluster.</p></param>
		/// <param name="MasterUserPassword"><p>The new password for the master database user. This password can contain any printable ASCII character except "/", """, or "@".</p> <p>Constraints: Must contain from 8 to 41 characters.</p></param>
		/// <param name="OptionGroupName"><p>A value that indicates that the DB cluster should be associated with the specified option group. Changing this parameter doesn't result in an outage except in the following case, and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> is enabled for this request. If the parameter change results in an option group that enables OEM, this change can cause a brief (sub-second) period during which new connections are rejected but existing connections are not interrupted. </p> <p>Permanent options can't be removed from an option group. The option group can't be removed from a DB cluster once it is associated with a DB cluster.</p></param>
		/// <param name="PreferredBackupWindow"><p>The daily time range during which automated backups are created if automated backups are enabled, using the <code>BackupRetentionPeriod</code> parameter. </p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region. To see the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora"> Adjusting the Preferred DB Cluster Maintenance Window</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul></param>
		/// <param name="PreferredMaintenanceWindow"><p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p> <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. To see the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora"> Adjusting the Preferred DB Cluster Maintenance Window</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p> <p>Constraints: Minimum 30-minute window.</p></param>
		/// <param name="EnableIAMDatabaseAuthentication"><p>A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication</a> in the <i>Amazon Aurora User Guide.</i> </p></param>
		/// <param name="BacktrackWindow"><p>The target backtrack window, in seconds. To disable backtracking, set this value to 0.</p> <p>Default: 0</p> <p>Constraints:</p> <ul> <li> <p>If specified, this value must be set to a number from 0 to 259,200 (72 hours).</p> </li> </ul></param>
		/// <param name="CloudwatchLogsExportConfiguration">The configuration setting for the log types to be enabled for export to CloudWatch Logs for a specific DB cluster.</param>
		/// <param name="EngineVersion"><p>The version number of the database engine to which you want to upgrade. Changing this parameter results in an outage. The change is applied during the next maintenance window unless <code>ApplyImmediately</code> is enabled.</p> <p>To list all of the available engine versions for <code>aurora</code> (for MySQL 5.6-compatible Aurora), use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora --query "DBEngineVersions[].EngineVersion"</code> </p> <p>To list all of the available engine versions for <code>aurora-mysql</code> (for MySQL 5.7-compatible Aurora), use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"</code> </p> <p>To list all of the available engine versions for <code>aurora-postgresql</code>, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"</code> </p></param>
		/// <param name="AllowMajorVersionUpgrade"><p>A value that indicates whether major version upgrades are allowed.</p> <p>Constraints: You must allow major version upgrades when specifying a value for the <code>EngineVersion</code> parameter that is a different major version than the DB cluster's current version.</p></param>
		/// <param name="DBInstanceParameterGroupName"><p>The name of the DB parameter group to apply to all instances of the DB cluster. </p> <note> <p>When you apply a parameter group using the <code>DBInstanceParameterGroupName</code> parameter, the DB cluster isn't rebooted automatically. Also, parameter changes aren't applied during the next maintenance window but instead are applied immediately.</p> </note> <p>Default: The existing name setting</p> <p>Constraints:</p> <ul> <li> <p>The DB parameter group must be in the same DB parameter group family as this DB cluster.</p> </li> <li> <p>The <code>DBInstanceParameterGroupName</code> parameter is only valid in combination with the <code>AllowMajorVersionUpgrade</code> parameter.</p> </li> </ul></param>
		/// <param name="Domain">The Active Directory directory ID to move the DB cluster to. Specify <code>none</code> to remove the cluster from its current domain. The domain must be created prior to this operation. </param>
		/// <param name="DomainIAMRoleName">Specify the name of the IAM role to be used when making API calls to the Directory Service.</param>
		/// <param name="ScalingConfiguration">The scaling properties of the DB cluster. You can only modify scaling properties for DB clusters in <code>serverless</code> DB engine mode.</param>
		/// <param name="DeletionProtection">A value that indicates whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled. </param>
		/// <param name="EnableHttpEndpoint"><p>A value that indicates whether to enable the HTTP endpoint for an Aurora Serverless DB cluster. By default, the HTTP endpoint is disabled.</p> <p>When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless DB cluster. You can also query your database from inside the RDS console with the query editor.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html">Using the Data API for Aurora Serverless</a> in the <i>Amazon Aurora User Guide</i>.</p></param>
		/// <param name="CopyTagsToSnapshot">A value that indicates whether to copy all tags from the DB cluster to snapshots of the DB cluster. The default is not to copy them.</param>
		/// <returns>Success</returns>
		public async Task GET_ModifyDBClusterAsync(
					string DBClusterIdentifier, 
					string NewDBClusterIdentifier, 
					bool ApplyImmediately, 
					int BackupRetentionPeriod, 
					string DBClusterParameterGroupName, 
					String[] VpcSecurityGroupIds, 
					int Port, 
					string MasterUserPassword, 
					string OptionGroupName, 
					string PreferredBackupWindow, 
					string PreferredMaintenanceWindow, 
					bool EnableIAMDatabaseAuthentication, 
					int BacktrackWindow, 
					string CloudwatchLogsExportConfiguration, 
					string EngineVersion, 
					bool AllowMajorVersionUpgrade, 
					string DBInstanceParameterGroupName, 
					string Domain, 
					string DomainIAMRoleName, 
					string ScalingConfiguration, 
					bool DeletionProtection, 
					bool EnableHttpEndpoint, 
					bool CopyTagsToSnapshot, 
					string Action, 
					string Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ModifyDBCluster?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : Uri.EscapeDataString(DBClusterIdentifier))+"&NewDBClusterIdentifier=" + (NewDBClusterIdentifier==null? "" : Uri.EscapeDataString(NewDBClusterIdentifier))+"&ApplyImmediately="+ApplyImmediately+"&BackupRetentionPeriod="+BackupRetentionPeriod+"&DBClusterParameterGroupName=" + (DBClusterParameterGroupName==null? "" : Uri.EscapeDataString(DBClusterParameterGroupName))+"&"+String.Join("&", VpcSecurityGroupIds.Select(z => $"VpcSecurityGroupIds={z}"))+"&Port="+Port+"&MasterUserPassword=" + (MasterUserPassword==null? "" : Uri.EscapeDataString(MasterUserPassword))+"&OptionGroupName=" + (OptionGroupName==null? "" : Uri.EscapeDataString(OptionGroupName))+"&PreferredBackupWindow=" + (PreferredBackupWindow==null? "" : Uri.EscapeDataString(PreferredBackupWindow))+"&PreferredMaintenanceWindow=" + (PreferredMaintenanceWindow==null? "" : Uri.EscapeDataString(PreferredMaintenanceWindow))+"&EnableIAMDatabaseAuthentication="+EnableIAMDatabaseAuthentication+"&BacktrackWindow="+BacktrackWindow+"&CloudwatchLogsExportConfiguration=" + (CloudwatchLogsExportConfiguration==null? "" : Uri.EscapeDataString(CloudwatchLogsExportConfiguration))+"&EngineVersion=" + (EngineVersion==null? "" : Uri.EscapeDataString(EngineVersion))+"&AllowMajorVersionUpgrade="+AllowMajorVersionUpgrade+"&DBInstanceParameterGroupName=" + (DBInstanceParameterGroupName==null? "" : Uri.EscapeDataString(DBInstanceParameterGroupName))+"&Domain=" + (Domain==null? "" : Uri.EscapeDataString(Domain))+"&DomainIAMRoleName=" + (DomainIAMRoleName==null? "" : Uri.EscapeDataString(DomainIAMRoleName))+"&ScalingConfiguration=" + (ScalingConfiguration==null? "" : Uri.EscapeDataString(ScalingConfiguration))+"&DeletionProtection="+DeletionProtection+"&EnableHttpEndpoint="+EnableHttpEndpoint+"&CopyTagsToSnapshot="+CopyTagsToSnapshot+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Modifies the properties of an endpoint in an Amazon Aurora DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_ModifyDBClusterEndpoint /#Action=ModifyDBClusterEndpoint
		/// </summary>
		/// <param name="DBClusterEndpointIdentifier">The identifier of the endpoint to modify. This parameter is stored as a lowercase string.</param>
		/// <param name="EndpointType">The type of the endpoint. One of: <code>READER</code>, <code>WRITER</code>, <code>ANY</code>.</param>
		/// <param name="StaticMembers">List of DB instance identifiers that are part of the custom endpoint group.</param>
		/// <param name="ExcludedMembers">List of DB instance identifiers that aren't part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty.</param>
		/// <returns>Success</returns>
		public async Task GET_ModifyDBClusterEndpointAsync(string DBClusterEndpointIdentifier, string EndpointType, String[] StaticMembers, String[] ExcludedMembers, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ModifyDBClusterEndpoint?DBClusterEndpointIdentifier=" + (DBClusterEndpointIdentifier==null? "" : Uri.EscapeDataString(DBClusterEndpointIdentifier))+"&EndpointType=" + (EndpointType==null? "" : Uri.EscapeDataString(EndpointType))+"&"+String.Join("&", StaticMembers.Select(z => $"StaticMembers={z}"))+"&"+String.Join("&", ExcludedMembers.Select(z => $"ExcludedMembers={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p> Modifies the parameters of a DB cluster parameter group. To modify more than one parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request. </p> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>Changes to dynamic parameters are applied immediately. Changes to static parameters require a reboot without failover to the DB cluster associated with the parameter group before the change can take effect.</p> </note> <important> <p>After you create a DB cluster parameter group, you should wait at least 5 minutes before creating your first DB cluster that uses that DB cluster parameter group as the default parameter group. This allows Amazon RDS to fully complete the create action before the parameter group is used as the default for a new DB cluster. This is especially important for parameters that are critical when creating the default database for a DB cluster, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href="https://console.aws.amazon.com/rds/">Amazon RDS console</a> or the <code>DescribeDBClusterParameters</code> action to verify that your DB cluster parameter group has been created or modified.</p> <p>If the modified DB cluster parameter group is used by an Aurora Serverless cluster, Aurora applies the update immediately. The cluster restart might interrupt your workload. In that case, your application must reopen any connections and retry any transactions that were active when the parameter changes took effect.</p> </important> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_ModifyDBClusterParameterGroup /#Action=ModifyDBClusterParameterGroup
		/// </summary>
		/// <param name="DBClusterParameterGroupName">The name of the DB cluster parameter group to modify.</param>
		/// <param name="Parameters">A list of parameters in the DB cluster parameter group to modify.</param>
		/// <returns>Success</returns>
		public async Task GET_ModifyDBClusterParameterGroupAsync(string DBClusterParameterGroupName, Parameter[] Parameters, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ModifyDBClusterParameterGroup?DBClusterParameterGroupName=" + (DBClusterParameterGroupName==null? "" : Uri.EscapeDataString(DBClusterParameterGroupName))+"&"+String.Join("&", Parameters.Select(z => $"Parameters={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Adds an attribute and values to, or removes an attribute and values from, a manual DB cluster snapshot.</p> <p>To share a manual DB cluster snapshot with other AWS accounts, specify <code>restore</code> as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to add a list of IDs of the AWS accounts that are authorized to restore the manual DB cluster snapshot. Use the value <code>all</code> to make the manual DB cluster snapshot public, which means that it can be copied or restored by all AWS accounts. Do not add the <code>all</code> value for any manual DB cluster snapshots that contain private information that you don't want available to all AWS accounts. If a manual DB cluster snapshot is encrypted, it can be shared, but only by specifying a list of authorized AWS account IDs for the <code>ValuesToAdd</code> parameter. You can't use <code>all</code> as a value for that parameter in this case.</p> <p>To view which AWS accounts have access to copy or restore a manual DB cluster snapshot, or whether a manual DB cluster snapshot public or private, use the <code>DescribeDBClusterSnapshotAttributes</code> API action.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_ModifyDBClusterSnapshotAttribute /#Action=ModifyDBClusterSnapshotAttribute
		/// </summary>
		/// <param name="DBClusterSnapshotIdentifier">The identifier for the DB cluster snapshot to modify the attributes for.</param>
		/// <param name="AttributeName"><p>The name of the DB cluster snapshot attribute to modify.</p> <p>To manage authorization for other AWS accounts to copy or restore a manual DB cluster snapshot, set this value to <code>restore</code>.</p></param>
		/// <param name="ValuesToAdd"><p>A list of DB cluster snapshot attributes to add to the attribute specified by <code>AttributeName</code>.</p> <p>To authorize other AWS accounts to copy or restore a manual DB cluster snapshot, set this list to include one or more AWS account IDs, or <code>all</code> to make the manual DB cluster snapshot restorable by any AWS account. Do not add the <code>all</code> value for any manual DB cluster snapshots that contain private information that you don't want available to all AWS accounts.</p></param>
		/// <param name="ValuesToRemove"><p>A list of DB cluster snapshot attributes to remove from the attribute specified by <code>AttributeName</code>.</p> <p>To remove authorization for other AWS accounts to copy or restore a manual DB cluster snapshot, set this list to include one or more AWS account identifiers, or <code>all</code> to remove authorization for any AWS account to copy or restore the DB cluster snapshot. If you specify <code>all</code>, an AWS account whose account ID is explicitly added to the <code>restore</code> attribute can still copy or restore a manual DB cluster snapshot.</p></param>
		/// <returns>Success</returns>
		public async Task GET_ModifyDBClusterSnapshotAttributeAsync(string DBClusterSnapshotIdentifier, string AttributeName, String[] ValuesToAdd, String[] ValuesToRemove, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ModifyDBClusterSnapshotAttribute?DBClusterSnapshotIdentifier=" + (DBClusterSnapshotIdentifier==null? "" : Uri.EscapeDataString(DBClusterSnapshotIdentifier))+"&AttributeName=" + (AttributeName==null? "" : Uri.EscapeDataString(AttributeName))+"&"+String.Join("&", ValuesToAdd.Select(z => $"ValuesToAdd={z}"))+"&"+String.Join("&", ValuesToRemove.Select(z => $"ValuesToRemove={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Modifies settings for a DB instance. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. To learn what modifications you can make to your DB instance, call <code>DescribeValidDBInstanceModifications</code> before you call <code>ModifyDBInstance</code>.
		/// GET_ModifyDBInstance /#Action=ModifyDBInstance
		/// </summary>
		/// <param name="DBInstanceIdentifier"><p>The DB instance identifier. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBInstance.</p> </li> </ul></param>
		/// <param name="AllocatedStorage"><p>The new amount of storage (in gibibytes) to allocate for the DB instance. </p> <p>For MariaDB, MySQL, Oracle, and PostgreSQL, the value supplied must be at least 10% greater than the current value. Values that are not at least 10% greater than the existing value are rounded up so that they are 10% greater than the current value. </p> <p>For the valid values for allocated storage for each engine, see <code>CreateDBInstance</code>. </p></param>
		/// <param name="DBInstanceClass"><p>The new compute and memory capacity of the DB instance, for example, <code>db.m4.large</code>. Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB Instance Class</a> in the <i>Amazon RDS User Guide.</i> </p> <p>If you modify the DB instance class, an outage occurs during the change. The change is applied during the next maintenance window, unless <code>ApplyImmediately</code> is enabled for this request. </p> <p>Default: Uses existing setting</p></param>
		/// <param name="DBSubnetGroupName"><p>The new DB subnet group for the DB instance. You can use this parameter to move your DB instance to a different VPC. If your DB instance isn't in a VPC, you can also use this parameter to move your DB instance into a VPC. For more information, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html#USER_VPC.Non-VPC2VPC">Updating the VPC for a DB Instance</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Changing the subnet group causes an outage during the change. The change is applied during the next maintenance window, unless you enable <code>ApplyImmediately</code>. </p> <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p> <p>Example: <code>mySubnetGroup</code> </p></param>
		/// <param name="DBSecurityGroups"><p>A list of DB security groups to authorize on this DB instance. Changing this setting doesn't result in an outage and the change is asynchronously applied as soon as possible.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match existing DBSecurityGroups.</p> </li> </ul></param>
		/// <param name="VpcSecurityGroupIds"><p>A list of EC2 VPC security groups to authorize on this DB instance. This change is asynchronously applied as soon as possible.</p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. The associated list of EC2 VPC security groups is managed by the DB cluster. For more information, see <code>ModifyDBCluster</code>.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match existing VpcSecurityGroupIds.</p> </li> </ul></param>
		/// <param name="ApplyImmediately"><p>A value that indicates whether the modifications in this request and any pending modifications are asynchronously applied as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code> setting for the DB instance. By default, this parameter is disabled. </p> <p> If this parameter is disabled, changes to the DB instance are applied during the next maintenance window. Some parameter changes can cause an outage and are applied on the next call to <a>RebootDBInstance</a>, or the next failure reboot. Review the table of parameters in <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html">Modifying a DB Instance</a> in the <i>Amazon RDS User Guide.</i> to see the impact of enabling or disabling <code>ApplyImmediately</code> for each modified parameter and to determine when the changes are applied. </p></param>
		/// <param name="MasterUserPassword"><p>The new password for the master user. The password can include any printable ASCII character except "/", """, or "@".</p> <p> Changing this parameter doesn't result in an outage and the change is asynchronously applied as soon as possible. Between the time of the request and the completion of the request, the <code>MasterUserPassword</code> element exists in the <code>PendingModifiedValues</code> element of the operation response. </p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. The password for the master user is managed by the DB cluster. For more information, see <code>ModifyDBCluster</code>. </p> <p>Default: Uses existing setting</p> <p> <b>MariaDB</b> </p> <p>Constraints: Must contain from 8 to 41 characters.</p> <p> <b>Microsoft SQL Server</b> </p> <p>Constraints: Must contain from 8 to 128 characters.</p> <p> <b>MySQL</b> </p> <p>Constraints: Must contain from 8 to 41 characters.</p> <p> <b>Oracle</b> </p> <p>Constraints: Must contain from 8 to 30 characters.</p> <p> <b>PostgreSQL</b> </p> <p>Constraints: Must contain from 8 to 128 characters.</p> <note> <p>Amazon RDS API actions never return the password, so this action provides a way to regain access to a primary instance user if the password is lost. This includes restoring privileges that might have been accidentally revoked. </p> </note></param>
		/// <param name="DBParameterGroupName"><p>The name of the DB parameter group to apply to the DB instance. Changing this setting doesn't result in an outage. The parameter group name itself is changed immediately, but the actual parameter changes are not applied until you reboot the instance without failover. In this case, the DB instance isn't rebooted automatically and the parameter changes isn't applied during the next maintenance window.</p> <p>Default: Uses existing setting</p> <p>Constraints: The DB parameter group must be in the same DB parameter group family as this DB instance.</p></param>
		/// <param name="BackupRetentionPeriod"><p>The number of days to retain automated backups. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.</p> <p>Changing this parameter can result in an outage if you change from 0 to a non-zero value or from a non-zero value to 0. These changes are applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is enabled for this request. If you change the parameter from one non-zero value to another non-zero value, the change is asynchronously applied as soon as possible.</p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. The retention period for automated backups is managed by the DB cluster. For more information, see <code>ModifyDBCluster</code>.</p> <p>Default: Uses existing setting</p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 0 to 35</p> </li> <li> <p>Can be specified for a MySQL read replica only if the source is running MySQL 5.6 or later</p> </li> <li> <p>Can be specified for a PostgreSQL read replica only if the source is running PostgreSQL 9.3.5</p> </li> <li> <p>Can't be set to 0 if the DB instance is a source to read replicas</p> </li> </ul></param>
		/// <param name="PreferredBackupWindow"><p> The daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code> parameter. Changing this parameter doesn't result in an outage and the change is asynchronously applied as soon as possible. </p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. The daily time range for creating automated backups is managed by the DB cluster. For more information, see <code>ModifyDBCluster</code>.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the format hh24:mi-hh24:mi</p> </li> <li> <p>Must be in Universal Time Coordinated (UTC)</p> </li> <li> <p>Must not conflict with the preferred maintenance window</p> </li> <li> <p>Must be at least 30 minutes</p> </li> </ul></param>
		/// <param name="PreferredMaintenanceWindow"><p>The weekly time range (in UTC) during which system maintenance can occur, which might result in an outage. Changing this parameter doesn't result in an outage, except in the following situation, and the change is asynchronously applied as soon as possible. If there are pending actions that cause a reboot, and the maintenance window is changed to include the current time, then changing this parameter will cause a reboot of the DB instance. If moving this window to the current time, there must be at least 30 minutes between the current time and end of the window to ensure pending changes are applied.</p> <p>Default: Uses existing setting</p> <p>Format: ddd:hh24:mi-ddd:hh24:mi</p> <p>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</p> <p>Constraints: Must be at least 30 minutes</p></param>
		/// <param name="MultiAZ">A value that indicates whether the DB instance is a Multi-AZ deployment. Changing this parameter doesn't result in an outage and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is enabled for this request. </param>
		/// <param name="EngineVersion"><p> The version number of the database engine to upgrade to. Changing this parameter results in an outage and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is eanbled for this request. </p> <p>For major version upgrades, if a nondefault DB parameter group is currently in use, a new DB parameter group in the DB parameter group family for the new engine version must be specified. The new DB parameter group can be the default for that DB parameter group family.</p> <p>For information about valid engine versions, see <code>CreateDBInstance</code>, or call <code>DescribeDBEngineVersions</code>.</p></param>
		/// <param name="AllowMajorVersionUpgrade"><p>A value that indicates whether major version upgrades are allowed. Changing this parameter doesn't result in an outage and the change is asynchronously applied as soon as possible.</p> <p>Constraints: Major version upgrades must be allowed when specifying a value for the EngineVersion parameter that is a different major version than the DB instance's current version.</p></param>
		/// <param name="AutoMinorVersionUpgrade"> A value that indicates whether minor version upgrades are applied automatically to the DB instance during the maintenance window. Changing this parameter doesn't result in an outage except in the following case and the change is asynchronously applied as soon as possible. An outage results if this parameter is enabled during the maintenance window, and a newer minor version is available, and RDS has enabled auto patching for that engine version. </param>
		/// <param name="LicenseModel"><p>The license model for the DB instance.</p> <p>Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p></param>
		/// <param name="Iops"><p>The new Provisioned IOPS (I/O operations per second) value for the RDS instance. </p> <p>Changing this setting doesn't result in an outage and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is enabled for this request. If you are migrating from Provisioned IOPS to standard storage, set this value to 0. The DB instance will require a reboot for the change in storage type to take effect. </p> <p>If you choose to migrate your DB instance from using standard storage to using Provisioned IOPS, or from using Provisioned IOPS to using standard storage, the process can take time. The duration of the migration depends on several factors such as database load, storage size, storage type (standard or Provisioned IOPS), amount of IOPS provisioned (if any), and the number of prior scale storage operations. Typical migration times are under 24 hours, but the process can take up to several days in some cases. During the migration, the DB instance is available for use, but might experience performance degradation. While the migration takes place, nightly backups for the instance are suspended. No other Amazon RDS operations can take place for the instance, including modifying the instance, rebooting the instance, deleting the instance, creating a read replica for the instance, and creating a DB snapshot of the instance. </p> <p>Constraints: For MariaDB, MySQL, Oracle, and PostgreSQL, the value supplied must be at least 10% greater than the current value. Values that are not at least 10% greater than the existing value are rounded up so that they are 10% greater than the current value. </p> <p>Default: Uses existing setting</p></param>
		/// <param name="OptionGroupName"><p> Indicates that the DB instance should be associated with the specified option group. Changing this parameter doesn't result in an outage except in the following case and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is enabled for this request. If the parameter change results in an option group that enables OEM, this change can cause a brief (sub-second) period during which new connections are rejected but existing connections are not interrupted. </p> <p>Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't be removed from an option group, and that option group can't be removed from a DB instance once it is associated with a DB instance</p></param>
		/// <param name="NewDBInstanceIdentifier"><p> The new DB instance identifier for the DB instance when renaming a DB instance. When you change the DB instance identifier, an instance reboot occurs immediately if you enable <code>ApplyImmediately</code>, or will occur during the next maintenance window if you disable Apply Immediately. This value is stored as a lowercase string. </p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>mydbinstance</code> </p></param>
		/// <param name="StorageType"><p>Specifies the storage type to be associated with the DB instance. </p> <p>If you specify Provisioned IOPS (<code>io1</code>), you must also include a value for the <code>Iops</code> parameter. </p> <p>If you choose to migrate your DB instance from using standard storage to using Provisioned IOPS, or from using Provisioned IOPS to using standard storage, the process can take time. The duration of the migration depends on several factors such as database load, storage size, storage type (standard or Provisioned IOPS), amount of IOPS provisioned (if any), and the number of prior scale storage operations. Typical migration times are under 24 hours, but the process can take up to several days in some cases. During the migration, the DB instance is available for use, but might experience performance degradation. While the migration takes place, nightly backups for the instance are suspended. No other Amazon RDS operations can take place for the instance, including modifying the instance, rebooting the instance, deleting the instance, creating a read replica for the instance, and creating a DB snapshot of the instance. </p> <p> Valid values: <code>standard | gp2 | io1</code> </p> <p>Default: <code>io1</code> if the <code>Iops</code> parameter is specified, otherwise <code>gp2</code> </p></param>
		/// <param name="TdeCredentialArn">The ARN from the key store with which to associate the instance for TDE encryption.</param>
		/// <param name="TdeCredentialPassword">The password for the given ARN from the key store in order to access the device.</param>
		/// <param name="CACertificateIdentifier">Indicates the certificate that needs to be associated with the instance.</param>
		/// <param name="Domain"><p>The Active Directory directory ID to move the DB instance to. Specify <code>none</code> to remove the instance from its current domain. The domain must be created prior to this operation. Currently, only Microsoft SQL Server and Oracle DB instances can be created in an Active Directory Domain. </p> <p>For Microsoft SQL Server DB instances, Amazon RDS can use Windows Authentication to authenticate users that connect to the DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_SQLServerWinAuth.html"> Using Windows Authentication with an Amazon RDS DB Instance Running Microsoft SQL Server</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For Oracle DB instances, Amazon RDS can use Kerberos Authentication to authenticate users that connect to the DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-kerberos.html"> Using Kerberos Authentication with Amazon RDS for Oracle</a> in the <i>Amazon RDS User Guide</i>.</p></param>
		/// <param name="CopyTagsToSnapshot"><p>A value that indicates whether to copy all tags from the DB instance to snapshots of the DB instance. By default, tags are not copied.</p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value for an Aurora DB instance has no effect on the DB cluster setting. For more information, see <code>ModifyDBCluster</code>.</p></param>
		/// <param name="MonitoringInterval"><p>The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0.</p> <p>If <code>MonitoringRoleArn</code> is specified, then you must also set <code>MonitoringInterval</code> to a value other than 0.</p> <p>Valid Values: <code>0, 1, 5, 10, 15, 30, 60</code> </p></param>
		/// <param name="DBPortNumber"><p>The port number on which the database accepts connections.</p> <p>The value of the <code>DBPortNumber</code> parameter must not match any of the port values specified for options in the option group for the DB instance.</p> <p>Your database will restart when you change the <code>DBPortNumber</code> value regardless of the value of the <code>ApplyImmediately</code> parameter.</p> <p> <b>MySQL</b> </p> <p> Default: <code>3306</code> </p> <p> Valid values: <code>1150-65535</code> </p> <p> <b>MariaDB</b> </p> <p> Default: <code>3306</code> </p> <p> Valid values: <code>1150-65535</code> </p> <p> <b>PostgreSQL</b> </p> <p> Default: <code>5432</code> </p> <p> Valid values: <code>1150-65535</code> </p> <p>Type: Integer</p> <p> <b>Oracle</b> </p> <p> Default: <code>1521</code> </p> <p> Valid values: <code>1150-65535</code> </p> <p> <b>SQL Server</b> </p> <p> Default: <code>1433</code> </p> <p> Valid values: <code>1150-65535</code> except <code>1234</code>, <code>1434</code>, <code>3260</code>, <code>3343</code>, <code>3389</code>, <code>47001</code>, and <code>49152-49156</code>.</p> <p> <b>Amazon Aurora</b> </p> <p> Default: <code>3306</code> </p> <p> Valid values: <code>1150-65535</code> </p></param>
		/// <param name="PubliclyAccessible"><p>A value that indicates whether the DB instance is publicly accessible. When the DB instance is publicly accessible, it is an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. When the DB instance isn't publicly accessible, it is an internal instance with a DNS name that resolves to a private IP address. </p> <p> <code>PubliclyAccessible</code> only applies to DB instances in a VPC. The DB instance must be part of a public subnet and <code>PubliclyAccessible</code> must be enabled for it to be publicly accessible. </p> <p>Changes to the <code>PubliclyAccessible</code> parameter are applied immediately regardless of the value of the <code>ApplyImmediately</code> parameter.</p></param>
		/// <param name="MonitoringRoleArn"><p>The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>. For information on creating a monitoring role, go to <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.html#USER_Monitoring.OS.IAMRole">To create an IAM role for Amazon RDS Enhanced Monitoring</a> in the <i>Amazon RDS User Guide.</i> </p> <p>If <code>MonitoringInterval</code> is set to a value other than 0, then you must supply a <code>MonitoringRoleArn</code> value.</p></param>
		/// <param name="DomainIAMRoleName">The name of the IAM role to use when making API calls to the Directory Service.</param>
		/// <param name="PromotionTier"><p>A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance"> Fault Tolerance for an Aurora DB Cluster</a> in the <i>Amazon Aurora User Guide</i>. </p> <p>Default: 1</p> <p>Valid Values: 0 - 15</p></param>
		/// <param name="EnableIAMDatabaseAuthentication"><p>A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled. For information about the supported DB engines, see <a>CreateDBInstance</a>.</p> <p>For more information about IAM database authentication, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication for MySQL and PostgreSQL</a> in the <i>Amazon RDS User Guide.</i> </p></param>
		/// <param name="EnablePerformanceInsights"><p>A value that indicates whether to enable Performance Insights for the DB instance.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html">Using Amazon Performance Insights</a> in the <i>Amazon Relational Database Service User Guide</i>. </p></param>
		/// <param name="PerformanceInsightsKMSKeyId"><p>The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.</p> <p>If you do not specify a value for <code>PerformanceInsightsKMSKeyId</code>, then Amazon RDS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.</p></param>
		/// <param name="PerformanceInsightsRetentionPeriod">The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years). </param>
		/// <param name="CloudwatchLogsExportConfiguration"><p>The configuration setting for the log types to be enabled for export to CloudWatch Logs for a specific DB instance.</p> <p>A change to the <code>CloudwatchLogsExportConfiguration</code> parameter is always applied to the DB instance immediately. Therefore, the <code>ApplyImmediately</code> parameter has no effect.</p></param>
		/// <param name="ProcessorFeatures">The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.</param>
		/// <param name="UseDefaultProcessorFeatures">A value that indicates whether the DB instance class of the DB instance uses its default processor features.</param>
		/// <param name="DeletionProtection">A value that indicates whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html"> Deleting a DB Instance</a>. </param>
		/// <param name="MaxAllocatedStorage">The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.</param>
		/// <param name="CertificateRotationRestart"><p>A value that indicates whether the DB instance is restarted when you rotate your SSL/TLS certificate.</p> <p>By default, the DB instance is restarted when you rotate your SSL/TLS certificate. The certificate is not updated until the DB instance is restarted.</p> <important> <p>Set this parameter only if you are <i>not</i> using SSL/TLS to connect to the DB instance.</p> </important> <p>If you are using SSL/TLS to connect to the DB instance, follow the appropriate instructions for your DB engine to rotate your SSL/TLS certificate:</p> <ul> <li> <p>For more information about rotating your SSL/TLS certificate for RDS DB engines, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL-certificate-rotation.html"> Rotating Your SSL/TLS Certificate.</a> in the <i>Amazon RDS User Guide.</i> </p> </li> <li> <p>For more information about rotating your SSL/TLS certificate for Aurora DB engines, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL-certificate-rotation.html"> Rotating Your SSL/TLS Certificate</a> in the <i>Amazon Aurora User Guide.</i> </p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_ModifyDBInstanceAsync(
					string DBInstanceIdentifier, 
					int AllocatedStorage, 
					string DBInstanceClass, 
					string DBSubnetGroupName, 
					String[] DBSecurityGroups, 
					String[] VpcSecurityGroupIds, 
					bool ApplyImmediately, 
					string MasterUserPassword, 
					string DBParameterGroupName, 
					int BackupRetentionPeriod, 
					string PreferredBackupWindow, 
					string PreferredMaintenanceWindow, 
					bool MultiAZ, 
					string EngineVersion, 
					bool AllowMajorVersionUpgrade, 
					bool AutoMinorVersionUpgrade, 
					string LicenseModel, 
					int Iops, 
					string OptionGroupName, 
					string NewDBInstanceIdentifier, 
					string StorageType, 
					string TdeCredentialArn, 
					string TdeCredentialPassword, 
					string CACertificateIdentifier, 
					string Domain, 
					bool CopyTagsToSnapshot, 
					int MonitoringInterval, 
					int DBPortNumber, 
					bool PubliclyAccessible, 
					string MonitoringRoleArn, 
					string DomainIAMRoleName, 
					int PromotionTier, 
					bool EnableIAMDatabaseAuthentication, 
					bool EnablePerformanceInsights, 
					string PerformanceInsightsKMSKeyId, 
					int PerformanceInsightsRetentionPeriod, 
					string CloudwatchLogsExportConfiguration, 
					ProcessorFeature[] ProcessorFeatures, 
					bool UseDefaultProcessorFeatures, 
					bool DeletionProtection, 
					int MaxAllocatedStorage, 
					bool CertificateRotationRestart, 
					string Action, 
					string Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ModifyDBInstance?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : Uri.EscapeDataString(DBInstanceIdentifier))+"&AllocatedStorage="+AllocatedStorage+"&DBInstanceClass=" + (DBInstanceClass==null? "" : Uri.EscapeDataString(DBInstanceClass))+"&DBSubnetGroupName=" + (DBSubnetGroupName==null? "" : Uri.EscapeDataString(DBSubnetGroupName))+"&"+String.Join("&", DBSecurityGroups.Select(z => $"DBSecurityGroups={z}"))+"&"+String.Join("&", VpcSecurityGroupIds.Select(z => $"VpcSecurityGroupIds={z}"))+"&ApplyImmediately="+ApplyImmediately+"&MasterUserPassword=" + (MasterUserPassword==null? "" : Uri.EscapeDataString(MasterUserPassword))+"&DBParameterGroupName=" + (DBParameterGroupName==null? "" : Uri.EscapeDataString(DBParameterGroupName))+"&BackupRetentionPeriod="+BackupRetentionPeriod+"&PreferredBackupWindow=" + (PreferredBackupWindow==null? "" : Uri.EscapeDataString(PreferredBackupWindow))+"&PreferredMaintenanceWindow=" + (PreferredMaintenanceWindow==null? "" : Uri.EscapeDataString(PreferredMaintenanceWindow))+"&MultiAZ="+MultiAZ+"&EngineVersion=" + (EngineVersion==null? "" : Uri.EscapeDataString(EngineVersion))+"&AllowMajorVersionUpgrade="+AllowMajorVersionUpgrade+"&AutoMinorVersionUpgrade="+AutoMinorVersionUpgrade+"&LicenseModel=" + (LicenseModel==null? "" : Uri.EscapeDataString(LicenseModel))+"&Iops="+Iops+"&OptionGroupName=" + (OptionGroupName==null? "" : Uri.EscapeDataString(OptionGroupName))+"&NewDBInstanceIdentifier=" + (NewDBInstanceIdentifier==null? "" : Uri.EscapeDataString(NewDBInstanceIdentifier))+"&StorageType=" + (StorageType==null? "" : Uri.EscapeDataString(StorageType))+"&TdeCredentialArn=" + (TdeCredentialArn==null? "" : Uri.EscapeDataString(TdeCredentialArn))+"&TdeCredentialPassword=" + (TdeCredentialPassword==null? "" : Uri.EscapeDataString(TdeCredentialPassword))+"&CACertificateIdentifier=" + (CACertificateIdentifier==null? "" : Uri.EscapeDataString(CACertificateIdentifier))+"&Domain=" + (Domain==null? "" : Uri.EscapeDataString(Domain))+"&CopyTagsToSnapshot="+CopyTagsToSnapshot+"&MonitoringInterval="+MonitoringInterval+"&DBPortNumber="+DBPortNumber+"&PubliclyAccessible="+PubliclyAccessible+"&MonitoringRoleArn=" + (MonitoringRoleArn==null? "" : Uri.EscapeDataString(MonitoringRoleArn))+"&DomainIAMRoleName=" + (DomainIAMRoleName==null? "" : Uri.EscapeDataString(DomainIAMRoleName))+"&PromotionTier="+PromotionTier+"&EnableIAMDatabaseAuthentication="+EnableIAMDatabaseAuthentication+"&EnablePerformanceInsights="+EnablePerformanceInsights+"&PerformanceInsightsKMSKeyId=" + (PerformanceInsightsKMSKeyId==null? "" : Uri.EscapeDataString(PerformanceInsightsKMSKeyId))+"&PerformanceInsightsRetentionPeriod="+PerformanceInsightsRetentionPeriod+"&CloudwatchLogsExportConfiguration=" + (CloudwatchLogsExportConfiguration==null? "" : Uri.EscapeDataString(CloudwatchLogsExportConfiguration))+"&"+String.Join("&", ProcessorFeatures.Select(z => $"ProcessorFeatures={z}"))+"&UseDefaultProcessorFeatures="+UseDefaultProcessorFeatures+"&DeletionProtection="+DeletionProtection+"&MaxAllocatedStorage="+MaxAllocatedStorage+"&CertificateRotationRestart="+CertificateRotationRestart+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p> Modifies the parameters of a DB parameter group. To modify more than one parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request. </p> <note> <p>Changes to dynamic parameters are applied immediately. Changes to static parameters require a reboot without failover to the DB instance associated with the parameter group before the change can take effect.</p> </note> <important> <p>After you modify a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group. This allows Amazon RDS to fully complete the modify action before the parameter group is used as the default for a new DB instance. This is especially important for parameters that are critical when creating the default database for a DB instance, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href="https://console.aws.amazon.com/rds/">Amazon RDS console</a> or the <i>DescribeDBParameters</i> command to verify that your DB parameter group has been created or modified.</p> </important>
		/// GET_ModifyDBParameterGroup /#Action=ModifyDBParameterGroup
		/// </summary>
		/// <param name="DBParameterGroupName"><p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing <code>DBParameterGroup</code>.</p> </li> </ul></param>
		/// <param name="Parameters"><p>An array of parameter names, values, and the apply method for the parameter update. At least one parameter name, value, and apply method must be supplied; later arguments are optional. A maximum of 20 parameters can be modified in a single request.</p> <p>Valid Values (for the application method): <code>immediate | pending-reboot</code> </p> <note> <p>You can use the immediate value with dynamic parameters only. You can use the pending-reboot value for both dynamic and static parameters, and changes are applied when you reboot the DB instance without failover.</p> </note></param>
		/// <returns>Success</returns>
		public async Task GET_ModifyDBParameterGroupAsync(string DBParameterGroupName, Parameter[] Parameters, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ModifyDBParameterGroup?DBParameterGroupName=" + (DBParameterGroupName==null? "" : Uri.EscapeDataString(DBParameterGroupName))+"&"+String.Join("&", Parameters.Select(z => $"Parameters={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <note> <p>This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.</p> </note> <p>Changes the settings for an existing DB proxy.</p>
		/// GET_ModifyDBProxy /#Action=ModifyDBProxy
		/// </summary>
		/// <param name="DBProxyName">The identifier for the <code>DBProxy</code> to modify.</param>
		/// <param name="NewDBProxyName">The new identifier for the <code>DBProxy</code>. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens.</param>
		/// <param name="Auth">The new authentication settings for the <code>DBProxy</code>.</param>
		/// <param name="RequireTLS">Whether Transport Layer Security (TLS) encryption is required for connections to the proxy. By enabling this setting, you can enforce encrypted TLS connections to the proxy, even if the associated database doesn't use TLS.</param>
		/// <param name="IdleClientTimeout">The number of seconds that a connection to the proxy can be inactive before the proxy disconnects it. You can set this value higher or lower than the connection timeout limit for the associated database.</param>
		/// <param name="DebugLogging">Whether the proxy includes detailed information about SQL statements in its logs. This information helps you to debug issues involving SQL behavior or the performance and scalability of the proxy connections. The debug information includes the text of SQL statements that you submit through the proxy. Thus, only enable this setting when needed for debugging, and only when you have security measures in place to safeguard any sensitive information that appears in the logs.</param>
		/// <param name="RoleArn">The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets in AWS Secrets Manager.</param>
		/// <param name="SecurityGroups">The new list of security groups for the <code>DBProxy</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_ModifyDBProxyAsync(string DBProxyName, string NewDBProxyName, UserAuthConfig[] Auth, bool RequireTLS, int IdleClientTimeout, bool DebugLogging, string RoleArn, String[] SecurityGroups, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ModifyDBProxy?DBProxyName=" + (DBProxyName==null? "" : Uri.EscapeDataString(DBProxyName))+"&NewDBProxyName=" + (NewDBProxyName==null? "" : Uri.EscapeDataString(NewDBProxyName))+"&"+String.Join("&", Auth.Select(z => $"Auth={z}"))+"&RequireTLS="+RequireTLS+"&IdleClientTimeout="+IdleClientTimeout+"&DebugLogging="+DebugLogging+"&RoleArn=" + (RoleArn==null? "" : Uri.EscapeDataString(RoleArn))+"&"+String.Join("&", SecurityGroups.Select(z => $"SecurityGroups={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <note> <p>This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.</p> </note> <p>Modifies the properties of a <code>DBProxyTargetGroup</code>.</p>
		/// GET_ModifyDBProxyTargetGroup /#Action=ModifyDBProxyTargetGroup
		/// </summary>
		/// <param name="TargetGroupName">The name of the new target group to assign to the proxy.</param>
		/// <param name="DBProxyName">The name of the new proxy to which to assign the target group.</param>
		/// <param name="ConnectionPoolConfig">The settings that determine the size and behavior of the connection pool for the target group.</param>
		/// <param name="NewName">The new name for the modified <code>DBProxyTarget</code>. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens.</param>
		/// <returns>Success</returns>
		public async Task GET_ModifyDBProxyTargetGroupAsync(string TargetGroupName, string DBProxyName, string ConnectionPoolConfig, string NewName, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ModifyDBProxyTargetGroup?TargetGroupName=" + (TargetGroupName==null? "" : Uri.EscapeDataString(TargetGroupName))+"&DBProxyName=" + (DBProxyName==null? "" : Uri.EscapeDataString(DBProxyName))+"&ConnectionPoolConfig=" + (ConnectionPoolConfig==null? "" : Uri.EscapeDataString(ConnectionPoolConfig))+"&NewName=" + (NewName==null? "" : Uri.EscapeDataString(NewName))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates a manual DB snapshot with a new engine version. The snapshot can be encrypted or unencrypted, but not shared or public. </p> <p>Amazon RDS supports upgrading DB snapshots for MySQL, Oracle, and PostgreSQL. </p>
		/// GET_ModifyDBSnapshot /#Action=ModifyDBSnapshot
		/// </summary>
		/// <param name="DBSnapshotIdentifier">The identifier of the DB snapshot to modify.</param>
		/// <param name="EngineVersion"><p>The engine version to upgrade the DB snapshot to. </p> <p>The following are the database engines and engine versions that are available when you upgrade a DB snapshot. </p> <p> <b>MySQL</b> </p> <ul> <li> <p> <code>5.5.46</code> (supported for 5.1 DB snapshots)</p> </li> </ul> <p> <b>Oracle</b> </p> <ul> <li> <p> <code>12.1.0.2.v8</code> (supported for 12.1.0.1 DB snapshots)</p> </li> <li> <p> <code>11.2.0.4.v12</code> (supported for 11.2.0.2 DB snapshots)</p> </li> <li> <p> <code>11.2.0.4.v11</code> (supported for 11.2.0.3 DB snapshots)</p> </li> </ul> <p> <b>PostgreSQL</b> </p> <p>For the list of engine versions that are available for upgrading a DB snapshot, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.PostgreSQL.html#USER_UpgradeDBInstance.PostgreSQL.MajorVersion"> Upgrading the PostgreSQL DB Engine for Amazon RDS</a>. </p></param>
		/// <param name="OptionGroupName"><p>The option group to identify with the upgraded DB snapshot. </p> <p>You can specify this parameter when you upgrade an Oracle DB snapshot. The same option group considerations apply when upgrading a DB snapshot as when upgrading a DB instance. For more information, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Oracle.html#USER_UpgradeDBInstance.Oracle.OGPG.OG">Option Group Considerations</a> in the <i>Amazon RDS User Guide.</i> </p></param>
		/// <returns>Success</returns>
		public async Task GET_ModifyDBSnapshotAsync(string DBSnapshotIdentifier, string EngineVersion, string OptionGroupName, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ModifyDBSnapshot?DBSnapshotIdentifier=" + (DBSnapshotIdentifier==null? "" : Uri.EscapeDataString(DBSnapshotIdentifier))+"&EngineVersion=" + (EngineVersion==null? "" : Uri.EscapeDataString(EngineVersion))+"&OptionGroupName=" + (OptionGroupName==null? "" : Uri.EscapeDataString(OptionGroupName))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Adds an attribute and values to, or removes an attribute and values from, a manual DB snapshot.</p> <p>To share a manual DB snapshot with other AWS accounts, specify <code>restore</code> as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to add a list of IDs of the AWS accounts that are authorized to restore the manual DB snapshot. Uses the value <code>all</code> to make the manual DB snapshot public, which means it can be copied or restored by all AWS accounts. Do not add the <code>all</code> value for any manual DB snapshots that contain private information that you don't want available to all AWS accounts. If the manual DB snapshot is encrypted, it can be shared, but only by specifying a list of authorized AWS account IDs for the <code>ValuesToAdd</code> parameter. You can't use <code>all</code> as a value for that parameter in this case.</p> <p>To view which AWS accounts have access to copy or restore a manual DB snapshot, or whether a manual DB snapshot public or private, use the <code>DescribeDBSnapshotAttributes</code> API action.</p>
		/// GET_ModifyDBSnapshotAttribute /#Action=ModifyDBSnapshotAttribute
		/// </summary>
		/// <param name="DBSnapshotIdentifier">The identifier for the DB snapshot to modify the attributes for.</param>
		/// <param name="AttributeName"><p>The name of the DB snapshot attribute to modify.</p> <p>To manage authorization for other AWS accounts to copy or restore a manual DB snapshot, set this value to <code>restore</code>.</p></param>
		/// <param name="ValuesToAdd"><p>A list of DB snapshot attributes to add to the attribute specified by <code>AttributeName</code>.</p> <p>To authorize other AWS accounts to copy or restore a manual snapshot, set this list to include one or more AWS account IDs, or <code>all</code> to make the manual DB snapshot restorable by any AWS account. Do not add the <code>all</code> value for any manual DB snapshots that contain private information that you don't want available to all AWS accounts.</p></param>
		/// <param name="ValuesToRemove"><p>A list of DB snapshot attributes to remove from the attribute specified by <code>AttributeName</code>.</p> <p>To remove authorization for other AWS accounts to copy or restore a manual snapshot, set this list to include one or more AWS account identifiers, or <code>all</code> to remove authorization for any AWS account to copy or restore the DB snapshot. If you specify <code>all</code>, an AWS account whose account ID is explicitly added to the <code>restore</code> attribute can still copy or restore the manual DB snapshot.</p></param>
		/// <returns>Success</returns>
		public async Task GET_ModifyDBSnapshotAttributeAsync(string DBSnapshotIdentifier, string AttributeName, String[] ValuesToAdd, String[] ValuesToRemove, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ModifyDBSnapshotAttribute?DBSnapshotIdentifier=" + (DBSnapshotIdentifier==null? "" : Uri.EscapeDataString(DBSnapshotIdentifier))+"&AttributeName=" + (AttributeName==null? "" : Uri.EscapeDataString(AttributeName))+"&"+String.Join("&", ValuesToAdd.Select(z => $"ValuesToAdd={z}"))+"&"+String.Join("&", ValuesToRemove.Select(z => $"ValuesToRemove={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Modifies an existing DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the AWS Region.
		/// GET_ModifyDBSubnetGroup /#Action=ModifyDBSubnetGroup
		/// </summary>
		/// <param name="DBSubnetGroupName"><p>The name for the DB subnet group. This value is stored as a lowercase string. You can't modify the default subnet group. </p> <p>Constraints: Must match the name of an existing DBSubnetGroup. Must not be default.</p> <p>Example: <code>mySubnetgroup</code> </p></param>
		/// <param name="DBSubnetGroupDescription">The description for the DB subnet group.</param>
		/// <param name="SubnetIds">The EC2 subnet IDs for the DB subnet group.</param>
		/// <returns>Success</returns>
		public async Task GET_ModifyDBSubnetGroupAsync(string DBSubnetGroupName, string DBSubnetGroupDescription, String[] SubnetIds, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ModifyDBSubnetGroup?DBSubnetGroupName=" + (DBSubnetGroupName==null? "" : Uri.EscapeDataString(DBSubnetGroupName))+"&DBSubnetGroupDescription=" + (DBSubnetGroupDescription==null? "" : Uri.EscapeDataString(DBSubnetGroupDescription))+"&"+String.Join("&", SubnetIds.Select(z => $"SubnetIds={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Modifies an existing RDS event notification subscription. You can't modify the source identifiers using this call. To change source identifiers for a subscription, use the <code>AddSourceIdentifierToSubscription</code> and <code>RemoveSourceIdentifierFromSubscription</code> calls.</p> <p>You can see a list of the event categories for a given SourceType in the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html">Events</a> topic in the <i>Amazon RDS User Guide</i> or by using the <b>DescribeEventCategories</b> action.</p>
		/// GET_ModifyEventSubscription /#Action=ModifyEventSubscription
		/// </summary>
		/// <param name="SubscriptionName">The name of the RDS event notification subscription.</param>
		/// <param name="SnsTopicArn">The Amazon Resource Name (ARN) of the SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.</param>
		/// <param name="SourceType"><p>The type of source that is generating the events. For example, if you want to be notified of events generated by a DB instance, you would set this parameter to db-instance. If this value isn't specified, all events are returned.</p> <p>Valid values: db-instance | db-parameter-group | db-security-group | db-snapshot</p></param>
		/// <param name="EventCategories"> A list of event categories for a SourceType that you want to subscribe to. You can see a list of the categories for a given SourceType in the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html">Events</a> topic in the <i>Amazon RDS User Guide</i> or by using the <b>DescribeEventCategories</b> action. </param>
		/// <param name="Enabled"> A value that indicates whether to activate the subscription. </param>
		/// <returns>Success</returns>
		public async Task GET_ModifyEventSubscriptionAsync(string SubscriptionName, string SnsTopicArn, string SourceType, String[] EventCategories, bool Enabled, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ModifyEventSubscription?SubscriptionName=" + (SubscriptionName==null? "" : Uri.EscapeDataString(SubscriptionName))+"&SnsTopicArn=" + (SnsTopicArn==null? "" : Uri.EscapeDataString(SnsTopicArn))+"&SourceType=" + (SourceType==null? "" : Uri.EscapeDataString(SourceType))+"&"+String.Join("&", EventCategories.Select(z => $"EventCategories={z}"))+"&Enabled="+Enabled+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p> Modify a setting for an Amazon Aurora global cluster. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_ModifyGlobalCluster /#Action=ModifyGlobalCluster
		/// </summary>
		/// <param name="GlobalClusterIdentifier"><p> The DB cluster identifier for the global cluster being modified. This parameter isn't case-sensitive. </p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing global database cluster.</p> </li> </ul></param>
		/// <param name="NewGlobalClusterIdentifier"><p> The new cluster identifier for the global database cluster when modifying a global database cluster. This value is stored as a lowercase string. </p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens</p> </li> <li> <p>The first character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-cluster2</code> </p></param>
		/// <param name="DeletionProtection"> Indicates if the global database cluster has deletion protection enabled. The global database cluster can't be deleted when deletion protection is enabled. </param>
		/// <returns>Success</returns>
		public async Task GET_ModifyGlobalClusterAsync(string GlobalClusterIdentifier, string NewGlobalClusterIdentifier, bool DeletionProtection, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ModifyGlobalCluster?GlobalClusterIdentifier=" + (GlobalClusterIdentifier==null? "" : Uri.EscapeDataString(GlobalClusterIdentifier))+"&NewGlobalClusterIdentifier=" + (NewGlobalClusterIdentifier==null? "" : Uri.EscapeDataString(NewGlobalClusterIdentifier))+"&DeletionProtection="+DeletionProtection+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Modifies an existing option group.
		/// GET_ModifyOptionGroup /#Action=ModifyOptionGroup
		/// </summary>
		/// <param name="OptionGroupName"><p>The name of the option group to be modified.</p> <p>Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't be removed from an option group, and that option group can't be removed from a DB instance once it is associated with a DB instance</p></param>
		/// <param name="OptionsToInclude">Options in this list are added to the option group or, if already present, the specified configuration is used to update the existing configuration.</param>
		/// <param name="OptionsToRemove">Options in this list are removed from the option group.</param>
		/// <param name="ApplyImmediately">A value that indicates whether to apply the change immediately or during the next maintenance window for each instance associated with the option group.</param>
		/// <returns>Success</returns>
		public async Task GET_ModifyOptionGroupAsync(string OptionGroupName, OptionConfiguration[] OptionsToInclude, String[] OptionsToRemove, bool ApplyImmediately, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ModifyOptionGroup?OptionGroupName=" + (OptionGroupName==null? "" : Uri.EscapeDataString(OptionGroupName))+"&"+String.Join("&", OptionsToInclude.Select(z => $"OptionsToInclude={z}"))+"&"+String.Join("&", OptionsToRemove.Select(z => $"OptionsToRemove={z}"))+"&ApplyImmediately="+ApplyImmediately+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Promotes a read replica DB instance to a standalone DB instance.</p> <note> <ul> <li> <p>Backup duration is a function of the amount of changes to the database since the previous backup. If you plan to promote a read replica to a standalone instance, we recommend that you enable backups and complete at least one backup prior to promotion. In addition, a read replica cannot be promoted to a standalone instance when it is in the <code>backing-up</code> status. If you have enabled backups on your read replica, configure the automated backup window so that daily backups do not interfere with read replica promotion.</p> </li> <li> <p>This command doesn't apply to Aurora MySQL and Aurora PostgreSQL.</p> </li> </ul> </note>
		/// GET_PromoteReadReplica /#Action=PromoteReadReplica
		/// </summary>
		/// <param name="DBInstanceIdentifier"><p>The DB instance identifier. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing read replica DB instance.</p> </li> </ul> <p>Example: <code>mydbinstance</code> </p></param>
		/// <param name="BackupRetentionPeriod"><p>The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.</p> <p>Default: 1</p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 0 to 35.</p> </li> <li> <p>Can't be set to 0 if the DB instance is a source to read replicas.</p> </li> </ul></param>
		/// <param name="PreferredBackupWindow"><p> The daily time range during which automated backups are created if automated backups are enabled, using the <code>BackupRetentionPeriod</code> parameter. </p> <p> The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region. To see the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html"> Adjusting the Preferred Maintenance Window</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_PromoteReadReplicaAsync(string DBInstanceIdentifier, int BackupRetentionPeriod, string PreferredBackupWindow, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=PromoteReadReplica?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : Uri.EscapeDataString(DBInstanceIdentifier))+"&BackupRetentionPeriod="+BackupRetentionPeriod+"&PreferredBackupWindow=" + (PreferredBackupWindow==null? "" : Uri.EscapeDataString(PreferredBackupWindow))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Promotes a read replica DB cluster to a standalone DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_PromoteReadReplicaDBCluster /#Action=PromoteReadReplicaDBCluster
		/// </summary>
		/// <param name="DBClusterIdentifier"><p>The identifier of the DB cluster read replica to promote. This parameter isn't case-sensitive. </p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DB cluster read replica.</p> </li> </ul> <p>Example: <code>my-cluster-replica1</code> </p></param>
		/// <returns>Success</returns>
		public async Task GET_PromoteReadReplicaDBClusterAsync(string DBClusterIdentifier, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=PromoteReadReplicaDBCluster?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : Uri.EscapeDataString(DBClusterIdentifier))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Purchases a reserved DB instance offering.
		/// GET_PurchaseReservedDBInstancesOffering /#Action=PurchaseReservedDBInstancesOffering
		/// </summary>
		/// <param name="ReservedDBInstancesOfferingId"><p>The ID of the Reserved DB instance offering to purchase.</p> <p>Example: 438012d3-4052-4cc7-b2e3-8d3372e0e706</p></param>
		/// <param name="ReservedDBInstanceId"><p>Customer-specified identifier to track this reservation.</p> <p>Example: myreservationID</p></param>
		/// <param name="DBInstanceCount"><p>The number of instances to reserve.</p> <p>Default: <code>1</code> </p></param>
		/// <returns>Success</returns>
		public async Task GET_PurchaseReservedDBInstancesOfferingAsync(string ReservedDBInstancesOfferingId, string ReservedDBInstanceId, int DBInstanceCount, Tag[] Tags, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=PurchaseReservedDBInstancesOffering?ReservedDBInstancesOfferingId=" + (ReservedDBInstancesOfferingId==null? "" : Uri.EscapeDataString(ReservedDBInstancesOfferingId))+"&ReservedDBInstanceId=" + (ReservedDBInstanceId==null? "" : Uri.EscapeDataString(ReservedDBInstanceId))+"&DBInstanceCount="+DBInstanceCount+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>You might need to reboot your DB instance, usually for maintenance reasons. For example, if you make certain modifications, or if you change the DB parameter group associated with the DB instance, you must reboot the instance for the changes to take effect. </p> <p>Rebooting a DB instance restarts the database engine service. Rebooting a DB instance results in a momentary outage, during which the DB instance status is set to rebooting. </p> <p>For more information about rebooting, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_RebootInstance.html">Rebooting a DB Instance</a> in the <i>Amazon RDS User Guide.</i> </p>
		/// GET_RebootDBInstance /#Action=RebootDBInstance
		/// </summary>
		/// <param name="DBInstanceIdentifier"><p>The DB instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBInstance.</p> </li> </ul></param>
		/// <param name="ForceFailover"><p> A value that indicates whether the reboot is conducted through a Multi-AZ failover. </p> <p>Constraint: You can't enable force failover if the instance isn't configured for Multi-AZ.</p></param>
		/// <returns>Success</returns>
		public async Task GET_RebootDBInstanceAsync(string DBInstanceIdentifier, bool ForceFailover, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=RebootDBInstance?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : Uri.EscapeDataString(DBInstanceIdentifier))+"&ForceFailover="+ForceFailover+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <note> <p>This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.</p> </note> <p>Associate one or more <code>DBProxyTarget</code> data structures with a <code>DBProxyTargetGroup</code>.</p>
		/// GET_RegisterDBProxyTargets /#Action=RegisterDBProxyTargets
		/// </summary>
		/// <param name="DBProxyName">The identifier of the <code>DBProxy</code> that is associated with the <code>DBProxyTargetGroup</code>.</param>
		/// <param name="TargetGroupName">The identifier of the <code>DBProxyTargetGroup</code>.</param>
		/// <param name="DBInstanceIdentifiers">One or more DB instance identifiers.</param>
		/// <param name="DBClusterIdentifiers">One or more DB cluster identifiers.</param>
		/// <returns>Success</returns>
		public async Task GET_RegisterDBProxyTargetsAsync(string DBProxyName, string TargetGroupName, String[] DBInstanceIdentifiers, String[] DBClusterIdentifiers, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=RegisterDBProxyTargets?DBProxyName=" + (DBProxyName==null? "" : Uri.EscapeDataString(DBProxyName))+"&TargetGroupName=" + (TargetGroupName==null? "" : Uri.EscapeDataString(TargetGroupName))+"&"+String.Join("&", DBInstanceIdentifiers.Select(z => $"DBInstanceIdentifiers={z}"))+"&"+String.Join("&", DBClusterIdentifiers.Select(z => $"DBClusterIdentifiers={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p> Detaches an Aurora secondary cluster from an Aurora global database cluster. The cluster becomes a standalone cluster with read-write capability instead of being read-only and receiving data from a primary cluster in a different region. </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_RemoveFromGlobalCluster /#Action=RemoveFromGlobalCluster
		/// </summary>
		/// <param name="GlobalClusterIdentifier"> The cluster identifier to detach from the Aurora global database cluster. </param>
		/// <param name="DbClusterIdentifier"> The Amazon Resource Name (ARN) identifying the cluster that was detached from the Aurora global database cluster. </param>
		/// <returns>Success</returns>
		public async Task GET_RemoveFromGlobalClusterAsync(string GlobalClusterIdentifier, string DbClusterIdentifier, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=RemoveFromGlobalCluster?GlobalClusterIdentifier=" + (GlobalClusterIdentifier==null? "" : Uri.EscapeDataString(GlobalClusterIdentifier))+"&DbClusterIdentifier=" + (DbClusterIdentifier==null? "" : Uri.EscapeDataString(DbClusterIdentifier))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Disassociates an AWS Identity and Access Management (IAM) role from an Amazon Aurora DB cluster. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Integrating.Authorizing.html">Authorizing Amazon Aurora MySQL to Access Other AWS Services on Your Behalf </a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_RemoveRoleFromDBCluster /#Action=RemoveRoleFromDBCluster
		/// </summary>
		/// <param name="DBClusterIdentifier">The name of the DB cluster to disassociate the IAM role from.</param>
		/// <param name="RoleArn">The Amazon Resource Name (ARN) of the IAM role to disassociate from the Aurora DB cluster, for example <code>arn:aws:iam::123456789012:role/AuroraAccessRole</code>.</param>
		/// <param name="FeatureName">The name of the feature for the DB cluster that the IAM role is to be disassociated from. For the list of supported feature names, see <a>DBEngineVersion</a>.</param>
		/// <returns>Success</returns>
		public async Task GET_RemoveRoleFromDBClusterAsync(string DBClusterIdentifier, string RoleArn, string FeatureName, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=RemoveRoleFromDBCluster?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : Uri.EscapeDataString(DBClusterIdentifier))+"&RoleArn=" + (RoleArn==null? "" : Uri.EscapeDataString(RoleArn))+"&FeatureName=" + (FeatureName==null? "" : Uri.EscapeDataString(FeatureName))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Disassociates an AWS Identity and Access Management (IAM) role from a DB instance.
		/// GET_RemoveRoleFromDBInstance /#Action=RemoveRoleFromDBInstance
		/// </summary>
		/// <param name="DBInstanceIdentifier">The name of the DB instance to disassociate the IAM role from.</param>
		/// <param name="RoleArn">The Amazon Resource Name (ARN) of the IAM role to disassociate from the DB instance, for example <code>arn:aws:iam::123456789012:role/AccessRole</code>.</param>
		/// <param name="FeatureName">The name of the feature for the DB instance that the IAM role is to be disassociated from. For the list of supported feature names, see <code>DBEngineVersion</code>. </param>
		/// <returns>Success</returns>
		public async Task GET_RemoveRoleFromDBInstanceAsync(string DBInstanceIdentifier, string RoleArn, string FeatureName, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=RemoveRoleFromDBInstance?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : Uri.EscapeDataString(DBInstanceIdentifier))+"&RoleArn=" + (RoleArn==null? "" : Uri.EscapeDataString(RoleArn))+"&FeatureName=" + (FeatureName==null? "" : Uri.EscapeDataString(FeatureName))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes a source identifier from an existing RDS event notification subscription.
		/// GET_RemoveSourceIdentifierFromSubscription /#Action=RemoveSourceIdentifierFromSubscription
		/// </summary>
		/// <param name="SubscriptionName">The name of the RDS event notification subscription you want to remove a source identifier from.</param>
		/// <param name="SourceIdentifier"> The source identifier to be removed from the subscription, such as the <b>DB instance identifier</b> for a DB instance or the name of a security group. </param>
		/// <returns>Success</returns>
		public async Task GET_RemoveSourceIdentifierFromSubscriptionAsync(string SubscriptionName, string SourceIdentifier, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=RemoveSourceIdentifierFromSubscription?SubscriptionName=" + (SubscriptionName==null? "" : Uri.EscapeDataString(SubscriptionName))+"&SourceIdentifier=" + (SourceIdentifier==null? "" : Uri.EscapeDataString(SourceIdentifier))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Removes metadata tags from an Amazon RDS resource.</p> <p>For an overview on tagging an Amazon RDS resource, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> </p>
		/// GET_RemoveTagsFromResource /#Action=RemoveTagsFromResource
		/// </summary>
		/// <param name="ResourceName">The Amazon RDS resource that the tags are removed from. This value is an Amazon Resource Name (ARN). For information about creating an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing"> Constructing an ARN for Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </param>
		/// <param name="TagKeys">The tag key (name) of the tag to be removed.</param>
		/// <returns>Success</returns>
		public async Task GET_RemoveTagsFromResourceAsync(string ResourceName, String[] TagKeys, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=RemoveTagsFromResource?ResourceName=" + (ResourceName==null? "" : Uri.EscapeDataString(ResourceName))+"&"+String.Join("&", TagKeys.Select(z => $"TagKeys={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p> Modifies the parameters of a DB cluster parameter group to the default value. To reset specific parameters submit a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire DB cluster parameter group, specify the <code>DBClusterParameterGroupName</code> and <code>ResetAllParameters</code> parameters. </p> <p> When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to <code>pending-reboot</code> to take effect on the next DB instance restart or <code>RebootDBInstance</code> request. You must call <code>RebootDBInstance</code> for every DB instance in your DB cluster that you want the updated static parameter to apply to.</p> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_ResetDBClusterParameterGroup /#Action=ResetDBClusterParameterGroup
		/// </summary>
		/// <param name="DBClusterParameterGroupName">The name of the DB cluster parameter group to reset.</param>
		/// <param name="ResetAllParameters">A value that indicates whether to reset all parameters in the DB cluster parameter group to their default values. You can't use this parameter if there is a list of parameter names specified for the <code>Parameters</code> parameter.</param>
		/// <param name="Parameters">A list of parameter names in the DB cluster parameter group to reset to the default values. You can't use this parameter if the <code>ResetAllParameters</code> parameter is enabled.</param>
		/// <returns>Success</returns>
		public async Task GET_ResetDBClusterParameterGroupAsync(string DBClusterParameterGroupName, bool ResetAllParameters, Parameter[] Parameters, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ResetDBClusterParameterGroup?DBClusterParameterGroupName=" + (DBClusterParameterGroupName==null? "" : Uri.EscapeDataString(DBClusterParameterGroupName))+"&ResetAllParameters="+ResetAllParameters+"&"+String.Join("&", Parameters.Select(z => $"Parameters={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Modifies the parameters of a DB parameter group to the engine/system default value. To reset specific parameters, provide a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire DB parameter group, specify the <code>DBParameterGroup</code> name and <code>ResetAllParameters</code> parameters. When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to <code>pending-reboot</code> to take effect on the next DB instance restart or <code>RebootDBInstance</code> request.
		/// GET_ResetDBParameterGroup /#Action=ResetDBParameterGroup
		/// </summary>
		/// <param name="DBParameterGroupName"><p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must match the name of an existing <code>DBParameterGroup</code>.</p> </li> </ul></param>
		/// <param name="ResetAllParameters"> A value that indicates whether to reset all parameters in the DB parameter group to default values. By default, all parameters in the DB parameter group are reset to default values. </param>
		/// <param name="Parameters"><p>To reset the entire DB parameter group, specify the <code>DBParameterGroup</code> name and <code>ResetAllParameters</code> parameters. To reset specific parameters, provide a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request.</p> <p> <b>MySQL</b> </p> <p>Valid Values (for Apply method): <code>immediate</code> | <code>pending-reboot</code> </p> <p>You can use the immediate value with dynamic parameters only. You can use the <code>pending-reboot</code> value for both dynamic and static parameters, and changes are applied when DB instance reboots.</p> <p> <b>MariaDB</b> </p> <p>Valid Values (for Apply method): <code>immediate</code> | <code>pending-reboot</code> </p> <p>You can use the immediate value with dynamic parameters only. You can use the <code>pending-reboot</code> value for both dynamic and static parameters, and changes are applied when DB instance reboots.</p> <p> <b>Oracle</b> </p> <p>Valid Values (for Apply method): <code>pending-reboot</code> </p></param>
		/// <returns>Success</returns>
		public async Task GET_ResetDBParameterGroupAsync(string DBParameterGroupName, bool ResetAllParameters, Parameter[] Parameters, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ResetDBParameterGroup?DBParameterGroupName=" + (DBParameterGroupName==null? "" : Uri.EscapeDataString(DBParameterGroupName))+"&ResetAllParameters="+ResetAllParameters+"&"+String.Join("&", Parameters.Select(z => $"Parameters={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates an Amazon Aurora DB cluster from data stored in an Amazon S3 bucket. Amazon RDS must be authorized to access the Amazon S3 bucket and the data must be created using the Percona XtraBackup utility as described in <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Migrating.html"> Migrating Data to an Amazon Aurora MySQL DB Cluster</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action only restores the DB cluster, not the DB instances for that DB cluster. You must invoke the <code>CreateDBInstance</code> action to create DB instances for the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>. You can create DB instances only after the <code>RestoreDBClusterFromS3</code> action has completed and the DB cluster is available.</p> </note> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_RestoreDBClusterFromS3 /#Action=RestoreDBClusterFromS3
		/// </summary>
		/// <param name="AvailabilityZones">A list of Availability Zones (AZs) where instances in the restored DB cluster can be created.</param>
		/// <param name="BackupRetentionPeriod"><p>The number of days for which automated backups of the restored DB cluster are retained. You must specify a minimum value of 1.</p> <p>Default: 1</p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 1 to 35</p> </li> </ul></param>
		/// <param name="CharacterSetName">A value that indicates that the restored DB cluster should be associated with the specified CharacterSet.</param>
		/// <param name="DatabaseName">The database name for the restored DB cluster.</param>
		/// <param name="DBClusterIdentifier"><p>The name of the DB cluster to create from the source data in the Amazon S3 bucket. This parameter is isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster1</code> </p></param>
		/// <param name="DBClusterParameterGroupName"><p>The name of the DB cluster parameter group to associate with the restored DB cluster. If this argument is omitted, <code>default.aurora5.6</code> is used. </p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBClusterParameterGroup.</p> </li> </ul></param>
		/// <param name="VpcSecurityGroupIds">A list of EC2 VPC security groups to associate with the restored DB cluster.</param>
		/// <param name="DBSubnetGroupName"><p>A DB subnet group to associate with the restored DB cluster.</p> <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup. </p> <p>Example: <code>mySubnetgroup</code> </p></param>
		/// <param name="Engine"><p>The name of the database engine to be used for the restored DB cluster.</p> <p>Valid Values: <code>aurora</code>, <code>aurora-postgresql</code> </p></param>
		/// <param name="EngineVersion"><p>The version number of the database engine to use.</p> <p>To list all of the available engine versions for <code>aurora</code> (for MySQL 5.6-compatible Aurora), use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora --query "DBEngineVersions[].EngineVersion"</code> </p> <p>To list all of the available engine versions for <code>aurora-mysql</code> (for MySQL 5.7-compatible Aurora), use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"</code> </p> <p>To list all of the available engine versions for <code>aurora-postgresql</code>, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"</code> </p> <p> <b>Aurora MySQL</b> </p> <p>Example: <code>5.6.10a</code>, <code>5.6.mysql_aurora.1.19.2</code>, <code>5.7.12</code>, <code>5.7.mysql_aurora.2.04.5</code> </p> <p> <b>Aurora PostgreSQL</b> </p> <p>Example: <code>9.6.3</code>, <code>10.7</code> </p></param>
		/// <param name="Port"><p>The port number on which the instances in the restored DB cluster accept connections.</p> <p> Default: <code>3306</code> </p></param>
		/// <param name="MasterUsername"><p>The name of the master user for the restored DB cluster.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 16 letters or numbers.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't be a reserved word for the chosen database engine.</p> </li> </ul></param>
		/// <param name="MasterUserPassword"><p>The password for the master database user. This password can contain any printable ASCII character except "/", """, or "@".</p> <p>Constraints: Must contain from 8 to 41 characters.</p></param>
		/// <param name="OptionGroupName"><p>A value that indicates that the restored DB cluster should be associated with the specified option group.</p> <p>Permanent options can't be removed from an option group. An option group can't be removed from a DB cluster once it is associated with a DB cluster.</p></param>
		/// <param name="PreferredBackupWindow"><p>The daily time range during which automated backups are created if automated backups are enabled using the <code>BackupRetentionPeriod</code> parameter. </p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region. To see the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora"> Adjusting the Preferred Maintenance Window</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul></param>
		/// <param name="PreferredMaintenanceWindow"><p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p> <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. To see the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora"> Adjusting the Preferred Maintenance Window</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p> <p>Constraints: Minimum 30-minute window.</p></param>
		/// <param name="StorageEncrypted">A value that indicates whether the restored DB cluster is encrypted.</param>
		/// <param name="KmsKeyId"><p>The AWS KMS key identifier for an encrypted DB cluster.</p> <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are creating a DB cluster with the same AWS account that owns the KMS encryption key used to encrypt the new DB cluster, then you can use the KMS key alias instead of the ARN for the KM encryption key.</p> <p>If the StorageEncrypted parameter is enabled, and you do not specify a value for the <code>KmsKeyId</code> parameter, then Amazon RDS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.</p></param>
		/// <param name="EnableIAMDatabaseAuthentication"><p>A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication</a> in the <i>Amazon Aurora User Guide.</i> </p></param>
		/// <param name="SourceEngine"><p>The identifier for the database engine that was backed up to create the files stored in the Amazon S3 bucket. </p> <p>Valid values: <code>mysql</code> </p></param>
		/// <param name="SourceEngineVersion"><p>The version of the database that the backup files were created from.</p> <p>MySQL version 5.5 and 5.6 are supported. </p> <p>Example: <code>5.6.22</code> </p></param>
		/// <param name="S3BucketName">The name of the Amazon S3 bucket that contains the data used to create the Amazon Aurora DB cluster.</param>
		/// <param name="S3Prefix">The prefix for all of the file names that contain the data used to create the Amazon Aurora DB cluster. If you do not specify a <b>SourceS3Prefix</b> value, then the Amazon Aurora DB cluster is created by using all of the files in the Amazon S3 bucket.</param>
		/// <param name="S3IngestionRoleArn">The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that authorizes Amazon RDS to access the Amazon S3 bucket on your behalf.</param>
		/// <param name="BacktrackWindow"><p>The target backtrack window, in seconds. To disable backtracking, set this value to 0.</p> <p>Default: 0</p> <p>Constraints:</p> <ul> <li> <p>If specified, this value must be set to a number from 0 to 259,200 (72 hours).</p> </li> </ul></param>
		/// <param name="EnableCloudwatchLogsExports">The list of logs that the restored DB cluster is to export to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon Aurora User Guide</i>.</param>
		/// <param name="DeletionProtection">A value that indicates whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled. </param>
		/// <param name="CopyTagsToSnapshot">A value that indicates whether to copy all tags from the restored DB cluster to snapshots of the restored DB cluster. The default is not to copy them.</param>
		/// <param name="Domain"><p>Specify the Active Directory directory ID to restore the DB cluster in. The domain must be created prior to this operation. </p> <p> For Amazon Aurora DB clusters, Amazon RDS can use Kerberos Authentication to authenticate users that connect to the DB cluster. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html">Kerberos Authentication</a> in the <i>Amazon Aurora User Guide</i>. </p></param>
		/// <param name="DomainIAMRoleName">Specify the name of the IAM role to be used when making API calls to the Directory Service.</param>
		/// <returns>Success</returns>
		public async Task GET_RestoreDBClusterFromS3Async(
					String[] AvailabilityZones, 
					int BackupRetentionPeriod, 
					string CharacterSetName, 
					string DatabaseName, 
					string DBClusterIdentifier, 
					string DBClusterParameterGroupName, 
					String[] VpcSecurityGroupIds, 
					string DBSubnetGroupName, 
					string Engine, 
					string EngineVersion, 
					int Port, 
					string MasterUsername, 
					string MasterUserPassword, 
					string OptionGroupName, 
					string PreferredBackupWindow, 
					string PreferredMaintenanceWindow, 
					Tag[] Tags, 
					bool StorageEncrypted, 
					string KmsKeyId, 
					bool EnableIAMDatabaseAuthentication, 
					string SourceEngine, 
					string SourceEngineVersion, 
					string S3BucketName, 
					string S3Prefix, 
					string S3IngestionRoleArn, 
					int BacktrackWindow, 
					String[] EnableCloudwatchLogsExports, 
					bool DeletionProtection, 
					bool CopyTagsToSnapshot, 
					string Domain, 
					string DomainIAMRoleName, 
					string Action, 
					string Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=RestoreDBClusterFromS3?"+String.Join("&", AvailabilityZones.Select(z => $"AvailabilityZones={z}"))+"&BackupRetentionPeriod="+BackupRetentionPeriod+"&CharacterSetName=" + (CharacterSetName==null? "" : Uri.EscapeDataString(CharacterSetName))+"&DatabaseName=" + (DatabaseName==null? "" : Uri.EscapeDataString(DatabaseName))+"&DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : Uri.EscapeDataString(DBClusterIdentifier))+"&DBClusterParameterGroupName=" + (DBClusterParameterGroupName==null? "" : Uri.EscapeDataString(DBClusterParameterGroupName))+"&"+String.Join("&", VpcSecurityGroupIds.Select(z => $"VpcSecurityGroupIds={z}"))+"&DBSubnetGroupName=" + (DBSubnetGroupName==null? "" : Uri.EscapeDataString(DBSubnetGroupName))+"&Engine=" + (Engine==null? "" : Uri.EscapeDataString(Engine))+"&EngineVersion=" + (EngineVersion==null? "" : Uri.EscapeDataString(EngineVersion))+"&Port="+Port+"&MasterUsername=" + (MasterUsername==null? "" : Uri.EscapeDataString(MasterUsername))+"&MasterUserPassword=" + (MasterUserPassword==null? "" : Uri.EscapeDataString(MasterUserPassword))+"&OptionGroupName=" + (OptionGroupName==null? "" : Uri.EscapeDataString(OptionGroupName))+"&PreferredBackupWindow=" + (PreferredBackupWindow==null? "" : Uri.EscapeDataString(PreferredBackupWindow))+"&PreferredMaintenanceWindow=" + (PreferredMaintenanceWindow==null? "" : Uri.EscapeDataString(PreferredMaintenanceWindow))+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&StorageEncrypted="+StorageEncrypted+"&KmsKeyId=" + (KmsKeyId==null? "" : Uri.EscapeDataString(KmsKeyId))+"&EnableIAMDatabaseAuthentication="+EnableIAMDatabaseAuthentication+"&SourceEngine=" + (SourceEngine==null? "" : Uri.EscapeDataString(SourceEngine))+"&SourceEngineVersion=" + (SourceEngineVersion==null? "" : Uri.EscapeDataString(SourceEngineVersion))+"&S3BucketName=" + (S3BucketName==null? "" : Uri.EscapeDataString(S3BucketName))+"&S3Prefix=" + (S3Prefix==null? "" : Uri.EscapeDataString(S3Prefix))+"&S3IngestionRoleArn=" + (S3IngestionRoleArn==null? "" : Uri.EscapeDataString(S3IngestionRoleArn))+"&BacktrackWindow="+BacktrackWindow+"&"+String.Join("&", EnableCloudwatchLogsExports.Select(z => $"EnableCloudwatchLogsExports={z}"))+"&DeletionProtection="+DeletionProtection+"&CopyTagsToSnapshot="+CopyTagsToSnapshot+"&Domain=" + (Domain==null? "" : Uri.EscapeDataString(Domain))+"&DomainIAMRoleName=" + (DomainIAMRoleName==null? "" : Uri.EscapeDataString(DomainIAMRoleName))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a new DB cluster from a DB snapshot or DB cluster snapshot. This action only applies to Aurora DB clusters.</p> <p>The target DB cluster is created from the source snapshot with a default configuration. If you don't specify a security group, the new DB cluster is associated with the default security group.</p> <note> <p>This action only restores the DB cluster, not the DB instances for that DB cluster. You must invoke the <code>CreateDBInstance</code> action to create DB instances for the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>. You can create DB instances only after the <code>RestoreDBClusterFromSnapshot</code> action has completed and the DB cluster is available.</p> </note> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_RestoreDBClusterFromSnapshot /#Action=RestoreDBClusterFromSnapshot
		/// </summary>
		/// <param name="AvailabilityZones">Provides the list of Availability Zones (AZs) where instances in the restored DB cluster can be created.</param>
		/// <param name="DBClusterIdentifier"><p>The name of the DB cluster to create from the DB snapshot or DB cluster snapshot. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-snapshot-id</code> </p></param>
		/// <param name="SnapshotIdentifier"><p>The identifier for the DB snapshot or DB cluster snapshot to restore from.</p> <p>You can use either the name or the Amazon Resource Name (ARN) to specify a DB cluster snapshot. However, you can use only the ARN to specify a DB snapshot.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing Snapshot.</p> </li> </ul></param>
		/// <param name="Engine"><p>The database engine to use for the new DB cluster.</p> <p>Default: The same as source</p> <p>Constraint: Must be compatible with the engine of the source</p></param>
		/// <param name="EngineVersion"><p>The version of the database engine to use for the new DB cluster.</p> <p>To list all of the available engine versions for <code>aurora</code> (for MySQL 5.6-compatible Aurora), use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora --query "DBEngineVersions[].EngineVersion"</code> </p> <p>To list all of the available engine versions for <code>aurora-mysql</code> (for MySQL 5.7-compatible Aurora), use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"</code> </p> <p>To list all of the available engine versions for <code>aurora-postgresql</code>, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"</code> </p> <note> <p>If you aren't using the default engine version, then you must specify the engine version.</p> </note> <p> <b>Aurora MySQL</b> </p> <p>Example: <code>5.6.10a</code>, <code>5.6.mysql_aurora.1.19.2</code>, <code>5.7.12</code>, <code>5.7.mysql_aurora.2.04.5</code> </p> <p> <b>Aurora PostgreSQL</b> </p> <p>Example: <code>9.6.3</code>, <code>10.7</code> </p></param>
		/// <param name="Port"><p>The port number on which the new DB cluster accepts connections.</p> <p>Constraints: This value must be <code>1150-65535</code> </p> <p>Default: The same port as the original DB cluster.</p></param>
		/// <param name="DBSubnetGroupName"><p>The name of the DB subnet group to use for the new DB cluster.</p> <p>Constraints: If supplied, must match the name of an existing DB subnet group.</p> <p>Example: <code>mySubnetgroup</code> </p></param>
		/// <param name="DatabaseName">The database name for the restored DB cluster.</param>
		/// <param name="OptionGroupName">The name of the option group to use for the restored DB cluster.</param>
		/// <param name="VpcSecurityGroupIds">A list of VPC security groups that the new DB cluster will belong to.</param>
		/// <param name="Tags">The tags to be assigned to the restored DB cluster.</param>
		/// <param name="KmsKeyId"><p>The AWS KMS key identifier to use when restoring an encrypted DB cluster from a DB snapshot or DB cluster snapshot.</p> <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are restoring a DB cluster with the same AWS account that owns the KMS encryption key used to encrypt the new DB cluster, then you can use the KMS key alias instead of the ARN for the KMS encryption key.</p> <p>If you don't specify a value for the <code>KmsKeyId</code> parameter, then the following occurs:</p> <ul> <li> <p>If the DB snapshot or DB cluster snapshot in <code>SnapshotIdentifier</code> is encrypted, then the restored DB cluster is encrypted using the KMS key that was used to encrypt the DB snapshot or DB cluster snapshot.</p> </li> <li> <p>If the DB snapshot or DB cluster snapshot in <code>SnapshotIdentifier</code> isn't encrypted, then the restored DB cluster isn't encrypted.</p> </li> </ul></param>
		/// <param name="EnableIAMDatabaseAuthentication"><p>A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication</a> in the <i>Amazon Aurora User Guide.</i> </p></param>
		/// <param name="BacktrackWindow"><p>The target backtrack window, in seconds. To disable backtracking, set this value to 0.</p> <p>Default: 0</p> <p>Constraints:</p> <ul> <li> <p>If specified, this value must be set to a number from 0 to 259,200 (72 hours).</p> </li> </ul></param>
		/// <param name="EnableCloudwatchLogsExports">The list of logs that the restored DB cluster is to export to Amazon CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs </a> in the <i>Amazon Aurora User Guide</i>.</param>
		/// <param name="EngineMode">The DB engine mode of the DB cluster, either <code>provisioned</code>, <code>serverless</code>, <code>parallelquery</code>, <code>global</code>, or <code>multimaster</code>.</param>
		/// <param name="ScalingConfiguration">For DB clusters in <code>serverless</code> DB engine mode, the scaling properties of the DB cluster.</param>
		/// <param name="DBClusterParameterGroupName"><p>The name of the DB cluster parameter group to associate with this DB cluster. If this argument is omitted, the default DB cluster parameter group for the specified engine is used.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing default DB cluster parameter group.</p> </li> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul></param>
		/// <param name="DeletionProtection">A value that indicates whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled. </param>
		/// <param name="CopyTagsToSnapshot">A value that indicates whether to copy all tags from the restored DB cluster to snapshots of the restored DB cluster. The default is not to copy them.</param>
		/// <param name="Domain">Specify the Active Directory directory ID to restore the DB cluster in. The domain must be created prior to this operation. </param>
		/// <param name="DomainIAMRoleName">Specify the name of the IAM role to be used when making API calls to the Directory Service.</param>
		/// <returns>Success</returns>
		public async Task GET_RestoreDBClusterFromSnapshotAsync(
					String[] AvailabilityZones, 
					string DBClusterIdentifier, 
					string SnapshotIdentifier, 
					string Engine, 
					string EngineVersion, 
					int Port, 
					string DBSubnetGroupName, 
					string DatabaseName, 
					string OptionGroupName, 
					String[] VpcSecurityGroupIds, 
					Tag[] Tags, 
					string KmsKeyId, 
					bool EnableIAMDatabaseAuthentication, 
					int BacktrackWindow, 
					String[] EnableCloudwatchLogsExports, 
					string EngineMode, 
					string ScalingConfiguration, 
					string DBClusterParameterGroupName, 
					bool DeletionProtection, 
					bool CopyTagsToSnapshot, 
					string Domain, 
					string DomainIAMRoleName, 
					string Action, 
					string Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=RestoreDBClusterFromSnapshot?"+String.Join("&", AvailabilityZones.Select(z => $"AvailabilityZones={z}"))+"&DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : Uri.EscapeDataString(DBClusterIdentifier))+"&SnapshotIdentifier=" + (SnapshotIdentifier==null? "" : Uri.EscapeDataString(SnapshotIdentifier))+"&Engine=" + (Engine==null? "" : Uri.EscapeDataString(Engine))+"&EngineVersion=" + (EngineVersion==null? "" : Uri.EscapeDataString(EngineVersion))+"&Port="+Port+"&DBSubnetGroupName=" + (DBSubnetGroupName==null? "" : Uri.EscapeDataString(DBSubnetGroupName))+"&DatabaseName=" + (DatabaseName==null? "" : Uri.EscapeDataString(DatabaseName))+"&OptionGroupName=" + (OptionGroupName==null? "" : Uri.EscapeDataString(OptionGroupName))+"&"+String.Join("&", VpcSecurityGroupIds.Select(z => $"VpcSecurityGroupIds={z}"))+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&KmsKeyId=" + (KmsKeyId==null? "" : Uri.EscapeDataString(KmsKeyId))+"&EnableIAMDatabaseAuthentication="+EnableIAMDatabaseAuthentication+"&BacktrackWindow="+BacktrackWindow+"&"+String.Join("&", EnableCloudwatchLogsExports.Select(z => $"EnableCloudwatchLogsExports={z}"))+"&EngineMode=" + (EngineMode==null? "" : Uri.EscapeDataString(EngineMode))+"&ScalingConfiguration=" + (ScalingConfiguration==null? "" : Uri.EscapeDataString(ScalingConfiguration))+"&DBClusterParameterGroupName=" + (DBClusterParameterGroupName==null? "" : Uri.EscapeDataString(DBClusterParameterGroupName))+"&DeletionProtection="+DeletionProtection+"&CopyTagsToSnapshot="+CopyTagsToSnapshot+"&Domain=" + (Domain==null? "" : Uri.EscapeDataString(Domain))+"&DomainIAMRoleName=" + (DomainIAMRoleName==null? "" : Uri.EscapeDataString(DomainIAMRoleName))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Restores a DB cluster to an arbitrary point in time. Users can restore to any point in time before <code>LatestRestorableTime</code> for up to <code>BackupRetentionPeriod</code> days. The target DB cluster is created from the source DB cluster with the same configuration as the original DB cluster, except that the new DB cluster is created with the default DB security group. </p> <note> <p>This action only restores the DB cluster, not the DB instances for that DB cluster. You must invoke the <code>CreateDBInstance</code> action to create DB instances for the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>. You can create DB instances only after the <code>RestoreDBClusterToPointInTime</code> action has completed and the DB cluster is available.</p> </note> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_RestoreDBClusterToPointInTime /#Action=RestoreDBClusterToPointInTime
		/// </summary>
		/// <param name="DBClusterIdentifier"><p>The name of the new DB cluster to be created.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul></param>
		/// <param name="RestoreType"><p>The type of restore to be performed. You can specify one of the following values:</p> <ul> <li> <p> <code>full-copy</code> - The new DB cluster is restored as a full copy of the source DB cluster.</p> </li> <li> <p> <code>copy-on-write</code> - The new DB cluster is restored as a clone of the source DB cluster.</p> </li> </ul> <p>Constraints: You can't specify <code>copy-on-write</code> if the engine version of the source DB cluster is earlier than 1.11.</p> <p>If you don't specify a <code>RestoreType</code> value, then the new DB cluster is restored as a full copy of the source DB cluster.</p></param>
		/// <param name="SourceDBClusterIdentifier"><p>The identifier of the source DB cluster from which to restore.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBCluster.</p> </li> </ul></param>
		/// <param name="RestoreToTime"><p>The date and time to restore the DB cluster to.</p> <p>Valid Values: Value must be a time in Universal Coordinated Time (UTC) format</p> <p>Constraints:</p> <ul> <li> <p>Must be before the latest restorable time for the DB instance</p> </li> <li> <p>Must be specified if <code>UseLatestRestorableTime</code> parameter isn't provided</p> </li> <li> <p>Can't be specified if the <code>UseLatestRestorableTime</code> parameter is enabled</p> </li> <li> <p>Can't be specified if the <code>RestoreType</code> parameter is <code>copy-on-write</code> </p> </li> </ul> <p>Example: <code>2015-03-07T23:45:00Z</code> </p></param>
		/// <param name="UseLatestRestorableTime"><p>A value that indicates whether to restore the DB cluster to the latest restorable backup time. By default, the DB cluster isn't restored to the latest restorable backup time. </p> <p>Constraints: Can't be specified if <code>RestoreToTime</code> parameter is provided.</p></param>
		/// <param name="Port"><p>The port number on which the new DB cluster accepts connections.</p> <p>Constraints: A value from <code>1150-65535</code>. </p> <p>Default: The default port for the engine.</p></param>
		/// <param name="DBSubnetGroupName"><p>The DB subnet group name to use for the new DB cluster.</p> <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p> <p>Example: <code>mySubnetgroup</code> </p></param>
		/// <param name="OptionGroupName">The name of the option group for the new DB cluster.</param>
		/// <param name="VpcSecurityGroupIds">A list of VPC security groups that the new DB cluster belongs to.</param>
		/// <param name="KmsKeyId"><p>The AWS KMS key identifier to use when restoring an encrypted DB cluster from an encrypted DB cluster.</p> <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are restoring a DB cluster with the same AWS account that owns the KMS encryption key used to encrypt the new DB cluster, then you can use the KMS key alias instead of the ARN for the KMS encryption key.</p> <p>You can restore to a new DB cluster and encrypt the new DB cluster with a KMS key that is different than the KMS key used to encrypt the source DB cluster. The new DB cluster is encrypted with the KMS key identified by the <code>KmsKeyId</code> parameter.</p> <p>If you don't specify a value for the <code>KmsKeyId</code> parameter, then the following occurs:</p> <ul> <li> <p>If the DB cluster is encrypted, then the restored DB cluster is encrypted using the KMS key that was used to encrypt the source DB cluster.</p> </li> <li> <p>If the DB cluster isn't encrypted, then the restored DB cluster isn't encrypted.</p> </li> </ul> <p>If <code>DBClusterIdentifier</code> refers to a DB cluster that isn't encrypted, then the restore request is rejected.</p></param>
		/// <param name="EnableIAMDatabaseAuthentication"><p>A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication</a> in the <i>Amazon Aurora User Guide.</i> </p></param>
		/// <param name="BacktrackWindow"><p>The target backtrack window, in seconds. To disable backtracking, set this value to 0.</p> <p>Default: 0</p> <p>Constraints:</p> <ul> <li> <p>If specified, this value must be set to a number from 0 to 259,200 (72 hours).</p> </li> </ul></param>
		/// <param name="EnableCloudwatchLogsExports">The list of logs that the restored DB cluster is to export to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon Aurora User Guide</i>.</param>
		/// <param name="DBClusterParameterGroupName"><p>The name of the DB cluster parameter group to associate with this DB cluster. If this argument is omitted, the default DB cluster parameter group for the specified engine is used.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DB cluster parameter group.</p> </li> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul></param>
		/// <param name="DeletionProtection">A value that indicates whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled. </param>
		/// <param name="CopyTagsToSnapshot">A value that indicates whether to copy all tags from the restored DB cluster to snapshots of the restored DB cluster. The default is not to copy them.</param>
		/// <param name="Domain"><p>Specify the Active Directory directory ID to restore the DB cluster in. The domain must be created prior to this operation. </p> <p> For Amazon Aurora DB clusters, Amazon RDS can use Kerberos Authentication to authenticate users that connect to the DB cluster. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html">Kerberos Authentication</a> in the <i>Amazon Aurora User Guide</i>. </p></param>
		/// <param name="DomainIAMRoleName">Specify the name of the IAM role to be used when making API calls to the Directory Service.</param>
		/// <returns>Success</returns>
		public async Task GET_RestoreDBClusterToPointInTimeAsync(
					string DBClusterIdentifier, 
					string RestoreType, 
					string SourceDBClusterIdentifier, 
					System.DateTimeOffset RestoreToTime, 
					bool UseLatestRestorableTime, 
					int Port, 
					string DBSubnetGroupName, 
					string OptionGroupName, 
					String[] VpcSecurityGroupIds, 
					Tag[] Tags, 
					string KmsKeyId, 
					bool EnableIAMDatabaseAuthentication, 
					int BacktrackWindow, 
					String[] EnableCloudwatchLogsExports, 
					string DBClusterParameterGroupName, 
					bool DeletionProtection, 
					bool CopyTagsToSnapshot, 
					string Domain, 
					string DomainIAMRoleName, 
					string Action, 
					string Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=RestoreDBClusterToPointInTime?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : Uri.EscapeDataString(DBClusterIdentifier))+"&RestoreType=" + (RestoreType==null? "" : Uri.EscapeDataString(RestoreType))+"&SourceDBClusterIdentifier=" + (SourceDBClusterIdentifier==null? "" : Uri.EscapeDataString(SourceDBClusterIdentifier))+"&RestoreToTime=" + RestoreToTime.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&UseLatestRestorableTime="+UseLatestRestorableTime+"&Port="+Port+"&DBSubnetGroupName=" + (DBSubnetGroupName==null? "" : Uri.EscapeDataString(DBSubnetGroupName))+"&OptionGroupName=" + (OptionGroupName==null? "" : Uri.EscapeDataString(OptionGroupName))+"&"+String.Join("&", VpcSecurityGroupIds.Select(z => $"VpcSecurityGroupIds={z}"))+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&KmsKeyId=" + (KmsKeyId==null? "" : Uri.EscapeDataString(KmsKeyId))+"&EnableIAMDatabaseAuthentication="+EnableIAMDatabaseAuthentication+"&BacktrackWindow="+BacktrackWindow+"&"+String.Join("&", EnableCloudwatchLogsExports.Select(z => $"EnableCloudwatchLogsExports={z}"))+"&DBClusterParameterGroupName=" + (DBClusterParameterGroupName==null? "" : Uri.EscapeDataString(DBClusterParameterGroupName))+"&DeletionProtection="+DeletionProtection+"&CopyTagsToSnapshot="+CopyTagsToSnapshot+"&Domain=" + (Domain==null? "" : Uri.EscapeDataString(Domain))+"&DomainIAMRoleName=" + (DomainIAMRoleName==null? "" : Uri.EscapeDataString(DomainIAMRoleName))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a new DB instance from a DB snapshot. The target database is created from the source database restore point with the most of original configuration with the default security group and the default DB parameter group. By default, the new DB instance is created as a single-AZ deployment except when the instance is a SQL Server instance that has an option group that is associated with mirroring; in this case, the instance becomes a mirrored AZ deployment and not a single-AZ deployment.</p> <p>If your intent is to replace your original DB instance with the new, restored DB instance, then rename your original DB instance before you call the RestoreDBInstanceFromDBSnapshot action. RDS doesn't allow two DB instances with the same name. Once you have renamed your original DB instance with a different identifier, then you can pass the original name of the DB instance as the DBInstanceIdentifier in the call to the RestoreDBInstanceFromDBSnapshot action. The result is that you will replace the original DB instance with the DB instance created from the snapshot.</p> <p>If you are restoring from a shared manual DB snapshot, the <code>DBSnapshotIdentifier</code> must be the ARN of the shared DB snapshot.</p> <note> <p>This command doesn't apply to Aurora MySQL and Aurora PostgreSQL. For Aurora, use <code>RestoreDBClusterFromSnapshot</code>.</p> </note>
		/// GET_RestoreDBInstanceFromDBSnapshot /#Action=RestoreDBInstanceFromDBSnapshot
		/// </summary>
		/// <param name="DBInstanceIdentifier"><p>Name of the DB instance to create from the DB snapshot. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 numbers, letters, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-snapshot-id</code> </p></param>
		/// <param name="DBSnapshotIdentifier"><p>The identifier for the DB snapshot to restore from.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBSnapshot.</p> </li> <li> <p>If you are restoring from a shared manual DB snapshot, the <code>DBSnapshotIdentifier</code> must be the ARN of the shared DB snapshot.</p> </li> </ul></param>
		/// <param name="DBInstanceClass"><p>The compute and memory capacity of the Amazon RDS DB instance, for example, <code>db.m4.large</code>. Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB Instance Class</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Default: The same DBInstanceClass as the original DB instance.</p></param>
		/// <param name="Port"><p>The port number on which the database accepts connections.</p> <p>Default: The same port as the original DB instance</p> <p>Constraints: Value must be <code>1150-65535</code> </p></param>
		/// <param name="AvailabilityZone"><p>The Availability Zone (AZ) where the DB instance will be created.</p> <p>Default: A random, system-chosen Availability Zone.</p> <p>Constraint: You can't specify the <code>AvailabilityZone</code> parameter if the DB instance is a Multi-AZ deployment.</p> <p>Example: <code>us-east-1a</code> </p></param>
		/// <param name="DBSubnetGroupName"><p>The DB subnet group name to use for the new instance.</p> <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p> <p>Example: <code>mySubnetgroup</code> </p></param>
		/// <param name="MultiAZ"><p>A value that indicates whether the DB instance is a Multi-AZ deployment.</p> <p>Constraint: You can't specify the <code>AvailabilityZone</code> parameter if the DB instance is a Multi-AZ deployment.</p></param>
		/// <param name="PubliclyAccessible">A value that indicates whether the DB instance is publicly accessible. When the DB instance is publicly accessible, it is an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. When the DB instance isn't publicly accessible, it is an internal instance with a DNS name that resolves to a private IP address. For more information, see <a>CreateDBInstance</a>.</param>
		/// <param name="AutoMinorVersionUpgrade">A value that indicates whether minor version upgrades are applied automatically to the DB instance during the maintenance window.</param>
		/// <param name="LicenseModel"><p>License model information for the restored DB instance.</p> <p>Default: Same as source.</p> <p> Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p></param>
		/// <param name="DBName"><p>The database name for the restored DB instance.</p> <note> <p>This parameter doesn't apply to the MySQL, PostgreSQL, or MariaDB engines.</p> </note></param>
		/// <param name="Engine"><p>The database engine to use for the new instance.</p> <p>Default: The same as source</p> <p>Constraint: Must be compatible with the engine of the source. For example, you can restore a MariaDB 10.1 DB instance from a MySQL 5.6 snapshot.</p> <p>Valid Values:</p> <ul> <li> <p> <code>mariadb</code> </p> </li> <li> <p> <code>mysql</code> </p> </li> <li> <p> <code>oracle-ee</code> </p> </li> <li> <p> <code>oracle-se2</code> </p> </li> <li> <p> <code>oracle-se1</code> </p> </li> <li> <p> <code>oracle-se</code> </p> </li> <li> <p> <code>postgres</code> </p> </li> <li> <p> <code>sqlserver-ee</code> </p> </li> <li> <p> <code>sqlserver-se</code> </p> </li> <li> <p> <code>sqlserver-ex</code> </p> </li> <li> <p> <code>sqlserver-web</code> </p> </li> </ul></param>
		/// <param name="Iops"><p>Specifies the amount of provisioned IOPS for the DB instance, expressed in I/O operations per second. If this parameter isn't specified, the IOPS value is taken from the backup. If this parameter is set to 0, the new instance is converted to a non-PIOPS instance. The conversion takes additional time, though your DB instance is available for connections before the conversion starts. </p> <p>The provisioned IOPS value must follow the requirements for your database engine. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS">Amazon RDS Provisioned IOPS Storage to Improve Performance</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Constraints: Must be an integer greater than 1000.</p></param>
		/// <param name="OptionGroupName"><p>The name of the option group to be used for the restored DB instance.</p> <p>Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't be removed from an option group, and that option group can't be removed from a DB instance once it is associated with a DB instance</p></param>
		/// <param name="StorageType"><p>Specifies the storage type to be associated with the DB instance.</p> <p> Valid values: <code>standard | gp2 | io1</code> </p> <p> If you specify <code>io1</code>, you must also include a value for the <code>Iops</code> parameter. </p> <p> Default: <code>io1</code> if the <code>Iops</code> parameter is specified, otherwise <code>gp2</code> </p></param>
		/// <param name="TdeCredentialArn">The ARN from the key store with which to associate the instance for TDE encryption.</param>
		/// <param name="TdeCredentialPassword">The password for the given ARN from the key store in order to access the device.</param>
		/// <param name="VpcSecurityGroupIds"><p> A list of EC2 VPC security groups to associate with this DB instance. </p> <p> Default: The default EC2 VPC security group for the DB subnet group's VPC. </p></param>
		/// <param name="Domain"><p>Specify the Active Directory directory ID to restore the DB instance in. The domain must be created prior to this operation. Currently, only Microsoft SQL Server and Oracle DB instances can be created in an Active Directory Domain. </p> <p>For Microsoft SQL Server DB instances, Amazon RDS can use Windows Authentication to authenticate users that connect to the DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_SQLServerWinAuth.html"> Using Windows Authentication with an Amazon RDS DB Instance Running Microsoft SQL Server</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For Oracle DB instances, Amazon RDS can use Kerberos Authentication to authenticate users that connect to the DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-kerberos.html"> Using Kerberos Authentication with Amazon RDS for Oracle</a> in the <i>Amazon RDS User Guide</i>.</p></param>
		/// <param name="CopyTagsToSnapshot">A value that indicates whether to copy all tags from the restored DB instance to snapshots of the DB instance. By default, tags are not copied.</param>
		/// <param name="DomainIAMRoleName">Specify the name of the IAM role to be used when making API calls to the Directory Service.</param>
		/// <param name="EnableIAMDatabaseAuthentication"><p>A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled. For information about the supported DB engines, see <a>CreateDBInstance</a>.</p> <p>For more information about IAM database authentication, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication for MySQL and PostgreSQL</a> in the <i>Amazon RDS User Guide.</i> </p></param>
		/// <param name="EnableCloudwatchLogsExports">The list of logs that the restored DB instance is to export to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon Aurora User Guide</i>.</param>
		/// <param name="ProcessorFeatures">The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.</param>
		/// <param name="UseDefaultProcessorFeatures">A value that indicates whether the DB instance class of the DB instance uses its default processor features.</param>
		/// <param name="DBParameterGroupName"><p>The name of the DB parameter group to associate with this DB instance.</p> <p>If you do not specify a value for <code>DBParameterGroupName</code>, then the default <code>DBParameterGroup</code> for the specified DB engine is used.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBParameterGroup.</p> </li> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul></param>
		/// <param name="DeletionProtection">A value that indicates whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html"> Deleting a DB Instance</a>. </param>
		/// <returns>Success</returns>
		public async Task GET_RestoreDBInstanceFromDBSnapshotAsync(
					string DBInstanceIdentifier, 
					string DBSnapshotIdentifier, 
					string DBInstanceClass, 
					int Port, 
					string AvailabilityZone, 
					string DBSubnetGroupName, 
					bool MultiAZ, 
					bool PubliclyAccessible, 
					bool AutoMinorVersionUpgrade, 
					string LicenseModel, 
					string DBName, 
					string Engine, 
					int Iops, 
					string OptionGroupName, 
					Tag[] Tags, 
					string StorageType, 
					string TdeCredentialArn, 
					string TdeCredentialPassword, 
					String[] VpcSecurityGroupIds, 
					string Domain, 
					bool CopyTagsToSnapshot, 
					string DomainIAMRoleName, 
					bool EnableIAMDatabaseAuthentication, 
					String[] EnableCloudwatchLogsExports, 
					ProcessorFeature[] ProcessorFeatures, 
					bool UseDefaultProcessorFeatures, 
					string DBParameterGroupName, 
					bool DeletionProtection, 
					string Action, 
					string Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=RestoreDBInstanceFromDBSnapshot?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : Uri.EscapeDataString(DBInstanceIdentifier))+"&DBSnapshotIdentifier=" + (DBSnapshotIdentifier==null? "" : Uri.EscapeDataString(DBSnapshotIdentifier))+"&DBInstanceClass=" + (DBInstanceClass==null? "" : Uri.EscapeDataString(DBInstanceClass))+"&Port="+Port+"&AvailabilityZone=" + (AvailabilityZone==null? "" : Uri.EscapeDataString(AvailabilityZone))+"&DBSubnetGroupName=" + (DBSubnetGroupName==null? "" : Uri.EscapeDataString(DBSubnetGroupName))+"&MultiAZ="+MultiAZ+"&PubliclyAccessible="+PubliclyAccessible+"&AutoMinorVersionUpgrade="+AutoMinorVersionUpgrade+"&LicenseModel=" + (LicenseModel==null? "" : Uri.EscapeDataString(LicenseModel))+"&DBName=" + (DBName==null? "" : Uri.EscapeDataString(DBName))+"&Engine=" + (Engine==null? "" : Uri.EscapeDataString(Engine))+"&Iops="+Iops+"&OptionGroupName=" + (OptionGroupName==null? "" : Uri.EscapeDataString(OptionGroupName))+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&StorageType=" + (StorageType==null? "" : Uri.EscapeDataString(StorageType))+"&TdeCredentialArn=" + (TdeCredentialArn==null? "" : Uri.EscapeDataString(TdeCredentialArn))+"&TdeCredentialPassword=" + (TdeCredentialPassword==null? "" : Uri.EscapeDataString(TdeCredentialPassword))+"&"+String.Join("&", VpcSecurityGroupIds.Select(z => $"VpcSecurityGroupIds={z}"))+"&Domain=" + (Domain==null? "" : Uri.EscapeDataString(Domain))+"&CopyTagsToSnapshot="+CopyTagsToSnapshot+"&DomainIAMRoleName=" + (DomainIAMRoleName==null? "" : Uri.EscapeDataString(DomainIAMRoleName))+"&EnableIAMDatabaseAuthentication="+EnableIAMDatabaseAuthentication+"&"+String.Join("&", EnableCloudwatchLogsExports.Select(z => $"EnableCloudwatchLogsExports={z}"))+"&"+String.Join("&", ProcessorFeatures.Select(z => $"ProcessorFeatures={z}"))+"&UseDefaultProcessorFeatures="+UseDefaultProcessorFeatures+"&DBParameterGroupName=" + (DBParameterGroupName==null? "" : Uri.EscapeDataString(DBParameterGroupName))+"&DeletionProtection="+DeletionProtection+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Amazon Relational Database Service (Amazon RDS) supports importing MySQL databases by using backup files. You can create a backup of your on-premises database, store it on Amazon Simple Storage Service (Amazon S3), and then restore the backup file onto a new Amazon RDS DB instance running MySQL. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/MySQL.Procedural.Importing.html">Importing Data into an Amazon RDS MySQL DB Instance</a> in the <i>Amazon RDS User Guide.</i>
		/// GET_RestoreDBInstanceFromS3 /#Action=RestoreDBInstanceFromS3
		/// </summary>
		/// <param name="DBName">The name of the database to create when the DB instance is created. Follow the naming rules specified in <code>CreateDBInstance</code>. </param>
		/// <param name="DBInstanceIdentifier"><p>The DB instance identifier. This parameter is stored as a lowercase string. </p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>mydbinstance</code> </p></param>
		/// <param name="AllocatedStorage"><p>The amount of storage (in gigabytes) to allocate initially for the DB instance. Follow the allocation rules specified in <code>CreateDBInstance</code>. </p> <note> <p>Be sure to allocate enough memory for your new DB instance so that the restore operation can succeed. You can also allocate additional memory for future growth. </p> </note></param>
		/// <param name="DBInstanceClass"><p>The compute and memory capacity of the DB instance, for example, <code>db.m4.large</code>. Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB Instance Class</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Importing from Amazon S3 isn't supported on the db.t2.micro DB instance class. </p></param>
		/// <param name="Engine"><p>The name of the database engine to be used for this instance. </p> <p>Valid Values: <code>mysql</code> </p></param>
		/// <param name="MasterUsername"><p>The name for the master user. </p> <p>Constraints: </p> <ul> <li> <p>Must be 1 to 16 letters or numbers.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't be a reserved word for the chosen database engine.</p> </li> </ul></param>
		/// <param name="MasterUserPassword"><p>The password for the master user. The password can include any printable ASCII character except "/", """, or "@". </p> <p>Constraints: Must contain from 8 to 41 characters.</p></param>
		/// <param name="DBSecurityGroups"><p>A list of DB security groups to associate with this DB instance.</p> <p>Default: The default DB security group for the database engine.</p></param>
		/// <param name="VpcSecurityGroupIds">A list of VPC security groups to associate with this DB instance. </param>
		/// <param name="AvailabilityZone"><p>The Availability Zone that the DB instance is created in. For information about AWS Regions and Availability Zones, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html">Regions and Availability Zones</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Default: A random, system-chosen Availability Zone in the endpoint's AWS Region. </p> <p> Example: <code>us-east-1d</code> </p> <p>Constraint: The <code>AvailabilityZone</code> parameter can't be specified if the DB instance is a Multi-AZ deployment. The specified Availability Zone must be in the same AWS Region as the current endpoint. </p></param>
		/// <param name="DBSubnetGroupName">A DB subnet group to associate with this DB instance.</param>
		/// <param name="PreferredMaintenanceWindow"><p>The time range each week during which system maintenance can occur, in Universal Coordinated Time (UTC). For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#Concepts.DBMaintenance">Amazon RDS Maintenance Window</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>ddd:hh24:mi-ddd:hh24:mi</code>.</p> </li> <li> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred backup window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul></param>
		/// <param name="DBParameterGroupName"><p>The name of the DB parameter group to associate with this DB instance.</p> <p>If you do not specify a value for <code>DBParameterGroupName</code>, then the default <code>DBParameterGroup</code> for the specified DB engine is used.</p></param>
		/// <param name="BackupRetentionPeriod">The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. For more information, see <code>CreateDBInstance</code>. </param>
		/// <param name="PreferredBackupWindow"><p>The time range each day during which automated backups are created if automated backups are enabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow">The Backup Window</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul></param>
		/// <param name="Port"><p>The port number on which the database accepts connections. </p> <p>Type: Integer </p> <p>Valid Values: <code>1150</code>-<code>65535</code> </p> <p>Default: <code>3306</code> </p></param>
		/// <param name="MultiAZ">A value that indicates whether the DB instance is a Multi-AZ deployment. If the DB instance is a Multi-AZ deployment, you can't set the <code>AvailabilityZone</code> parameter. </param>
		/// <param name="EngineVersion">The version number of the database engine to use. Choose the latest minor version of your database engine. For information about engine versions, see <code>CreateDBInstance</code>, or call <code>DescribeDBEngineVersions</code>. </param>
		/// <param name="AutoMinorVersionUpgrade">A value that indicates whether minor engine upgrades are applied automatically to the DB instance during the maintenance window. By default, minor engine upgrades are not applied automatically. </param>
		/// <param name="LicenseModel">The license model for this DB instance. Use <code>general-public-license</code>. </param>
		/// <param name="Iops">The amount of Provisioned IOPS (input/output operations per second) to allocate initially for the DB instance. For information about valid Iops values, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS">Amazon RDS Provisioned IOPS Storage to Improve Performance</a> in the <i>Amazon RDS User Guide.</i> </param>
		/// <param name="OptionGroupName">The name of the option group to associate with this DB instance. If this argument is omitted, the default option group for the specified engine is used. </param>
		/// <param name="PubliclyAccessible">A value that indicates whether the DB instance is publicly accessible. When the DB instance is publicly accessible, it is an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. When the DB instance isn't publicly accessible, it is an internal instance with a DNS name that resolves to a private IP address. For more information, see <a>CreateDBInstance</a>.</param>
		/// <param name="Tags">A list of tags to associate with this DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> </param>
		/// <param name="StorageType"><p>Specifies the storage type to be associated with the DB instance. </p> <p>Valid values: <code>standard</code> | <code>gp2</code> | <code>io1</code> </p> <p>If you specify <code>io1</code>, you must also include a value for the <code>Iops</code> parameter. </p> <p>Default: <code>io1</code> if the <code>Iops</code> parameter is specified; otherwise <code>gp2</code> </p></param>
		/// <param name="StorageEncrypted">A value that indicates whether the new DB instance is encrypted or not. </param>
		/// <param name="KmsKeyId"><p>The AWS KMS key identifier for an encrypted DB instance. </p> <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are creating a DB instance with the same AWS account that owns the KMS encryption key used to encrypt the new DB instance, then you can use the KMS key alias instead of the ARN for the KM encryption key. </p> <p>If the <code>StorageEncrypted</code> parameter is enabled, and you do not specify a value for the <code>KmsKeyId</code> parameter, then Amazon RDS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region. </p></param>
		/// <param name="CopyTagsToSnapshot">A value that indicates whether to copy all tags from the DB instance to snapshots of the DB instance. By default, tags are not copied. </param>
		/// <param name="MonitoringInterval"><p>The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. </p> <p>If <code>MonitoringRoleArn</code> is specified, then you must also set <code>MonitoringInterval</code> to a value other than 0. </p> <p>Valid Values: 0, 1, 5, 10, 15, 30, 60 </p> <p>Default: <code>0</code> </p></param>
		/// <param name="MonitoringRoleArn"><p>The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>. For information on creating a monitoring role, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling">Setting Up and Enabling Enhanced Monitoring</a> in the <i>Amazon RDS User Guide.</i> </p> <p>If <code>MonitoringInterval</code> is set to a value other than 0, then you must supply a <code>MonitoringRoleArn</code> value. </p></param>
		/// <param name="EnableIAMDatabaseAuthentication"><p>A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled. For information about the supported DB engines, see <a>CreateDBInstance</a>.</p> <p>For more information about IAM database authentication, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication for MySQL and PostgreSQL</a> in the <i>Amazon RDS User Guide.</i> </p></param>
		/// <param name="SourceEngine"><p>The name of the engine of your source database. </p> <p>Valid Values: <code>mysql</code> </p></param>
		/// <param name="SourceEngineVersion"><p>The engine version of your source database. </p> <p>Valid Values: <code>5.6</code> </p></param>
		/// <param name="S3BucketName">The name of your Amazon S3 bucket that contains your database backup file. </param>
		/// <param name="S3Prefix">The prefix of your Amazon S3 bucket. </param>
		/// <param name="S3IngestionRoleArn">An AWS Identity and Access Management (IAM) role to allow Amazon RDS to access your Amazon S3 bucket. </param>
		/// <param name="EnablePerformanceInsights"><p>A value that indicates whether to enable Performance Insights for the DB instance. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html">Using Amazon Performance Insights</a> in the <i>Amazon Relational Database Service User Guide</i>. </p></param>
		/// <param name="PerformanceInsightsKMSKeyId"><p>The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), the KMS key identifier, or the KMS key alias for the KMS encryption key. </p> <p>If you do not specify a value for <code>PerformanceInsightsKMSKeyId</code>, then Amazon RDS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.</p></param>
		/// <param name="PerformanceInsightsRetentionPeriod">The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years). </param>
		/// <param name="EnableCloudwatchLogsExports">The list of logs that the restored DB instance is to export to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon RDS User Guide</i>.</param>
		/// <param name="ProcessorFeatures">The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.</param>
		/// <param name="UseDefaultProcessorFeatures">A value that indicates whether the DB instance class of the DB instance uses its default processor features.</param>
		/// <param name="DeletionProtection">A value that indicates whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html"> Deleting a DB Instance</a>. </param>
		/// <returns>Success</returns>
		public async Task GET_RestoreDBInstanceFromS3Async(
					string DBName, 
					string DBInstanceIdentifier, 
					int AllocatedStorage, 
					string DBInstanceClass, 
					string Engine, 
					string MasterUsername, 
					string MasterUserPassword, 
					String[] DBSecurityGroups, 
					String[] VpcSecurityGroupIds, 
					string AvailabilityZone, 
					string DBSubnetGroupName, 
					string PreferredMaintenanceWindow, 
					string DBParameterGroupName, 
					int BackupRetentionPeriod, 
					string PreferredBackupWindow, 
					int Port, 
					bool MultiAZ, 
					string EngineVersion, 
					bool AutoMinorVersionUpgrade, 
					string LicenseModel, 
					int Iops, 
					string OptionGroupName, 
					bool PubliclyAccessible, 
					Tag[] Tags, 
					string StorageType, 
					bool StorageEncrypted, 
					string KmsKeyId, 
					bool CopyTagsToSnapshot, 
					int MonitoringInterval, 
					string MonitoringRoleArn, 
					bool EnableIAMDatabaseAuthentication, 
					string SourceEngine, 
					string SourceEngineVersion, 
					string S3BucketName, 
					string S3Prefix, 
					string S3IngestionRoleArn, 
					bool EnablePerformanceInsights, 
					string PerformanceInsightsKMSKeyId, 
					int PerformanceInsightsRetentionPeriod, 
					String[] EnableCloudwatchLogsExports, 
					ProcessorFeature[] ProcessorFeatures, 
					bool UseDefaultProcessorFeatures, 
					bool DeletionProtection, 
					string Action, 
					string Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=RestoreDBInstanceFromS3?DBName=" + (DBName==null? "" : Uri.EscapeDataString(DBName))+"&DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : Uri.EscapeDataString(DBInstanceIdentifier))+"&AllocatedStorage="+AllocatedStorage+"&DBInstanceClass=" + (DBInstanceClass==null? "" : Uri.EscapeDataString(DBInstanceClass))+"&Engine=" + (Engine==null? "" : Uri.EscapeDataString(Engine))+"&MasterUsername=" + (MasterUsername==null? "" : Uri.EscapeDataString(MasterUsername))+"&MasterUserPassword=" + (MasterUserPassword==null? "" : Uri.EscapeDataString(MasterUserPassword))+"&"+String.Join("&", DBSecurityGroups.Select(z => $"DBSecurityGroups={z}"))+"&"+String.Join("&", VpcSecurityGroupIds.Select(z => $"VpcSecurityGroupIds={z}"))+"&AvailabilityZone=" + (AvailabilityZone==null? "" : Uri.EscapeDataString(AvailabilityZone))+"&DBSubnetGroupName=" + (DBSubnetGroupName==null? "" : Uri.EscapeDataString(DBSubnetGroupName))+"&PreferredMaintenanceWindow=" + (PreferredMaintenanceWindow==null? "" : Uri.EscapeDataString(PreferredMaintenanceWindow))+"&DBParameterGroupName=" + (DBParameterGroupName==null? "" : Uri.EscapeDataString(DBParameterGroupName))+"&BackupRetentionPeriod="+BackupRetentionPeriod+"&PreferredBackupWindow=" + (PreferredBackupWindow==null? "" : Uri.EscapeDataString(PreferredBackupWindow))+"&Port="+Port+"&MultiAZ="+MultiAZ+"&EngineVersion=" + (EngineVersion==null? "" : Uri.EscapeDataString(EngineVersion))+"&AutoMinorVersionUpgrade="+AutoMinorVersionUpgrade+"&LicenseModel=" + (LicenseModel==null? "" : Uri.EscapeDataString(LicenseModel))+"&Iops="+Iops+"&OptionGroupName=" + (OptionGroupName==null? "" : Uri.EscapeDataString(OptionGroupName))+"&PubliclyAccessible="+PubliclyAccessible+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&StorageType=" + (StorageType==null? "" : Uri.EscapeDataString(StorageType))+"&StorageEncrypted="+StorageEncrypted+"&KmsKeyId=" + (KmsKeyId==null? "" : Uri.EscapeDataString(KmsKeyId))+"&CopyTagsToSnapshot="+CopyTagsToSnapshot+"&MonitoringInterval="+MonitoringInterval+"&MonitoringRoleArn=" + (MonitoringRoleArn==null? "" : Uri.EscapeDataString(MonitoringRoleArn))+"&EnableIAMDatabaseAuthentication="+EnableIAMDatabaseAuthentication+"&SourceEngine=" + (SourceEngine==null? "" : Uri.EscapeDataString(SourceEngine))+"&SourceEngineVersion=" + (SourceEngineVersion==null? "" : Uri.EscapeDataString(SourceEngineVersion))+"&S3BucketName=" + (S3BucketName==null? "" : Uri.EscapeDataString(S3BucketName))+"&S3Prefix=" + (S3Prefix==null? "" : Uri.EscapeDataString(S3Prefix))+"&S3IngestionRoleArn=" + (S3IngestionRoleArn==null? "" : Uri.EscapeDataString(S3IngestionRoleArn))+"&EnablePerformanceInsights="+EnablePerformanceInsights+"&PerformanceInsightsKMSKeyId=" + (PerformanceInsightsKMSKeyId==null? "" : Uri.EscapeDataString(PerformanceInsightsKMSKeyId))+"&PerformanceInsightsRetentionPeriod="+PerformanceInsightsRetentionPeriod+"&"+String.Join("&", EnableCloudwatchLogsExports.Select(z => $"EnableCloudwatchLogsExports={z}"))+"&"+String.Join("&", ProcessorFeatures.Select(z => $"ProcessorFeatures={z}"))+"&UseDefaultProcessorFeatures="+UseDefaultProcessorFeatures+"&DeletionProtection="+DeletionProtection+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Restores a DB instance to an arbitrary point in time. You can restore to any point in time before the time identified by the LatestRestorableTime property. You can restore to a point up to the number of days specified by the BackupRetentionPeriod property.</p> <p>The target database is created with most of the original configuration, but in a system-selected Availability Zone, with the default security group, the default subnet group, and the default DB parameter group. By default, the new DB instance is created as a single-AZ deployment except when the instance is a SQL Server instance that has an option group that is associated with mirroring; in this case, the instance becomes a mirrored deployment and not a single-AZ deployment.</p> <note> <p>This command doesn't apply to Aurora MySQL and Aurora PostgreSQL. For Aurora, use <code>RestoreDBClusterToPointInTime</code>.</p> </note>
		/// GET_RestoreDBInstanceToPointInTime /#Action=RestoreDBInstanceToPointInTime
		/// </summary>
		/// <param name="SourceDBInstanceIdentifier"><p>The identifier of the source DB instance from which to restore.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DB instance.</p> </li> </ul></param>
		/// <param name="TargetDBInstanceIdentifier"><p>The name of the new DB instance to be created.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul></param>
		/// <param name="RestoreTime"><p>The date and time to restore from.</p> <p>Valid Values: Value must be a time in Universal Coordinated Time (UTC) format</p> <p>Constraints:</p> <ul> <li> <p>Must be before the latest restorable time for the DB instance</p> </li> <li> <p>Can't be specified if the <code>UseLatestRestorableTime</code> parameter is enabled</p> </li> </ul> <p>Example: <code>2009-09-07T23:45:00Z</code> </p></param>
		/// <param name="UseLatestRestorableTime"><p> A value that indicates whether the DB instance is restored from the latest backup time. By default, the DB instance isn't restored from the latest backup time. </p> <p>Constraints: Can't be specified if the <code>RestoreTime</code> parameter is provided.</p></param>
		/// <param name="DBInstanceClass"><p>The compute and memory capacity of the Amazon RDS DB instance, for example, <code>db.m4.large</code>. Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB Instance Class</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Default: The same DBInstanceClass as the original DB instance.</p></param>
		/// <param name="Port"><p>The port number on which the database accepts connections.</p> <p>Constraints: Value must be <code>1150-65535</code> </p> <p>Default: The same port as the original DB instance.</p></param>
		/// <param name="AvailabilityZone"><p>The Availability Zone (AZ) where the DB instance will be created.</p> <p>Default: A random, system-chosen Availability Zone.</p> <p>Constraint: You can't specify the <code>AvailabilityZone</code> parameter if the DB instance is a Multi-AZ deployment.</p> <p>Example: <code>us-east-1a</code> </p></param>
		/// <param name="DBSubnetGroupName"><p>The DB subnet group name to use for the new instance.</p> <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p> <p>Example: <code>mySubnetgroup</code> </p></param>
		/// <param name="MultiAZ"><p>A value that indicates whether the DB instance is a Multi-AZ deployment.</p> <p>Constraint: You can't specify the <code>AvailabilityZone</code> parameter if the DB instance is a Multi-AZ deployment.</p></param>
		/// <param name="PubliclyAccessible">A value that indicates whether the DB instance is publicly accessible. When the DB instance is publicly accessible, it is an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. When the DB instance isn't publicly accessible, it is an internal instance with a DNS name that resolves to a private IP address. For more information, see <a>CreateDBInstance</a>.</param>
		/// <param name="AutoMinorVersionUpgrade">A value that indicates whether minor version upgrades are applied automatically to the DB instance during the maintenance window.</param>
		/// <param name="LicenseModel"><p>License model information for the restored DB instance.</p> <p>Default: Same as source.</p> <p> Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p></param>
		/// <param name="DBName"><p>The database name for the restored DB instance.</p> <note> <p>This parameter isn't used for the MySQL or MariaDB engines.</p> </note></param>
		/// <param name="Engine"><p>The database engine to use for the new instance.</p> <p>Default: The same as source</p> <p>Constraint: Must be compatible with the engine of the source</p> <p>Valid Values:</p> <ul> <li> <p> <code>mariadb</code> </p> </li> <li> <p> <code>mysql</code> </p> </li> <li> <p> <code>oracle-ee</code> </p> </li> <li> <p> <code>oracle-se2</code> </p> </li> <li> <p> <code>oracle-se1</code> </p> </li> <li> <p> <code>oracle-se</code> </p> </li> <li> <p> <code>postgres</code> </p> </li> <li> <p> <code>sqlserver-ee</code> </p> </li> <li> <p> <code>sqlserver-se</code> </p> </li> <li> <p> <code>sqlserver-ex</code> </p> </li> <li> <p> <code>sqlserver-web</code> </p> </li> </ul></param>
		/// <param name="Iops"><p>The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for the DB instance.</p> <p>Constraints: Must be an integer greater than 1000.</p> <p> <b>SQL Server</b> </p> <p>Setting the IOPS value for the SQL Server database engine isn't supported.</p></param>
		/// <param name="OptionGroupName"><p>The name of the option group to be used for the restored DB instance.</p> <p>Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't be removed from an option group, and that option group can't be removed from a DB instance once it is associated with a DB instance</p></param>
		/// <param name="CopyTagsToSnapshot">A value that indicates whether to copy all tags from the restored DB instance to snapshots of the DB instance. By default, tags are not copied.</param>
		/// <param name="StorageType"><p>Specifies the storage type to be associated with the DB instance.</p> <p> Valid values: <code>standard | gp2 | io1</code> </p> <p> If you specify <code>io1</code>, you must also include a value for the <code>Iops</code> parameter. </p> <p> Default: <code>io1</code> if the <code>Iops</code> parameter is specified, otherwise <code>gp2</code> </p></param>
		/// <param name="TdeCredentialArn">The ARN from the key store with which to associate the instance for TDE encryption.</param>
		/// <param name="TdeCredentialPassword">The password for the given ARN from the key store in order to access the device.</param>
		/// <param name="VpcSecurityGroupIds"><p> A list of EC2 VPC security groups to associate with this DB instance. </p> <p> Default: The default EC2 VPC security group for the DB subnet group's VPC. </p></param>
		/// <param name="Domain"><p>Specify the Active Directory directory ID to restore the DB instance in. The domain must be created prior to this operation. Currently, only Microsoft SQL Server and Oracle DB instances can be created in an Active Directory Domain. </p> <p>For Microsoft SQL Server DB instances, Amazon RDS can use Windows Authentication to authenticate users that connect to the DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_SQLServerWinAuth.html"> Using Windows Authentication with an Amazon RDS DB Instance Running Microsoft SQL Server</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For Oracle DB instances, Amazon RDS can use Kerberos Authentication to authenticate users that connect to the DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-kerberos.html"> Using Kerberos Authentication with Amazon RDS for Oracle</a> in the <i>Amazon RDS User Guide</i>.</p></param>
		/// <param name="DomainIAMRoleName">Specify the name of the IAM role to be used when making API calls to the Directory Service.</param>
		/// <param name="EnableIAMDatabaseAuthentication"><p>A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled. For information about the supported DB engines, see <a>CreateDBInstance</a>.</p> <p>For more information about IAM database authentication, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication for MySQL and PostgreSQL</a> in the <i>Amazon RDS User Guide.</i> </p></param>
		/// <param name="EnableCloudwatchLogsExports">The list of logs that the restored DB instance is to export to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon RDS User Guide</i>.</param>
		/// <param name="ProcessorFeatures">The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.</param>
		/// <param name="UseDefaultProcessorFeatures">A value that indicates whether the DB instance class of the DB instance uses its default processor features.</param>
		/// <param name="DBParameterGroupName"><p>The name of the DB parameter group to associate with this DB instance.</p> <p>If you do not specify a value for <code>DBParameterGroupName</code>, then the default <code>DBParameterGroup</code> for the specified DB engine is used.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBParameterGroup.</p> </li> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul></param>
		/// <param name="DeletionProtection">A value that indicates whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html"> Deleting a DB Instance</a>. </param>
		/// <param name="SourceDbiResourceId">The resource ID of the source DB instance from which to restore.</param>
		/// <returns>Success</returns>
		public async Task GET_RestoreDBInstanceToPointInTimeAsync(
					string SourceDBInstanceIdentifier, 
					string TargetDBInstanceIdentifier, 
					System.DateTimeOffset RestoreTime, 
					bool UseLatestRestorableTime, 
					string DBInstanceClass, 
					int Port, 
					string AvailabilityZone, 
					string DBSubnetGroupName, 
					bool MultiAZ, 
					bool PubliclyAccessible, 
					bool AutoMinorVersionUpgrade, 
					string LicenseModel, 
					string DBName, 
					string Engine, 
					int Iops, 
					string OptionGroupName, 
					bool CopyTagsToSnapshot, 
					Tag[] Tags, 
					string StorageType, 
					string TdeCredentialArn, 
					string TdeCredentialPassword, 
					String[] VpcSecurityGroupIds, 
					string Domain, 
					string DomainIAMRoleName, 
					bool EnableIAMDatabaseAuthentication, 
					String[] EnableCloudwatchLogsExports, 
					ProcessorFeature[] ProcessorFeatures, 
					bool UseDefaultProcessorFeatures, 
					string DBParameterGroupName, 
					bool DeletionProtection, 
					string SourceDbiResourceId, 
					string Action, 
					string Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=RestoreDBInstanceToPointInTime?SourceDBInstanceIdentifier=" + (SourceDBInstanceIdentifier==null? "" : Uri.EscapeDataString(SourceDBInstanceIdentifier))+"&TargetDBInstanceIdentifier=" + (TargetDBInstanceIdentifier==null? "" : Uri.EscapeDataString(TargetDBInstanceIdentifier))+"&RestoreTime=" + RestoreTime.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&UseLatestRestorableTime="+UseLatestRestorableTime+"&DBInstanceClass=" + (DBInstanceClass==null? "" : Uri.EscapeDataString(DBInstanceClass))+"&Port="+Port+"&AvailabilityZone=" + (AvailabilityZone==null? "" : Uri.EscapeDataString(AvailabilityZone))+"&DBSubnetGroupName=" + (DBSubnetGroupName==null? "" : Uri.EscapeDataString(DBSubnetGroupName))+"&MultiAZ="+MultiAZ+"&PubliclyAccessible="+PubliclyAccessible+"&AutoMinorVersionUpgrade="+AutoMinorVersionUpgrade+"&LicenseModel=" + (LicenseModel==null? "" : Uri.EscapeDataString(LicenseModel))+"&DBName=" + (DBName==null? "" : Uri.EscapeDataString(DBName))+"&Engine=" + (Engine==null? "" : Uri.EscapeDataString(Engine))+"&Iops="+Iops+"&OptionGroupName=" + (OptionGroupName==null? "" : Uri.EscapeDataString(OptionGroupName))+"&CopyTagsToSnapshot="+CopyTagsToSnapshot+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&StorageType=" + (StorageType==null? "" : Uri.EscapeDataString(StorageType))+"&TdeCredentialArn=" + (TdeCredentialArn==null? "" : Uri.EscapeDataString(TdeCredentialArn))+"&TdeCredentialPassword=" + (TdeCredentialPassword==null? "" : Uri.EscapeDataString(TdeCredentialPassword))+"&"+String.Join("&", VpcSecurityGroupIds.Select(z => $"VpcSecurityGroupIds={z}"))+"&Domain=" + (Domain==null? "" : Uri.EscapeDataString(Domain))+"&DomainIAMRoleName=" + (DomainIAMRoleName==null? "" : Uri.EscapeDataString(DomainIAMRoleName))+"&EnableIAMDatabaseAuthentication="+EnableIAMDatabaseAuthentication+"&"+String.Join("&", EnableCloudwatchLogsExports.Select(z => $"EnableCloudwatchLogsExports={z}"))+"&"+String.Join("&", ProcessorFeatures.Select(z => $"ProcessorFeatures={z}"))+"&UseDefaultProcessorFeatures="+UseDefaultProcessorFeatures+"&DBParameterGroupName=" + (DBParameterGroupName==null? "" : Uri.EscapeDataString(DBParameterGroupName))+"&DeletionProtection="+DeletionProtection+"&SourceDbiResourceId=" + (SourceDbiResourceId==null? "" : Uri.EscapeDataString(SourceDbiResourceId))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Revokes ingress from a DBSecurityGroup for previously authorized IP ranges or EC2 or VPC Security Groups. Required parameters for this API are one of CIDRIP, EC2SecurityGroupId for VPC, or (EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId).
		/// GET_RevokeDBSecurityGroupIngress /#Action=RevokeDBSecurityGroupIngress
		/// </summary>
		/// <param name="DBSecurityGroupName">The name of the DB security group to revoke ingress from.</param>
		/// <param name="CIDRIP"> The IP range to revoke access from. Must be a valid CIDR range. If <code>CIDRIP</code> is specified, <code>EC2SecurityGroupName</code>, <code>EC2SecurityGroupId</code> and <code>EC2SecurityGroupOwnerId</code> can't be provided. </param>
		/// <param name="EC2SecurityGroupName"> The name of the EC2 security group to revoke access from. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, EC2SecurityGroupOwnerId and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided. </param>
		/// <param name="EC2SecurityGroupId"> The id of the EC2 security group to revoke access from. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, EC2SecurityGroupOwnerId and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided. </param>
		/// <param name="EC2SecurityGroupOwnerId"> The AWS account number of the owner of the EC2 security group specified in the <code>EC2SecurityGroupName</code> parameter. The AWS access key ID isn't an acceptable value. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, EC2SecurityGroupOwnerId and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided. </param>
		/// <returns>Success</returns>
		public async Task GET_RevokeDBSecurityGroupIngressAsync(string DBSecurityGroupName, string CIDRIP, string EC2SecurityGroupName, string EC2SecurityGroupId, string EC2SecurityGroupOwnerId, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=RevokeDBSecurityGroupIngress?DBSecurityGroupName=" + (DBSecurityGroupName==null? "" : Uri.EscapeDataString(DBSecurityGroupName))+"&CIDRIP=" + (CIDRIP==null? "" : Uri.EscapeDataString(CIDRIP))+"&EC2SecurityGroupName=" + (EC2SecurityGroupName==null? "" : Uri.EscapeDataString(EC2SecurityGroupName))+"&EC2SecurityGroupId=" + (EC2SecurityGroupId==null? "" : Uri.EscapeDataString(EC2SecurityGroupId))+"&EC2SecurityGroupOwnerId=" + (EC2SecurityGroupOwnerId==null? "" : Uri.EscapeDataString(EC2SecurityGroupOwnerId))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Starts a database activity stream to monitor activity on the database. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/DBActivityStreams.html">Database Activity Streams</a> in the <i>Amazon Aurora User Guide</i>.
		/// GET_StartActivityStream /#Action=StartActivityStream
		/// </summary>
		/// <param name="ResourceArn">The Amazon Resource Name (ARN) of the DB cluster, for example <code>arn:aws:rds:us-east-1:12345667890:cluster:das-cluster</code>.</param>
		/// <param name="Mode">Specifies the mode of the database activity stream. Database events such as a change or access generate an activity stream event. The database session can handle these events either synchronously or asynchronously. </param>
		/// <param name="KmsKeyId">The AWS KMS key identifier for encrypting messages in the database activity stream. The key identifier can be either a key ID, a key ARN, or a key alias.</param>
		/// <param name="ApplyImmediately">Specifies whether or not the database activity stream is to start as soon as possible, regardless of the maintenance window for the database.</param>
		/// <returns>Success</returns>
		public async Task GET_StartActivityStreamAsync(string ResourceArn, StartActivityStreamResponseMode Mode, string KmsKeyId, bool ApplyImmediately, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=StartActivityStream?ResourceArn=" + (ResourceArn==null? "" : Uri.EscapeDataString(ResourceArn))+"&Mode=" + Mode+"&KmsKeyId=" + (KmsKeyId==null? "" : Uri.EscapeDataString(KmsKeyId))+"&ApplyImmediately="+ApplyImmediately+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Starts an Amazon Aurora DB cluster that was stopped using the AWS console, the stop-db-cluster AWS CLI command, or the StopDBCluster action.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-cluster-stop-start.html"> Stopping and Starting an Aurora Cluster</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_StartDBCluster /#Action=StartDBCluster
		/// </summary>
		/// <param name="DBClusterIdentifier">The DB cluster identifier of the Amazon Aurora DB cluster to be started. This parameter is stored as a lowercase string.</param>
		/// <returns>Success</returns>
		public async Task GET_StartDBClusterAsync(string DBClusterIdentifier, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=StartDBCluster?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : Uri.EscapeDataString(DBClusterIdentifier))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p> Starts an Amazon RDS DB instance that was stopped using the AWS console, the stop-db-instance AWS CLI command, or the StopDBInstance action. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_StartInstance.html"> Starting an Amazon RDS DB instance That Was Previously Stopped</a> in the <i>Amazon RDS User Guide.</i> </p> <note> <p> This command doesn't apply to Aurora MySQL and Aurora PostgreSQL. For Aurora DB clusters, use <code>StartDBCluster</code> instead. </p> </note>
		/// GET_StartDBInstance /#Action=StartDBInstance
		/// </summary>
		/// <param name="DBInstanceIdentifier"> The user-supplied instance identifier. </param>
		/// <returns>Success</returns>
		public async Task GET_StartDBInstanceAsync(string DBInstanceIdentifier, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=StartDBInstance?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : Uri.EscapeDataString(DBInstanceIdentifier))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Starts an export of a snapshot to Amazon S3. The provided IAM role must have access to the S3 bucket.
		/// GET_StartExportTask /#Action=StartExportTask
		/// </summary>
		/// <param name="ExportTaskIdentifier">A unique identifier for the snapshot export task. This ID isn't an identifier for the Amazon S3 bucket where the snapshot is to be exported to. </param>
		/// <param name="SourceArn">The Amazon Resource Name (ARN) of the snapshot to export to Amazon S3.</param>
		/// <param name="S3BucketName">The name of the Amazon S3 bucket to export the snapshot to.</param>
		/// <param name="IamRoleArn">The name of the IAM role to use for writing to the Amazon S3 bucket when exporting a snapshot. </param>
		/// <param name="KmsKeyId">The ID of the AWS KMS key to use to encrypt the snapshot exported to Amazon S3. The KMS key ID is the Amazon Resource Name (ARN), the KMS key identifier, or the KMS key alias for the KMS encryption key. The IAM role used for the snapshot export must have encryption and decryption permissions to use this KMS key. </param>
		/// <param name="S3Prefix">The Amazon S3 bucket prefix to use as the file name and path of the exported snapshot.</param>
		/// <param name="ExportOnly"><p>The data to be exported from the snapshot. If this parameter is not provided, all the snapshot data is exported. Valid values are the following:</p> <ul> <li> <p> <code>database</code> - Export all the data from a specified database.</p> </li> <li> <p> <code>database.table</code> <i>table-name</i> - Export a table of the snapshot. This format is valid only for RDS for MySQL, RDS for MariaDB, and Aurora MySQL.</p> </li> <li> <p> <code>database.schema</code> <i>schema-name</i> - Export a database schema of the snapshot. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.</p> </li> <li> <p> <code>database.schema.table</code> <i>table-name</i> - Export a table of the database schema. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_StartExportTaskAsync(string ExportTaskIdentifier, string SourceArn, string S3BucketName, string IamRoleArn, string KmsKeyId, string S3Prefix, String[] ExportOnly, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=StartExportTask?ExportTaskIdentifier=" + (ExportTaskIdentifier==null? "" : Uri.EscapeDataString(ExportTaskIdentifier))+"&SourceArn=" + (SourceArn==null? "" : Uri.EscapeDataString(SourceArn))+"&S3BucketName=" + (S3BucketName==null? "" : Uri.EscapeDataString(S3BucketName))+"&IamRoleArn=" + (IamRoleArn==null? "" : Uri.EscapeDataString(IamRoleArn))+"&KmsKeyId=" + (KmsKeyId==null? "" : Uri.EscapeDataString(KmsKeyId))+"&S3Prefix=" + (S3Prefix==null? "" : Uri.EscapeDataString(S3Prefix))+"&"+String.Join("&", ExportOnly.Select(z => $"ExportOnly={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Stops a database activity stream that was started using the AWS console, the <code>start-activity-stream</code> AWS CLI command, or the <code>StartActivityStream</code> action.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/DBActivityStreams.html">Database Activity Streams</a> in the <i>Amazon Aurora User Guide</i>.</p>
		/// GET_StopActivityStream /#Action=StopActivityStream
		/// </summary>
		/// <param name="ResourceArn">The Amazon Resource Name (ARN) of the DB cluster for the database activity stream. For example, <code>arn:aws:rds:us-east-1:12345667890:cluster:das-cluster</code>. </param>
		/// <param name="ApplyImmediately">Specifies whether or not the database activity stream is to stop as soon as possible, regardless of the maintenance window for the database.</param>
		/// <returns>Success</returns>
		public async Task GET_StopActivityStreamAsync(string ResourceArn, bool ApplyImmediately, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=StopActivityStream?ResourceArn=" + (ResourceArn==null? "" : Uri.EscapeDataString(ResourceArn))+"&ApplyImmediately="+ApplyImmediately+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p> Stops an Amazon Aurora DB cluster. When you stop a DB cluster, Aurora retains the DB cluster's metadata, including its endpoints and DB parameter groups. Aurora also retains the transaction logs so you can do a point-in-time restore if necessary. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-cluster-stop-start.html"> Stopping and Starting an Aurora Cluster</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_StopDBCluster /#Action=StopDBCluster
		/// </summary>
		/// <param name="DBClusterIdentifier">The DB cluster identifier of the Amazon Aurora DB cluster to be stopped. This parameter is stored as a lowercase string.</param>
		/// <returns>Success</returns>
		public async Task GET_StopDBClusterAsync(string DBClusterIdentifier, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=StopDBCluster?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : Uri.EscapeDataString(DBClusterIdentifier))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p> Stops an Amazon RDS DB instance. When you stop a DB instance, Amazon RDS retains the DB instance's metadata, including its endpoint, DB parameter group, and option group membership. Amazon RDS also retains the transaction logs so you can do a point-in-time restore if necessary. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_StopInstance.html"> Stopping an Amazon RDS DB Instance Temporarily</a> in the <i>Amazon RDS User Guide.</i> </p> <note> <p> This command doesn't apply to Aurora MySQL and Aurora PostgreSQL. For Aurora clusters, use <code>StopDBCluster</code> instead. </p> </note>
		/// GET_StopDBInstance /#Action=StopDBInstance
		/// </summary>
		/// <param name="DBInstanceIdentifier"> The user-supplied instance identifier. </param>
		/// <param name="DBSnapshotIdentifier"> The user-supplied instance identifier of the DB Snapshot created immediately before the DB instance is stopped. </param>
		/// <returns>Success</returns>
		public async Task GET_StopDBInstanceAsync(string DBInstanceIdentifier, string DBSnapshotIdentifier, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=StopDBInstance?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : Uri.EscapeDataString(DBInstanceIdentifier))+"&DBSnapshotIdentifier=" + (DBSnapshotIdentifier==null? "" : Uri.EscapeDataString(DBSnapshotIdentifier))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}
