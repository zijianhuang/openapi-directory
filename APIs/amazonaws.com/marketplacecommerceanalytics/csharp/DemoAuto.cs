//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace My.Demo.Client
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Net.Http;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Container for the result of the GenerateDataSet operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GenerateDataSetResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSetRequestId { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the GenerateDataSet operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GenerateDataSetRequest
	{
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GenerateDataSetRequestDataSetType DataSetType { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset DataSetPublicationDate { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string RoleNameArn { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string DestinationS3BucketName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DestinationS3Prefix { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string SnsTopicArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomerDefinedValues CustomerDefinedValues { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GenerateDataSetRequestDataSetType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		customer_subscriber_hourly_monthly_subscriptions = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		customer_subscriber_annual_subscriptions = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		daily_business_usage_by_instance_type = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		daily_business_fees = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		daily_business_free_trial_conversions = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		daily_business_new_instances = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		daily_business_new_product_subscribers = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		daily_business_canceled_product_subscribers = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		monthly_revenue_billing_and_revenue_data = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		monthly_revenue_annual_subscriptions = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		monthly_revenue_field_demonstration_usage = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		monthly_revenue_flexible_payment_schedule = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		disbursed_amount_by_product = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		disbursed_amount_by_product_with_uncollected_funds = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		disbursed_amount_by_instance_hours = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		disbursed_amount_by_customer_geo = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		disbursed_amount_by_age_of_uncollected_funds = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		disbursed_amount_by_age_of_disbursed_funds = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		disbursed_amount_by_age_of_past_due_funds = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		disbursed_amount_by_uncollected_funds_breakdown = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		customer_profile_by_industry = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		customer_profile_by_revenue = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		customer_profile_by_geography = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sales_compensation_billed_revenue = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		us_sales_and_use_tax_records = 24,
	}
	
	/// <summary>
	/// Container for the result of the StartSupportDataExport operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartSupportDataExportResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSetRequestId { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the StartSupportDataExport operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartSupportDataExportRequest
	{
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StartSupportDataExportRequestDataSetType DataSetType { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset FromDate { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string RoleNameArn { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string DestinationS3BucketName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DestinationS3Prefix { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string SnsTopicArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomerDefinedValues CustomerDefinedValues { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StartSupportDataExportRequestDataSetType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		customer_support_contacts_data = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		test_customer_support_contacts_data = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DataSetType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		customer_subscriber_hourly_monthly_subscriptions = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		customer_subscriber_annual_subscriptions = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		daily_business_usage_by_instance_type = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		daily_business_fees = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		daily_business_free_trial_conversions = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		daily_business_new_instances = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		daily_business_new_product_subscribers = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		daily_business_canceled_product_subscribers = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		monthly_revenue_billing_and_revenue_data = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		monthly_revenue_annual_subscriptions = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		monthly_revenue_field_demonstration_usage = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		monthly_revenue_flexible_payment_schedule = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		disbursed_amount_by_product = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		disbursed_amount_by_product_with_uncollected_funds = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		disbursed_amount_by_instance_hours = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		disbursed_amount_by_customer_geo = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		disbursed_amount_by_age_of_uncollected_funds = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		disbursed_amount_by_age_of_disbursed_funds = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		disbursed_amount_by_age_of_past_due_funds = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		disbursed_amount_by_uncollected_funds_breakdown = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		customer_profile_by_industry = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		customer_profile_by_revenue = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		customer_profile_by_geography = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sales_compensation_billed_revenue = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		us_sales_and_use_tax_records = 24,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SupportDataSetType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		customer_support_contacts_data = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		test_customer_support_contacts_data = 1,
	}
	
	public partial class DemoClient
	{
		
		private System.Net.Http.HttpClient client;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public DemoClient(System.Net.Http.HttpClient client, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (client == null)
				throw new ArgumentNullException("Null HttpClient.", "client");

			if (client.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "client");

			this.client = client;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Given a data set type and data set publication date, asynchronously publishes the requested data set to the specified S3 bucket and notifies the specified SNS topic once the data is available. Returns a unique request identifier that can be used to correlate requests with notifications from the SNS topic. Data sets will be published in comma-separated values (CSV) format with the file name {data_set_type}_YYYY-MM-DD.csv. If a file with the same name already exists (e.g. if the same data set is requested twice), the original file will be overwritten by the new file. Requires a Role with an attached permissions policy providing Allow permissions for the following actions: s3:PutObject, s3:GetBucketLocation, sns:GetTopicAttributes, sns:Publish, iam:GetRolePolicy.
		/// GenerateDataSet /#X-Amz-Target=MarketplaceCommerceAnalytics20150701.GenerateDataSet
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GenerateDataSetResult> GenerateDataSetAsync(GenerateDataSetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=MarketplaceCommerceAnalytics20150701.GenerateDataSet";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GenerateDataSetResult>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Given a data set type and a from date, asynchronously publishes the requested customer support data to the specified S3 bucket and notifies the specified SNS topic once the data is available. Returns a unique request identifier that can be used to correlate requests with notifications from the SNS topic. Data sets will be published in comma-separated values (CSV) format with the file name {data_set_type}_YYYY-MM-DD'T'HH-mm-ss'Z'.csv. If a file with the same name already exists (e.g. if the same data set is requested twice), the original file will be overwritten by the new file. Requires a Role with an attached permissions policy providing Allow permissions for the following actions: s3:PutObject, s3:GetBucketLocation, sns:GetTopicAttributes, sns:Publish, iam:GetRolePolicy.
		/// StartSupportDataExport /#X-Amz-Target=MarketplaceCommerceAnalytics20150701.StartSupportDataExport
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartSupportDataExportResult> StartSupportDataExportAsync(StartSupportDataExportRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=MarketplaceCommerceAnalytics20150701.StartSupportDataExport";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<StartSupportDataExportResult>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}
