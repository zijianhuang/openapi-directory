//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace My.Demo.Client
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Net.Http;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// The output for the <a>CreateChangeSet</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateChangeSetOutput
	{
		
		/// <summary>
		/// Min length: 1
		/// Pattern: arn:[-a-zA-Z0-9:/]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
	}
	
	/// <summary>
	/// The Parameter data type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Parameter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ParameterKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ParameterValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UsePreviousValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResolvedValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum Capability
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CAPABILITY_IAM = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CAPABILITY_NAMED_IAM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CAPABILITY_AUTO_EXPAND = 2,
	}
	
	/// <summary>
	/// The Tag type enables you to specify a key-value pair that can be used to store information about an AWS CloudFormation stack.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Tag
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string Key { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Describes the target resource of an import operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ResourceToImport
	{
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string ResourceType { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LogicalResourceId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ResourceIdentifierProperties ResourceIdentifier { get; set; }
	}
	
	/// <summary>
	/// The output for a <a>CreateStack</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateStackOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateStackInstancesOutput
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9][-a-zA-Z0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string OperationId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateStackSetOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackSetId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteStackInstancesOutput
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9][-a-zA-Z0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string OperationId { get; set; }
	}
	
	/// <summary>
	/// The output for the <a>DescribeAccountLimits</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeAccountLimitsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AccountLimit[] AccountLimits { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The output for the <a>DescribeChangeSet</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeChangeSetOutput
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z][-a-zA-Z0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ChangeSetName { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: arn:[-a-zA-Z0-9:/]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string ChangeSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeChangeSetOutputExecutionStatus ExecutionStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeChangeSetOutputStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusReason { get; set; }
		
		/// <summary>
		/// Maximum items: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public NotificationARN[] NotificationARNs { get; set; }
		
		/// <summary>
		/// <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RollbackConfiguration RollbackConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Capability[] Capabilities { get; set; }
		
		/// <summary>
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Change[] Changes { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeChangeSetOutputExecutionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNAVAILABLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTE_IN_PROGRESS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTE_COMPLETE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTE_FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OBSOLETE = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeChangeSetOutputStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_COMPLETE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_COMPLETE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeStackDriftDetectionStatusOutput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		/// <summary>
		/// Max length: 36
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(36, MinimumLength=1)]
		public string StackDriftDetectionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeStackDriftDetectionStatusOutputStackDriftStatus StackDriftStatus { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DescribeStackDriftDetectionStatusOutputDetectionStatus DetectionStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DetectionStatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DriftedStackResourceCount { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset Timestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeStackDriftDetectionStatusOutputStackDriftStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DRIFTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_SYNC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_CHECKED = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeStackDriftDetectionStatusOutputDetectionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DETECTION_IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DETECTION_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DETECTION_COMPLETE = 2,
	}
	
	/// <summary>
	/// The output for a <a>DescribeStackEvents</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeStackEventsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StackEvent[] StackEvents { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeStackInstanceOutput
	{
		
		/// <summary>
		/// An AWS CloudFormation stack, in a specific account and Region, that's part of a stack set operation. A stack instance is a reference to an attempted or actual stack in a given account within a given Region. A stack instance can exist without a stack—for example, if the stack couldn't be created for some reason. A stack instance is associated with only one stack set. Each stack instance contains the ID of its associated stack set, as well as the ID of the actual stack and the stack status.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StackInstance StackInstance { get; set; }
	}
	
	/// <summary>
	/// The output for a <a>DescribeStackResource</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeStackResourceOutput
	{
		
		/// <summary>
		/// Contains detailed information about the specified stack resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StackResourceDetail StackResourceDetail { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeStackResourceDriftsOutput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StackResourceDrift[] StackResourceDrifts { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackResourceDriftStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_SYNC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MODIFIED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_CHECKED = 3,
	}
	
	/// <summary>
	/// The output for a <a>DescribeStackResources</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeStackResourcesOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StackResource[] StackResources { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeStackSetOutput
	{
		
		/// <summary>
		/// A structure that contains information about a stack set. A stack set enables you to provision stacks into AWS accounts and across Regions by using a single CloudFormation template. In the stack set, you specify the template to use, as well as any parameters and capabilities that the template requires. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StackSet StackSet { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeStackSetOperationOutput
	{
		
		/// <summary>
		/// The structure that contains information about a stack set operation. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperation StackSetOperation { get; set; }
	}
	
	/// <summary>
	/// The output for a <a>DescribeStacks</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeStacksOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Stack[] Stacks { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeTypeOutput
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeTypeOutputType Type { get; set; }
		
		/// <summary>
		/// Max length: 196
		/// Min length: 10
		/// Pattern: [A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(196, MinimumLength=10)]
		public string TypeName { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [A-Za-z0-9-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string DefaultVersionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsDefaultVersion { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string Description { get; set; }
		
		/// <summary>
		/// Max length: 16777216
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(16777216, MinimumLength=1)]
		public string Schema { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeTypeOutputProvisioningType ProvisioningType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeTypeOutputDeprecatedStatus DeprecatedStatus { get; set; }
		
		/// <summary>
		/// Contains logging configuration information for a type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LoggingConfig LoggingConfig { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: arn:.+:iam::[0-9]{12}:role/.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string ExecutionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeTypeOutputVisibility Visibility { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(4096)]
		public string SourceUrl { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(4096)]
		public string DocumentationUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdated { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> TimeCreated { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeTypeOutputType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeTypeOutputProvisioningType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NON_PROVISIONABLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMMUTABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FULLY_MUTABLE = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeTypeOutputDeprecatedStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEPRECATED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeTypeOutputVisibility
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUBLIC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIVATE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeTypeRegistrationOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeTypeRegistrationOutputProgressStatus ProgressStatus { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string Description { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string TypeArn { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string TypeVersionArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeTypeRegistrationOutputProgressStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DetectStackDriftOutput
	{
		
		/// <summary>
		/// Max length: 36
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(36, MinimumLength=1)]
		public string StackDriftDetectionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DetectStackResourceDriftOutput
	{
		
		/// <summary>
		/// <p>Contains the drift information for a resource that has been checked for drift. This includes actual and expected property values for resources in which AWS CloudFormation has detected drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StackResourceDrift StackResourceDrift { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DetectStackSetDriftOutput
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9][-a-zA-Z0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string OperationId { get; set; }
	}
	
	/// <summary>
	/// The output for a <a>EstimateTemplateCost</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EstimateTemplateCostOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// The output for the <a>GetStackPolicy</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetStackPolicyOutput
	{
		
		/// <summary>
		/// Max length: 16384
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(16384, MinimumLength=1)]
		public string StackPolicyBody { get; set; }
	}
	
	/// <summary>
	/// The output for <a>GetTemplate</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetTemplateOutput
	{
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string TemplateBody { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateStage[] StagesAvailable { get; set; }
	}
	
	/// <summary>
	/// The output for the <a>GetTemplateSummary</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetTemplateSummaryOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ParameterDeclaration[] Parameters { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Capability[] Capabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CapabilitiesReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceType[] ResourceTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Metadata { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TransformName[] DeclaredTransforms { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceIdentifierSummary[] ResourceIdentifierSummaries { get; set; }
	}
	
	/// <summary>
	/// The output for the <a>ListChangeSets</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListChangeSetsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ChangeSetSummary[] Summaries { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListExportsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Export[] Exports { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListImportsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StackName[] Imports { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListStackInstancesOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StackInstanceSummary[] Summaries { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The output for a <a>ListStackResources</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListStackResourcesOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StackResourceSummary[] StackResourceSummaries { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListStackSetOperationResultsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationResultSummary[] Summaries { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListStackSetOperationsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationSummary[] Summaries { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListStackSetsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetSummary[] Summaries { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The output for <a>ListStacks</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListStacksOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StackSummary[] StackSummaries { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_COMPLETE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLLBACK_IN_PROGRESS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLLBACK_FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLLBACK_COMPLETE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_IN_PROGRESS = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_FAILED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_COMPLETE = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_IN_PROGRESS = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_COMPLETE_CLEANUP_IN_PROGRESS = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_COMPLETE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_ROLLBACK_IN_PROGRESS = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_ROLLBACK_FAILED = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_ROLLBACK_COMPLETE = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REVIEW_IN_PROGRESS = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_IN_PROGRESS = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_COMPLETE = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_IN_PROGRESS = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_FAILED = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_COMPLETE = 21,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTypeRegistrationsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RegistrationToken[] RegistrationTokenList { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTypeVersionsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TypeVersionSummary[] TypeVersionSummaries { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTypesOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TypeSummary[] TypeSummaries { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RegisterTypeOutput
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9][-a-zA-Z0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string RegistrationToken { get; set; }
	}
	
	/// <summary>
	/// The output for an <a>UpdateStack</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateStackOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateStackInstancesOutput
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9][-a-zA-Z0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string OperationId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateStackSetOutput
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9][-a-zA-Z0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string OperationId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateTerminationProtectionOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
	}
	
	/// <summary>
	/// The output for <a>ValidateTemplate</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ValidateTemplateOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateParameter[] Parameters { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Capability[] Capabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CapabilitiesReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TransformName[] DeclaredTransforms { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AccountGateStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SKIPPED = 2,
	}
	
	/// <summary>
	/// <p>Structure that contains the results of the account gate function which AWS CloudFormation invokes, if present, before proceeding with a stack set operation in an account and Region.</p> <p>For each account and Region, AWS CloudFormation lets you specify a Lamdba function that encapsulates any requirements that must be met before CloudFormation can proceed with a stack set operation in that account and Region. CloudFormation invokes the function each time a stack set operation is requested for that account and Region; if the function returns <code>FAILED</code>, CloudFormation cancels the operation in that account and Region, and sets the stack set operation result status for that account and Region to <code>FAILED</code>. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-account-gating.html">Configuring a target account gate</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AccountGateResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AccountGateResultStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusReason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AccountGateResultStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SKIPPED = 2,
	}
	
	/// <summary>
	/// <p>The AccountLimit data type. </p> <p>CloudFormation has the following limits per account:</p> <ul> <li> <p>Number of concurrent resources</p> </li> <li> <p>Number of stacks</p> </li> <li> <p>Number of stack outputs</p> </li> </ul> <p>For more information about these account limits, and other CloudFormation limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AccountLimit
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Value { get; set; }
	}
	
	/// <summary>
	/// [<code>Service-managed</code> permissions] Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to a target organization or organizational unit (OU).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AutoDeployment
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RetainStacksOnAccountRemoval { get; set; }
	}
	
	/// <summary>
	/// The input for the <a>CancelUpdateStack</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CancelUpdateStackInput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9][-a-zA-Z0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ChangeType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Resource = 0,
	}
	
	/// <summary>
	/// The <code>ResourceChange</code> structure describes the resource and the action that AWS CloudFormation will perform on it if you execute this change set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ResourceChange
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceChangeAction Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LogicalResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhysicalResourceId { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string ResourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceChangeReplacement Replacement { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceAttribute[] Scope { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceChangeDetail[] Details { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ResourceChangeAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Add = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Modify = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Remove = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Import = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ResourceChangeReplacement
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		True = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		False = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Conditional = 2,
	}
	
	/// <summary>
	/// The <code>Change</code> structure describes the changes AWS CloudFormation will perform if you execute the change set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Change
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ChangeType Type { get; set; }
		
		/// <summary>
		/// The <code>ResourceChange</code> structure describes the resource and the action that AWS CloudFormation will perform on it if you execute this change set.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourceChange ResourceChange { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ChangeType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Resource = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ChangeAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Add = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Modify = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Remove = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Import = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ChangeSetStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_COMPLETE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_COMPLETE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 4,
	}
	
	/// <summary>
	/// The <code>ChangeSetSummary</code> structure describes a change set, its status, and the stack with which it's associated.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ChangeSetSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: arn:[-a-zA-Z0-9:/]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string ChangeSetId { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z][-a-zA-Z0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ChangeSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChangeSetSummaryExecutionStatus ExecutionStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChangeSetSummaryStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ChangeSetSummaryExecutionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNAVAILABLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTE_IN_PROGRESS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTE_COMPLETE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTE_FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OBSOLETE = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ChangeSetSummaryStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_COMPLETE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_COMPLETE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ExecutionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNAVAILABLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTE_IN_PROGRESS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTE_COMPLETE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTE_FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OBSOLETE = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ChangeSetType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ChangeSource
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceReference = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ParameterReference = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceAttribute = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DirectModification = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Automatic = 4,
	}
	
	/// <summary>
	/// The input for the <a>ContinueUpdateRollback</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ContinueUpdateRollbackInput
	{
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ([a-zA-Z][-a-zA-Z0-9]*)|(arn:\b(aws|aws-us-gov|aws-cn)\b:[-a-zA-Z0-9:/._+]*)
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string StackName { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string RoleARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceToSkip[] ResourcesToSkip { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9][-a-zA-Z0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
	}
	
	/// <summary>
	/// <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RollbackConfiguration
	{
		
		/// <summary>
		/// Maximum items: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public RollbackTrigger[] RollbackTriggers { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 180
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 180)]
		public System.Nullable<System.Int32> MonitoringTimeInMinutes { get; set; }
	}
	
	/// <summary>
	/// The input for the <a>CreateChangeSet</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateChangeSetInput
	{
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ([a-zA-Z][-a-zA-Z0-9]*)|(arn:\b(aws|aws-us-gov|aws-cn)\b:[-a-zA-Z0-9:/._+]*)
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string StackName { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string TemplateBody { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string TemplateURL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UsePreviousTemplate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Capability[] Capabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceType[] ResourceTypes { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string RoleARN { get; set; }
		
		/// <summary>
		/// <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RollbackConfiguration RollbackConfiguration { get; set; }
		
		/// <summary>
		/// Maximum items: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public NotificationARN[] NotificationARNs { get; set; }
		
		/// <summary>
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z][-a-zA-Z0-9]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ChangeSetName { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CreateChangeSetInputChangeSetType ChangeSetType { get; set; }
		
		/// <summary>
		/// Maximum items: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(200)]
		public ResourceToImport[] ResourcesToImport { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateChangeSetInputChangeSetType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum OnFailure
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DO_NOTHING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLLBACK = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE = 2,
	}
	
	/// <summary>
	/// The input for <a>CreateStack</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateStackInput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string TemplateBody { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string TemplateURL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableRollback { get; set; }
		
		/// <summary>
		/// <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RollbackConfiguration RollbackConfiguration { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> TimeoutInMinutes { get; set; }
		
		/// <summary>
		/// Maximum items: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public NotificationARN[] NotificationARNs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Capability[] Capabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceType[] ResourceTypes { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string RoleARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CreateStackInputOnFailure OnFailure { get; set; }
		
		/// <summary>
		/// Max length: 16384
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(16384, MinimumLength=1)]
		public string StackPolicyBody { get; set; }
		
		/// <summary>
		/// Max length: 1350
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1350, MinimumLength=1)]
		public string StackPolicyURL { get; set; }
		
		/// <summary>
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9][-a-zA-Z0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableTerminationProtection { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateStackInputOnFailure
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DO_NOTHING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLLBACK = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE = 2,
	}
	
	/// <summary>
	/// <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys. StackSets does not deploy stack instances to the organization master account, even if the master account is in your organization or in an OU in your organization.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeploymentTargets
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Account[] Accounts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OrganizationalUnitId[] OrganizationalUnitIds { get; set; }
	}
	
	/// <summary>
	/// <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StackSetOperationPreferences
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Region[] RegionOrder { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> FailureToleranceCount { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 100)]
		public System.Nullable<System.Int32> FailureTolerancePercentage { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> MaxConcurrentCount { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxConcurrentPercentage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateStackInstancesInput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Account[] Accounts { get; set; }
		
		/// <summary>
		/// <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys. StackSets does not deploy stack instances to the organization master account, even if the master account is in your organization or in an OU in your organization.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DeploymentTargets DeploymentTargets { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Region[] Regions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] ParameterOverrides { get; set; }
		
		/// <summary>
		/// <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationPreferences OperationPreferences { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9][-a-zA-Z0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string OperationId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum PermissionModels
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVICE_MANAGED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SELF_MANAGED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateStackSetInput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string Description { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string TemplateBody { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string TemplateURL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Capability[] Capabilities { get; set; }
		
		/// <summary>
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string AdministrationRoleARN { get; set; }
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// Pattern: [a-zA-Z_0-9+=,.@-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string ExecutionRoleName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CreateStackSetInputPermissionModel PermissionModel { get; set; }
		
		/// <summary>
		/// [<code>Service-managed</code> permissions] Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to a target organization or organizational unit (OU).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AutoDeployment AutoDeployment { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9][-a-zA-Z0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateStackSetInputPermissionModel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVICE_MANAGED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SELF_MANAGED = 1,
	}
	
	/// <summary>
	/// The input for the <a>DeleteChangeSet</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteChangeSetInput
	{
		
		/// <summary>
		/// Max length: 1600
		/// Min length: 1
		/// Pattern: [a-zA-Z][-a-zA-Z0-9]*|arn:[-a-zA-Z0-9:/]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1600, MinimumLength=1)]
		public string ChangeSetName { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ([a-zA-Z][-a-zA-Z0-9]*)|(arn:\b(aws|aws-us-gov|aws-cn)\b:[-a-zA-Z0-9:/._+]*)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string StackName { get; set; }
	}
	
	/// <summary>
	/// The input for <a>DeleteStack</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteStackInput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LogicalResourceId[] RetainResources { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string RoleARN { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9][-a-zA-Z0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteStackInstancesInput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Account[] Accounts { get; set; }
		
		/// <summary>
		/// <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys. StackSets does not deploy stack instances to the organization master account, even if the master account is in your organization or in an OU in your organization.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DeploymentTargets DeploymentTargets { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Region[] Regions { get; set; }
		
		/// <summary>
		/// <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationPreferences OperationPreferences { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool RetainStacks { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9][-a-zA-Z0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string OperationId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteStackSetInput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DeprecatedStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEPRECATED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RegistryType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeregisterTypeInput
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:[0-9]{12}:type/.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DeregisterTypeInputType Type { get; set; }
		
		/// <summary>
		/// Max length: 196
		/// Min length: 10
		/// Pattern: [A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(196, MinimumLength=10)]
		public string TypeName { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [A-Za-z0-9-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string VersionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DeregisterTypeInputType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE = 0,
	}
	
	/// <summary>
	/// The input for the <a>DescribeAccountLimits</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeAccountLimitsInput
	{
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The input for the <a>DescribeChangeSet</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeChangeSetInput
	{
		
		/// <summary>
		/// Max length: 1600
		/// Min length: 1
		/// Pattern: [a-zA-Z][-a-zA-Z0-9]*|arn:[-a-zA-Z0-9:/]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1600, MinimumLength=1)]
		public string ChangeSetName { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ([a-zA-Z][-a-zA-Z0-9]*)|(arn:\b(aws|aws-us-gov|aws-cn)\b:[-a-zA-Z0-9:/._+]*)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string StackName { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeStackDriftDetectionStatusInput
	{
		
		/// <summary>
		/// Max length: 36
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(36, MinimumLength=1)]
		public string StackDriftDetectionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackDriftStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DRIFTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_SYNC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_CHECKED = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackDriftDetectionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DETECTION_IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DETECTION_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DETECTION_COMPLETE = 2,
	}
	
	/// <summary>
	/// The input for <a>DescribeStackEvents</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeStackEventsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeStackInstanceInput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		/// <summary>
		/// Pattern: ^[0-9]{12}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackInstanceAccount { get; set; }
		
		/// <summary>
		/// Pattern: ^[a-zA-Z0-9-]{1,128}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackInstanceRegion { get; set; }
	}
	
	/// <summary>
	/// An AWS CloudFormation stack, in a specific account and Region, that's part of a stack set operation. A stack instance is a reference to an attempted or actual stack in a given account within a given Region. A stack instance can exist without a stack—for example, if the stack couldn't be created for some reason. A stack instance is associated with only one stack set. Each stack instance contains the ID of its associated stack set, as well as the ID of the actual stack and the stack status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StackInstance
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackSetId { get; set; }
		
		/// <summary>
		/// Pattern: ^[a-zA-Z0-9-]{1,128}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		/// <summary>
		/// Pattern: ^[0-9]{12}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Account { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] ParameterOverrides { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackInstanceStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusReason { get; set; }
		
		/// <summary>
		/// Pattern: ^(ou-[a-z0-9]{4,32}-[a-z0-9]{8,32}|r-[a-z0-9]{4,32})$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string OrganizationalUnitId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackInstanceDriftStatus DriftStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastDriftCheckTimestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackInstanceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CURRENT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OUTDATED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INOPERABLE = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackInstanceDriftStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DRIFTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_SYNC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_CHECKED = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeStackResourceDriftsInput
	{
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ([a-zA-Z][-a-zA-Z0-9]*)|(arn:\b(aws|aws-us-gov|aws-cn)\b:[-a-zA-Z0-9:/._+]*)
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string StackName { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 4
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(4)]
		public StackResourceDriftStatus[] StackResourceDriftStatusFilters { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	/// <summary>
	/// The input for <a>DescribeStackResource</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeStackResourceInput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LogicalResourceId { get; set; }
	}
	
	/// <summary>
	/// Contains detailed information about the specified stack resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StackResourceDetail
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LogicalResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhysicalResourceId { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string ResourceType { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTimestamp { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StackResourceDetailResourceStatus ResourceStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceStatusReason { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Contains information about whether the resource's actual configuration differs, or has <i>drifted</i>, from its expected configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StackResourceDriftInformation DriftInformation { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackResourceDetailResourceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_COMPLETE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_IN_PROGRESS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_COMPLETE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_SKIPPED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_IN_PROGRESS = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_FAILED = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_COMPLETE = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_FAILED = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_COMPLETE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_IN_PROGRESS = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_IN_PROGRESS = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_FAILED = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_COMPLETE = 15,
	}
	
	/// <summary>
	/// The input for <a>DescribeStackResources</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeStackResourcesInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LogicalResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhysicalResourceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeStackSetInput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeStackSetOperationInput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9][-a-zA-Z0-9]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string OperationId { get; set; }
	}
	
	/// <summary>
	/// The structure that contains information about a stack set operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StackSetOperation
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9][-a-zA-Z0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string OperationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationAction Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationStatus Status { get; set; }
		
		/// <summary>
		/// <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationPreferences OperationPreferences { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RetainStacks { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string AdministrationRoleARN { get; set; }
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// Pattern: [a-zA-Z_0-9+=,.@-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string ExecutionRoleName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EndTimestamp { get; set; }
		
		/// <summary>
		/// <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys. StackSets does not deploy stack instances to the organization master account, even if the master account is in your organization or in an OU in your organization.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DeploymentTargets DeploymentTargets { get; set; }
		
		/// <summary>
		/// <p>Detailed information about the drift status of the stack set.</p> <p>For stack sets, contains information about the last <i>completed</i> drift operation performed on the stack set. Information about drift operations in-progress is not included. </p> <p>For stack set operations, includes information about drift operations currently being performed on the stack set.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">Detecting Unmanaged Changes in Stack Sets</a> in the <i>AWS CloudFormation User Guide</i>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StackSetDriftDetectionDetails StackSetDriftDetectionDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackSetOperationAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DETECT_DRIFT = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackSetOperationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUEUED = 5,
	}
	
	/// <summary>
	/// A structure that contains information about a stack set. A stack set enables you to provision stacks into AWS accounts and across Regions by using a single CloudFormation template. In the stack set, you specify the template to use, as well as any parameters and capabilities that the template requires. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StackSet
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackSetId { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetStatus Status { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string TemplateBody { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Capability[] Capabilities { get; set; }
		
		/// <summary>
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackSetARN { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string AdministrationRoleARN { get; set; }
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// Pattern: [a-zA-Z_0-9+=,.@-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string ExecutionRoleName { get; set; }
		
		/// <summary>
		/// <p>Detailed information about the drift status of the stack set.</p> <p>For stack sets, contains information about the last <i>completed</i> drift operation performed on the stack set. Information about drift operations in-progress is not included. </p> <p>For stack set operations, includes information about drift operations currently being performed on the stack set.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">Detecting Unmanaged Changes in Stack Sets</a> in the <i>AWS CloudFormation User Guide</i>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StackSetDriftDetectionDetails StackSetDriftDetectionDetails { get; set; }
		
		/// <summary>
		/// [<code>Service-managed</code> permissions] Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to a target organization or organizational unit (OU).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AutoDeployment AutoDeployment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetPermissionModel PermissionModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OrganizationalUnitId[] OrganizationalUnitIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackSetStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackSetPermissionModel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVICE_MANAGED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SELF_MANAGED = 1,
	}
	
	/// <summary>
	/// The input for <a>DescribeStacks</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeStacksInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeTypeInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeTypeInputType Type { get; set; }
		
		/// <summary>
		/// Max length: 196
		/// Min length: 10
		/// Pattern: [A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(196, MinimumLength=10)]
		public string TypeName { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string Arn { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [A-Za-z0-9-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string VersionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeTypeInputType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ProvisioningType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NON_PROVISIONABLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMMUTABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FULLY_MUTABLE = 2,
	}
	
	/// <summary>
	/// Contains logging configuration information for a type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class LoggingConfig
	{
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: arn:.+:iam::[0-9]{12}:role/.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string LogRoleArn { get; set; }
		
		/// <summary>
		/// Max length: 512
		/// Min length: 1
		/// Pattern: [\.\-_/#A-Za-z0-9]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(512, MinimumLength=1)]
		public string LogGroupName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum Visibility
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUBLIC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIVATE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeTypeRegistrationInput
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9][-a-zA-Z0-9]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string RegistrationToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RegistrationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DetectStackDriftInput
	{
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ([a-zA-Z][-a-zA-Z0-9]*)|(arn:\b(aws|aws-us-gov|aws-cn)\b:[-a-zA-Z0-9:/._+]*)
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string StackName { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(200)]
		public LogicalResourceId[] LogicalResourceIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DetectStackResourceDriftInput
	{
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ([a-zA-Z][-a-zA-Z0-9]*)|(arn:\b(aws|aws-us-gov|aws-cn)\b:[-a-zA-Z0-9:/._+]*)
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string StackName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LogicalResourceId { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the drift information for a resource that has been checked for drift. This includes actual and expected property values for resources in which AWS CloudFormation has detected drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StackResourceDrift
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LogicalResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhysicalResourceId { get; set; }
		
		/// <summary>
		/// Maximum items: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public PhysicalResourceIdContextKeyValuePair[] PhysicalResourceIdContext { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string ResourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExpectedProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ActualProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PropertyDifference[] PropertyDifferences { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StackResourceDriftStackResourceDriftStatus StackResourceDriftStatus { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset Timestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackResourceDriftStackResourceDriftStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_SYNC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MODIFIED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_CHECKED = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DetectStackSetDriftInput
	{
		
		/// <summary>
		/// Pattern: [a-zA-Z][-a-zA-Z0-9]*(?::[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12})?
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		/// <summary>
		/// <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationPreferences OperationPreferences { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9][-a-zA-Z0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string OperationId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DifferenceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REMOVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_EQUAL = 2,
	}
	
	/// <summary>
	/// The input for an <a>EstimateTemplateCost</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EstimateTemplateCostInput
	{
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string TemplateBody { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string TemplateURL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] Parameters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EvaluationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Static = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Dynamic = 1,
	}
	
	/// <summary>
	/// The input for the <a>ExecuteChangeSet</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ExecuteChangeSetInput
	{
		
		/// <summary>
		/// Max length: 1600
		/// Min length: 1
		/// Pattern: [a-zA-Z][-a-zA-Z0-9]*|arn:[-a-zA-Z0-9:/]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1600, MinimumLength=1)]
		public string ChangeSetName { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ([a-zA-Z][-a-zA-Z0-9]*)|(arn:\b(aws|aws-us-gov|aws-cn)\b:[-a-zA-Z0-9:/._+]*)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string StackName { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9][-a-zA-Z0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
	}
	
	/// <summary>
	/// The <code>Export</code> structure describes the exported output values for a stack.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Export
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ExportingStackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// The input for the <a>GetStackPolicy</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetStackPolicyInput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TemplateStage
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Original = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Processed = 1,
	}
	
	/// <summary>
	/// The input for a <a>GetTemplate</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetTemplateInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		/// <summary>
		/// Max length: 1600
		/// Min length: 1
		/// Pattern: [a-zA-Z][-a-zA-Z0-9]*|arn:[-a-zA-Z0-9:/]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1600, MinimumLength=1)]
		public string ChangeSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GetTemplateInputTemplateStage TemplateStage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GetTemplateInputTemplateStage
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Original = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Processed = 1,
	}
	
	/// <summary>
	/// The input for the <a>GetTemplateSummary</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetTemplateSummaryInput
	{
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string TemplateBody { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string TemplateURL { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ([a-zA-Z][-a-zA-Z0-9]*)|(arn:\b(aws|aws-us-gov|aws-cn)\b:[-a-zA-Z0-9:/._+]*)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string StackName { get; set; }
		
		/// <summary>
		/// Pattern: [a-zA-Z][-a-zA-Z0-9]*(?::[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12})?
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum HandlerErrorCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotUpdatable = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidRequest = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AccessDenied = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidCredentials = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AlreadyExists = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotFound = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceConflict = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Throttling = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ServiceLimitExceeded = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotStabilized = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GeneralServiceException = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ServiceInternalError = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NetworkFailure = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalFailure = 13,
	}
	
	/// <summary>
	/// The input for the <a>ListChangeSets</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListChangeSetsInput
	{
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ([a-zA-Z][-a-zA-Z0-9]*)|(arn:\b(aws|aws-us-gov|aws-cn)\b:[-a-zA-Z0-9:/._+]*)
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string StackName { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListExportsInput
	{
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListImportsInput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ExportName { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListStackInstancesInput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Pattern: ^[0-9]{12}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string StackInstanceAccount { get; set; }
		
		/// <summary>
		/// Pattern: ^[a-zA-Z0-9-]{1,128}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string StackInstanceRegion { get; set; }
	}
	
	/// <summary>
	/// The input for the <a>ListStackResource</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListStackResourcesInput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListStackSetOperationResultsInput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9][-a-zA-Z0-9]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string OperationId { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListStackSetOperationsInput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackSetStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListStackSetsInput
	{
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListStackSetsInputStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListStackSetsInputStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 1,
	}
	
	/// <summary>
	/// The input for <a>ListStacks</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListStacksInput
	{
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackStatus[] StackStatusFilter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTypeRegistrationsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ListTypeRegistrationsInputType Type { get; set; }
		
		/// <summary>
		/// Max length: 196
		/// Min length: 10
		/// Pattern: [A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(196, MinimumLength=10)]
		public string TypeName { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string TypeArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListTypeRegistrationsInputRegistrationStatusFilter RegistrationStatusFilter { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListTypeRegistrationsInputType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListTypeRegistrationsInputRegistrationStatusFilter
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTypeVersionsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ListTypeVersionsInputType Type { get; set; }
		
		/// <summary>
		/// Max length: 196
		/// Min length: 10
		/// Pattern: [A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(196, MinimumLength=10)]
		public string TypeName { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:[0-9]{12}:type/.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string Arn { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListTypeVersionsInputDeprecatedStatus DeprecatedStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListTypeVersionsInputType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListTypeVersionsInputDeprecatedStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEPRECATED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTypesInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ListTypesInputVisibility Visibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListTypesInputProvisioningType ProvisioningType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListTypesInputDeprecatedStatus DeprecatedStatus { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListTypesInputVisibility
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUBLIC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIVATE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListTypesInputProvisioningType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NON_PROVISIONABLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMMUTABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FULLY_MUTABLE = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListTypesInputDeprecatedStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEPRECATED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum OperationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCESS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
	}
	
	/// <summary>
	/// The Output data type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Output
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OutputKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OutputValue { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExportName { get; set; }
	}
	
	/// <summary>
	/// A set of criteria that AWS CloudFormation uses to validate parameter values. Although other constraints might be defined in the stack template, AWS CloudFormation returns only the <code>AllowedValues</code> property.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ParameterConstraints
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AllowedValue[] AllowedValues { get; set; }
	}
	
	/// <summary>
	/// The ParameterDeclaration data type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ParameterDeclaration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ParameterKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ParameterType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> NoEcho { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string Description { get; set; }
		
		/// <summary>
		/// A set of criteria that AWS CloudFormation uses to validate parameter values. Although other constraints might be defined in the stack template, AWS CloudFormation returns only the <code>AllowedValues</code> property.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ParameterConstraints ParameterConstraints { get; set; }
	}
	
	/// <summary>
	/// Context information that enables AWS CloudFormation to uniquely identify a resource. AWS CloudFormation uses context key-value pairs in cases where a resource's logical and physical IDs are not enough to uniquely identify that resource. Each context key-value pair specifies a resource that contains the targeted resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PhysicalResourceIdContextKeyValuePair
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Information about a resource property whose actual value differs from its expected value, as defined in the stack template and any values specified as template parameters. These will be present only for resources whose <code>StackResourceDriftStatus</code> is <code>MODIFIED</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PropertyDifference
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PropertyPath { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ExpectedValue { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ActualValue { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PropertyDifferenceDifferenceType DifferenceType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum PropertyDifferenceDifferenceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REMOVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_EQUAL = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RecordHandlerProgressInput
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string BearerToken { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RecordHandlerProgressInputOperationStatus OperationStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RecordHandlerProgressInputCurrentOperationStatus CurrentOperationStatus { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string StatusMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RecordHandlerProgressInputErrorCode ErrorCode { get; set; }
		
		/// <summary>
		/// Max length: 16384
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(16384, MinimumLength=1)]
		public string ResourceModel { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9][-a-zA-Z0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RecordHandlerProgressInputOperationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCESS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RecordHandlerProgressInputCurrentOperationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCESS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RecordHandlerProgressInputErrorCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotUpdatable = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidRequest = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AccessDenied = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidCredentials = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AlreadyExists = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotFound = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceConflict = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Throttling = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ServiceLimitExceeded = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotStabilized = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GeneralServiceException = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ServiceInternalError = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NetworkFailure = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalFailure = 13,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RegisterTypeInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RegisterTypeInputType Type { get; set; }
		
		/// <summary>
		/// Max length: 196
		/// Min length: 10
		/// Pattern: [A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(196, MinimumLength=10)]
		public string TypeName { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(4096, MinimumLength=1)]
		public string SchemaHandlerPackage { get; set; }
		
		/// <summary>
		/// Contains logging configuration information for a type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LoggingConfig LoggingConfig { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: arn:.+:iam::[0-9]{12}:role/.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string ExecutionRoleArn { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9][-a-zA-Z0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RegisterTypeInputType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum Replacement
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		True = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		False = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Conditional = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RequiresRecreation
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Never = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Conditionally = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Always = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ResourceAttribute
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Properties = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Metadata = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationPolicy = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UpdatePolicy = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeletionPolicy = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Tags = 5,
	}
	
	/// <summary>
	/// The field that AWS CloudFormation will change, such as the name of a resource's property, and whether the resource will be recreated.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ResourceTargetDefinition
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceTargetDefinitionAttribute Attribute { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceTargetDefinitionRequiresRecreation RequiresRecreation { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ResourceTargetDefinitionAttribute
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Properties = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Metadata = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationPolicy = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UpdatePolicy = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeletionPolicy = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Tags = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ResourceTargetDefinitionRequiresRecreation
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Never = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Conditionally = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Always = 2,
	}
	
	/// <summary>
	/// For a resource with <code>Modify</code> as the action, the <code>ResourceChange</code> structure describes the changes AWS CloudFormation will make to that resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ResourceChangeDetail
	{
		
		/// <summary>
		/// The field that AWS CloudFormation will change, such as the name of a resource's property, and whether the resource will be recreated.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourceTargetDefinition Target { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceChangeDetailEvaluation Evaluation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceChangeDetailChangeSource ChangeSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CausingEntity { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ResourceChangeDetailEvaluation
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Static = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Dynamic = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ResourceChangeDetailChangeSource
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceReference = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ParameterReference = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceAttribute = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DirectModification = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Automatic = 4,
	}
	
	/// <summary>
	/// Describes the target resources of a specific type in your import template (for example, all <code>AWS::S3::Bucket</code> resources) and the properties you can provide during the import to identify resources of that type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ResourceIdentifierSummary
	{
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string ResourceType { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(200)]
		public LogicalResourceId[] LogicalResourceIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceIdentifierPropertyKey[] ResourceIdentifiers { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ResourceSignalStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILURE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ResourceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_COMPLETE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_IN_PROGRESS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_COMPLETE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_SKIPPED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_IN_PROGRESS = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_FAILED = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_COMPLETE = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_FAILED = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_COMPLETE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_IN_PROGRESS = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_IN_PROGRESS = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_FAILED = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_COMPLETE = 15,
	}
	
	/// <summary>
	/// A rollback trigger AWS CloudFormation monitors during creation and updating of stacks. If any of the alarms you specify goes to ALARM state during the stack operation or within the specified monitoring period afterwards, CloudFormation rolls back the entire stack operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RollbackTrigger
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// The input for the <a>SetStackPolicy</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SetStackPolicyInput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		/// <summary>
		/// Max length: 16384
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(16384, MinimumLength=1)]
		public string StackPolicyBody { get; set; }
		
		/// <summary>
		/// Max length: 1350
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1350, MinimumLength=1)]
		public string StackPolicyURL { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SetTypeDefaultVersionInput
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:[0-9]{12}:type/.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SetTypeDefaultVersionInputType Type { get; set; }
		
		/// <summary>
		/// Max length: 196
		/// Min length: 10
		/// Pattern: [A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(196, MinimumLength=10)]
		public string TypeName { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [A-Za-z0-9-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string VersionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SetTypeDefaultVersionInputType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE = 0,
	}
	
	/// <summary>
	/// The input for the <a>SignalResource</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SignalResourceInput
	{
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ([a-zA-Z][-a-zA-Z0-9]*)|(arn:\b(aws|aws-us-gov|aws-cn)\b:[-a-zA-Z0-9:/._+]*)
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string StackName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LogicalResourceId { get; set; }
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string UniqueId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SignalResourceInputStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SignalResourceInputStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILURE = 1,
	}
	
	/// <summary>
	/// Contains information about whether the stack's actual configuration differs, or has <i>drifted</i>, from its expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StackDriftInformation
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StackDriftInformationStackDriftStatus StackDriftStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastCheckTimestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackDriftInformationStackDriftStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DRIFTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_SYNC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_CHECKED = 3,
	}
	
	/// <summary>
	/// The Stack data type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Stack
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: arn:[-a-zA-Z0-9:/]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string ChangeSetId { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] Parameters { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> DeletionTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdatedTime { get; set; }
		
		/// <summary>
		/// <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RollbackConfiguration RollbackConfiguration { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StackStackStatus StackStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackStatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableRollback { get; set; }
		
		/// <summary>
		/// Maximum items: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public NotificationARN[] NotificationARNs { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> TimeoutInMinutes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Capability[] Capabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Output[] Outputs { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string RoleARN { get; set; }
		
		/// <summary>
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableTerminationProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ParentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RootId { get; set; }
		
		/// <summary>
		/// Contains information about whether the stack's actual configuration differs, or has <i>drifted</i>, from its expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StackDriftInformation DriftInformation { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackStackStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_COMPLETE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLLBACK_IN_PROGRESS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLLBACK_FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLLBACK_COMPLETE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_IN_PROGRESS = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_FAILED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_COMPLETE = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_IN_PROGRESS = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_COMPLETE_CLEANUP_IN_PROGRESS = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_COMPLETE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_ROLLBACK_IN_PROGRESS = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_ROLLBACK_FAILED = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_ROLLBACK_COMPLETE = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REVIEW_IN_PROGRESS = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_IN_PROGRESS = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_COMPLETE = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_IN_PROGRESS = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_FAILED = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_COMPLETE = 21,
	}
	
	/// <summary>
	/// Contains information about whether the stack's actual configuration differs, or has <i>drifted</i>, from its expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StackDriftInformationSummary
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StackDriftInformationSummaryStackDriftStatus StackDriftStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastCheckTimestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackDriftInformationSummaryStackDriftStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DRIFTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_SYNC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_CHECKED = 3,
	}
	
	/// <summary>
	/// The StackEvent data type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StackEvent
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EventId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LogicalResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhysicalResourceId { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string ResourceType { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset Timestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackEventResourceStatus ResourceStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceStatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceProperties { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9][-a-zA-Z0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackEventResourceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_COMPLETE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_IN_PROGRESS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_COMPLETE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_SKIPPED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_IN_PROGRESS = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_FAILED = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_COMPLETE = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_FAILED = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_COMPLETE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_IN_PROGRESS = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_IN_PROGRESS = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_FAILED = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_COMPLETE = 15,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackInstanceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CURRENT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OUTDATED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INOPERABLE = 2,
	}
	
	/// <summary>
	/// The structure that contains summary information about a stack instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StackInstanceSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackSetId { get; set; }
		
		/// <summary>
		/// Pattern: ^[a-zA-Z0-9-]{1,128}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		/// <summary>
		/// Pattern: ^[0-9]{12}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Account { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackInstanceSummaryStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusReason { get; set; }
		
		/// <summary>
		/// Pattern: ^(ou-[a-z0-9]{4,32}-[a-z0-9]{8,32}|r-[a-z0-9]{4,32})$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string OrganizationalUnitId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackInstanceSummaryDriftStatus DriftStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastDriftCheckTimestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackInstanceSummaryStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CURRENT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OUTDATED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INOPERABLE = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackInstanceSummaryDriftStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DRIFTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_SYNC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_CHECKED = 3,
	}
	
	/// <summary>
	/// Contains information about whether the resource's actual configuration differs, or has <i>drifted</i>, from its expected configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StackResourceDriftInformation
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StackResourceDriftInformationStackResourceDriftStatus StackResourceDriftStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastCheckTimestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackResourceDriftInformationStackResourceDriftStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_SYNC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MODIFIED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_CHECKED = 3,
	}
	
	/// <summary>
	/// The StackResource data type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StackResource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LogicalResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhysicalResourceId { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string ResourceType { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset Timestamp { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StackResourceResourceStatus ResourceStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceStatusReason { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string Description { get; set; }
		
		/// <summary>
		/// Contains information about whether the resource's actual configuration differs, or has <i>drifted</i>, from its expected configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StackResourceDriftInformation DriftInformation { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackResourceResourceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_COMPLETE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_IN_PROGRESS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_COMPLETE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_SKIPPED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_IN_PROGRESS = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_FAILED = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_COMPLETE = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_FAILED = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_COMPLETE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_IN_PROGRESS = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_IN_PROGRESS = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_FAILED = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_COMPLETE = 15,
	}
	
	/// <summary>
	/// Summarizes information about whether the resource's actual configuration differs, or has <i>drifted</i>, from its expected configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StackResourceDriftInformationSummary
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StackResourceDriftInformationSummaryStackResourceDriftStatus StackResourceDriftStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastCheckTimestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackResourceDriftInformationSummaryStackResourceDriftStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_SYNC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MODIFIED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_CHECKED = 3,
	}
	
	/// <summary>
	/// Contains high-level information about the specified stack resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StackResourceSummary
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LogicalResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhysicalResourceId { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string ResourceType { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTimestamp { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StackResourceSummaryResourceStatus ResourceStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceStatusReason { get; set; }
		
		/// <summary>
		/// Summarizes information about whether the resource's actual configuration differs, or has <i>drifted</i>, from its expected configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StackResourceDriftInformationSummary DriftInformation { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackResourceSummaryResourceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_COMPLETE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_IN_PROGRESS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_COMPLETE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_SKIPPED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_IN_PROGRESS = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_FAILED = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_COMPLETE = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_FAILED = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_COMPLETE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_IN_PROGRESS = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_IN_PROGRESS = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_FAILED = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_COMPLETE = 15,
	}
	
	/// <summary>
	/// <p>Detailed information about the drift status of the stack set.</p> <p>For stack sets, contains information about the last <i>completed</i> drift operation performed on the stack set. Information about drift operations in-progress is not included. </p> <p>For stack set operations, includes information about drift operations currently being performed on the stack set.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">Detecting Unmanaged Changes in Stack Sets</a> in the <i>AWS CloudFormation User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StackSetDriftDetectionDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetDriftDetectionDetailsDriftStatus DriftStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetDriftDetectionDetailsDriftDetectionStatus DriftDetectionStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastDriftCheckTimestamp { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> TotalStackInstancesCount { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> DriftedStackInstancesCount { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> InSyncStackInstancesCount { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> InProgressStackInstancesCount { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> FailedStackInstancesCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackSetDriftDetectionDetailsDriftStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DRIFTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_SYNC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_CHECKED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackSetDriftDetectionDetailsDriftDetectionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARTIAL_SUCCESS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackSetDriftStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DRIFTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_SYNC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_CHECKED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackSetDriftDetectionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARTIAL_SUCCESS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackSetOperationAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DETECT_DRIFT = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackSetOperationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUEUED = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackSetOperationResultStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 4,
	}
	
	/// <summary>
	/// The structure that contains information about a specified operation's results for a given account in a given Region.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StackSetOperationResultSummary
	{
		
		/// <summary>
		/// Pattern: ^[0-9]{12}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Account { get; set; }
		
		/// <summary>
		/// Pattern: ^[a-zA-Z0-9-]{1,128}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationResultSummaryStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusReason { get; set; }
		
		/// <summary>
		/// <p>Structure that contains the results of the account gate function which AWS CloudFormation invokes, if present, before proceeding with a stack set operation in an account and Region.</p> <p>For each account and Region, AWS CloudFormation lets you specify a Lamdba function that encapsulates any requirements that must be met before CloudFormation can proceed with a stack set operation in that account and Region. CloudFormation invokes the function each time a stack set operation is requested for that account and Region; if the function returns <code>FAILED</code>, CloudFormation cancels the operation in that account and Region, and sets the stack set operation result status for that account and Region to <code>FAILED</code>. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-account-gating.html">Configuring a target account gate</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AccountGateResult AccountGateResult { get; set; }
		
		/// <summary>
		/// Pattern: ^(ou-[a-z0-9]{4,32}-[a-z0-9]{8,32}|r-[a-z0-9]{4,32})$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string OrganizationalUnitId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackSetOperationResultSummaryStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 4,
	}
	
	/// <summary>
	/// The structures that contain summary information about the specified operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StackSetOperationSummary
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9][-a-zA-Z0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string OperationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationSummaryAction Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationSummaryStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EndTimestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackSetOperationSummaryAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DETECT_DRIFT = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackSetOperationSummaryStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUEUED = 5,
	}
	
	/// <summary>
	/// The structures that contain summary information about the specified stack set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StackSetSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackSetId { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetSummaryStatus Status { get; set; }
		
		/// <summary>
		/// [<code>Service-managed</code> permissions] Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to a target organization or organizational unit (OU).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AutoDeployment AutoDeployment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetSummaryPermissionModel PermissionModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetSummaryDriftStatus DriftStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastDriftCheckTimestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackSetSummaryStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackSetSummaryPermissionModel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVICE_MANAGED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SELF_MANAGED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackSetSummaryDriftStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DRIFTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_SYNC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_CHECKED = 3,
	}
	
	/// <summary>
	/// The StackSummary Data Type
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StackSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateDescription { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> DeletionTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StackSummaryStackStatus StackStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackStatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ParentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RootId { get; set; }
		
		/// <summary>
		/// Contains information about whether the stack's actual configuration differs, or has <i>drifted</i>, from its expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StackDriftInformationSummary DriftInformation { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StackSummaryStackStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_COMPLETE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLLBACK_IN_PROGRESS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLLBACK_FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLLBACK_COMPLETE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_IN_PROGRESS = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_FAILED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_COMPLETE = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_IN_PROGRESS = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_COMPLETE_CLEANUP_IN_PROGRESS = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_COMPLETE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_ROLLBACK_IN_PROGRESS = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_ROLLBACK_FAILED = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_ROLLBACK_COMPLETE = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REVIEW_IN_PROGRESS = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_IN_PROGRESS = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_COMPLETE = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_IN_PROGRESS = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_FAILED = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_COMPLETE = 21,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopStackSetOperationInput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9][-a-zA-Z0-9]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string OperationId { get; set; }
	}
	
	/// <summary>
	/// The TemplateParameter data type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TemplateParameter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ParameterKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> NoEcho { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string Description { get; set; }
	}
	
	/// <summary>
	/// Contains summary information about the specified CloudFormation type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TypeSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TypeSummaryType Type { get; set; }
		
		/// <summary>
		/// Max length: 196
		/// Min length: 10
		/// Pattern: [A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(196, MinimumLength=10)]
		public string TypeName { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [A-Za-z0-9-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string DefaultVersionId { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string TypeArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdated { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TypeSummaryType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE = 0,
	}
	
	/// <summary>
	/// Contains summary information about a specific version of a CloudFormation type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TypeVersionSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TypeVersionSummaryType Type { get; set; }
		
		/// <summary>
		/// Max length: 196
		/// Min length: 10
		/// Pattern: [A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(196, MinimumLength=10)]
		public string TypeName { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [A-Za-z0-9-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string VersionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsDefaultVersion { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> TimeCreated { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TypeVersionSummaryType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE = 0,
	}
	
	/// <summary>
	/// The input for an <a>UpdateStack</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateStackInput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string TemplateBody { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string TemplateURL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UsePreviousTemplate { get; set; }
		
		/// <summary>
		/// Max length: 16384
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(16384, MinimumLength=1)]
		public string StackPolicyDuringUpdateBody { get; set; }
		
		/// <summary>
		/// Max length: 1350
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1350, MinimumLength=1)]
		public string StackPolicyDuringUpdateURL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Capability[] Capabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceType[] ResourceTypes { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string RoleARN { get; set; }
		
		/// <summary>
		/// <p>Structure containing the rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RollbackConfiguration RollbackConfiguration { get; set; }
		
		/// <summary>
		/// Max length: 16384
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(16384, MinimumLength=1)]
		public string StackPolicyBody { get; set; }
		
		/// <summary>
		/// Max length: 1350
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1350, MinimumLength=1)]
		public string StackPolicyURL { get; set; }
		
		/// <summary>
		/// Maximum items: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public NotificationARN[] NotificationARNs { get; set; }
		
		/// <summary>
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9][-a-zA-Z0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateStackInstancesInput
	{
		
		/// <summary>
		/// Pattern: [a-zA-Z][-a-zA-Z0-9]*(?::[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12})?
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Account[] Accounts { get; set; }
		
		/// <summary>
		/// <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys. StackSets does not deploy stack instances to the organization master account, even if the master account is in your organization or in an OU in your organization.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DeploymentTargets DeploymentTargets { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Region[] Regions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] ParameterOverrides { get; set; }
		
		/// <summary>
		/// <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationPreferences OperationPreferences { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9][-a-zA-Z0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string OperationId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateStackSetInput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string Description { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string TemplateBody { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string TemplateURL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UsePreviousTemplate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Capability[] Capabilities { get; set; }
		
		/// <summary>
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// <p>The user-specified preferences for how AWS CloudFormation performs a stack set operation. </p> <p>For more information on maximum concurrent accounts and failure tolerance, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationPreferences OperationPreferences { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string AdministrationRoleARN { get; set; }
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// Pattern: [a-zA-Z_0-9+=,.@-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string ExecutionRoleName { get; set; }
		
		/// <summary>
		/// <p>[<code>Service-managed</code> permissions] The AWS Organizations accounts to which StackSets deploys. StackSets does not deploy stack instances to the organization master account, even if the master account is in your organization or in an OU in your organization.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DeploymentTargets DeploymentTargets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpdateStackSetInputPermissionModel PermissionModel { get; set; }
		
		/// <summary>
		/// [<code>Service-managed</code> permissions] Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to a target organization or organizational unit (OU).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AutoDeployment AutoDeployment { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9][-a-zA-Z0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string OperationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Account[] Accounts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Region[] Regions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateStackSetInputPermissionModel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVICE_MANAGED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SELF_MANAGED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateTerminationProtectionInput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool EnableTerminationProtection { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ([a-zA-Z][-a-zA-Z0-9]*)|(arn:\b(aws|aws-us-gov|aws-cn)\b:[-a-zA-Z0-9:/._+]*)
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string StackName { get; set; }
	}
	
	/// <summary>
	/// The input for <a>ValidateTemplate</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ValidateTemplateInput
	{
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string TemplateBody { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string TemplateURL { get; set; }
	}
	
	public partial class DemoClient
	{
		
		private System.Net.Http.HttpClient client;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public DemoClient(System.Net.Http.HttpClient client, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (client == null)
				throw new ArgumentNullException("Null HttpClient.", "client");

			if (client.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "client");

			this.client = client;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the UPDATE_IN_PROGRESS state.</p> </note>
		/// GET_CancelUpdateStack /#Action=CancelUpdateStack
		/// </summary>
		/// <param name="StackName">The name or the unique stack ID that is associated with the stack.</param>
		/// <param name="ClientRequestToken">A unique identifier for this <code>CancelUpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to cancel an update on a stack with the same name. You might retry <code>CancelUpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.</param>
		/// <returns>Success</returns>
		public async Task GET_CancelUpdateStackAsync(string StackName, string ClientRequestToken, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=CancelUpdateStack?StackName=" + (StackName==null? "" : Uri.EscapeDataString(StackName))+"&ClientRequestToken=" + (ClientRequestToken==null? "" : Uri.EscapeDataString(ClientRequestToken))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>For a specified stack that is in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when AWS CloudFormation cannot roll back all changes after a failed stack update. For example, you might have a stack that is rolling back to an old database instance that was deleted outside of AWS CloudFormation. Because AWS CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
		/// GET_ContinueUpdateRollback /#Action=ContinueUpdateRollback
		/// </summary>
		/// <param name="StackName"><p>The name or the unique ID of the stack that you want to continue rolling back.</p> <note> <p>Don't specify the name of a nested stack (a stack that was created by using the <code>AWS::CloudFormation::Stack</code> resource). Instead, use this operation on the parent stack (the stack that contains the <code>AWS::CloudFormation::Stack</code> resource).</p> </note></param>
		/// <param name="RoleARN"><p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to roll back the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p></param>
		/// <param name="ResourcesToSkip"><p>A list of the logical IDs of the resources that AWS CloudFormation skips during the continue update rollback operation. You can specify only resources that are in the <code>UPDATE_FAILED</code> state because a rollback failed. You can't specify resources that are in the <code>UPDATE_FAILED</code> state for other reasons, for example, because an update was cancelled. To check why a resource update failed, use the <a>DescribeStackResources</a> action, and view the resource status reason. </p> <important> <p>Specify this property to skip rolling back resources that AWS CloudFormation can't successfully roll back. We recommend that you <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> troubleshoot</a> resources before skipping them. AWS CloudFormation sets the status of the specified resources to <code>UPDATE_COMPLETE</code> and continues to roll back the stack. After the rollback is complete, the state of the skipped resources will be inconsistent with the state of the resources in the stack template. Before performing another stack update, you must update the stack or resources to be consistent with each other. If you don't, subsequent stack updates might fail, and the stack will become unrecoverable. </p> </important> <p>Specify the minimum number of resources required to successfully roll back your stack. For example, a failed resource update might cause dependent resources to fail. In this case, it might not be necessary to skip the dependent resources. </p> <p>To skip resources that are part of nested stacks, use the following format: <code>NestedStackName.ResourceLogicalID</code>. If you want to specify the logical ID of a stack resource (<code>Type: AWS::CloudFormation::Stack</code>) in the <code>ResourcesToSkip</code> list, then its corresponding embedded stack must be in one of the following states: <code>DELETE_IN_PROGRESS</code>, <code>DELETE_COMPLETE</code>, or <code>DELETE_FAILED</code>. </p> <note> <p>Don't confuse a child stack's name with its corresponding logical ID defined in the parent stack. For an example of a continue update rollback operation with nested stacks, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-continueupdaterollback.html#nested-stacks">Using ResourcesToSkip to recover a nested stacks hierarchy</a>. </p> </note></param>
		/// <param name="ClientRequestToken">A unique identifier for this <code>ContinueUpdateRollback</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to continue the rollback to a stack with the same name. You might retry <code>ContinueUpdateRollback</code> requests to ensure that AWS CloudFormation successfully received them.</param>
		/// <returns>Success</returns>
		public async Task GET_ContinueUpdateRollbackAsync(string StackName, string RoleARN, ResourceToSkip[] ResourcesToSkip, string ClientRequestToken, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ContinueUpdateRollback?StackName=" + (StackName==null? "" : Uri.EscapeDataString(StackName))+"&RoleARN=" + (RoleARN==null? "" : Uri.EscapeDataString(RoleARN))+"&"+String.Join("&", ResourcesToSkip.Select(z => $"ResourcesToSkip={z}"))+"&ClientRequestToken=" + (ClientRequestToken==null? "" : Uri.EscapeDataString(ClientRequestToken))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that AWS CloudFormation will create. If you create a change set for an existing stack, AWS CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources AWS CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. To create a change set for an import operation, specify <code>IMPORT</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, AWS CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. AWS CloudFormation doesn't make changes until you execute the change set.</p>
		/// GET_CreateChangeSet /#Action=CreateChangeSet
		/// </summary>
		/// <param name="StackName">The name or the unique ID of the stack for which you are creating a change set. AWS CloudFormation generates the change set by comparing this stack's information with the information that you submit, such as a modified template or different parameter input values.</param>
		/// <param name="TemplateBody"><p>A structure that contains the body of the revised template, with a minimum length of 1 byte and a maximum length of 51,200 bytes. AWS CloudFormation generates the change set by comparing this template with the template of the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p></param>
		/// <param name="TemplateURL"><p>The location of the file that contains the revised template. The URL must point to a template (max size: 460,800 bytes) that is located in an S3 bucket. AWS CloudFormation generates the change set by comparing this template with the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p></param>
		/// <param name="UsePreviousTemplate">Whether to reuse the template that is associated with the stack to create the change set.</param>
		/// <param name="Parameters">A list of <code>Parameter</code> structures that specify input parameters for the change set. For more information, see the <a>Parameter</a> data type.</param>
		/// <param name="Capabilities"><p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <note> <p>This capacity does not apply to creating change sets, and specifying it when creating change sets has no effect.</p> <p>Also, change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create or update the stack directly from the template using the <a>CreateStack</a> or <a>UpdateStack</a> action, and specifying this capability.</p> </note> <p>For more information on macros, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul></param>
		/// <param name="ResourceTypes"><p>The template resource types that you have permissions to work with if you execute this change set, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource type that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for condition keys in IAM policies for AWS CloudFormation. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a> in the AWS CloudFormation User Guide.</p></param>
		/// <param name="RoleARN"><p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes when executing the change set. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p></param>
		/// <param name="RollbackConfiguration">The rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</param>
		/// <param name="NotificationARNs">The Amazon Resource Names (ARNs) of Amazon Simple Notification Service (Amazon SNS) topics that AWS CloudFormation associates with the stack. To remove all associated notification topics, specify an empty list.</param>
		/// <param name="Tags">Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to resources in the stack. You can specify a maximum of 50 tags.</param>
		/// <param name="ChangeSetName"><p>The name of the change set. The name must be unique among all change sets that are associated with the specified stack.</p> <p>A change set name can contain only alphanumeric, case sensitive characters and hyphens. It must start with an alphabetic character and cannot exceed 128 characters.</p></param>
		/// <param name="ClientToken">A unique identifier for this <code>CreateChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another change set with the same name. You might retry <code>CreateChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.</param>
		/// <param name="Description">A description to help you identify this change set.</param>
		/// <param name="ChangeSetType"><p>The type of change set operation. To create a change set for a new stack, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code>. To create a change set for an import operation, specify <code>IMPORT</code>.</p> <p>If you create a change set for a new stack, AWS Cloudformation creates a stack with a unique stack ID, but no template or resources. The stack will be in the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-describing-stacks.html#d0e11995"> <code>REVIEW_IN_PROGRESS</code> </a> state until you execute the change set.</p> <p>By default, AWS CloudFormation specifies <code>UPDATE</code>. You can't use the <code>UPDATE</code> type to create a change set for a new stack or the <code>CREATE</code> type to create a change set for an existing stack.</p></param>
		/// <param name="ResourcesToImport">The resources to import into your stack.</param>
		/// <returns>Success</returns>
		public async Task GET_CreateChangeSetAsync(
					string StackName, 
					string TemplateBody, 
					string TemplateURL, 
					bool UsePreviousTemplate, 
					Parameter[] Parameters, 
					Capability[] Capabilities, 
					ResourceType[] ResourceTypes, 
					string RoleARN, 
					string RollbackConfiguration, 
					NotificationARN[] NotificationARNs, 
					Tag[] Tags, 
					string ChangeSetName, 
					string ClientToken, 
					string Description, 
					ChangeSetType ChangeSetType, 
					ResourceToImport[] ResourcesToImport, 
					string Action, 
					string Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=CreateChangeSet?StackName=" + (StackName==null? "" : Uri.EscapeDataString(StackName))+"&TemplateBody=" + (TemplateBody==null? "" : Uri.EscapeDataString(TemplateBody))+"&TemplateURL=" + (TemplateURL==null? "" : Uri.EscapeDataString(TemplateURL))+"&UsePreviousTemplate="+UsePreviousTemplate+"&"+String.Join("&", Parameters.Select(z => $"Parameters={z}"))+"&"+String.Join("&", Capabilities.Select(z => $"Capabilities={z}"))+"&"+String.Join("&", ResourceTypes.Select(z => $"ResourceTypes={z}"))+"&RoleARN=" + (RoleARN==null? "" : Uri.EscapeDataString(RoleARN))+"&RollbackConfiguration=" + (RollbackConfiguration==null? "" : Uri.EscapeDataString(RollbackConfiguration))+"&"+String.Join("&", NotificationARNs.Select(z => $"NotificationARNs={z}"))+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&ChangeSetName=" + (ChangeSetName==null? "" : Uri.EscapeDataString(ChangeSetName))+"&ClientToken=" + (ClientToken==null? "" : Uri.EscapeDataString(ClientToken))+"&Description=" + (Description==null? "" : Uri.EscapeDataString(Description))+"&ChangeSetType=" + ChangeSetType+"&"+String.Join("&", ResourcesToImport.Select(z => $"ResourcesToImport={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack via the <a>DescribeStacks</a> API.
		/// GET_CreateStack /#Action=CreateStack
		/// </summary>
		/// <param name="StackName"><p>The name that is associated with the stack. The name must be unique in the Region in which you are creating the stack.</p> <note> <p>A stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters.</p> </note></param>
		/// <param name="TemplateBody"><p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p></param>
		/// <param name="TemplateURL"><p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p></param>
		/// <param name="Parameters">A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.</param>
		/// <param name="DisableRollback"><p>Set to <code>true</code> to disable rollback of the stack if stack creation failed. You can specify either <code>DisableRollback</code> or <code>OnFailure</code>, but not both.</p> <p>Default: <code>false</code> </p></param>
		/// <param name="RollbackConfiguration">The rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</param>
		/// <param name="TimeoutInMinutes">The amount of time that can pass before the stack status becomes CREATE_FAILED; if <code>DisableRollback</code> is not set or is set to <code>false</code>, the stack will be rolled back.</param>
		/// <param name="NotificationARNs">The Simple Notification Service (SNS) topic ARNs to publish stack related events. You can find your SNS topic ARNs using the SNS console or your Command Line Interface (CLI).</param>
		/// <param name="Capabilities"><p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create the stack directly from the template using this capability.</p> <important> <p>You should only create stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul></param>
		/// <param name="ResourceTypes"><p>The template resource types that you have permissions to work with for this create stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>. Use the following syntax to describe template resource types: <code>AWS::*</code> (for all AWS resource), <code>Custom::*</code> (for all custom resources), <code>Custom::<i>logical_ID</i> </code> (for a specific custom resource), <code>AWS::<i>service_name</i>::*</code> (for all resources of a particular AWS service), and <code>AWS::<i>service_name</i>::<i>resource_logical_ID</i> </code> (for a specific AWS resource).</p> <p>If the list of resource types doesn't include a resource that you're creating, the stack creation fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p></param>
		/// <param name="RoleARN"><p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to create the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p></param>
		/// <param name="OnFailure"><p>Determines what action will be taken if stack creation fails. This must be one of: DO_NOTHING, ROLLBACK, or DELETE. You can specify either <code>OnFailure</code> or <code>DisableRollback</code>, but not both.</p> <p>Default: <code>ROLLBACK</code> </p></param>
		/// <param name="StackPolicyBody">Structure containing the stack policy body. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the <i>AWS CloudFormation User Guide</i>. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</param>
		/// <param name="StackPolicyURL">Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same Region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</param>
		/// <param name="Tags">Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to the resources created in the stack. A maximum number of 50 tags can be specified.</param>
		/// <param name="ClientRequestToken"><p>A unique identifier for this <code>CreateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create a stack with the same name. You might retry <code>CreateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p></param>
		/// <param name="EnableTerminationProtection"><p>Whether to enable termination protection on the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>. Termination protection is disabled on stacks by default. </p> <p> For <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p></param>
		/// <returns>Success</returns>
		public async Task GET_CreateStackAsync(
					string StackName, 
					string TemplateBody, 
					string TemplateURL, 
					Parameter[] Parameters, 
					bool DisableRollback, 
					string RollbackConfiguration, 
					int TimeoutInMinutes, 
					NotificationARN[] NotificationARNs, 
					Capability[] Capabilities, 
					ResourceType[] ResourceTypes, 
					string RoleARN, 
					OnFailure OnFailure, 
					string StackPolicyBody, 
					string StackPolicyURL, 
					Tag[] Tags, 
					string ClientRequestToken, 
					bool EnableTerminationProtection, 
					string Action, 
					string Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=CreateStack?StackName=" + (StackName==null? "" : Uri.EscapeDataString(StackName))+"&TemplateBody=" + (TemplateBody==null? "" : Uri.EscapeDataString(TemplateBody))+"&TemplateURL=" + (TemplateURL==null? "" : Uri.EscapeDataString(TemplateURL))+"&"+String.Join("&", Parameters.Select(z => $"Parameters={z}"))+"&DisableRollback="+DisableRollback+"&RollbackConfiguration=" + (RollbackConfiguration==null? "" : Uri.EscapeDataString(RollbackConfiguration))+"&TimeoutInMinutes="+TimeoutInMinutes+"&"+String.Join("&", NotificationARNs.Select(z => $"NotificationARNs={z}"))+"&"+String.Join("&", Capabilities.Select(z => $"Capabilities={z}"))+"&"+String.Join("&", ResourceTypes.Select(z => $"ResourceTypes={z}"))+"&RoleARN=" + (RoleARN==null? "" : Uri.EscapeDataString(RoleARN))+"&OnFailure=" + OnFailure+"&StackPolicyBody=" + (StackPolicyBody==null? "" : Uri.EscapeDataString(StackPolicyBody))+"&StackPolicyURL=" + (StackPolicyURL==null? "" : Uri.EscapeDataString(StackPolicyURL))+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&ClientRequestToken=" + (ClientRequestToken==null? "" : Uri.EscapeDataString(ClientRequestToken))+"&EnableTerminationProtection="+EnableTerminationProtection+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates stack instances for the specified accounts, within the specified Regions. A stack instance refers to a stack in a specific account and Region. You must specify at least one value for either <code>Accounts</code> or <code>DeploymentTargets</code>, and you must specify at least one value for <code>Regions</code>.
		/// GET_CreateStackInstances /#Action=CreateStackInstances
		/// </summary>
		/// <param name="StackSetName">The name or unique ID of the stack set that you want to create stack instances from.</param>
		/// <param name="Accounts"><p>[<code>Self-managed</code> permissions] The names of one or more AWS accounts that you want to create stack instances in the specified Region(s) for.</p> <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p></param>
		/// <param name="DeploymentTargets"><p>[<code>Service-managed</code> permissions] The AWS Organizations accounts for which to create stack instances in the specified Regions.</p> <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p></param>
		/// <param name="Regions">The names of one or more Regions where you want to create stack instances using the specified AWS account(s). </param>
		/// <param name="ParameterOverrides"><p>A list of stack set parameters whose values you want to override in the selected stack instances.</p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and Regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template.</p></param>
		/// <param name="OperationPreferences">Preferences for how AWS CloudFormation performs this stack set operation.</param>
		/// <param name="OperationId"><p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p></param>
		/// <returns>Success</returns>
		public async Task GET_CreateStackInstancesAsync(string StackSetName, Account[] Accounts, string DeploymentTargets, Region[] Regions, Parameter[] ParameterOverrides, string OperationPreferences, string OperationId, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=CreateStackInstances?StackSetName=" + (StackSetName==null? "" : Uri.EscapeDataString(StackSetName))+"&"+String.Join("&", Accounts.Select(z => $"Accounts={z}"))+"&DeploymentTargets=" + (DeploymentTargets==null? "" : Uri.EscapeDataString(DeploymentTargets))+"&"+String.Join("&", Regions.Select(z => $"Regions={z}"))+"&"+String.Join("&", ParameterOverrides.Select(z => $"ParameterOverrides={z}"))+"&OperationPreferences=" + (OperationPreferences==null? "" : Uri.EscapeDataString(OperationPreferences))+"&OperationId=" + (OperationId==null? "" : Uri.EscapeDataString(OperationId))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a stack set.
		/// GET_CreateStackSet /#Action=CreateStackSet
		/// </summary>
		/// <param name="StackSetName"><p>The name to associate with the stack set. The name must be unique in the Region where you create your stack set.</p> <note> <p>A stack name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 128 characters.</p> </note></param>
		/// <param name="Description">A description of the stack set. You can use the description to identify the stack set's purpose or other important information.</param>
		/// <param name="TemplateBody"><p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p></param>
		/// <param name="TemplateURL"><p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that's located in an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p></param>
		/// <param name="Parameters">The input parameters for the stack set template. </param>
		/// <param name="Capabilities"><p>In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stack sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <note> <p>Stack sets do not currently support macros in stack templates. (This includes the <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </note> </li> </ul></param>
		/// <param name="Tags"><p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.</p> <p>If you specify tags as part of a <code>CreateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you don't, the entire <code>CreateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not created.</p></param>
		/// <param name="AdministrationRoleARN"><p>The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. </p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Prerequisites: Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p></param>
		/// <param name="ExecutionRoleName"><p>The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p></param>
		/// <param name="PermissionModel"><p>Describes how the IAM roles required for stack set operations are created. By default, <code>SELF-MANAGED</code> is specified.</p> <ul> <li> <p>With <code>self-managed</code> permissions, you must create the administrator and execution roles required to deploy to target accounts. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-self-managed.html">Grant Self-Managed Stack Set Permissions</a>.</p> </li> <li> <p>With <code>service-managed</code> permissions, StackSets automatically creates the IAM roles required to deploy to accounts managed by AWS Organizations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-service-managed.html">Grant Service-Managed Stack Set Permissions</a>.</p> </li> </ul></param>
		/// <param name="AutoDeployment">Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to the target organization or organizational unit (OU). Specify only if <code>PermissionModel</code> is <code>SERVICE_MANAGED</code>.</param>
		/// <param name="ClientRequestToken"><p>A unique identifier for this <code>CreateStackSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to create another stack set with the same name. You might retry <code>CreateStackSet</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p></param>
		/// <returns>Success</returns>
		public async Task GET_CreateStackSetAsync(string StackSetName, string Description, string TemplateBody, string TemplateURL, Parameter[] Parameters, Capability[] Capabilities, Tag[] Tags, string AdministrationRoleARN, string ExecutionRoleName, PermissionModels PermissionModel, string AutoDeployment, string ClientRequestToken, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=CreateStackSet?StackSetName=" + (StackSetName==null? "" : Uri.EscapeDataString(StackSetName))+"&Description=" + (Description==null? "" : Uri.EscapeDataString(Description))+"&TemplateBody=" + (TemplateBody==null? "" : Uri.EscapeDataString(TemplateBody))+"&TemplateURL=" + (TemplateURL==null? "" : Uri.EscapeDataString(TemplateURL))+"&"+String.Join("&", Parameters.Select(z => $"Parameters={z}"))+"&"+String.Join("&", Capabilities.Select(z => $"Capabilities={z}"))+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&AdministrationRoleARN=" + (AdministrationRoleARN==null? "" : Uri.EscapeDataString(AdministrationRoleARN))+"&ExecutionRoleName=" + (ExecutionRoleName==null? "" : Uri.EscapeDataString(ExecutionRoleName))+"&PermissionModel=" + PermissionModel+"&AutoDeployment=" + (AutoDeployment==null? "" : Uri.EscapeDataString(AutoDeployment))+"&ClientRequestToken=" + (ClientRequestToken==null? "" : Uri.EscapeDataString(ClientRequestToken))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, AWS CloudFormation successfully deleted the change set.</p>
		/// GET_DeleteChangeSet /#Action=DeleteChangeSet
		/// </summary>
		/// <param name="ChangeSetName">The name or Amazon Resource Name (ARN) of the change set that you want to delete.</param>
		/// <param name="StackName">If you specified the name of a change set to delete, specify the stack name or ID (ARN) that is associated with it.</param>
		/// <returns>Success</returns>
		public async Task GET_DeleteChangeSetAsync(string ChangeSetName, string StackName, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DeleteChangeSet?ChangeSetName=" + (ChangeSetName==null? "" : Uri.EscapeDataString(ChangeSetName))+"&StackName=" + (StackName==null? "" : Uri.EscapeDataString(StackName))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks do not show up in the <a>DescribeStacks</a> API if the deletion has been completed successfully.
		/// GET_DeleteStack /#Action=DeleteStack
		/// </summary>
		/// <param name="StackName">The name or the unique stack ID that is associated with the stack.</param>
		/// <param name="RetainResources"><p>For stacks in the <code>DELETE_FAILED</code> state, a list of resource logical IDs that are associated with the resources you want to retain. During deletion, AWS CloudFormation deletes the stack but does not delete the retained resources.</p> <p>Retaining resources is useful when you cannot delete a resource, such as a non-empty S3 bucket, but you want to delete the stack.</p></param>
		/// <param name="RoleARN"><p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to delete the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p></param>
		/// <param name="ClientRequestToken"><p>A unique identifier for this <code>DeleteStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to delete a stack with the same name. You might retry <code>DeleteStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p></param>
		/// <returns>Success</returns>
		public async Task GET_DeleteStackAsync(string StackName, LogicalResourceId[] RetainResources, string RoleARN, string ClientRequestToken, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DeleteStack?StackName=" + (StackName==null? "" : Uri.EscapeDataString(StackName))+"&"+String.Join("&", RetainResources.Select(z => $"RetainResources={z}"))+"&RoleARN=" + (RoleARN==null? "" : Uri.EscapeDataString(RoleARN))+"&ClientRequestToken=" + (ClientRequestToken==null? "" : Uri.EscapeDataString(ClientRequestToken))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes stack instances for the specified accounts, in the specified Regions.
		/// GET_DeleteStackInstances /#Action=DeleteStackInstances
		/// </summary>
		/// <param name="StackSetName">The name or unique ID of the stack set that you want to delete stack instances for.</param>
		/// <param name="Accounts"><p>[<code>Self-managed</code> permissions] The names of the AWS accounts that you want to delete stack instances for.</p> <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p></param>
		/// <param name="DeploymentTargets"><p>[<code>Service-managed</code> permissions] The AWS Organizations accounts from which to delete stack instances.</p> <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p></param>
		/// <param name="Regions">The Regions where you want to delete stack set instances. </param>
		/// <param name="OperationPreferences">Preferences for how AWS CloudFormation performs this stack set operation.</param>
		/// <param name="RetainStacks"><p>Removes the stack instances from the specified stack set, but doesn't delete the stacks. You can't reassociate a retained stack or add an existing, saved stack to a new stack set.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p></param>
		/// <param name="OperationId"><p>The unique identifier for this stack set operation. </p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You can retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p></param>
		/// <returns>Success</returns>
		public async Task GET_DeleteStackInstancesAsync(string StackSetName, Account[] Accounts, string DeploymentTargets, Region[] Regions, string OperationPreferences, bool RetainStacks, string OperationId, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DeleteStackInstances?StackSetName=" + (StackSetName==null? "" : Uri.EscapeDataString(StackSetName))+"&"+String.Join("&", Accounts.Select(z => $"Accounts={z}"))+"&DeploymentTargets=" + (DeploymentTargets==null? "" : Uri.EscapeDataString(DeploymentTargets))+"&"+String.Join("&", Regions.Select(z => $"Regions={z}"))+"&OperationPreferences=" + (OperationPreferences==null? "" : Uri.EscapeDataString(OperationPreferences))+"&RetainStacks="+RetainStacks+"&OperationId=" + (OperationId==null? "" : Uri.EscapeDataString(OperationId))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a stack set. Before you can delete a stack set, all of its member stack instances must be deleted. For more information about how to do this, see <a>DeleteStackInstances</a>.
		/// GET_DeleteStackSet /#Action=DeleteStackSet
		/// </summary>
		/// <param name="StackSetName">The name or unique ID of the stack set that you're deleting. You can obtain this value by running <a>ListStackSets</a>.</param>
		/// <returns>Success</returns>
		public async Task GET_DeleteStackSetAsync(string StackSetName, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DeleteStackSet?StackSetName=" + (StackSetName==null? "" : Uri.EscapeDataString(StackSetName))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Removes a type or type version from active use in the CloudFormation registry. If a type or type version is deregistered, it cannot be used in CloudFormation operations.</p> <p>To deregister a type, you must individually deregister all registered versions of that type. If a type has only a single registered version, deregistering that version results in the type itself being deregistered. </p> <p>You cannot deregister the default version of a type, unless it is the only registered version of that type, in which case the type itself is deregistered as well. </p>
		/// GET_DeregisterType /#Action=DeregisterType
		/// </summary>
		/// <param name="Arn"><p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p></param>
		/// <param name="Type"><p>The kind of type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p></param>
		/// <param name="TypeName"><p>The name of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p></param>
		/// <param name="VersionId">The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.</param>
		/// <returns>Success</returns>
		public async Task GET_DeregisterTypeAsync(string Arn, DescribeTypeOutputType Type, string TypeName, string VersionId, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DeregisterType?Arn=" + (Arn==null? "" : Uri.EscapeDataString(Arn))+"&Type=" + Type+"&TypeName=" + (TypeName==null? "" : Uri.EscapeDataString(TypeName))+"&VersionId=" + (VersionId==null? "" : Uri.EscapeDataString(VersionId))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves your account's AWS CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">AWS CloudFormation Limits</a> in the <i>AWS CloudFormation User Guide</i>.
		/// GET_DescribeAccountLimits /#Action=DescribeAccountLimits
		/// </summary>
		/// <param name="NextToken">A string that identifies the next page of limits that you want to retrieve.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeAccountLimitsAsync(string NextToken, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeAccountLimits?NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns the inputs for the change set and a list of changes that AWS CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the AWS CloudFormation User Guide.
		/// GET_DescribeChangeSet /#Action=DescribeChangeSet
		/// </summary>
		/// <param name="ChangeSetName">The name or Amazon Resource Name (ARN) of the change set that you want to describe.</param>
		/// <param name="StackName">If you specified the name of a change set, specify the stack name or ID (ARN) of the change set you want to describe.</param>
		/// <param name="NextToken">A string (provided by the <a>DescribeChangeSet</a> response output) that identifies the next page of information that you want to retrieve.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeChangeSetAsync(string ChangeSetName, string StackName, string NextToken, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeChangeSet?ChangeSetName=" + (ChangeSetName==null? "" : Uri.EscapeDataString(ChangeSetName))+"&StackName=" + (StackName==null? "" : Uri.EscapeDataString(StackName))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information on stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
		/// GET_DescribeStackDriftDetectionStatus /#Action=DescribeStackDriftDetectionStatus
		/// </summary>
		/// <param name="StackDriftDetectionId"><p>The ID of the drift detection results of this operation. </p> <p>AWS CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results AWS CloudFormation retains for any given stack, and for how long, may vary. </p></param>
		/// <returns>Success</returns>
		public async Task GET_DescribeStackDriftDetectionStatusAsync(string StackDriftDetectionId, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeStackDriftDetectionStatus?StackDriftDetectionId=" + (StackDriftDetectionId==null? "" : Uri.EscapeDataString(StackDriftDetectionId))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the AWS CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
		/// GET_DescribeStackEvents /#Action=DescribeStackEvents
		/// </summary>
		/// <param name="StackName"><p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p></param>
		/// <param name="NextToken">A string that identifies the next page of events that you want to retrieve.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeStackEventsAsync(string StackName, string NextToken, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeStackEvents?StackName=" + (StackName==null? "" : Uri.EscapeDataString(StackName))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns the stack instance that's associated with the specified stack set, AWS account, and Region.</p> <p>For a list of stack instances that are associated with a specific stack set, use <a>ListStackInstances</a>.</p>
		/// GET_DescribeStackInstance /#Action=DescribeStackInstance
		/// </summary>
		/// <param name="StackSetName">The name or the unique stack ID of the stack set that you want to get stack instance information for.</param>
		/// <param name="StackInstanceAccount">The ID of an AWS account that's associated with this stack instance.</param>
		/// <param name="StackInstanceRegion">The name of a Region that's associated with this stack instance.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeStackInstanceAsync(string StackSetName, string StackInstanceAccount, string StackInstanceRegion, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeStackInstance?StackSetName=" + (StackSetName==null? "" : Uri.EscapeDataString(StackSetName))+"&StackInstanceAccount=" + (StackInstanceAccount==null? "" : Uri.EscapeDataString(StackInstanceAccount))+"&StackInstanceRegion=" + (StackInstanceRegion==null? "" : Uri.EscapeDataString(StackInstanceRegion))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
		/// GET_DescribeStackResource /#Action=DescribeStackResource
		/// </summary>
		/// <param name="StackName"><p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p></param>
		/// <param name="LogicalResourceId"><p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p></param>
		/// <returns>Success</returns>
		public async Task GET_DescribeStackResourceAsync(string StackName, string LogicalResourceId, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeStackResource?StackName=" + (StackName==null? "" : Uri.EscapeDataString(StackName))+"&LogicalResourceId=" + (LogicalResourceId==null? "" : Uri.EscapeDataString(LogicalResourceId))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where AWS CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that have not yet been checked for drift are not included. Resources that do not currently support drift detection are not checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
		/// GET_DescribeStackResourceDrifts /#Action=DescribeStackResourceDrifts
		/// </summary>
		/// <param name="StackName">The name of the stack for which you want drift information.</param>
		/// <param name="StackResourceDriftStatusFilters"><p>The resource drift status values to use as filters for the resource drift results returned.</p> <ul> <li> <p> <code>DELETED</code>: The resource differs from its expected template configuration in that the resource has been deleted.</p> </li> <li> <p> <code>MODIFIED</code>: One or more resource properties differ from their expected template values.</p> </li> <li> <p> <code>IN_SYNC</code>: The resources's actual configuration matches its expected template configuration.</p> </li> <li> <p> <code>NOT_CHECKED</code>: AWS CloudFormation does not currently return this value.</p> </li> </ul></param>
		/// <param name="NextToken">A string that identifies the next page of stack resource drift results.</param>
		/// <param name="MaxResults">The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeStackResourceDriftsAsync(string StackName, StackResourceDriftStatus[] StackResourceDriftStatusFilters, string NextToken, int MaxResults, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeStackResourceDrifts?StackName=" + (StackName==null? "" : Uri.EscapeDataString(StackName))+"&"+String.Join("&", StackResourceDriftStatusFilters.Select(z => $"StackResourceDriftStatusFilters={z}"))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken))+"&MaxResults="+MaxResults+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns AWS resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">AWS CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
		/// GET_DescribeStackResources /#Action=DescribeStackResources
		/// </summary>
		/// <param name="StackName"><p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p> <p>Required: Conditional. If you do not specify <code>StackName</code>, you must specify <code>PhysicalResourceId</code>.</p></param>
		/// <param name="LogicalResourceId"><p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p></param>
		/// <param name="PhysicalResourceId"><p>The name or unique identifier that corresponds to a physical instance ID of a resource supported by AWS CloudFormation.</p> <p>For example, for an Amazon Elastic Compute Cloud (EC2) instance, <code>PhysicalResourceId</code> corresponds to the <code>InstanceId</code>. You can pass the EC2 <code>InstanceId</code> to <code>DescribeStackResources</code> to find which stack the instance belongs to and what other resources are part of the stack.</p> <p>Required: Conditional. If you do not specify <code>PhysicalResourceId</code>, you must specify <code>StackName</code>.</p> <p>Default: There is no default value.</p></param>
		/// <returns>Success</returns>
		public async Task GET_DescribeStackResourcesAsync(string StackName, string LogicalResourceId, string PhysicalResourceId, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeStackResources?StackName=" + (StackName==null? "" : Uri.EscapeDataString(StackName))+"&LogicalResourceId=" + (LogicalResourceId==null? "" : Uri.EscapeDataString(LogicalResourceId))+"&PhysicalResourceId=" + (PhysicalResourceId==null? "" : Uri.EscapeDataString(PhysicalResourceId))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns the description of the specified stack set.
		/// GET_DescribeStackSet /#Action=DescribeStackSet
		/// </summary>
		/// <param name="StackSetName">The name or unique ID of the stack set whose description you want.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeStackSetAsync(string StackSetName, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeStackSet?StackSetName=" + (StackSetName==null? "" : Uri.EscapeDataString(StackSetName))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns the description of the specified stack set operation.
		/// GET_DescribeStackSetOperation /#Action=DescribeStackSetOperation
		/// </summary>
		/// <param name="StackSetName">The name or the unique stack ID of the stack set for the stack operation.</param>
		/// <param name="OperationId">The unique ID of the stack set operation. </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeStackSetOperationAsync(string StackSetName, string OperationId, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeStackSetOperation?StackSetName=" + (StackSetName==null? "" : Uri.EscapeDataString(StackSetName))+"&OperationId=" + (OperationId==null? "" : Uri.EscapeDataString(OperationId))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack does not exist, an <code>AmazonCloudFormationException</code> is returned.</p> </note>
		/// GET_DescribeStacks /#Action=DescribeStacks
		/// </summary>
		/// <param name="StackName"><p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p></param>
		/// <param name="NextToken">A string that identifies the next page of stacks that you want to retrieve.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeStacksAsync(string StackName, string NextToken, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeStacks?StackName=" + (StackName==null? "" : Uri.EscapeDataString(StackName))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns detailed information about a type that has been registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p>
		/// GET_DescribeType /#Action=DescribeType
		/// </summary>
		/// <param name="Type"><p>The kind of type. </p> <p>Currently the only valid value is <code>RESOURCE</code>.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p></param>
		/// <param name="TypeName"><p>The name of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p></param>
		/// <param name="Arn"><p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p></param>
		/// <param name="VersionId"><p>The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific type version. Otherwise, it returns information about the default type version.</p></param>
		/// <returns>Success</returns>
		public async Task GET_DescribeTypeAsync(DescribeTypeOutputType Type, string TypeName, string Arn, string VersionId, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeType?Type=" + Type+"&TypeName=" + (TypeName==null? "" : Uri.EscapeDataString(TypeName))+"&Arn=" + (Arn==null? "" : Uri.EscapeDataString(Arn))+"&VersionId=" + (VersionId==null? "" : Uri.EscapeDataString(VersionId))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns information about a type's registration, including its current status and type and version identifiers.</p> <p>When you initiate a registration request using <code> <a>RegisterType</a> </code>, you can then use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of that registration request.</p> <p>Once the registration request has completed, use <code> <a>DescribeType</a> </code> to return detailed informaiton about a type.</p>
		/// GET_DescribeTypeRegistration /#Action=DescribeTypeRegistration
		/// </summary>
		/// <param name="RegistrationToken"><p>The identifier for this registration request.</p> <p>This registration token is generated by CloudFormation when you initiate a registration request using <code> <a>RegisterType</a> </code>.</p></param>
		/// <returns>Success</returns>
		public async Task GET_DescribeTypeRegistrationAsync(string RegistrationToken, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DescribeTypeRegistration?RegistrationToken=" + (RegistrationToken==null? "" : Uri.EscapeDataString(RegistrationToken))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, AWS CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, AWS CloudFormation does not detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
		/// GET_DetectStackDrift /#Action=DetectStackDrift
		/// </summary>
		/// <param name="StackName">The name of the stack for which you want to detect drift. </param>
		/// <param name="LogicalResourceIds">The logical names of any resources you want to use as filters.</param>
		/// <returns>Success</returns>
		public async Task GET_DetectStackDriftAsync(string StackName, LogicalResourceId[] LogicalResourceIds, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DetectStackDrift?StackName=" + (StackName==null? "" : Uri.EscapeDataString(StackName))+"&"+String.Join("&", LogicalResourceIds.Select(z => $"LogicalResourceIds={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from it's expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which AWS CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that do not currently support drift detection cannot be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
		/// GET_DetectStackResourceDrift /#Action=DetectStackResourceDrift
		/// </summary>
		/// <param name="StackName">The name of the stack to which the resource belongs.</param>
		/// <param name="LogicalResourceId">The logical name of the resource for which to return drift information.</param>
		/// <returns>Success</returns>
		public async Task GET_DetectStackResourceDriftAsync(string StackName, string LogicalResourceId, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DetectStackResourceDrift?StackName=" + (StackName==null? "" : Uri.EscapeDataString(StackName))+"&LogicalResourceId=" + (LogicalResourceId==null? "" : Uri.EscapeDataString(LogicalResourceId))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Detect drift on a stack set. When CloudFormation performs drift detection on a stack set, it performs drift detection on the stack associated with each stack instance in the stack set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">How CloudFormation Performs Drift Detection on a Stack Set</a>.</p> <p> <code>DetectStackSetDrift</code> returns the <code>OperationId</code> of the stack set drift detection operation. Use this operation id with <code> <a>DescribeStackSetOperation</a> </code> to monitor the progress of the drift detection operation. The drift detection operation may take some time, depending on the number of stack instances included in the stack set, as well as the number of resources included in each stack.</p> <p>Once the operation has completed, use the following actions to return drift information:</p> <ul> <li> <p>Use <code> <a>DescribeStackSet</a> </code> to return detailed informaiton about the stack set, including detailed information about the last <i>completed</i> drift operation performed on the stack set. (Information about drift operations that are in progress is not included.)</p> </li> <li> <p>Use <code> <a>ListStackInstances</a> </code> to return a list of stack instances belonging to the stack set, including the drift status and last drift time checked of each instance.</p> </li> <li> <p>Use <code> <a>DescribeStackInstance</a> </code> to return detailed information about a specific stack instance, including its drift status and last drift time checked.</p> </li> </ul> <p>For more information on performing a drift detection operation on a stack set, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">Detecting Unmanaged Changes in Stack Sets</a>. </p> <p>You can only run a single drift detection operation on a given stack set at one time. </p> <p>To stop a drift detection stack set operation, use <code> <a>StopStackSetOperation</a> </code>.</p>
		/// GET_DetectStackSetDrift /#Action=DetectStackSetDrift
		/// </summary>
		/// <param name="StackSetName">The name of the stack set on which to perform the drift detection operation.</param>
		/// <param name="OperationId"> <i>The ID of the stack set operation.</i> </param>
		/// <returns>Success</returns>
		public async Task GET_DetectStackSetDriftAsync(string StackSetName, string OperationPreferences, string OperationId, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=DetectStackSetDrift?StackSetName=" + (StackSetName==null? "" : Uri.EscapeDataString(StackSetName))+"&OperationPreferences=" + (OperationPreferences==null? "" : Uri.EscapeDataString(OperationPreferences))+"&OperationId=" + (OperationId==null? "" : Uri.EscapeDataString(OperationId))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns the estimated monthly cost of a template. The return value is an AWS Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
		/// GET_EstimateTemplateCost /#Action=EstimateTemplateCost
		/// </summary>
		/// <param name="TemplateBody"><p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must pass <code>TemplateBody</code> or <code>TemplateURL</code>. If both are passed, only <code>TemplateBody</code> is used.</p></param>
		/// <param name="TemplateURL"><p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p></param>
		/// <param name="Parameters">A list of <code>Parameter</code> structures that specify input parameters.</param>
		/// <returns>Success</returns>
		public async Task GET_EstimateTemplateCostAsync(string TemplateBody, string TemplateURL, Parameter[] Parameters, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=EstimateTemplateCost?TemplateBody=" + (TemplateBody==null? "" : Uri.EscapeDataString(TemplateBody))+"&TemplateURL=" + (TemplateURL==null? "" : Uri.EscapeDataString(TemplateURL))+"&"+String.Join("&", Parameters.Select(z => $"Parameters={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, AWS CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, AWS CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, AWS CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p>
		/// GET_ExecuteChangeSet /#Action=ExecuteChangeSet
		/// </summary>
		/// <param name="ChangeSetName">The name or ARN of the change set that you want use to update the specified stack.</param>
		/// <param name="StackName">If you specified the name of a change set, specify the stack name or ID (ARN) that is associated with the change set you want to execute.</param>
		/// <param name="ClientRequestToken">A unique identifier for this <code>ExecuteChangeSet</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to execute a change set to update a stack with the same name. You might retry <code>ExecuteChangeSet</code> requests to ensure that AWS CloudFormation successfully received them.</param>
		/// <returns>Success</returns>
		public async Task GET_ExecuteChangeSetAsync(string ChangeSetName, string StackName, string ClientRequestToken, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ExecuteChangeSet?ChangeSetName=" + (ChangeSetName==null? "" : Uri.EscapeDataString(ChangeSetName))+"&StackName=" + (StackName==null? "" : Uri.EscapeDataString(StackName))+"&ClientRequestToken=" + (ClientRequestToken==null? "" : Uri.EscapeDataString(ClientRequestToken))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
		/// GET_GetStackPolicy /#Action=GetStackPolicy
		/// </summary>
		/// <param name="StackName">The name or unique stack ID that is associated with the stack whose policy you want to get.</param>
		/// <returns>Success</returns>
		public async Task GET_GetStackPolicyAsync(string StackName, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=GetStackPolicy?StackName=" + (StackName==null? "" : Uri.EscapeDataString(StackName))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, GetTemplate returns the template for up to 90 days after the stack has been deleted.</p> <note> <p> If the template does not exist, a <code>ValidationError</code> is returned. </p> </note>
		/// GET_GetTemplate /#Action=GetTemplate
		/// </summary>
		/// <param name="StackName"><p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p></param>
		/// <param name="ChangeSetName">The name or Amazon Resource Name (ARN) of a change set for which AWS CloudFormation returns the associated template. If you specify a name, you must also specify the <code>StackName</code>.</param>
		/// <param name="TemplateStage"><p>For templates that include transforms, the stage of the template that AWS CloudFormation returns. To get the user-submitted template, specify <code>Original</code>. To get the template after AWS CloudFormation has processed all transforms, specify <code>Processed</code>. </p> <p>If the template doesn't include transforms, <code>Original</code> and <code>Processed</code> return the same template. By default, AWS CloudFormation specifies <code>Original</code>. </p></param>
		/// <returns>Success</returns>
		public async Task GET_GetTemplateAsync(string StackName, string ChangeSetName, TemplateStage TemplateStage, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=GetTemplate?StackName=" + (StackName==null? "" : Uri.EscapeDataString(StackName))+"&ChangeSetName=" + (ChangeSetName==null? "" : Uri.EscapeDataString(ChangeSetName))+"&TemplateStage=" + TemplateStage+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template does not exist, a <code>ValidationError</code> is returned.</p>
		/// GET_GetTemplateSummary /#Action=GetTemplateSummary
		/// </summary>
		/// <param name="TemplateBody"><p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information about templates, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p></param>
		/// <param name="TemplateURL"><p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information about templates, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p></param>
		/// <param name="StackName"><p>The name or the stack ID that is associated with the stack, which are not always interchangeable. For running stacks, you can specify either the stack's name or its unique stack ID. For deleted stack, you must specify the unique stack ID.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p></param>
		/// <param name="StackSetName"><p>The name or unique ID of the stack set from which the stack was created.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p></param>
		/// <returns>Success</returns>
		public async Task GET_GetTemplateSummaryAsync(string TemplateBody, string TemplateURL, string StackName, string StackSetName, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=GetTemplateSummary?TemplateBody=" + (TemplateBody==null? "" : Uri.EscapeDataString(TemplateBody))+"&TemplateURL=" + (TemplateURL==null? "" : Uri.EscapeDataString(TemplateURL))+"&StackName=" + (StackName==null? "" : Uri.EscapeDataString(StackName))+"&StackSetName=" + (StackSetName==null? "" : Uri.EscapeDataString(StackSetName))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
		/// GET_ListChangeSets /#Action=ListChangeSets
		/// </summary>
		/// <param name="StackName">The name or the Amazon Resource Name (ARN) of the stack for which you want to list change sets.</param>
		/// <param name="NextToken">A string (provided by the <a>ListChangeSets</a> response output) that identifies the next page of change sets that you want to retrieve.</param>
		/// <returns>Success</returns>
		public async Task GET_ListChangeSetsAsync(string StackName, string NextToken, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ListChangeSets?StackName=" + (StackName==null? "" : Uri.EscapeDataString(StackName))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Lists all exported output values in the account and Region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> AWS CloudFormation Export Stack Output Values</a>.</p>
		/// GET_ListExports /#Action=ListExports
		/// </summary>
		/// <param name="NextToken">A string (provided by the <a>ListExports</a> response output) that identifies the next page of exported output values that you asked to retrieve.</param>
		/// <returns>Success</returns>
		public async Task GET_ListExportsAsync(string NextToken, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ListExports?NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>. </p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> <code>Fn::ImportValue</code> </a> function. </p>
		/// GET_ListImports /#Action=ListImports
		/// </summary>
		/// <param name="ExportName">The name of the exported output value. AWS CloudFormation returns the stack names that are importing this value. </param>
		/// <param name="NextToken">A string (provided by the <a>ListImports</a> response output) that identifies the next page of stacks that are importing the specified exported output value. </param>
		/// <returns>Success</returns>
		public async Task GET_ListImportsAsync(string ExportName, string NextToken, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ListImports?ExportName=" + (ExportName==null? "" : Uri.EscapeDataString(ExportName))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific AWS account name or Region.
		/// GET_ListStackInstances /#Action=ListStackInstances
		/// </summary>
		/// <param name="StackSetName">The name or unique ID of the stack set that you want to list stack instances for.</param>
		/// <param name="NextToken">If the previous request didn't return all of the remaining results, the response's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackInstances</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.</param>
		/// <param name="MaxResults">The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.</param>
		/// <param name="StackInstanceAccount">The name of the AWS account that you want to list stack instances for.</param>
		/// <param name="StackInstanceRegion">The name of the Region where you want to list stack instances. </param>
		/// <returns>Success</returns>
		public async Task GET_ListStackInstancesAsync(string StackSetName, string NextToken, int MaxResults, string StackInstanceAccount, string StackInstanceRegion, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ListStackInstances?StackSetName=" + (StackSetName==null? "" : Uri.EscapeDataString(StackSetName))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken))+"&MaxResults="+MaxResults+"&StackInstanceAccount=" + (StackInstanceAccount==null? "" : Uri.EscapeDataString(StackInstanceAccount))+"&StackInstanceRegion=" + (StackInstanceRegion==null? "" : Uri.EscapeDataString(StackInstanceRegion))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
		/// GET_ListStackResources /#Action=ListStackResources
		/// </summary>
		/// <param name="StackName"><p>The name or the unique stack ID that is associated with the stack, which are not always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p></param>
		/// <param name="NextToken">A string that identifies the next page of stack resources that you want to retrieve.</param>
		/// <returns>Success</returns>
		public async Task GET_ListStackResourcesAsync(string StackName, string NextToken, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ListStackResources?StackName=" + (StackName==null? "" : Uri.EscapeDataString(StackName))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns summary information about the results of a stack set operation.
		/// GET_ListStackSetOperationResults /#Action=ListStackSetOperationResults
		/// </summary>
		/// <param name="StackSetName">The name or unique ID of the stack set that you want to get operation results for.</param>
		/// <param name="OperationId">The ID of the stack set operation.</param>
		/// <param name="NextToken">If the previous request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperationResults</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.</param>
		/// <param name="MaxResults">The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.</param>
		/// <returns>Success</returns>
		public async Task GET_ListStackSetOperationResultsAsync(string StackSetName, string OperationId, string NextToken, int MaxResults, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ListStackSetOperationResults?StackSetName=" + (StackSetName==null? "" : Uri.EscapeDataString(StackSetName))+"&OperationId=" + (OperationId==null? "" : Uri.EscapeDataString(OperationId))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken))+"&MaxResults="+MaxResults+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns summary information about operations performed on a stack set.
		/// GET_ListStackSetOperations /#Action=ListStackSetOperations
		/// </summary>
		/// <param name="StackSetName">The name or unique ID of the stack set that you want to get operation summaries for.</param>
		/// <param name="NextToken">If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperations</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.</param>
		/// <param name="MaxResults">The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.</param>
		/// <returns>Success</returns>
		public async Task GET_ListStackSetOperationsAsync(string StackSetName, string NextToken, int MaxResults, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ListStackSetOperations?StackSetName=" + (StackSetName==null? "" : Uri.EscapeDataString(StackSetName))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken))+"&MaxResults="+MaxResults+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns summary information about stack sets that are associated with the user.
		/// GET_ListStackSets /#Action=ListStackSets
		/// </summary>
		/// <param name="NextToken">If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSets</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.</param>
		/// <param name="MaxResults">The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.</param>
		/// <param name="Status">The status of the stack sets that you want to get summary information about.</param>
		/// <returns>Success</returns>
		public async Task GET_ListStackSetsAsync(string NextToken, int MaxResults, StackSetStatus Status, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ListStackSets?NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken))+"&MaxResults="+MaxResults+"&Status=" + Status+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
		/// GET_ListStacks /#Action=ListStacks
		/// </summary>
		/// <param name="NextToken">A string that identifies the next page of stacks that you want to retrieve.</param>
		/// <param name="StackStatusFilter">Stack status to use as a filter. Specify one or more stack status codes to list only stacks with the specified status codes. For a complete list of stack status codes, see the <code>StackStatus</code> parameter of the <a>Stack</a> data type.</param>
		/// <returns>Success</returns>
		public async Task GET_ListStacksAsync(string NextToken, StackStatus[] StackStatusFilter, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ListStacks?NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken))+"&"+String.Join("&", StackStatusFilter.Select(z => $"StackStatusFilter={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of registration tokens for the specified type(s).
		/// GET_ListTypeRegistrations /#Action=ListTypeRegistrations
		/// </summary>
		/// <param name="Type"><p>The kind of type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p></param>
		/// <param name="TypeName"><p>The name of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p></param>
		/// <param name="TypeArn"><p>The Amazon Resource Name (ARN) of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p></param>
		/// <param name="RegistrationStatusFilter"><p>The current status of the type registration request.</p> <p>The default is <code>IN_PROGRESS</code>.</p></param>
		/// <param name="MaxResults">The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.</param>
		/// <param name="NextToken">If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_ListTypeRegistrationsAsync(DescribeTypeOutputType Type, string TypeName, string TypeArn, DescribeTypeRegistrationOutputProgressStatus RegistrationStatusFilter, int MaxResults, string NextToken, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ListTypeRegistrations?Type=" + Type+"&TypeName=" + (TypeName==null? "" : Uri.EscapeDataString(TypeName))+"&TypeArn=" + (TypeArn==null? "" : Uri.EscapeDataString(TypeArn))+"&RegistrationStatusFilter=" + RegistrationStatusFilter+"&MaxResults="+MaxResults+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns summary information about the versions of a type.
		/// GET_ListTypeVersions /#Action=ListTypeVersions
		/// </summary>
		/// <param name="Type"><p>The kind of the type.</p> <p>Currently the only valid value is <code>RESOURCE</code>.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p></param>
		/// <param name="TypeName"><p>The name of the type for which you want version summary information.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p></param>
		/// <param name="Arn"><p>The Amazon Resource Name (ARN) of the type for which you want version summary information.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p></param>
		/// <param name="MaxResults">The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.</param>
		/// <param name="NextToken">If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.</param>
		/// <param name="DeprecatedStatus"><p>The deprecation status of the type versions that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The type version is registered and can be used in CloudFormation operations, dependent on its provisioning behavior and visibility scope.</p> </li> <li> <p> <code>DEPRECATED</code>: The type version has been deregistered and can no longer be used in CloudFormation operations. </p> </li> </ul> <p>The default is <code>LIVE</code>.</p></param>
		/// <returns>Success</returns>
		public async Task GET_ListTypeVersionsAsync(DescribeTypeOutputType Type, string TypeName, string Arn, int MaxResults, string NextToken, DescribeTypeOutputDeprecatedStatus DeprecatedStatus, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ListTypeVersions?Type=" + Type+"&TypeName=" + (TypeName==null? "" : Uri.EscapeDataString(TypeName))+"&Arn=" + (Arn==null? "" : Uri.EscapeDataString(Arn))+"&MaxResults="+MaxResults+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken))+"&DeprecatedStatus=" + DeprecatedStatus+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns summary information about types that have been registered with CloudFormation.
		/// GET_ListTypes /#Action=ListTypes
		/// </summary>
		/// <param name="Visibility"><p>The scope at which the type is visible and usable in CloudFormation operations.</p> <p>Valid values include:</p> <ul> <li> <p> <code>PRIVATE</code>: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you create as <code>PRIVATE</code>.</p> </li> <li> <p> <code>PUBLIC</code>: The type is publically visible and usable within any Amazon account.</p> </li> </ul> <p>The default is <code>PRIVATE</code>.</p></param>
		/// <param name="ProvisioningType"><p>The provisioning behavior of the type. AWS CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.</p> <p>Valid values include:</p> <ul> <li> <p> <code>FULLY_MUTABLE</code>: The type includes an update handler to process updates to the type during stack update operations.</p> </li> <li> <p> <code>IMMUTABLE</code>: The type does not include an update handler, so the type cannot be updated and must instead be replaced during stack update operations.</p> </li> <li> <p> <code>NON_PROVISIONABLE</code>: The type does not include create, read, and delete handlers, and therefore cannot actually be provisioned.</p> </li> </ul></param>
		/// <param name="DeprecatedStatus"><p>The deprecation status of the types that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The type is registered for use in CloudFormation operations.</p> </li> <li> <p> <code>DEPRECATED</code>: The type has been deregistered and can no longer be used in CloudFormation operations. </p> </li> </ul></param>
		/// <param name="MaxResults">The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.</param>
		/// <param name="NextToken">If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_ListTypesAsync(DescribeTypeOutputVisibility Visibility, DescribeTypeOutputProvisioningType ProvisioningType, DescribeTypeOutputDeprecatedStatus DeprecatedStatus, int MaxResults, string NextToken, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ListTypes?Visibility=" + Visibility+"&ProvisioningType=" + ProvisioningType+"&DeprecatedStatus=" + DeprecatedStatus+"&MaxResults="+MaxResults+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Reports progress of a resource handler to CloudFormation.</p> <p>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>. Do not use this API in your code.</p>
		/// GET_RecordHandlerProgress /#Action=RecordHandlerProgress
		/// </summary>
		/// <param name="BearerToken">Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.</param>
		/// <param name="OperationStatus">Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.</param>
		/// <param name="CurrentOperationStatus">Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.</param>
		/// <param name="StatusMessage">Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.</param>
		/// <param name="ErrorCode">Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.</param>
		/// <param name="ResourceModel">Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.</param>
		/// <param name="ClientRequestToken">Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.</param>
		/// <returns>Success</returns>
		public async Task GET_RecordHandlerProgressAsync(string BearerToken, OperationStatus OperationStatus, OperationStatus CurrentOperationStatus, string StatusMessage, HandlerErrorCode ErrorCode, string ResourceModel, string ClientRequestToken, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=RecordHandlerProgress?BearerToken=" + (BearerToken==null? "" : Uri.EscapeDataString(BearerToken))+"&OperationStatus=" + OperationStatus+"&CurrentOperationStatus=" + CurrentOperationStatus+"&StatusMessage=" + (StatusMessage==null? "" : Uri.EscapeDataString(StatusMessage))+"&ErrorCode=" + ErrorCode+"&ResourceModel=" + (ResourceModel==null? "" : Uri.EscapeDataString(ResourceModel))+"&ClientRequestToken=" + (ClientRequestToken==null? "" : Uri.EscapeDataString(ClientRequestToken))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Registers a type with the CloudFormation service. Registering a type makes it available for use in CloudFormation templates in your AWS account, and includes:</p> <ul> <li> <p>Validating the resource schema</p> </li> <li> <p>Determining which handlers have been specified for the resource</p> </li> <li> <p>Making the resource type available for use in your account</p> </li> </ul> <p>For more information on how to develop types and ready them for registeration, see <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-types.html">Creating Resource Providers</a> in the <i>CloudFormation CLI User Guide</i>.</p> <p>You can have a maximum of 50 resource type versions registered at a time. This maximum is per account and per region. Use <a href="AWSCloudFormation/latest/APIReference/API_DeregisterType.html">DeregisterType</a> to deregister specific resource type versions if necessary.</p> <p>Once you have initiated a registration request using <code> <a>RegisterType</a> </code>, you can use <code> <a>DescribeTypeRegistration</a> </code> to monitor the progress of the registration request.</p>
		/// GET_RegisterType /#Action=RegisterType
		/// </summary>
		/// <param name="Type"><p>The kind of type.</p> <p>Currently, the only valid value is <code>RESOURCE</code>.</p></param>
		/// <param name="TypeName"><p>The name of the type being registered.</p> <p>We recommend that type names adhere to the following pattern: <i>company_or_organization</i>::<i>service</i>::<i>type</i>.</p> <note> <p>The following organization namespaces are reserved and cannot be used in your resource type names:</p> <ul> <li> <p> <code>Alexa</code> </p> </li> <li> <p> <code>AMZN</code> </p> </li> <li> <p> <code>Amazon</code> </p> </li> <li> <p> <code>AWS</code> </p> </li> <li> <p> <code>Custom</code> </p> </li> <li> <p> <code>Dev</code> </p> </li> </ul> </note></param>
		/// <param name="SchemaHandlerPackage"><p>A url to the S3 bucket containing the schema handler package that contains the schema, event handlers, and associated files for the type you want to register.</p> <p>For information on generating a schema handler package for the type you want to register, see <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-cli-submit.html">submit</a> in the <i>CloudFormation CLI User Guide</i>.</p> <note> <p>As part of registering a resource provider type, CloudFormation must be able to access the S3 bucket which contains the schema handler package for that resource provider. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry.html#registry-register-permissions">IAM Permissions for Registering a Resource Provider</a> in the <i>AWS CloudFormation User Guide</i>.</p> </note></param>
		/// <param name="LoggingConfig">Specifies logging configuration information for a type.</param>
		/// <param name="ExecutionRoleArn">The Amazon Resource Name (ARN) of the IAM execution role to use to register the type. If your resource type calls AWS APIs in any of its handlers, you must create an <i> <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html">IAM execution role</a> </i> that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. CloudFormation then assumes that execution role to provide your resource type with the appropriate credentials.</param>
		/// <param name="ClientRequestToken">A unique identifier that acts as an idempotency key for this registration request. Specifying a client request token prevents CloudFormation from generating more than one version of a type from the same registeration request, even if the request is submitted multiple times. </param>
		/// <returns>Success</returns>
		public async Task GET_RegisterTypeAsync(DescribeTypeOutputType Type, string TypeName, string SchemaHandlerPackage, string LoggingConfig, string ExecutionRoleArn, string ClientRequestToken, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=RegisterType?Type=" + Type+"&TypeName=" + (TypeName==null? "" : Uri.EscapeDataString(TypeName))+"&SchemaHandlerPackage=" + (SchemaHandlerPackage==null? "" : Uri.EscapeDataString(SchemaHandlerPackage))+"&LoggingConfig=" + (LoggingConfig==null? "" : Uri.EscapeDataString(LoggingConfig))+"&ExecutionRoleArn=" + (ExecutionRoleArn==null? "" : Uri.EscapeDataString(ExecutionRoleArn))+"&ClientRequestToken=" + (ClientRequestToken==null? "" : Uri.EscapeDataString(ClientRequestToken))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Sets a stack policy for a specified stack.
		/// GET_SetStackPolicy /#Action=SetStackPolicy
		/// </summary>
		/// <param name="StackName">The name or unique stack ID that you want to associate a policy with.</param>
		/// <param name="StackPolicyBody">Structure containing the stack policy body. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the AWS CloudFormation User Guide. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</param>
		/// <param name="StackPolicyURL">Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same Region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</param>
		/// <returns>Success</returns>
		public async Task GET_SetStackPolicyAsync(string StackName, string StackPolicyBody, string StackPolicyURL, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=SetStackPolicy?StackName=" + (StackName==null? "" : Uri.EscapeDataString(StackName))+"&StackPolicyBody=" + (StackPolicyBody==null? "" : Uri.EscapeDataString(StackPolicyBody))+"&StackPolicyURL=" + (StackPolicyURL==null? "" : Uri.EscapeDataString(StackPolicyURL))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Specify the default version of a type. The default version of a type will be used in CloudFormation operations.
		/// GET_SetTypeDefaultVersion /#Action=SetTypeDefaultVersion
		/// </summary>
		/// <param name="Arn"><p>The Amazon Resource Name (ARN) of the type for which you want version summary information.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p></param>
		/// <param name="Type"><p>The kind of type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p></param>
		/// <param name="TypeName"><p>The name of the type.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p></param>
		/// <param name="VersionId">The ID of a specific version of the type. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the type version when it is registered.</param>
		/// <returns>Success</returns>
		public async Task GET_SetTypeDefaultVersionAsync(string Arn, DescribeTypeOutputType Type, string TypeName, string VersionId, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=SetTypeDefaultVersion?Arn=" + (Arn==null? "" : Uri.EscapeDataString(Arn))+"&Type=" + Type+"&TypeName=" + (TypeName==null? "" : Uri.EscapeDataString(TypeName))+"&VersionId=" + (VersionId==null? "" : Uri.EscapeDataString(VersionId))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Sends a signal to the specified resource with a success or failure status. You can use the SignalResource API in conjunction with a creation policy or update policy. AWS CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The SignalResource API is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
		/// GET_SignalResource /#Action=SignalResource
		/// </summary>
		/// <param name="StackName">The stack name or unique stack ID that includes the resource that you want to signal.</param>
		/// <param name="LogicalResourceId">The logical ID of the resource that you want to signal. The logical ID is the name of the resource that given in the template.</param>
		/// <param name="UniqueId">A unique ID of the signal. When you signal Amazon EC2 instances or Auto Scaling groups, specify the instance ID that you are signaling as the unique ID. If you send multiple signals to a single resource (such as signaling a wait condition), each signal requires a different unique ID.</param>
		/// <param name="Status">The status of the signal, which is either success or failure. A failure signal causes AWS CloudFormation to immediately fail the stack creation or update.</param>
		/// <returns>Success</returns>
		public async Task GET_SignalResourceAsync(string StackName, string LogicalResourceId, string UniqueId, ResourceSignalStatus Status, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=SignalResource?StackName=" + (StackName==null? "" : Uri.EscapeDataString(StackName))+"&LogicalResourceId=" + (LogicalResourceId==null? "" : Uri.EscapeDataString(LogicalResourceId))+"&UniqueId=" + (UniqueId==null? "" : Uri.EscapeDataString(UniqueId))+"&Status=" + Status+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Stops an in-progress operation on a stack set and its associated stack instances.
		/// GET_StopStackSetOperation /#Action=StopStackSetOperation
		/// </summary>
		/// <param name="StackSetName">The name or unique ID of the stack set that you want to stop the operation for.</param>
		/// <param name="OperationId">The ID of the stack operation. </param>
		/// <returns>Success</returns>
		public async Task GET_StopStackSetOperationAsync(string StackSetName, string OperationId, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=StopStackSetOperation?StackSetName=" + (StackSetName==null? "" : Uri.EscapeDataString(StackSetName))+"&OperationId=" + (OperationId==null? "" : Uri.EscapeDataString(OperationId))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack via the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
		/// GET_UpdateStack /#Action=UpdateStack
		/// </summary>
		/// <param name="StackName">The name or unique stack ID of the stack to update.</param>
		/// <param name="TemplateBody"><p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.)</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p></param>
		/// <param name="TemplateURL"><p>Location of file containing the template body. The URL must point to a template that is located in an Amazon S3 bucket. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p></param>
		/// <param name="UsePreviousTemplate"><p>Reuse the existing template that is associated with the stack that you are updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p></param>
		/// <param name="StackPolicyDuringUpdateBody"><p>Structure containing the temporary overriding stack policy body. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p></param>
		/// <param name="StackPolicyDuringUpdateURL"><p>Location of a file containing the temporary overriding stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same Region as the stack. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.</p></param>
		/// <param name="Parameters">A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.</param>
		/// <param name="Capabilities"><p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually updating the stack. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.</p> <p>Change sets do not currently support nested stacks. If you want to update a stack from a stack template that contains macros <i>and</i> nested stacks, you must update the stack directly from the template using this capability.</p> <important> <p>You should only update stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without AWS CloudFormation being notified.</p> </important> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul></param>
		/// <param name="ResourceTypes"><p>The template resource types that you have permissions to work with for this update stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for AWS CloudFormation-specific condition keys in IAM policies. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with AWS Identity and Access Management</a>.</p></param>
		/// <param name="RoleARN"><p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to update the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.</p></param>
		/// <param name="RollbackConfiguration">The rollback triggers for AWS CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</param>
		/// <param name="StackPolicyBody"><p>Structure containing a new stack policy body. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p></param>
		/// <param name="StackPolicyURL"><p>Location of a file containing the updated stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same Region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.</p></param>
		/// <param name="NotificationARNs">Amazon Simple Notification Service topic Amazon Resource Names (ARNs) that AWS CloudFormation associates with the stack. Specify an empty list to remove all notification topics.</param>
		/// <param name="Tags"><p>Key-value pairs to associate with this stack. AWS CloudFormation also propagates these tags to supported resources in the stack. You can specify a maximum number of 50 tags.</p> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. If you specify an empty value, AWS CloudFormation removes all associated tags.</p></param>
		/// <param name="ClientRequestToken"><p>A unique identifier for this <code>UpdateStack</code> request. Specify this token if you plan to retry requests so that AWS CloudFormation knows that you're not attempting to update a stack with the same name. You might retry <code>UpdateStack</code> requests to ensure that AWS CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>. </p></param>
		/// <returns>Success</returns>
		public async Task GET_UpdateStackAsync(
					string StackName, 
					string TemplateBody, 
					string TemplateURL, 
					bool UsePreviousTemplate, 
					string StackPolicyDuringUpdateBody, 
					string StackPolicyDuringUpdateURL, 
					Parameter[] Parameters, 
					Capability[] Capabilities, 
					ResourceType[] ResourceTypes, 
					string RoleARN, 
					string RollbackConfiguration, 
					string StackPolicyBody, 
					string StackPolicyURL, 
					NotificationARN[] NotificationARNs, 
					Tag[] Tags, 
					string ClientRequestToken, 
					string Action, 
					string Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=UpdateStack?StackName=" + (StackName==null? "" : Uri.EscapeDataString(StackName))+"&TemplateBody=" + (TemplateBody==null? "" : Uri.EscapeDataString(TemplateBody))+"&TemplateURL=" + (TemplateURL==null? "" : Uri.EscapeDataString(TemplateURL))+"&UsePreviousTemplate="+UsePreviousTemplate+"&StackPolicyDuringUpdateBody=" + (StackPolicyDuringUpdateBody==null? "" : Uri.EscapeDataString(StackPolicyDuringUpdateBody))+"&StackPolicyDuringUpdateURL=" + (StackPolicyDuringUpdateURL==null? "" : Uri.EscapeDataString(StackPolicyDuringUpdateURL))+"&"+String.Join("&", Parameters.Select(z => $"Parameters={z}"))+"&"+String.Join("&", Capabilities.Select(z => $"Capabilities={z}"))+"&"+String.Join("&", ResourceTypes.Select(z => $"ResourceTypes={z}"))+"&RoleARN=" + (RoleARN==null? "" : Uri.EscapeDataString(RoleARN))+"&RollbackConfiguration=" + (RollbackConfiguration==null? "" : Uri.EscapeDataString(RollbackConfiguration))+"&StackPolicyBody=" + (StackPolicyBody==null? "" : Uri.EscapeDataString(StackPolicyBody))+"&StackPolicyURL=" + (StackPolicyURL==null? "" : Uri.EscapeDataString(StackPolicyURL))+"&"+String.Join("&", NotificationARNs.Select(z => $"NotificationARNs={z}"))+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&ClientRequestToken=" + (ClientRequestToken==null? "" : Uri.EscapeDataString(ClientRequestToken))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates the parameter values for stack instances for the specified accounts, within the specified Regions. A stack instance refers to a stack in a specific account and Region. </p> <p>You can only update stack instances in Regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>. </p> <p>During stack set updates, any parameters overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
		/// GET_UpdateStackInstances /#Action=UpdateStackInstances
		/// </summary>
		/// <param name="StackSetName">The name or unique ID of the stack set associated with the stack instances.</param>
		/// <param name="Accounts"><p>[<code>Self-managed</code> permissions] The names of one or more AWS accounts for which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and Regions.</p> <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p></param>
		/// <param name="DeploymentTargets"><p>[<code>Service-managed</code> permissions] The AWS Organizations accounts for which you want to update parameter values for stack instances. If your update targets OUs, the overridden parameter values only apply to the accounts that are currently in the target OUs and their child OUs. Accounts added to the target OUs and their child OUs in the future won't use the overridden values.</p> <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p></param>
		/// <param name="Regions">The names of one or more Regions in which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and Regions.</param>
		/// <param name="ParameterOverrides"><p> A list of input parameters whose values you want to update for the specified stack instances. </p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and Regions. When specifying parameters and their values, be aware of how AWS CloudFormation sets parameter values during stack instance update operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave a parameter set to its present value, you can do one of the following:</p> <ul> <li> <p>Do not include the parameter in the list.</p> </li> <li> <p>Include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You cannot specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> </ul> </li> <li> <p>To set all overridden parameter back to the values specified in the stack set, specify a parameter list but do not include any parameters.</p> </li> <li> <p>To leave all parameters set to their present values, do not specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance are not updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <code>UpdateStackSet</code> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p></param>
		/// <param name="OperationPreferences">Preferences for how AWS CloudFormation performs this stack set operation.</param>
		/// <param name="OperationId"><p>The unique identifier for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically. </p></param>
		/// <returns>Success</returns>
		public async Task GET_UpdateStackInstancesAsync(string StackSetName, Account[] Accounts, string DeploymentTargets, Region[] Regions, Parameter[] ParameterOverrides, string OperationPreferences, string OperationId, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=UpdateStackInstances?StackSetName=" + (StackSetName==null? "" : Uri.EscapeDataString(StackSetName))+"&"+String.Join("&", Accounts.Select(z => $"Accounts={z}"))+"&DeploymentTargets=" + (DeploymentTargets==null? "" : Uri.EscapeDataString(DeploymentTargets))+"&"+String.Join("&", Regions.Select(z => $"Regions={z}"))+"&"+String.Join("&", ParameterOverrides.Select(z => $"ParameterOverrides={z}"))+"&OperationPreferences=" + (OperationPreferences==null? "" : Uri.EscapeDataString(OperationPreferences))+"&OperationId=" + (OperationId==null? "" : Uri.EscapeDataString(OperationId))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates the stack set, and associated stack instances in the specified accounts and Regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
		/// GET_UpdateStackSet /#Action=UpdateStackSet
		/// </summary>
		/// <param name="StackSetName">The name or unique ID of the stack set that you want to update.</param>
		/// <param name="Description">A brief description of updates that you are making.</param>
		/// <param name="TemplateBody"><p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true.</p></param>
		/// <param name="TemplateURL"><p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p></param>
		/// <param name="UsePreviousTemplate"><p>Use the existing template that's associated with the stack set that you're updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true. </p></param>
		/// <param name="Parameters">A list of input parameters for the stack set template. </param>
		/// <param name="Capabilities"><p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for AWS CloudFormation to update the stack set and its associated stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your AWS account; for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability. </p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>. </p> </li> <li> <p>If you don't specify either of these capabilities, AWS CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in AWS CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates contain macros. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using AWS CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <important> <p>Stack sets do not currently support macros in stack templates. (This includes the <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by AWS CloudFormation.) Even if you specify this capability, if you include a macro in your template the stack set operation will fail.</p> </important> </li> </ul></param>
		/// <param name="Tags"><p>The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. You can specify a maximum number of 50 tags.</p> <p>If you specify tags for this parameter, those tags replace any list of tags that are currently associated with this stack set. This means:</p> <ul> <li> <p>If you don't specify this parameter, AWS CloudFormation doesn't modify the stack's tags. </p> </li> <li> <p>If you specify <i>any</i> tags using this parameter, you must specify <i>all</i> the tags that you want associated with this stack set, even tags you've specifed before (for example, when creating the stack set or during a previous update of the stack set.). Any tags that you don't include in the updated list of tags are removed from the stack set, and therefore from the stacks and resources as well. </p> </li> <li> <p>If you specify an empty value, AWS CloudFormation removes all currently associated tags.</p> </li> </ul> <p>If you specify new tags as part of an <code>UpdateStackSet</code> action, AWS CloudFormation checks to see if you have the required IAM permission to tag resources. If you omit tags that are currently associated with the stack set from the list of tags you specify, AWS CloudFormation assumes that you want to remove those tags from the stack set, and checks to see if you have permission to untag resources. If you don't have the necessary permission(s), the entire <code>UpdateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not updated.</p></param>
		/// <param name="OperationPreferences">Preferences for how AWS CloudFormation performs this stack set operation.</param>
		/// <param name="AdministrationRoleARN"><p>The Amazon Resource Number (ARN) of the IAM role to use to update this stack set.</p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Granting Permissions for Stack Set Operations</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p>If you specified a customized administrator role when you created the stack set, you must specify a customized administrator role, even if it is the same customized administrator role used with this stack set previously.</p></param>
		/// <param name="ExecutionRoleName"><p>The name of the IAM execution role to use to update the stack set. If you do not specify an execution role, AWS CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets. </p> <p> If you specify a customized execution role, AWS CloudFormation uses that role to update the stack. If you do not specify a customized execution role, AWS CloudFormation performs the update using the role previously associated with the stack set, so long as you have permissions to perform operations on the stack set.</p></param>
		/// <param name="DeploymentTargets"><p>[<code>Service-managed</code> permissions] The AWS Organizations accounts in which to update associated stack instances.</p> <p>To update all the stack instances associated with this stack set, do not specify <code>DeploymentTargets</code> or <code>Regions</code>.</p> <p>If the stack set update includes changes to the template (that is, if <code>TemplateBody</code> or <code>TemplateURL</code> is specified), or the <code>Parameters</code>, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and Regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and Regions, while leaving all other stack instances with their existing stack instance status.</p></param>
		/// <param name="PermissionModel"><p>Describes how the IAM roles required for stack set operations are created. You cannot modify <code>PermissionModel</code> if there are stack instances associated with your stack set.</p> <ul> <li> <p>With <code>self-managed</code> permissions, you must create the administrator and execution roles required to deploy to target accounts. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-self-managed.html">Grant Self-Managed Stack Set Permissions</a>.</p> </li> <li> <p>With <code>service-managed</code> permissions, StackSets automatically creates the IAM roles required to deploy to accounts managed by AWS Organizations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-service-managed.html">Grant Service-Managed Stack Set Permissions</a>.</p> </li> </ul></param>
		/// <param name="AutoDeployment"><p>[<code>Service-managed</code> permissions] Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to a target organization or organizational unit (OU).</p> <p>If you specify <code>AutoDeployment</code>, do not specify <code>DeploymentTargets</code> or <code>Regions</code>.</p></param>
		/// <param name="OperationId"><p>The unique ID for this stack set operation. </p> <p>The operation ID also functions as an idempotency token, to ensure that AWS CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that AWS CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, AWS CloudFormation generates one automatically.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>. </p></param>
		/// <param name="Accounts"><p>[<code>Self-managed</code> permissions] The accounts in which to update associated stack instances. If you specify accounts, you must also specify the Regions in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and Regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and Regions, while leaving all other stack instances with their existing stack instance status. </p></param>
		/// <param name="Regions"><p>The Regions in which to update associated stack instances. If you specify Regions, you must also specify accounts in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, AWS CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and Regions. If the stack set update does not include changes to the template or parameters, AWS CloudFormation updates the stack instances in the specified accounts and Regions, while leaving all other stack instances with their existing stack instance status. </p></param>
		/// <returns>Success</returns>
		public async Task GET_UpdateStackSetAsync(
					string StackSetName, 
					string Description, 
					string TemplateBody, 
					string TemplateURL, 
					bool UsePreviousTemplate, 
					Parameter[] Parameters, 
					Capability[] Capabilities, 
					Tag[] Tags, 
					string OperationPreferences, 
					string AdministrationRoleARN, 
					string ExecutionRoleName, 
					string DeploymentTargets, 
					PermissionModels PermissionModel, 
					string AutoDeployment, 
					string OperationId, 
					Account[] Accounts, 
					Region[] Regions, 
					string Action, 
					string Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=UpdateStackSet?StackSetName=" + (StackSetName==null? "" : Uri.EscapeDataString(StackSetName))+"&Description=" + (Description==null? "" : Uri.EscapeDataString(Description))+"&TemplateBody=" + (TemplateBody==null? "" : Uri.EscapeDataString(TemplateBody))+"&TemplateURL=" + (TemplateURL==null? "" : Uri.EscapeDataString(TemplateURL))+"&UsePreviousTemplate="+UsePreviousTemplate+"&"+String.Join("&", Parameters.Select(z => $"Parameters={z}"))+"&"+String.Join("&", Capabilities.Select(z => $"Capabilities={z}"))+"&"+String.Join("&", Tags.Select(z => $"Tags={z}"))+"&OperationPreferences=" + (OperationPreferences==null? "" : Uri.EscapeDataString(OperationPreferences))+"&AdministrationRoleARN=" + (AdministrationRoleARN==null? "" : Uri.EscapeDataString(AdministrationRoleARN))+"&ExecutionRoleName=" + (ExecutionRoleName==null? "" : Uri.EscapeDataString(ExecutionRoleName))+"&DeploymentTargets=" + (DeploymentTargets==null? "" : Uri.EscapeDataString(DeploymentTargets))+"&PermissionModel=" + PermissionModel+"&AutoDeployment=" + (AutoDeployment==null? "" : Uri.EscapeDataString(AutoDeployment))+"&OperationId=" + (OperationId==null? "" : Uri.EscapeDataString(OperationId))+"&"+String.Join("&", Accounts.Select(z => $"Accounts={z}"))+"&"+String.Join("&", Regions.Select(z => $"Regions={z}"))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>AWS CloudFormation User Guide</i>.</p> <p> For <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and cannot be changed directly on the nested stack.</p>
		/// GET_UpdateTerminationProtection /#Action=UpdateTerminationProtection
		/// </summary>
		/// <param name="EnableTerminationProtection">Whether to enable termination protection on the specified stack.</param>
		/// <param name="StackName">The name or unique ID of the stack for which you want to set termination protection.</param>
		/// <returns>Success</returns>
		public async Task GET_UpdateTerminationProtectionAsync(bool EnableTerminationProtection, string StackName, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=UpdateTerminationProtection?EnableTerminationProtection="+EnableTerminationProtection+"&StackName=" + (StackName==null? "" : Uri.EscapeDataString(StackName))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Validates a specified template. AWS CloudFormation first checks if the template is valid JSON. If it isn't, AWS CloudFormation checks if the template is valid YAML. If both these checks fail, AWS CloudFormation returns a template validation error.
		/// GET_ValidateTemplate /#Action=ValidateTemplate
		/// </summary>
		/// <param name="TemplateBody"><p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p></param>
		/// <param name="TemplateURL"><p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the AWS CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p></param>
		/// <returns>Success</returns>
		public async Task GET_ValidateTemplateAsync(string TemplateBody, string TemplateURL, string Action, string Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#Action=ValidateTemplate?TemplateBody=" + (TemplateBody==null? "" : Uri.EscapeDataString(TemplateBody))+"&TemplateURL=" + (TemplateURL==null? "" : Uri.EscapeDataString(TemplateURL))+"&Action=" + (Action==null? "" : Uri.EscapeDataString(Action))+"&Version=" + (Version==null? "" : Uri.EscapeDataString(Version));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}
