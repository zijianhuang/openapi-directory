//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace My.Demo.Client
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Net.Http;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateApplicationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Author { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HomePageUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsVerifiedAuthor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Labels { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReadmeUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SpdxLicenseId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VerifiedAuthorUrl { get; set; }
		
		/// <summary>
		/// Application version details.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Version Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateApplicationVersionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ParameterDefinition[] ParameterDefinitions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Capability[] RequiredCapabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ResourcesSupported { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SemanticVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceCodeArchiveUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceCodeUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateUrl { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateCloudFormationChangeSetResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ChangeSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SemanticVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
	}
	
	/// <summary>
	/// Parameter value of the application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ParameterValue
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// This property corresponds to the <i>AWS CloudFormation <a href="https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/Tag">Tag</a>
	/// </i> Data Type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Tag
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateCloudFormationTemplateResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExpirationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SemanticVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CreateCloudFormationTemplateResponseStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateUrl { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateCloudFormationTemplateResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREPARING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXPIRED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetApplicationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Author { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HomePageUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsVerifiedAuthor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Labels { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReadmeUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SpdxLicenseId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VerifiedAuthorUrl { get; set; }
		
		/// <summary>
		/// Application version details.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Version Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetApplicationPolicyResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationPolicyStatement[] Statements { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetCloudFormationTemplateResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExpirationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SemanticVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GetCloudFormationTemplateResponseStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateUrl { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GetCloudFormationTemplateResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREPARING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXPIRED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListApplicationDependenciesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationDependencySummary[] Dependencies { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListApplicationVersionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VersionSummary[] Versions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListApplicationsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationSummary[] Applications { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PutApplicationPolicyResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationPolicyStatement[] Statements { get; set; }
	}
	
	/// <summary>
	/// Policy statement applied to the application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ApplicationPolicyStatement
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Actions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] PrincipalOrgIDs { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Principals { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatementId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateApplicationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Author { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HomePageUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsVerifiedAuthor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Labels { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReadmeUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SpdxLicenseId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VerifiedAuthorUrl { get; set; }
		
		/// <summary>
		/// Application version details.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Version Version { get; set; }
	}
	
	/// <summary>
	/// A nested application summary.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ApplicationDependencySummary
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SemanticVersion { get; set; }
	}
	
	/// <summary>
	/// Summary of details about the application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ApplicationSummary
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Author { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreationTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HomePageUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Labels { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SpdxLicenseId { get; set; }
	}
	
	/// <summary>
	/// Values that must be specified in order to deploy some applications.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum Capability
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CAPABILITY_IAM = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CAPABILITY_NAMED_IAM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CAPABILITY_AUTO_EXPAND = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CAPABILITY_RESOURCE_POLICY = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateApplicationRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Author { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HomePageUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Labels { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseBody { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseUrl { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReadmeBody { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReadmeUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SemanticVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceCodeArchiveUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceCodeUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SpdxLicenseId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateBody { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateUrl { get; set; }
	}
	
	/// <summary>
	/// Application version details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Version
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CreationTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ParameterDefinition[] ParameterDefinitions { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Capability[] RequiredCapabilities { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool ResourcesSupported { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SemanticVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceCodeArchiveUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceCodeUrl { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TemplateUrl { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateApplicationVersionRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceCodeArchiveUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceCodeUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateBody { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateUrl { get; set; }
	}
	
	/// <summary>
	/// This property corresponds to the <i>AWS CloudFormation <a href="https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/RollbackConfiguration">RollbackConfiguration</a>
	/// </i> Data Type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RollbackConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MonitoringTimeInMinutes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RollbackTrigger[] RollbackTriggers { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateCloudFormationChangeSetRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Capabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ChangeSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] NotificationArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ParameterValue[] ParameterOverrides { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] ResourceTypes { get; set; }
		
		/// <summary>
		/// This property corresponds to the <i>AWS CloudFormation <a href="https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/RollbackConfiguration">RollbackConfiguration</a>
		/// </i> Data Type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RollbackConfiguration RollbackConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SemanticVersion { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateCloudFormationTemplateRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SemanticVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum Status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREPARING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXPIRED = 2,
	}
	
	/// <summary>
	/// Parameters supported by the application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ParameterDefinition
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AllowedPattern { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] AllowedValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ConstraintDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxLength { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinLength { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinValue { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> NoEcho { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public @__string[] ReferencedByResources { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PutApplicationPolicyRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationPolicyStatement[] Statements { get; set; }
	}
	
	/// <summary>
	/// This property corresponds to the <i>AWS CloudFormation <a href="https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/RollbackTrigger">RollbackTrigger</a>
	/// </i> Data Type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RollbackTrigger
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UnshareApplicationRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OrganizationId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateApplicationRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Author { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HomePageUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Labels { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReadmeBody { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReadmeUrl { get; set; }
	}
	
	/// <summary>
	/// An application version summary.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class VersionSummary
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CreationTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SemanticVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceCodeUrl { get; set; }
	}
	
	public partial class DemoClient
	{
		
		private System.Net.Http.HttpClient client;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public DemoClient(System.Net.Http.HttpClient client, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (client == null)
				throw new ArgumentNullException("Null HttpClient.", "client");

			if (client.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "client");

			this.client = client;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Creates an application, optionally including an AWS SAM file to create the first application version in the same call.
		/// CreateApplication /applications
		/// </summary>
		public async Task CreateApplicationAsync(CreateApplicationBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/applications";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists applications owned by the requester.
		/// ListApplications /applications
		/// </summary>
		/// <param name="maxItems">The total number of items to return.</param>
		/// <param name="nextToken">A token to specify where to start paginating.</param>
		/// <param name="MaxItems">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListApplicationsResponse> ListApplicationsAsync(int maxItems, string nextToken, string MaxItems, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/applications?maxItems="+maxItems+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken))+"&MaxItems=" + (MaxItems==null? "" : Uri.EscapeDataString(MaxItems))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListApplicationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an application version.
		/// CreateApplicationVersion /applications/{applicationId}/versions/{semanticVersion}
		/// </summary>
		/// <param name="applicationId">The Amazon Resource Name (ARN) of the application.</param>
		/// <param name="semanticVersion">The semantic version of the new version.</param>
		public async Task CreateApplicationVersionAsync(string applicationId, string semanticVersion, CreateApplicationVersionBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/applications/"+ (applicationId==null? "" : Uri.EscapeDataString(applicationId))+"/versions/"+ (semanticVersion==null? "" : Uri.EscapeDataString(semanticVersion));
			using (var request = new HttpRequestMessage(HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates an AWS CloudFormation change set for the given application.
		/// CreateCloudFormationChangeSet /applications/{applicationId}/changesets
		/// </summary>
		/// <param name="applicationId">The Amazon Resource Name (ARN) of the application.</param>
		public async Task CreateCloudFormationChangeSetAsync(string applicationId, CreateCloudFormationChangeSetBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/applications/"+ (applicationId==null? "" : Uri.EscapeDataString(applicationId))+"/changesets";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates an AWS CloudFormation template.
		/// CreateCloudFormationTemplate /applications/{applicationId}/templates
		/// </summary>
		/// <param name="applicationId">The Amazon Resource Name (ARN) of the application.</param>
		public async Task CreateCloudFormationTemplateAsync(string applicationId, CreateCloudFormationTemplateBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/applications/"+ (applicationId==null? "" : Uri.EscapeDataString(applicationId))+"/templates";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes the specified application.
		/// DeleteApplication /applications/{applicationId}
		/// </summary>
		/// <param name="applicationId">The Amazon Resource Name (ARN) of the application.</param>
		public async Task DeleteApplicationAsync(string applicationId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/applications/"+ (applicationId==null? "" : Uri.EscapeDataString(applicationId));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the specified application.
		/// GetApplication /applications/{applicationId}
		/// </summary>
		/// <param name="applicationId">The Amazon Resource Name (ARN) of the application.</param>
		/// <param name="semanticVersion">The semantic version of the application to get.</param>
		/// <returns>Success</returns>
		public async Task<GetApplicationResponse> GetApplicationAsync(string applicationId, string semanticVersion, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/applications/"+ (applicationId==null? "" : Uri.EscapeDataString(applicationId))+"&semanticVersion=" + (semanticVersion==null? "" : Uri.EscapeDataString(semanticVersion));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetApplicationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves the policy for the application.
		/// GetApplicationPolicy /applications/{applicationId}/policy
		/// </summary>
		/// <param name="applicationId">The Amazon Resource Name (ARN) of the application.</param>
		/// <returns>Success</returns>
		public async Task<GetApplicationPolicyResponse> GetApplicationPolicyAsync(string applicationId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/applications/"+ (applicationId==null? "" : Uri.EscapeDataString(applicationId))+"/policy";
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetApplicationPolicyResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Sets the permission policy for an application. For the list of actions supported for this operation, see
		/// <a href="https://docs.aws.amazon.com/serverlessrepo/latest/devguide/access-control-resource-based.html#application-permissions">Application
		/// Permissions</a>
		/// .
		/// PutApplicationPolicy /applications/{applicationId}/policy
		/// </summary>
		/// <param name="applicationId">The Amazon Resource Name (ARN) of the application.</param>
		/// <returns>Success</returns>
		public async Task<PutApplicationPolicyResponse> PutApplicationPolicyAsync(string applicationId, PutApplicationPolicyBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/applications/"+ (applicationId==null? "" : Uri.EscapeDataString(applicationId))+"/policy";
			using (var request = new HttpRequestMessage(HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<PutApplicationPolicyResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets the specified AWS CloudFormation template.
		/// GetCloudFormationTemplate /applications/{applicationId}/templates/{templateId}
		/// </summary>
		/// <param name="applicationId">The Amazon Resource Name (ARN) of the application.</param>
		/// <param name="templateId"><p>The UUID returned by CreateCloudFormationTemplate.</p><p>Pattern: [0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}</p></param>
		/// <returns>Success</returns>
		public async Task<GetCloudFormationTemplateResponse> GetCloudFormationTemplateAsync(string applicationId, string templateId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/applications/"+ (applicationId==null? "" : Uri.EscapeDataString(applicationId))+"/templates/"+ (templateId==null? "" : Uri.EscapeDataString(templateId));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetCloudFormationTemplateResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves the list of applications nested in the containing application.
		/// ListApplicationDependencies /applications/{applicationId}/dependencies
		/// </summary>
		/// <param name="applicationId">The Amazon Resource Name (ARN) of the application.</param>
		/// <param name="maxItems">The total number of items to return.</param>
		/// <param name="nextToken">A token to specify where to start paginating.</param>
		/// <param name="semanticVersion">The semantic version of the application to get.</param>
		/// <param name="MaxItems">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListApplicationDependenciesResponse> ListApplicationDependenciesAsync(string applicationId, int maxItems, string nextToken, string semanticVersion, string MaxItems, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/applications/"+ (applicationId==null? "" : Uri.EscapeDataString(applicationId))+"/dependencies&maxItems="+maxItems+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken))+"&semanticVersion=" + (semanticVersion==null? "" : Uri.EscapeDataString(semanticVersion))+"&MaxItems=" + (MaxItems==null? "" : Uri.EscapeDataString(MaxItems))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListApplicationDependenciesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists versions for the specified application.
		/// ListApplicationVersions /applications/{applicationId}/versions
		/// </summary>
		/// <param name="applicationId">The Amazon Resource Name (ARN) of the application.</param>
		/// <param name="maxItems">The total number of items to return.</param>
		/// <param name="nextToken">A token to specify where to start paginating.</param>
		/// <param name="MaxItems">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListApplicationVersionsResponse> ListApplicationVersionsAsync(string applicationId, int maxItems, string nextToken, string MaxItems, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/applications/"+ (applicationId==null? "" : Uri.EscapeDataString(applicationId))+"/versions&maxItems="+maxItems+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken))+"&MaxItems=" + (MaxItems==null? "" : Uri.EscapeDataString(MaxItems))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListApplicationVersionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Unshares an application from an AWS Organization.</p><p>This operation can be called only from the organization's master account.</p>
		/// UnshareApplication /applications/{applicationId}/unshare
		/// </summary>
		/// <param name="applicationId">The Amazon Resource Name (ARN) of the application.</param>
		public async Task UnshareApplicationAsync(string applicationId, UnshareApplicationBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/applications/"+ (applicationId==null? "" : Uri.EscapeDataString(applicationId))+"/unshare";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateApplicationBody
	{
		
		/// <summary>
		/// <p>The name of the author publishing the app.</p><p>Minimum length=1. Maximum length=127.</p><p>Pattern "^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$";</p>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Author { get; set; }
		
		/// <summary>
		/// <p>The description of the application.</p><p>Minimum length=1. Maximum length=256</p>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// A URL with more information about the application, for example the location of your GitHub repository for the application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string HomePageUrl { get; set; }
		
		/// <summary>
		/// <p>Labels to improve discovery of apps in search results.</p><p>Minimum length=1. Maximum length=127. Maximum number of labels: 10</p><p>Pattern: "^[a-zA-Z0-9+\\-_:\\/@]+$";</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Labels { get; set; }
		
		/// <summary>
		/// <p>A local text file that contains the license of the app that matches the spdxLicenseID value of your application.
		/// The file has the format file://&lt;path>/&lt;filename>.</p><p>Maximum size 5 MB</p><p>You can specify only one of licenseBody and licenseUrl; otherwise, an error results.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string LicenseBody { get; set; }
		
		/// <summary>
		/// <p>A link to the S3 object that contains the license of the app that matches the spdxLicenseID value of your application.</p><p>Maximum size 5 MB</p><p>You can specify only one of licenseBody and licenseUrl; otherwise, an error results.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string LicenseUrl { get; set; }
		
		/// <summary>
		/// <p>The name of the application that you want to publish.</p><p>Minimum length=1. Maximum length=140</p><p>Pattern: "[a-zA-Z0-9\\-]+";</p>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// <p>A local text readme file in Markdown language that contains a more detailed description of the application and how it works.
		/// The file has the format file://&lt;path>/&lt;filename>.</p><p>Maximum size 5 MB</p><p>You can specify only one of readmeBody and readmeUrl; otherwise, an error results.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ReadmeBody { get; set; }
		
		/// <summary>
		/// <p>A link to the S3 object in Markdown language that contains a more detailed description of the application and how it works.</p><p>Maximum size 5 MB</p><p>You can specify only one of readmeBody and readmeUrl; otherwise, an error results.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ReadmeUrl { get; set; }
		
		/// <summary>
		/// <p>The semantic version of the application:</p><p>
		/// <a href="https://semver.org/">https://semver.org/</a>
		/// </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SemanticVersion { get; set; }
		
		/// <summary>
		/// <p>A link to the S3 object that contains the ZIP archive of the source code for this version of your application.</p><p>Maximum size 50 MB</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SourceCodeArchiveUrl { get; set; }
		
		/// <summary>
		/// A link to a public repository for the source code of your application, for example the URL of a specific GitHub commit.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SourceCodeUrl { get; set; }
		
		/// <summary>
		/// A valid identifier from <a href="https://spdx.org/licenses/">https://spdx.org/licenses/</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SpdxLicenseId { get; set; }
		
		/// <summary>
		/// <p>The local raw packaged AWS SAM template file of your application.
		/// The file has the format file://&lt;path>/&lt;filename>.</p><p>You can specify only one of templateBody and templateUrl; otherwise an error results.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string TemplateBody { get; set; }
		
		/// <summary>
		/// <p>A link to the S3 object containing the packaged AWS SAM template of your application.</p><p>You can specify only one of templateBody and templateUrl; otherwise an error results.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string TemplateUrl { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateApplicationVersionBody
	{
		
		/// <summary>
		/// <p>A link to the S3 object that contains the ZIP archive of the source code for this version of your application.</p><p>Maximum size 50 MB</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SourceCodeArchiveUrl { get; set; }
		
		/// <summary>
		/// A link to a public repository for the source code of your application, for example the URL of a specific GitHub commit.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SourceCodeUrl { get; set; }
		
		/// <summary>
		/// The raw packaged AWS SAM template of your application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string TemplateBody { get; set; }
		
		/// <summary>
		/// A link to the packaged AWS SAM template of your application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string TemplateUrl { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateCloudFormationChangeSetBody
	{
		
		/// <summary>
		/// <p>A list of values that you must specify before you can deploy certain applications.
		/// Some applications might include resources that can affect permissions in your AWS
		/// account, for example, by creating new AWS Identity and Access Management (IAM) users.
		/// For those applications, you must explicitly acknowledge their capabilities by
		/// specifying this parameter.</p><p>The only valid values are CAPABILITY_IAM, CAPABILITY_NAMED_IAM,
		/// CAPABILITY_RESOURCE_POLICY, and CAPABILITY_AUTO_EXPAND.</p><p>The following resources require you to specify CAPABILITY_IAM or
		/// CAPABILITY_NAMED_IAM:
		/// <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html">AWS::IAM::Group</a>,
		/// <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html">AWS::IAM::InstanceProfile</a>,
		/// <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html">AWS::IAM::Policy</a>, and
		/// <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html">AWS::IAM::Role</a>.
		/// If the application contains IAM resources, you can specify either CAPABILITY_IAM
		/// or CAPABILITY_NAMED_IAM. If the application contains IAM resources
		/// with custom names, you must specify CAPABILITY_NAMED_IAM.</p><p>The following resources require you to specify CAPABILITY_RESOURCE_POLICY:
		/// <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html">AWS::Lambda::Permission</a>,
		/// <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html">AWS::IAM:Policy</a>,
		/// <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html">AWS::ApplicationAutoScaling::ScalingPolicy</a>,
		/// <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html">AWS::S3::BucketPolicy</a>,
		/// <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-policy.html">AWS::SQS::QueuePolicy</a>, and
		/// <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-policy.html">AWS::SNS:TopicPolicy</a>.</p><p>Applications that contain one or more nested applications require you to specify
		/// CAPABILITY_AUTO_EXPAND.</p><p>If your application template contains any of the above resources, we recommend that you review
		/// all permissions associated with the application before deploying. If you don't specify
		/// this parameter for an application that requires capabilities, the call will fail.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public @__string[] Capabilities { get; set; }
		
		/// <summary>
		/// This property corresponds to the parameter of the same name for the <i>AWS CloudFormation <a href="https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/CreateChangeSet">CreateChangeSet</a>
		/// </i> API.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ChangeSetName { get; set; }
		
		/// <summary>
		/// This property corresponds to the parameter of the same name for the <i>AWS CloudFormation <a href="https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/CreateChangeSet">CreateChangeSet</a>
		/// </i> API.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// This property corresponds to the parameter of the same name for the <i>AWS CloudFormation <a href="https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/CreateChangeSet">CreateChangeSet</a>
		/// </i> API.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// This property corresponds to the parameter of the same name for the <i>AWS CloudFormation <a href="https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/CreateChangeSet">CreateChangeSet</a>
		/// </i> API.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public @__string[] NotificationArns { get; set; }
		
		/// <summary>
		/// A list of parameter values for the parameters of the application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ParameterValue[] ParameterOverrides { get; set; }
		
		/// <summary>
		/// This property corresponds to the parameter of the same name for the <i>AWS CloudFormation <a href="https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/CreateChangeSet">CreateChangeSet</a>
		/// </i> API.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public @__string[] ResourceTypes { get; set; }
		
		/// <summary>
		/// This property corresponds to the <i>AWS CloudFormation <a href="https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/RollbackConfiguration">RollbackConfiguration</a>
		/// </i> Data Type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RollbackConfiguration { get; set; }
		
		/// <summary>
		/// <p>The semantic version of the application:</p><p>
		/// <a href="https://semver.org/">https://semver.org/</a>
		/// </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SemanticVersion { get; set; }
		
		/// <summary>
		/// This property corresponds to the parameter of the same name for the <i>AWS CloudFormation <a href="https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/CreateChangeSet">CreateChangeSet</a>
		/// </i> API.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		/// <summary>
		/// This property corresponds to the parameter of the same name for the <i>AWS CloudFormation <a href="https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/CreateChangeSet">CreateChangeSet</a>
		/// </i> API.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// <p>The UUID returned by CreateCloudFormationTemplate.</p><p>Pattern: [0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string TemplateId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateCloudFormationTemplateBody
	{
		
		/// <summary>
		/// <p>The semantic version of the application:</p><p>
		/// <a href="https://semver.org/">https://semver.org/</a>
		/// </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SemanticVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PutApplicationPolicyBody
	{
		
		/// <summary>
		/// An array of policy statements applied to the application.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationPolicyStatement[] Statements { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UnshareApplicationBody
	{
		
		/// <summary>
		/// The AWS Organization ID to unshare the application from.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OrganizationId { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}
