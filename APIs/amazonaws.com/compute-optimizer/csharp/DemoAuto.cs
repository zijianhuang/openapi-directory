//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace My.Demo.Client
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Net.Http;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetAutoScalingGroupRecommendationsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoScalingGroupRecommendation[] AutoScalingGroupRecommendations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GetRecommendationError[] Errors { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetAutoScalingGroupRecommendationsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AccountId[] AccountIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoScalingGroupArn[] AutoScalingGroupArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetEC2InstanceRecommendationsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceRecommendation[] InstanceRecommendations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GetRecommendationError[] Errors { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetEC2InstanceRecommendationsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceArn[] InstanceArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AccountId[] AccountIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetEC2RecommendationProjectedMetricsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RecommendedOptionProjectedMetric[] RecommendedOptionProjectedMetrics { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetEC2RecommendationProjectedMetricsRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GetEC2RecommendationProjectedMetricsRequestStat Stat { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Period { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GetEC2RecommendationProjectedMetricsRequestStat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Maximum = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Average = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetEnrollmentStatusResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public GetEnrollmentStatusResponseStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MemberAccountsEnrolled { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GetEnrollmentStatusResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetRecommendationSummariesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RecommendationSummary[] RecommendationSummaries { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetRecommendationSummariesRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AccountId[] AccountIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateEnrollmentStatusResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UpdateEnrollmentStatusResponseStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusReason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateEnrollmentStatusResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateEnrollmentStatusRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateEnrollmentStatusRequestStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeMemberAccounts { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateEnrollmentStatusRequestStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
	}
	
	/// <summary>
	/// Describes the configuration of an Auto Scaling group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AutoScalingGroupConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DesiredCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum Finding
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Underprovisioned = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Overprovisioned = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Optimized = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotOptimized = 3,
	}
	
	/// <summary>
	/// Describes an Auto Scaling group recommendation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AutoScalingGroupRecommendation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AutoScalingGroupArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AutoScalingGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoScalingGroupRecommendationFinding Finding { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UtilizationMetric[] UtilizationMetrics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> LookBackPeriodInDays { get; set; }
		
		/// <summary>
		/// Describes the configuration of an Auto Scaling group.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AutoScalingGroupConfiguration CurrentConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoScalingGroupRecommendationOption[] RecommendationOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastRefreshTimestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AutoScalingGroupRecommendationFinding
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Underprovisioned = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Overprovisioned = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Optimized = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotOptimized = 3,
	}
	
	/// <summary>
	/// Describes a recommendation option for an Auto Scaling group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AutoScalingGroupRecommendationOption
	{
		
		/// <summary>
		/// Describes the configuration of an Auto Scaling group.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AutoScalingGroupConfiguration Configuration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UtilizationMetric[] ProjectedUtilizationMetrics { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 5)]
		public System.Nullable<System.Double> PerformanceRisk { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Rank { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FilterName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Finding = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationSourceType = 1,
	}
	
	/// <summary>
	/// Describes a filter that returns a more specific list of recommendations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Filter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FilterName Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterValue[] Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FilterName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Finding = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationSourceType = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MetricStatistic
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Maximum = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Average = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum Status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
	}
	
	/// <summary>
	/// <p>Describes an error experienced when getting recommendations.</p> <p>For example, an error is returned if you request recommendations for an unsupported Auto Scaling group, or if you request recommendations for an instance of an unsupported instance family.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetRecommendationError
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Identifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Code { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// Describes an Amazon EC2 instance recommendation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InstanceRecommendation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrentInstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceRecommendationFinding Finding { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UtilizationMetric[] UtilizationMetrics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> LookBackPeriodInDays { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceRecommendationOption[] RecommendationOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RecommendationSource[] RecommendationSources { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastRefreshTimestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum InstanceRecommendationFinding
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Underprovisioned = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Overprovisioned = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Optimized = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotOptimized = 3,
	}
	
	/// <summary>
	/// Describes a recommendation option for an Amazon EC2 instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InstanceRecommendationOption
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UtilizationMetric[] ProjectedUtilizationMetrics { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 5)]
		public System.Nullable<System.Double> PerformanceRisk { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Rank { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MetricName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cpu = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Memory = 1,
	}
	
	/// <summary>
	/// Describes a projected utilization metric of a recommendation option, such as an Amazon EC2 instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ProjectedMetric
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ProjectedMetricName Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Timestamp[] Timestamps { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MetricValue[] Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ProjectedMetricName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cpu = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Memory = 1,
	}
	
	/// <summary>
	/// Describes a utilization metric of a resource, such as an Amazon EC2 instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UtilizationMetric
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UtilizationMetricName Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UtilizationMetricStatistic Statistic { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UtilizationMetricName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cpu = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Memory = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UtilizationMetricStatistic
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Maximum = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Average = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RecommendationSourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ec2Instance = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AutoScalingGroup = 1,
	}
	
	/// <summary>
	/// Describes the source of a recommendation, such as an Amazon EC2 instance or Auto Scaling group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RecommendationSource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationSourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RecommendationSourceRecommendationSourceType RecommendationSourceType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RecommendationSourceRecommendationSourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ec2Instance = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AutoScalingGroup = 1,
	}
	
	/// <summary>
	/// A summary of a recommendation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RecommendationSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Summary[] Summaries { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RecommendationSummaryRecommendationResourceType RecommendationResourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RecommendationSummaryRecommendationResourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ec2Instance = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AutoScalingGroup = 1,
	}
	
	/// <summary>
	/// Describes a projected utilization metric of a recommendation option.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RecommendedOptionProjectedMetric
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendedInstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Rank { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ProjectedMetric[] ProjectedMetrics { get; set; }
	}
	
	/// <summary>
	/// The summary of a recommendation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Summary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SummaryName Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SummaryName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Underprovisioned = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Overprovisioned = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Optimized = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotOptimized = 3,
	}
	
	public partial class DemoClient
	{
		
		private System.Net.Http.HttpClient client;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public DemoClient(System.Net.Http.HttpClient client, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (client == null)
				throw new ArgumentNullException("Null HttpClient.", "client");

			if (client.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "client");

			this.client = client;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// <p>Returns Auto Scaling group recommendations.</p> <p>AWS Compute Optimizer currently generates recommendations for Auto Scaling groups that are configured to run instances of the M, C, R, T, and X instance families. The service does not generate recommendations for Auto Scaling groups that have a scaling policy attached to them, or that do not have the same values for desired, minimum, and maximum capacity. In order for Compute Optimizer to analyze your Auto Scaling groups, they must be of a fixed size. For more information, see the <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/what-is.html">AWS Compute Optimizer User Guide</a>.</p>
		/// GetAutoScalingGroupRecommendations /#X-Amz-Target=ComputeOptimizerService.GetAutoScalingGroupRecommendations
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetAutoScalingGroupRecommendationsResponse> GetAutoScalingGroupRecommendationsAsync(GetAutoScalingGroupRecommendationsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=ComputeOptimizerService.GetAutoScalingGroupRecommendations";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetAutoScalingGroupRecommendationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Returns Amazon EC2 instance recommendations.</p> <p>AWS Compute Optimizer currently generates recommendations for Amazon Elastic Compute Cloud (Amazon EC2) and Amazon EC2 Auto Scaling. It generates recommendations for M, C, R, T, and X instance families. For more information, see the <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/what-is.html">AWS Compute Optimizer User Guide</a>.</p>
		/// GetEC2InstanceRecommendations /#X-Amz-Target=ComputeOptimizerService.GetEC2InstanceRecommendations
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetEC2InstanceRecommendationsResponse> GetEC2InstanceRecommendationsAsync(GetEC2InstanceRecommendationsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=ComputeOptimizerService.GetEC2InstanceRecommendations";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetEC2InstanceRecommendationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns the projected utilization metrics of Amazon EC2 instance recommendations.
		/// GetEC2RecommendationProjectedMetrics /#X-Amz-Target=ComputeOptimizerService.GetEC2RecommendationProjectedMetrics
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetEC2RecommendationProjectedMetricsResponse> GetEC2RecommendationProjectedMetricsAsync(GetEC2RecommendationProjectedMetricsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=ComputeOptimizerService.GetEC2RecommendationProjectedMetrics";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetEC2RecommendationProjectedMetricsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Returns the enrollment (opt in) status of an account to the AWS Compute Optimizer service.</p> <p>If the account is a master account of an organization, this operation also confirms the enrollment status of member accounts within the organization.</p>
		/// GetEnrollmentStatus /#X-Amz-Target=ComputeOptimizerService.GetEnrollmentStatus
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetEnrollmentStatusResponse> GetEnrollmentStatusAsync(GetEnrollmentStatusRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=ComputeOptimizerService.GetEnrollmentStatus";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetEnrollmentStatusResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Returns the optimization findings for an account.</p> <p>For example, it returns the number of Amazon EC2 instances in an account that are under-provisioned, over-provisioned, or optimized. It also returns the number of Auto Scaling groups in an account that are not optimized, or optimized.</p>
		/// GetRecommendationSummaries /#X-Amz-Target=ComputeOptimizerService.GetRecommendationSummaries
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetRecommendationSummariesResponse> GetRecommendationSummariesAsync(GetRecommendationSummariesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=ComputeOptimizerService.GetRecommendationSummaries";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetRecommendationSummariesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Updates the enrollment (opt in) status of an account to the AWS Compute Optimizer service.</p> <p>If the account is a master account of an organization, this operation can also enroll member accounts within the organization.</p>
		/// UpdateEnrollmentStatus /#X-Amz-Target=ComputeOptimizerService.UpdateEnrollmentStatus
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateEnrollmentStatusResponse> UpdateEnrollmentStatusAsync(UpdateEnrollmentStatusRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=ComputeOptimizerService.UpdateEnrollmentStatus";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UpdateEnrollmentStatusResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}
