//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace My.Demo.Client
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Net.Http;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchDescribeSimulationJobResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SimulationJob[] Jobs { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public Arn[] UnprocessedJobs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDeploymentJobResponse
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Arn { get; set; }
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Fleet { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CreateDeploymentJobResponseStatus Status { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public DeploymentApplicationConfig[] DeploymentApplicationConfigs { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 0
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=0)]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CreateDeploymentJobResponseFailureCode FailureCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedAt { get; set; }
		
		/// <summary>
		/// Information about a deployment configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DeploymentConfig DeploymentConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateDeploymentJobResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Preparing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateDeploymentJobResponseFailureCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceNotFound = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EnvironmentSetupError = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EtagMismatch = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FailureThresholdBreached = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotDeploymentAborted = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotDeploymentNoResponse = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotAgentConnectionTimeout = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GreengrassDeploymentFailed = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidGreengrassGroup = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MissingRobotArchitecture = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MissingRobotApplicationArchitecture = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MissingRobotDeploymentResource = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GreengrassGroupVersionDoesNotExist = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LambdaDeleted = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExtractingBundleFailure = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PreLaunchFileFailure = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PostLaunchFileFailure = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionError = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DownloadConditionFailed = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalServerError = 19,
	}
	
	/// <summary>
	/// Information about an S3 object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3Object
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 3
		/// Pattern: [a-z0-9][a-z0-9.\-]*[a-z0-9]
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=3)]
		public string Bucket { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Etag { get; set; }
	}
	
	/// <summary>
	/// Information about a deployment application configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeploymentApplicationConfig
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Application { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [0-9]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string ApplicationVersion { get; set; }
		
		/// <summary>
		/// Configuration information for a deployment launch.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DeploymentLaunchConfig LaunchConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateFleetResponse
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Arn { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateRobotResponse
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Arn { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedAt { get; set; }
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string GreengrassGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CreateRobotResponseArchitecture Architecture { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateRobotResponseArchitecture
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		X86_64 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARM64 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARMHF = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateRobotApplicationResponse
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Arn { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: (\$LATEST)|[0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Source[] Sources { get; set; }
		
		/// <summary>
		/// Information about a robot software suite (ROS distribution).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdatedAt { get; set; }
		
		/// <summary>
		/// Max length: 40
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(40, MinimumLength=1)]
		public string RevisionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	/// Information about a source configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SourceConfig
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 3
		/// Pattern: [a-z0-9][a-z0-9.\-]*[a-z0-9]
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=3)]
		public string S3Bucket { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string S3Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SourceConfigArchitecture Architecture { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SourceConfigArchitecture
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		X86_64 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARM64 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARMHF = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RobotSoftwareSuiteType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROS2 = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RobotSoftwareSuiteVersionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Kinetic = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Melodic = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Dashing = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateRobotApplicationVersionResponse
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Arn { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: (\$LATEST)|[0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Source[] Sources { get; set; }
		
		/// <summary>
		/// Information about a robot software suite (ROS distribution).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdatedAt { get; set; }
		
		/// <summary>
		/// Max length: 40
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(40, MinimumLength=1)]
		public string RevisionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateSimulationApplicationResponse
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Arn { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: (\$LATEST)|[0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Source[] Sources { get; set; }
		
		/// <summary>
		/// Information about a simulation software suite.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SimulationSoftwareSuite SimulationSoftwareSuite { get; set; }
		
		/// <summary>
		/// Information about a robot software suite (ROS distribution).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		/// <summary>
		/// Information about a rendering engine.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RenderingEngine RenderingEngine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdatedAt { get; set; }
		
		/// <summary>
		/// Max length: 40
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(40, MinimumLength=1)]
		public string RevisionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SimulationSoftwareSuiteType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Gazebo = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RosbagPlay = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RenderingEngineType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OGRE = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateSimulationApplicationVersionResponse
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Arn { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: (\$LATEST)|[0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Source[] Sources { get; set; }
		
		/// <summary>
		/// Information about a simulation software suite.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SimulationSoftwareSuite SimulationSoftwareSuite { get; set; }
		
		/// <summary>
		/// Information about a robot software suite (ROS distribution).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		/// <summary>
		/// Information about a rendering engine.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RenderingEngine RenderingEngine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdatedAt { get; set; }
		
		/// <summary>
		/// Max length: 40
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(40, MinimumLength=1)]
		public string RevisionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateSimulationJobResponse
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CreateSimulationJobResponseStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastStartedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CreateSimulationJobResponseFailureBehavior FailureBehavior { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CreateSimulationJobResponseFailureCode FailureCode { get; set; }
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// The output location.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OutputLocation OutputLocation { get; set; }
		
		/// <summary>
		/// The logging configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LoggingConfig LoggingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxJobDurationInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SimulationTimeMillis { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: arn:aws:iam::\w+:role/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string IamRole { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public RobotApplicationConfig[] RobotApplications { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public SimulationApplicationConfig[] SimulationApplications { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSource[] DataSources { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
		
		/// <summary>
		/// VPC configuration associated with your simulation job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VPCConfigResponse VpcConfig { get; set; }
		
		/// <summary>
		/// Compute information for the simulation job
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ComputeResponse Compute { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateSimulationJobResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Preparing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Running = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Restarting = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RunningFailed = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Terminating = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Terminated = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 9,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateSimulationJobResponseFailureBehavior
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Fail = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Continue = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateSimulationJobResponseFailureCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalServiceError = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotApplicationCrash = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SimulationApplicationCrash = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsRobotApplication = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsSimulationApplication = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsS3Object = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsS3Output = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsCloudwatchLogs = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SubnetIpLimitExceeded = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENILimitExceeded = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsUserCredentials = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidBundleRobotApplication = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidBundleSimulationApplication = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidS3Resource = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LimitExceeded = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MismatchedEtag = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotApplicationVersionMismatchedEtag = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SimulationApplicationVersionMismatchedEtag = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceNotFound = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RequestThrottled = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BatchTimedOut = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BatchCanceled = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidInput = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WrongRegionS3Bucket = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WrongRegionS3Output = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WrongRegionRobotApplication = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WrongRegionSimulationApplication = 26,
	}
	
	/// <summary>
	/// Application configuration information for a robot.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RobotApplicationConfig
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Application { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: (\$LATEST)|[0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string ApplicationVersion { get; set; }
		
		/// <summary>
		/// Information about a launch configuration.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LaunchConfig LaunchConfig { get; set; }
	}
	
	/// <summary>
	/// Information about a simulation application configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SimulationApplicationConfig
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Application { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: (\$LATEST)|[0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string ApplicationVersion { get; set; }
		
		/// <summary>
		/// Information about a launch configuration.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LaunchConfig LaunchConfig { get; set; }
	}
	
	/// <summary>
	/// Information about a data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DataSourceConfig
	{
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Min length: 3
		/// Pattern: [a-z0-9][a-z0-9.\-]*[a-z0-9]
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=3)]
		public string S3Bucket { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public S3Key[] S3Keys { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeregisterRobotResponse
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Fleet { get; set; }
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Robot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDeploymentJobResponse
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Arn { get; set; }
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Fleet { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeDeploymentJobResponseStatus Status { get; set; }
		
		/// <summary>
		/// Information about a deployment configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DeploymentConfig DeploymentConfig { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public DeploymentApplicationConfig[] DeploymentApplicationConfigs { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 0
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=0)]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeDeploymentJobResponseFailureCode FailureCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RobotDeployment[] RobotDeploymentSummary { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeDeploymentJobResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Preparing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeDeploymentJobResponseFailureCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceNotFound = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EnvironmentSetupError = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EtagMismatch = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FailureThresholdBreached = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotDeploymentAborted = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotDeploymentNoResponse = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotAgentConnectionTimeout = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GreengrassDeploymentFailed = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidGreengrassGroup = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MissingRobotArchitecture = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MissingRobotApplicationArchitecture = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MissingRobotDeploymentResource = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GreengrassGroupVersionDoesNotExist = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LambdaDeleted = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExtractingBundleFailure = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PreLaunchFileFailure = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PostLaunchFileFailure = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionError = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DownloadConditionFailed = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalServerError = 19,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeFleetResponse
	{
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Arn { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 1000
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(1000)]
		public Robot[] Robots { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeFleetResponseLastDeploymentStatus LastDeploymentStatus { get; set; }
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string LastDeploymentJob { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastDeploymentTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeFleetResponseLastDeploymentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Preparing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeRobotResponse
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Arn { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string FleetArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeRobotResponseStatus Status { get; set; }
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string GreengrassGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeRobotResponseArchitecture Architecture { get; set; }
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string LastDeploymentJob { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastDeploymentTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeRobotResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Available = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Registered = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PendingNewDeployment = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deploying = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InSync = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NoResponse = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeRobotResponseArchitecture
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		X86_64 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARM64 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARMHF = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeRobotApplicationResponse
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Arn { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: (\$LATEST)|[0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Source[] Sources { get; set; }
		
		/// <summary>
		/// Information about a robot software suite (ROS distribution).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		/// <summary>
		/// Max length: 40
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(40, MinimumLength=1)]
		public string RevisionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeSimulationApplicationResponse
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Arn { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: (\$LATEST)|[0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Source[] Sources { get; set; }
		
		/// <summary>
		/// Information about a simulation software suite.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SimulationSoftwareSuite SimulationSoftwareSuite { get; set; }
		
		/// <summary>
		/// Information about a robot software suite (ROS distribution).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		/// <summary>
		/// Information about a rendering engine.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RenderingEngine RenderingEngine { get; set; }
		
		/// <summary>
		/// Max length: 40
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(40, MinimumLength=1)]
		public string RevisionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeSimulationJobResponse
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Arn { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeSimulationJobResponseStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastStartedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeSimulationJobResponseFailureBehavior FailureBehavior { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeSimulationJobResponseFailureCode FailureCode { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 0
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=0)]
		public string FailureReason { get; set; }
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// The output location.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OutputLocation OutputLocation { get; set; }
		
		/// <summary>
		/// The logging configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LoggingConfig LoggingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxJobDurationInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SimulationTimeMillis { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: arn:aws:iam::\w+:role/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string IamRole { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public RobotApplicationConfig[] RobotApplications { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public SimulationApplicationConfig[] SimulationApplications { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSource[] DataSources { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
		
		/// <summary>
		/// VPC configuration associated with your simulation job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VPCConfigResponse VpcConfig { get; set; }
		
		/// <summary>
		/// Describes a network interface.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public NetworkInterface NetworkInterface { get; set; }
		
		/// <summary>
		/// Compute information for the simulation job
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ComputeResponse Compute { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeSimulationJobResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Preparing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Running = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Restarting = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RunningFailed = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Terminating = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Terminated = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 9,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeSimulationJobResponseFailureBehavior
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Fail = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Continue = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeSimulationJobResponseFailureCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalServiceError = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotApplicationCrash = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SimulationApplicationCrash = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsRobotApplication = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsSimulationApplication = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsS3Object = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsS3Output = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsCloudwatchLogs = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SubnetIpLimitExceeded = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENILimitExceeded = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsUserCredentials = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidBundleRobotApplication = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidBundleSimulationApplication = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidS3Resource = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LimitExceeded = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MismatchedEtag = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotApplicationVersionMismatchedEtag = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SimulationApplicationVersionMismatchedEtag = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceNotFound = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RequestThrottled = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BatchTimedOut = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BatchCanceled = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidInput = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WrongRegionS3Bucket = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WrongRegionS3Output = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WrongRegionRobotApplication = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WrongRegionSimulationApplication = 26,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeSimulationJobBatchResponse
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeSimulationJobBatchResponseStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedAt { get; set; }
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// Information about the batch policy.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public BatchPolicy BatchPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeSimulationJobBatchResponseFailureCode FailureCode { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 0
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=0)]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FailedCreateSimulationJobRequest[] FailedRequests { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public SimulationJobRequest[] PendingRequests { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public SimulationJobSummary[] CreatedRequests { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeSimulationJobBatchResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceling = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completing = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TimingOut = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TimedOut = 8,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeSimulationJobBatchResponseFailureCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalServiceError = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListDeploymentJobsResponse
	{
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(200)]
		public DeploymentJob[] DeploymentJobs { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Information about a filter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Filter
	{
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public Name[] Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListFleetsResponse
	{
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(200)]
		public Fleet[] FleetDetails { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListRobotApplicationsResponse
	{
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public RobotApplicationSummary[] RobotApplicationSummaries { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListRobotsResponse
	{
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 1000
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(1000)]
		public Robot[] Robots { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListSimulationApplicationsResponse
	{
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public SimulationApplicationSummary[] SimulationApplicationSummaries { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListSimulationJobBatchesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SimulationJobBatchSummary[] SimulationJobBatchSummaries { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListSimulationJobsResponse
	{
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public SimulationJobSummary[] SimulationJobSummaries { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTagsForResourceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RegisterRobotResponse
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Fleet { get; set; }
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Robot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartSimulationJobBatchResponse
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StartSimulationJobBatchResponseStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedAt { get; set; }
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// Information about the batch policy.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public BatchPolicy BatchPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StartSimulationJobBatchResponseFailureCode FailureCode { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 0
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=0)]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FailedCreateSimulationJobRequest[] FailedRequests { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public SimulationJobRequest[] PendingRequests { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public SimulationJobSummary[] CreatedRequests { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StartSimulationJobBatchResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceling = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completing = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TimingOut = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TimedOut = 8,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StartSimulationJobBatchResponseFailureCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalServiceError = 0,
	}
	
	/// <summary>
	/// Information about a simulation job request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SimulationJobRequest
	{
		
		/// <summary>
		/// The output location.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OutputLocation OutputLocation { get; set; }
		
		/// <summary>
		/// The logging configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LoggingConfig LoggingConfig { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int MaxJobDurationInSeconds { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: arn:aws:iam::\w+:role/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string IamRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SimulationJobRequestFailureBehavior FailureBehavior { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseDefaultApplications { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public RobotApplicationConfig[] RobotApplications { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public SimulationApplicationConfig[] SimulationApplications { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public DataSourceConfig[] DataSources { get; set; }
		
		/// <summary>
		/// If your simulation job accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and two subnet IDs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VPCConfig VpcConfig { get; set; }
		
		/// <summary>
		/// Compute information for the simulation job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Compute Compute { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SimulationJobRequestFailureBehavior
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Fail = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Continue = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SyncDeploymentJobResponse
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Arn { get; set; }
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Fleet { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SyncDeploymentJobResponseStatus Status { get; set; }
		
		/// <summary>
		/// Information about a deployment configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DeploymentConfig DeploymentConfig { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public DeploymentApplicationConfig[] DeploymentApplicationConfigs { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 0
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=0)]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SyncDeploymentJobResponseFailureCode FailureCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SyncDeploymentJobResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Preparing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SyncDeploymentJobResponseFailureCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceNotFound = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EnvironmentSetupError = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EtagMismatch = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FailureThresholdBreached = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotDeploymentAborted = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotDeploymentNoResponse = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotAgentConnectionTimeout = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GreengrassDeploymentFailed = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidGreengrassGroup = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MissingRobotArchitecture = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MissingRobotApplicationArchitecture = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MissingRobotDeploymentResource = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GreengrassGroupVersionDoesNotExist = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LambdaDeleted = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExtractingBundleFailure = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PreLaunchFileFailure = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PostLaunchFileFailure = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionError = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DownloadConditionFailed = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalServerError = 19,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateRobotApplicationResponse
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Arn { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: (\$LATEST)|[0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Source[] Sources { get; set; }
		
		/// <summary>
		/// Information about a robot software suite (ROS distribution).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdatedAt { get; set; }
		
		/// <summary>
		/// Max length: 40
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(40, MinimumLength=1)]
		public string RevisionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateSimulationApplicationResponse
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Arn { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: (\$LATEST)|[0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Source[] Sources { get; set; }
		
		/// <summary>
		/// Information about a simulation software suite.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SimulationSoftwareSuite SimulationSoftwareSuite { get; set; }
		
		/// <summary>
		/// Information about a robot software suite (ROS distribution).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		/// <summary>
		/// Information about a rendering engine.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RenderingEngine RenderingEngine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdatedAt { get; set; }
		
		/// <summary>
		/// Max length: 40
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(40, MinimumLength=1)]
		public string RevisionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum Architecture
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		X86_64 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARM64 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARMHF = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchDescribeSimulationJobRequest
	{
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public Arn[] Jobs { get; set; }
	}
	
	/// <summary>
	/// Information about the batch policy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchPolicy
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TimeoutInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxConcurrency { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CancelDeploymentJobRequest
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Job { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CancelSimulationJobBatchRequest
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Batch { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CancelSimulationJobRequest
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Job { get; set; }
	}
	
	/// <summary>
	/// Compute information for the simulation job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Compute
	{
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 15
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 15)]
		public System.Nullable<System.Int32> SimulationUnitLimit { get; set; }
	}
	
	/// <summary>
	/// Compute information for the simulation job
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ComputeResponse
	{
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 15
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 15)]
		public System.Nullable<System.Int32> SimulationUnitLimit { get; set; }
	}
	
	/// <summary>
	/// Information about a deployment configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeploymentConfig
	{
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> ConcurrentDeploymentPercentage { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> FailureThresholdPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> RobotDeploymentTimeoutInSeconds { get; set; }
		
		/// <summary>
		/// Information about an S3 object.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3Object DownloadConditionFile { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDeploymentJobRequest
	{
		
		/// <summary>
		/// Information about a deployment configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DeploymentConfig DeploymentConfig { get; set; }
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-=]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Fleet { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public DeploymentApplicationConfig[] DeploymentApplicationConfigs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DeploymentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Preparing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DeploymentJobErrorCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceNotFound = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EnvironmentSetupError = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EtagMismatch = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FailureThresholdBreached = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotDeploymentAborted = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotDeploymentNoResponse = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotAgentConnectionTimeout = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GreengrassDeploymentFailed = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidGreengrassGroup = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MissingRobotArchitecture = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MissingRobotApplicationArchitecture = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MissingRobotDeploymentResource = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GreengrassGroupVersionDoesNotExist = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LambdaDeleted = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExtractingBundleFailure = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PreLaunchFileFailure = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PostLaunchFileFailure = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionError = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DownloadConditionFailed = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalServerError = 19,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateFleetRequest
	{
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	/// Information about a robot software suite (ROS distribution).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RobotSoftwareSuite
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RobotSoftwareSuiteName Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RobotSoftwareSuiteVersion Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RobotSoftwareSuiteName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROS2 = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RobotSoftwareSuiteVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Kinetic = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Melodic = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Dashing = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateRobotApplicationRequest
	{
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SourceConfig[] Sources { get; set; }
		
		/// <summary>
		/// Information about a robot software suite (ROS distribution).
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateRobotApplicationVersionRequest
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Application { get; set; }
		
		/// <summary>
		/// Max length: 40
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(40, MinimumLength=1)]
		public string CurrentRevisionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateRobotRequest
	{
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateRobotRequestArchitecture Architecture { get; set; }
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string GreengrassGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateRobotRequestArchitecture
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		X86_64 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARM64 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARMHF = 2,
	}
	
	/// <summary>
	/// Information about a simulation software suite.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SimulationSoftwareSuite
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SimulationSoftwareSuiteName Name { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 0
		/// Pattern: 7|9|Kinetic|Melodic|Dashing
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=0)]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SimulationSoftwareSuiteName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Gazebo = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RosbagPlay = 1,
	}
	
	/// <summary>
	/// Information about a rendering engine.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RenderingEngine
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RenderingEngineName Name { get; set; }
		
		/// <summary>
		/// Max length: 4
		/// Min length: 1
		/// Pattern: 1.x
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(4, MinimumLength=1)]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RenderingEngineName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OGRE = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateSimulationApplicationRequest
	{
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SourceConfig[] Sources { get; set; }
		
		/// <summary>
		/// Information about a simulation software suite.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SimulationSoftwareSuite SimulationSoftwareSuite { get; set; }
		
		/// <summary>
		/// Information about a robot software suite (ROS distribution).
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		/// <summary>
		/// Information about a rendering engine.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RenderingEngine RenderingEngine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateSimulationApplicationVersionRequest
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Application { get; set; }
		
		/// <summary>
		/// Max length: 40
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(40, MinimumLength=1)]
		public string CurrentRevisionId { get; set; }
	}
	
	/// <summary>
	/// The output location.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class OutputLocation
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 3
		/// Pattern: [a-z0-9][a-z0-9.\-]*[a-z0-9]
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=3)]
		public string S3Bucket { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string S3Prefix { get; set; }
	}
	
	/// <summary>
	/// The logging configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class LoggingConfig
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool RecordAllRosTopics { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FailureBehavior
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Fail = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Continue = 1,
	}
	
	/// <summary>
	/// If your simulation job accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and two subnet IDs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class VPCConfig
	{
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 16
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(16)]
		public NonEmptyString[] Subnets { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public NonEmptyString[] SecurityGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AssignPublicIp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateSimulationJobRequest
	{
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// The output location.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OutputLocation OutputLocation { get; set; }
		
		/// <summary>
		/// The logging configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LoggingConfig LoggingConfig { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int MaxJobDurationInSeconds { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: arn:aws:iam::\w+:role/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string IamRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CreateSimulationJobRequestFailureBehavior FailureBehavior { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public RobotApplicationConfig[] RobotApplications { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public SimulationApplicationConfig[] SimulationApplications { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public DataSourceConfig[] DataSources { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
		
		/// <summary>
		/// If your simulation job accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and two subnet IDs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VPCConfig VpcConfig { get; set; }
		
		/// <summary>
		/// Compute information for the simulation job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Compute Compute { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateSimulationJobRequestFailureBehavior
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Fail = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Continue = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SimulationJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Preparing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Running = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Restarting = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RunningFailed = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Terminating = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Terminated = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 9,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SimulationJobErrorCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalServiceError = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotApplicationCrash = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SimulationApplicationCrash = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsRobotApplication = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsSimulationApplication = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsS3Object = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsS3Output = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsCloudwatchLogs = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SubnetIpLimitExceeded = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENILimitExceeded = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsUserCredentials = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidBundleRobotApplication = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidBundleSimulationApplication = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidS3Resource = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LimitExceeded = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MismatchedEtag = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotApplicationVersionMismatchedEtag = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SimulationApplicationVersionMismatchedEtag = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceNotFound = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RequestThrottled = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BatchTimedOut = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BatchCanceled = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidInput = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WrongRegionS3Bucket = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WrongRegionS3Output = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WrongRegionRobotApplication = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WrongRegionSimulationApplication = 26,
	}
	
	/// <summary>
	/// VPC configuration associated with your simulation job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class VPCConfigResponse
	{
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 16
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(16)]
		public NonEmptyString[] Subnets { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public NonEmptyString[] SecurityGroups { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 0
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=0)]
		public string VpcId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AssignPublicIp { get; set; }
	}
	
	/// <summary>
	/// Information about a data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DataSource
	{
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Min length: 3
		/// Pattern: [a-z0-9][a-z0-9.\-]*[a-z0-9]
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=3)]
		public string S3Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3KeyOutput[] S3Keys { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteFleetRequest
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Fleet { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteRobotApplicationRequest
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Application { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: (\$LATEST)|[0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string ApplicationVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteRobotRequest
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Robot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteSimulationApplicationRequest
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Application { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: (\$LATEST)|[0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string ApplicationVersion { get; set; }
	}
	
	/// <summary>
	/// Configuration information for a deployment launch.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeploymentLaunchConfig
	{
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string PackageName { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string PreLaunchFile { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string LaunchFile { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string PostLaunchFile { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EnvironmentVariableMap EnvironmentVariables { get; set; }
	}
	
	/// <summary>
	/// Information about a deployment job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeploymentJob
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Arn { get; set; }
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Fleet { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DeploymentJobStatus Status { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public DeploymentApplicationConfig[] DeploymentApplicationConfigs { get; set; }
		
		/// <summary>
		/// Information about a deployment configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DeploymentConfig DeploymentConfig { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 0
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=0)]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DeploymentJobFailureCode FailureCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DeploymentJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Preparing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DeploymentJobFailureCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceNotFound = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EnvironmentSetupError = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EtagMismatch = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FailureThresholdBreached = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotDeploymentAborted = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotDeploymentNoResponse = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotAgentConnectionTimeout = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GreengrassDeploymentFailed = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidGreengrassGroup = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MissingRobotArchitecture = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MissingRobotApplicationArchitecture = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MissingRobotDeploymentResource = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GreengrassGroupVersionDoesNotExist = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LambdaDeleted = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExtractingBundleFailure = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PreLaunchFileFailure = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PostLaunchFileFailure = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionError = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DownloadConditionFailed = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalServerError = 19,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeregisterRobotRequest
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Fleet { get; set; }
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Robot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDeploymentJobRequest
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Job { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeFleetRequest
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Fleet { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeRobotApplicationRequest
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Application { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: (\$LATEST)|[0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string ApplicationVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeRobotRequest
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Robot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RobotStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Available = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Registered = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PendingNewDeployment = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deploying = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InSync = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NoResponse = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeSimulationApplicationRequest
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Application { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: (\$LATEST)|[0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string ApplicationVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeSimulationJobBatchRequest
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Batch { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SimulationJobBatchStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceling = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completing = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TimingOut = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TimedOut = 8,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SimulationJobBatchErrorCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalServiceError = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeSimulationJobRequest
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Job { get; set; }
	}
	
	/// <summary>
	/// Describes a network interface.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class NetworkInterface
	{
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 0
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=0)]
		public string NetworkInterfaceId { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 0
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=0)]
		public string PrivateIpAddress { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 0
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=0)]
		public string PublicIpAddress { get; set; }
	}
	
	/// <summary>
	/// Information about a failed create simulation job request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FailedCreateSimulationJobRequest
	{
		
		/// <summary>
		/// Information about a simulation job request.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SimulationJobRequest Request { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 0
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=0)]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FailedCreateSimulationJobRequestFailureCode FailureCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> FailedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FailedCreateSimulationJobRequestFailureCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalServiceError = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotApplicationCrash = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SimulationApplicationCrash = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsRobotApplication = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsSimulationApplication = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsS3Object = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsS3Output = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsCloudwatchLogs = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SubnetIpLimitExceeded = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENILimitExceeded = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsUserCredentials = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidBundleRobotApplication = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidBundleSimulationApplication = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidS3Resource = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LimitExceeded = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MismatchedEtag = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotApplicationVersionMismatchedEtag = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SimulationApplicationVersionMismatchedEtag = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceNotFound = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RequestThrottled = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BatchTimedOut = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BatchCanceled = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidInput = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WrongRegionS3Bucket = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WrongRegionS3Output = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WrongRegionRobotApplication = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WrongRegionSimulationApplication = 26,
	}
	
	/// <summary>
	/// Information about a fleet.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Fleet
	{
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FleetLastDeploymentStatus LastDeploymentStatus { get; set; }
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string LastDeploymentJob { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastDeploymentTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FleetLastDeploymentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Preparing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 5,
	}
	
	/// <summary>
	/// Configuration information for port forwarding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PortForwardingConfig
	{
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 10
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public PortMapping[] PortMappings { get; set; }
	}
	
	/// <summary>
	/// Information about a launch configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class LaunchConfig
	{
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string PackageName { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string LaunchFile { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EnvironmentVariableMap EnvironmentVariables { get; set; }
		
		/// <summary>
		/// Configuration information for port forwarding.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PortForwardingConfig PortForwardingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> StreamUI { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListDeploymentJobsRequest
	{
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public Filter[] Filters { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListFleetsRequest
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public Filter[] Filters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListRobotApplicationsRequest
	{
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: ALL
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string VersionQualifier { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public Filter[] Filters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListRobotsRequest
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public Filter[] Filters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListSimulationApplicationsRequest
	{
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: ALL
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string VersionQualifier { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public Filter[] Filters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListSimulationJobBatchesRequest
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public Filter[] Filters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListSimulationJobsRequest
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public Filter[] Filters { get; set; }
	}
	
	/// <summary>
	/// An object representing a port mapping.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PortMapping
	{
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 65535
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 65535)]
		public int JobPort { get; set; }
		
		/// <summary>
		/// Minimum: 1024
		/// Maximum: 65535
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1024, 65535)]
		public int ApplicationPort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableOnPublicIp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RobotDeploymentStep
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Validating = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DownloadingExtracting = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExecutingDownloadCondition = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExecutingPreLaunch = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Launching = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExecutingPostLaunch = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Finished = 6,
	}
	
	/// <summary>
	/// Information about the progress of a deployment job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ProgressDetail
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ProgressDetailCurrentProgress CurrentProgress { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 100)]
		public System.Nullable<System.Single> PercentDone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> EstimatedTimeRemainingSeconds { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 0
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=0)]
		public string TargetResource { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ProgressDetailCurrentProgress
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Validating = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DownloadingExtracting = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExecutingDownloadCondition = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExecutingPreLaunch = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Launching = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExecutingPostLaunch = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Finished = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RegisterRobotRequest
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Fleet { get; set; }
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Robot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RestartSimulationJobRequest
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Job { get; set; }
	}
	
	/// <summary>
	/// Information about a robot.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Robot
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Arn { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string FleetArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RobotStatus Status { get; set; }
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string GreenGrassGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RobotArchitecture Architecture { get; set; }
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string LastDeploymentJob { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastDeploymentTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RobotStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Available = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Registered = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PendingNewDeployment = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deploying = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InSync = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NoResponse = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RobotArchitecture
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		X86_64 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARM64 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARMHF = 2,
	}
	
	/// <summary>
	/// Summary information for a robot application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RobotApplicationSummary
	{
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Arn { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: (\$LATEST)|[0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdatedAt { get; set; }
		
		/// <summary>
		/// Information about a robot software suite (ROS distribution).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RobotSoftwareSuite RobotSoftwareSuite { get; set; }
	}
	
	/// <summary>
	/// Information about a robot deployment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RobotDeployment
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> DeploymentStartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> DeploymentFinishTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RobotDeploymentStatus Status { get; set; }
		
		/// <summary>
		/// Information about the progress of a deployment job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ProgressDetail ProgressDetail { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 0
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=0)]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RobotDeploymentFailureCode FailureCode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RobotDeploymentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Available = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Registered = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PendingNewDeployment = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deploying = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InSync = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NoResponse = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RobotDeploymentFailureCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceNotFound = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EnvironmentSetupError = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EtagMismatch = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FailureThresholdBreached = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotDeploymentAborted = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotDeploymentNoResponse = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotAgentConnectionTimeout = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GreengrassDeploymentFailed = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidGreengrassGroup = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MissingRobotArchitecture = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MissingRobotApplicationArchitecture = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MissingRobotDeploymentResource = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GreengrassGroupVersionDoesNotExist = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LambdaDeleted = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExtractingBundleFailure = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PreLaunchFileFailure = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PostLaunchFileFailure = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionError = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DownloadConditionFailed = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalServerError = 19,
	}
	
	/// <summary>
	/// Information about S3 keys.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3KeyOutput
	{
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string S3Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Etag { get; set; }
	}
	
	/// <summary>
	/// Summary information for a simulation application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SimulationApplicationSummary
	{
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Arn { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: (\$LATEST)|[0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdatedAt { get; set; }
		
		/// <summary>
		/// Information about a robot software suite (ROS distribution).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		/// <summary>
		/// Information about a simulation software suite.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SimulationSoftwareSuite SimulationSoftwareSuite { get; set; }
	}
	
	/// <summary>
	/// Information about a simulation job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SimulationJob
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Arn { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SimulationJobStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastStartedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SimulationJobFailureBehavior FailureBehavior { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SimulationJobFailureCode FailureCode { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 0
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=0)]
		public string FailureReason { get; set; }
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// The output location.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OutputLocation OutputLocation { get; set; }
		
		/// <summary>
		/// The logging configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LoggingConfig LoggingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxJobDurationInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SimulationTimeMillis { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: arn:aws:iam::\w+:role/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string IamRole { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public RobotApplicationConfig[] RobotApplications { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public SimulationApplicationConfig[] SimulationApplications { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSource[] DataSources { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
		
		/// <summary>
		/// VPC configuration associated with your simulation job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VPCConfigResponse VpcConfig { get; set; }
		
		/// <summary>
		/// Describes a network interface.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public NetworkInterface NetworkInterface { get; set; }
		
		/// <summary>
		/// Compute information for the simulation job
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ComputeResponse Compute { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SimulationJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Preparing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Running = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Restarting = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RunningFailed = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Terminating = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Terminated = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 9,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SimulationJobFailureBehavior
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Fail = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Continue = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SimulationJobFailureCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalServiceError = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotApplicationCrash = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SimulationApplicationCrash = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsRobotApplication = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsSimulationApplication = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsS3Object = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsS3Output = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsCloudwatchLogs = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SubnetIpLimitExceeded = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENILimitExceeded = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsUserCredentials = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidBundleRobotApplication = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidBundleSimulationApplication = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidS3Resource = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LimitExceeded = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MismatchedEtag = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotApplicationVersionMismatchedEtag = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SimulationApplicationVersionMismatchedEtag = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceNotFound = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RequestThrottled = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BatchTimedOut = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BatchCanceled = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidInput = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WrongRegionS3Bucket = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WrongRegionS3Output = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WrongRegionRobotApplication = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WrongRegionSimulationApplication = 26,
	}
	
	/// <summary>
	/// Information about a simulation job batch.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SimulationJobBatchSummary
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SimulationJobBatchSummaryStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FailedRequestCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PendingRequestCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CreatedRequestCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SimulationJobBatchSummaryStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceling = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completing = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TimingOut = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TimedOut = 8,
	}
	
	/// <summary>
	/// Summary information for a simulation job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SimulationJobSummary
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdatedAt { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SimulationJobSummaryStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Name[] SimulationApplicationNames { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Name[] RobotApplicationNames { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Name[] DataSourceNames { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SimulationJobSummaryStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Preparing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Running = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Restarting = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RunningFailed = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Terminating = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Terminated = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 9,
	}
	
	/// <summary>
	/// Information about a source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Source
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 3
		/// Pattern: [a-z0-9][a-z0-9.\-]*[a-z0-9]
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=3)]
		public string S3Bucket { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string S3Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Etag { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SourceArchitecture Architecture { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SourceArchitecture
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		X86_64 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARM64 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARMHF = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartSimulationJobBatchRequest
	{
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// Information about the batch policy.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public BatchPolicy BatchPolicy { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public SimulationJobRequest[] CreateSimulationJobRequests { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SyncDeploymentJobRequest
	{
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-=]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Fleet { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TagResourceRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateRobotApplicationRequest
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Application { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SourceConfig[] Sources { get; set; }
		
		/// <summary>
		/// Information about a robot software suite (ROS distribution).
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		/// <summary>
		/// Max length: 40
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(40, MinimumLength=1)]
		public string CurrentRevisionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateSimulationApplicationRequest
	{
		
		/// <summary>
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Application { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SourceConfig[] Sources { get; set; }
		
		/// <summary>
		/// Information about a simulation software suite.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SimulationSoftwareSuite SimulationSoftwareSuite { get; set; }
		
		/// <summary>
		/// Information about a robot software suite (ROS distribution).
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		/// <summary>
		/// Information about a rendering engine.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RenderingEngine RenderingEngine { get; set; }
		
		/// <summary>
		/// Max length: 40
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(40, MinimumLength=1)]
		public string CurrentRevisionId { get; set; }
	}
	
	public partial class DemoClient
	{
		
		private System.Net.Http.HttpClient client;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public DemoClient(System.Net.Http.HttpClient client, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (client == null)
				throw new ArgumentNullException("Null HttpClient.", "client");

			if (client.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "client");

			this.client = client;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Describes one or more simulation jobs.
		/// BatchDescribeSimulationJob /batchDescribeSimulationJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<BatchDescribeSimulationJobResponse> BatchDescribeSimulationJobAsync(BatchDescribeSimulationJobBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/batchDescribeSimulationJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<BatchDescribeSimulationJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Cancels the specified deployment job.
		/// CancelDeploymentJob /cancelDeploymentJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CancelDeploymentJobResponse> CancelDeploymentJobAsync(CancelDeploymentJobBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/cancelDeploymentJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CancelDeploymentJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Cancels the specified simulation job.
		/// CancelSimulationJob /cancelSimulationJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CancelSimulationJobResponse> CancelSimulationJobAsync(CancelSimulationJobBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/cancelSimulationJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CancelSimulationJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Cancels a simulation job batch. When you cancel a simulation job batch, you are also cancelling all of the active simulation jobs created as part of the batch.
		/// CancelSimulationJobBatch /cancelSimulationJobBatch
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CancelSimulationJobBatchResponse> CancelSimulationJobBatchAsync(CancelSimulationJobBatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/cancelSimulationJobBatch";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CancelSimulationJobBatchResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Deploys a specific version of a robot application to robots in a fleet.</p> <p>The robot application must have a numbered <code>applicationVersion</code> for consistency reasons. To create a new version, use <code>CreateRobotApplicationVersion</code> or see <a href="https://docs.aws.amazon.com/robomaker/latest/dg/create-robot-application-version.html">Creating a Robot Application Version</a>. </p> <note> <p>After 90 days, deployment jobs expire and will be deleted. They will no longer be accessible. </p> </note>
		/// CreateDeploymentJob /createDeploymentJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateDeploymentJobResponse> CreateDeploymentJobAsync(CreateDeploymentJobBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/createDeploymentJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateDeploymentJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a fleet, a logical group of robots running the same robot application.
		/// CreateFleet /createFleet
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateFleetResponse> CreateFleetAsync(CreateFleetBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/createFleet";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateFleetResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a robot.
		/// CreateRobot /createRobot
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateRobotResponse> CreateRobotAsync(CreateRobotBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/createRobot";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateRobotResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a robot application.
		/// CreateRobotApplication /createRobotApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateRobotApplicationResponse> CreateRobotApplicationAsync(CreateRobotApplicationBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/createRobotApplication";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateRobotApplicationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a version of a robot application.
		/// CreateRobotApplicationVersion /createRobotApplicationVersion
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateRobotApplicationVersionResponse> CreateRobotApplicationVersionAsync(CreateRobotApplicationVersionBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/createRobotApplicationVersion";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateRobotApplicationVersionResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a simulation application.
		/// CreateSimulationApplication /createSimulationApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateSimulationApplicationResponse> CreateSimulationApplicationAsync(CreateSimulationApplicationBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/createSimulationApplication";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateSimulationApplicationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a simulation application with a specific revision id.
		/// CreateSimulationApplicationVersion /createSimulationApplicationVersion
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateSimulationApplicationVersionResponse> CreateSimulationApplicationVersionAsync(CreateSimulationApplicationVersionBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/createSimulationApplicationVersion";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateSimulationApplicationVersionResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a simulation job.</p> <note> <p>After 90 days, simulation jobs expire and will be deleted. They will no longer be accessible. </p> </note>
		/// CreateSimulationJob /createSimulationJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateSimulationJobResponse> CreateSimulationJobAsync(CreateSimulationJobBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/createSimulationJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateSimulationJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes a fleet.
		/// DeleteFleet /deleteFleet
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteFleetResponse> DeleteFleetAsync(DeleteFleetBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/deleteFleet";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteFleetResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes a robot.
		/// DeleteRobot /deleteRobot
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteRobotResponse> DeleteRobotAsync(DeleteRobotBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/deleteRobot";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteRobotResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes a robot application.
		/// DeleteRobotApplication /deleteRobotApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteRobotApplicationResponse> DeleteRobotApplicationAsync(DeleteRobotApplicationBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/deleteRobotApplication";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteRobotApplicationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes a simulation application.
		/// DeleteSimulationApplication /deleteSimulationApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteSimulationApplicationResponse> DeleteSimulationApplicationAsync(DeleteSimulationApplicationBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/deleteSimulationApplication";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteSimulationApplicationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deregisters a robot.
		/// DeregisterRobot /deregisterRobot
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeregisterRobotResponse> DeregisterRobotAsync(DeregisterRobotBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/deregisterRobot";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeregisterRobotResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Describes a deployment job.
		/// DescribeDeploymentJob /describeDeploymentJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeDeploymentJobResponse> DescribeDeploymentJobAsync(DescribeDeploymentJobBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/describeDeploymentJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeDeploymentJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Describes a fleet.
		/// DescribeFleet /describeFleet
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeFleetResponse> DescribeFleetAsync(DescribeFleetBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/describeFleet";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeFleetResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Describes a robot.
		/// DescribeRobot /describeRobot
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeRobotResponse> DescribeRobotAsync(DescribeRobotBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/describeRobot";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeRobotResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Describes a robot application.
		/// DescribeRobotApplication /describeRobotApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeRobotApplicationResponse> DescribeRobotApplicationAsync(DescribeRobotApplicationBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/describeRobotApplication";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeRobotApplicationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Describes a simulation application.
		/// DescribeSimulationApplication /describeSimulationApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeSimulationApplicationResponse> DescribeSimulationApplicationAsync(DescribeSimulationApplicationBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/describeSimulationApplication";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeSimulationApplicationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Describes a simulation job.
		/// DescribeSimulationJob /describeSimulationJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeSimulationJobResponse> DescribeSimulationJobAsync(DescribeSimulationJobBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/describeSimulationJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeSimulationJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Describes a simulation job batch.
		/// DescribeSimulationJobBatch /describeSimulationJobBatch
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeSimulationJobBatchResponse> DescribeSimulationJobBatchAsync(DescribeSimulationJobBatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/describeSimulationJobBatch";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeSimulationJobBatchResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns a list of deployment jobs for a fleet. You can optionally provide filters to retrieve specific deployment jobs.
		/// ListDeploymentJobs /listDeploymentJobs
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListDeploymentJobsResponse> ListDeploymentJobsAsync(string maxResults, string nextToken, ListDeploymentJobsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/listDeploymentJobs?maxResults=" + (maxResults==null? "" : Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListDeploymentJobsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns a list of fleets. You can optionally provide filters to retrieve specific fleets.
		/// ListFleets /listFleets
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListFleetsResponse> ListFleetsAsync(string maxResults, string nextToken, ListFleetsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/listFleets?maxResults=" + (maxResults==null? "" : Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListFleetsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns a list of robot application. You can optionally provide filters to retrieve specific robot applications.
		/// ListRobotApplications /listRobotApplications
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListRobotApplicationsResponse> ListRobotApplicationsAsync(string maxResults, string nextToken, ListRobotApplicationsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/listRobotApplications?maxResults=" + (maxResults==null? "" : Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListRobotApplicationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns a list of robots. You can optionally provide filters to retrieve specific robots.
		/// ListRobots /listRobots
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListRobotsResponse> ListRobotsAsync(string maxResults, string nextToken, ListRobotsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/listRobots?maxResults=" + (maxResults==null? "" : Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListRobotsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns a list of simulation applications. You can optionally provide filters to retrieve specific simulation applications.
		/// ListSimulationApplications /listSimulationApplications
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListSimulationApplicationsResponse> ListSimulationApplicationsAsync(string maxResults, string nextToken, ListSimulationApplicationsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/listSimulationApplications?maxResults=" + (maxResults==null? "" : Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListSimulationApplicationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns a list simulation job batches. You can optionally provide filters to retrieve specific simulation batch jobs.
		/// ListSimulationJobBatches /listSimulationJobBatches
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListSimulationJobBatchesResponse> ListSimulationJobBatchesAsync(string maxResults, string nextToken, ListSimulationJobBatchesBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/listSimulationJobBatches?maxResults=" + (maxResults==null? "" : Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListSimulationJobBatchesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns a list of simulation jobs. You can optionally provide filters to retrieve specific simulation jobs.
		/// ListSimulationJobs /listSimulationJobs
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListSimulationJobsResponse> ListSimulationJobsAsync(string maxResults, string nextToken, ListSimulationJobsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/listSimulationJobs?maxResults=" + (maxResults==null? "" : Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : Uri.EscapeDataString(nextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListSimulationJobsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all tags on a AWS RoboMaker resource.
		/// ListTagsForResource /tags/{resourceArn}
		/// </summary>
		/// <param name="resourceArn">The AWS RoboMaker Amazon Resource Name (ARN) with tags to be listed.</param>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceResponse> ListTagsForResourceAsync(string resourceArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/tags/"+ (resourceArn==null? "" : Uri.EscapeDataString(resourceArn));
			using (var request = new HttpRequestMessage(HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListTagsForResourceResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Adds or edits tags for a AWS RoboMaker resource.</p> <p>Each tag consists of a tag key and a tag value. Tag keys and tag values are both required, but tag values can be empty strings. </p> <p>For information about the rules that apply to tag keys and tag values, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html">User-Defined Tag Restrictions</a> in the <i>AWS Billing and Cost Management User Guide</i>. </p>
		/// TagResource /tags/{resourceArn}
		/// </summary>
		/// <param name="resourceArn">The Amazon Resource Name (ARN) of the AWS RoboMaker resource you are tagging.</param>
		/// <returns>Success</returns>
		public async Task<TagResourceResponse> TagResourceAsync(string resourceArn, TagResourceBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/tags/"+ (resourceArn==null? "" : Uri.EscapeDataString(resourceArn));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<TagResourceResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Registers a robot with a fleet.
		/// RegisterRobot /registerRobot
		/// </summary>
		/// <returns>Success</returns>
		public async Task<RegisterRobotResponse> RegisterRobotAsync(RegisterRobotBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/registerRobot";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<RegisterRobotResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Restarts a running simulation job.
		/// RestartSimulationJob /restartSimulationJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<RestartSimulationJobResponse> RestartSimulationJobAsync(RestartSimulationJobBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/restartSimulationJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<RestartSimulationJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Starts a new simulation job batch. The batch is defined using one or more <code>SimulationJobRequest</code> objects.
		/// StartSimulationJobBatch /startSimulationJobBatch
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartSimulationJobBatchResponse> StartSimulationJobBatchAsync(StartSimulationJobBatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/startSimulationJobBatch";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<StartSimulationJobBatchResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Syncrhonizes robots in a fleet to the latest deployment. This is helpful if robots were added after a deployment.
		/// SyncDeploymentJob /syncDeploymentJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<SyncDeploymentJobResponse> SyncDeploymentJobAsync(SyncDeploymentJobBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/syncDeploymentJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<SyncDeploymentJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Removes the specified tags from the specified AWS RoboMaker resource.</p> <p>To remove a tag, specify the tag key. To change the tag value of an existing tag key, use <a href="https://docs.aws.amazon.com/robomaker/latest/dg/API_TagResource.html"> <code>TagResource</code> </a>. </p>
		/// UntagResource /tags/{resourceArn}#tagKeys
		/// </summary>
		/// <param name="resourceArn">The Amazon Resource Name (ARN) of the AWS RoboMaker resource you are removing tags.</param>
		/// <param name="tagKeys">A map that contains tag keys and tag values that will be unattached from the resource.</param>
		/// <returns>Success</returns>
		public async Task<UntagResourceResponse> UntagResourceAsync(string resourceArn, TagKey[] tagKeys, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/tags/"+ (resourceArn==null? "" : Uri.EscapeDataString(resourceArn))+"#tagKeys&"+String.Join("&", tagKeys.Select(z => $"tagKeys={z}"));
			using (var request = new HttpRequestMessage(HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UntagResourceResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a robot application.
		/// UpdateRobotApplication /updateRobotApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateRobotApplicationResponse> UpdateRobotApplicationAsync(UpdateRobotApplicationBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/updateRobotApplication";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UpdateRobotApplicationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Updates a simulation application.
		/// UpdateSimulationApplication /updateSimulationApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateSimulationApplicationResponse> UpdateSimulationApplicationAsync(UpdateSimulationApplicationBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/updateSimulationApplication";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UpdateSimulationApplicationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchDescribeSimulationJobBody
	{
		
		/// <summary>
		/// A list of Amazon Resource Names (ARNs) of simulation jobs to describe.
		/// Minimum items: 1
		/// Maximum items: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public Arn[] Jobs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CancelDeploymentJobBody
	{
		
		/// <summary>
		/// The deployment job ARN to cancel.
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Job { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CancelSimulationJobBody
	{
		
		/// <summary>
		/// The simulation job ARN to cancel.
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Job { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CancelSimulationJobBatchBody
	{
		
		/// <summary>
		/// The id of the batch to cancel.
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Batch { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDeploymentJobBody
	{
		
		/// <summary>
		/// Information about a deployment configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DeploymentConfig { get; set; }
		
		/// <summary>
		/// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
		/// Max length: 64
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-=]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the fleet to deploy.
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Fleet { get; set; }
		
		/// <summary>
		/// The deployment application configuration.
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public DeploymentApplicationConfig[] DeploymentApplicationConfigs { get; set; }
		
		/// <summary>
		/// A map that contains tag keys and tag values that are attached to the deployment job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateFleetBody
	{
		
		/// <summary>
		/// The name of the fleet.
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// A map that contains tag keys and tag values that are attached to the fleet.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateRobotBody
	{
		
		/// <summary>
		/// The name for the robot.
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// The target architecture of the robot.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateRobotBodyArchitecture Architecture { get; set; }
		
		/// <summary>
		/// The Greengrass group id.
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string GreengrassGroupId { get; set; }
		
		/// <summary>
		/// A map that contains tag keys and tag values that are attached to the robot.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateRobotBodyArchitecture
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		X86_64 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARM64 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARMHF = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateRobotApplicationBody
	{
		
		/// <summary>
		/// The name of the robot application.
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// The sources of the robot application.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SourceConfig[] Sources { get; set; }
		
		/// <summary>
		/// Information about a robot software suite (ROS distribution).
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RobotSoftwareSuite { get; set; }
		
		/// <summary>
		/// A map that contains tag keys and tag values that are attached to the robot application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateRobotApplicationVersionBody
	{
		
		/// <summary>
		/// The application information for the robot application.
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Application { get; set; }
		
		/// <summary>
		/// The current revision id for the robot application. If you provide a value and it matches the latest revision ID, a new version will be created.
		/// Max length: 40
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(40, MinimumLength=1)]
		public string CurrentRevisionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateSimulationApplicationBody
	{
		
		/// <summary>
		/// The name of the simulation application.
		/// Max length: 255
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// The sources of the simulation application.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SourceConfig[] Sources { get; set; }
		
		/// <summary>
		/// Information about a simulation software suite.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SimulationSoftwareSuite { get; set; }
		
		/// <summary>
		/// Information about a robot software suite (ROS distribution).
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RobotSoftwareSuite { get; set; }
		
		/// <summary>
		/// Information about a rendering engine.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RenderingEngine { get; set; }
		
		/// <summary>
		/// A map that contains tag keys and tag values that are attached to the simulation application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateSimulationApplicationVersionBody
	{
		
		/// <summary>
		/// The application information for the simulation application.
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Application { get; set; }
		
		/// <summary>
		/// The current revision id for the simulation application. If you provide a value and it matches the latest revision ID, a new version will be created.
		/// Max length: 40
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(40, MinimumLength=1)]
		public string CurrentRevisionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateSimulationJobBody
	{
		
		/// <summary>
		/// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
		/// Max length: 64
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// The output location.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string OutputLocation { get; set; }
		
		/// <summary>
		/// The logging configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string LoggingConfig { get; set; }
		
		/// <summary>
		/// The maximum simulation job duration in seconds (up to 14 days or 1,209,600 seconds. When <code>maxJobDurationInSeconds</code> is reached, the simulation job will status will transition to <code>Completed</code>.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int MaxJobDurationInSeconds { get; set; }
		
		/// <summary>
		/// The IAM role name that allows the simulation instance to call the AWS APIs that are specified in its associated policies on your behalf. This is how credentials are passed in to your simulation job. 
		/// Max length: 255
		/// Min length: 1
		/// Pattern: arn:aws:iam::\w+:role/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string IamRole { get; set; }
		
		/// <summary>
		/// <p>The failure behavior the simulation job.</p> <dl> <dt>Continue</dt> <dd> <p>Restart the simulation job in the same host instance.</p> </dd> <dt>Fail</dt> <dd> <p>Stop the simulation job and terminate the instance.</p> </dd> </dl>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateSimulationJobBodyFailureBehavior FailureBehavior { get; set; }
		
		/// <summary>
		/// The robot application to use in the simulation job.
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public RobotApplicationConfig[] RobotApplications { get; set; }
		
		/// <summary>
		/// The simulation application to use in the simulation job.
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public SimulationApplicationConfig[] SimulationApplications { get; set; }
		
		/// <summary>
		/// <p>Specify data sources to mount read-only files from S3 into your simulation. These files are available under <code>/opt/robomaker/datasources/data_source_name</code>. </p> <note> <p>There is a limit of 100 files and a combined size of 25GB for all <code>DataSourceConfig</code> objects. </p> </note>
		/// Minimum items: 1
		/// Maximum items: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public DataSourceConfig[] DataSources { get; set; }
		
		/// <summary>
		/// A map that contains tag keys and tag values that are attached to the simulation job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Tags { get; set; }
		
		/// <summary>
		/// If your simulation job accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and two subnet IDs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string VpcConfig { get; set; }
		
		/// <summary>
		/// Compute information for the simulation job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Compute { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateSimulationJobBodyFailureBehavior
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Fail = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Continue = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteFleetBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the fleet.
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Fleet { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteRobotBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the robot.
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Robot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteRobotApplicationBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the the robot application.
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Application { get; set; }
		
		/// <summary>
		/// The version of the robot application to delete.
		/// Max length: 255
		/// Min length: 1
		/// Pattern: (\$LATEST)|[0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string ApplicationVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteSimulationApplicationBody
	{
		
		/// <summary>
		/// The application information for the simulation application to delete.
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Application { get; set; }
		
		/// <summary>
		/// The version of the simulation application to delete.
		/// Max length: 255
		/// Min length: 1
		/// Pattern: (\$LATEST)|[0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string ApplicationVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeregisterRobotBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the fleet.
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Fleet { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the robot.
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Robot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDeploymentJobBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the deployment job.
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Job { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeFleetBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the fleet.
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Fleet { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeRobotBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the robot to be described.
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Robot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeRobotApplicationBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the robot application.
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Application { get; set; }
		
		/// <summary>
		/// The version of the robot application to describe.
		/// Max length: 255
		/// Min length: 1
		/// Pattern: (\$LATEST)|[0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string ApplicationVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeSimulationApplicationBody
	{
		
		/// <summary>
		/// The application information for the simulation application.
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Application { get; set; }
		
		/// <summary>
		/// The version of the simulation application to describe.
		/// Max length: 255
		/// Min length: 1
		/// Pattern: (\$LATEST)|[0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string ApplicationVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeSimulationJobBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the simulation job to be described.
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Job { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeSimulationJobBatchBody
	{
		
		/// <summary>
		/// The id of the batch to describe.
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Batch { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListDeploymentJobsBody
	{
		
		/// <summary>
		/// <p>Optional filters to limit results.</p> <p>The filter names <code>status</code> and <code>fleetName</code> are supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters, but they must be for the same named item. For example, if you are looking for items with the status <code>InProgress</code> or the status <code>Pending</code>.</p>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public Filter[] Filters { get; set; }
		
		/// <summary>
		/// The <code>nextToken</code> value returned from a previous paginated <code>ListDeploymentJobs</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. 
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// When this parameter is used, <code>ListDeploymentJobs</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListDeploymentJobs</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 200. If this parameter is not used, then <code>ListDeploymentJobs</code> returns up to 200 results and a <code>nextToken</code> value if applicable. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListFleetsBody
	{
		
		/// <summary>
		/// <p>The <code>nextToken</code> value returned from a previous paginated <code>ListFleets</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. </p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// When this parameter is used, <code>ListFleets</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListFleets</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 200. If this parameter is not used, then <code>ListFleets</code> returns up to 200 results and a <code>nextToken</code> value if applicable. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// <p>Optional filters to limit results.</p> <p>The filter name <code>name</code> is supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters.</p>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public Filter[] Filters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListRobotApplicationsBody
	{
		
		/// <summary>
		/// The version qualifier of the robot application.
		/// Max length: 255
		/// Min length: 1
		/// Pattern: ALL
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string VersionQualifier { get; set; }
		
		/// <summary>
		/// The <code>nextToken</code> value returned from a previous paginated <code>ListRobotApplications</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. 
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// When this parameter is used, <code>ListRobotApplications</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListRobotApplications</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListRobotApplications</code> returns up to 100 results and a <code>nextToken</code> value if applicable. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// <p>Optional filters to limit results.</p> <p>The filter name <code>name</code> is supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters.</p>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public Filter[] Filters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListRobotsBody
	{
		
		/// <summary>
		/// The <code>nextToken</code> value returned from a previous paginated <code>ListRobots</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. 
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// When this parameter is used, <code>ListRobots</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListRobots</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 200. If this parameter is not used, then <code>ListRobots</code> returns up to 200 results and a <code>nextToken</code> value if applicable. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// <p>Optional filters to limit results.</p> <p>The filter names <code>status</code> and <code>fleetName</code> are supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters, but they must be for the same named item. For example, if you are looking for items with the status <code>Registered</code> or the status <code>Available</code>.</p>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public Filter[] Filters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListSimulationApplicationsBody
	{
		
		/// <summary>
		/// The version qualifier of the simulation application.
		/// Max length: 255
		/// Min length: 1
		/// Pattern: ALL
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string VersionQualifier { get; set; }
		
		/// <summary>
		/// The <code>nextToken</code> value returned from a previous paginated <code>ListSimulationApplications</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. 
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// When this parameter is used, <code>ListSimulationApplications</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListSimulationApplications</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListSimulationApplications</code> returns up to 100 results and a <code>nextToken</code> value if applicable. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// <p>Optional list of filters to limit results.</p> <p>The filter name <code>name</code> is supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters.</p>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public Filter[] Filters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListSimulationJobBatchesBody
	{
		
		/// <summary>
		/// The <code>nextToken</code> value returned from a previous paginated <code>ListSimulationJobBatches</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. 
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// When this parameter is used, <code>ListSimulationJobBatches</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListSimulationJobBatches</code> request with the returned <code>nextToken</code> value. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Optional filters to limit results.
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public Filter[] Filters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListSimulationJobsBody
	{
		
		/// <summary>
		/// <p>The <code>nextToken</code> value returned from a previous paginated <code>ListSimulationJobs</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. </p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// When this parameter is used, <code>ListSimulationJobs</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListSimulationJobs</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>ListSimulationJobs</code> returns up to 1000 results and a <code>nextToken</code> value if applicable. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// <p>Optional filters to limit results.</p> <p>The filter names <code>status</code> and <code>simulationApplicationName</code> and <code>robotApplicationName</code> are supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters, but they must be for the same named item. For example, if you are looking for items with the status <code>Preparing</code> or the status <code>Running</code>.</p>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public Filter[] Filters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TagResourceBody
	{
		
		/// <summary>
		/// A map that contains tag keys and tag values that are attached to the resource.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RegisterRobotBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the fleet.
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Fleet { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the robot.
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Robot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RestartSimulationJobBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the simulation job.
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Job { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartSimulationJobBatchBody
	{
		
		/// <summary>
		/// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
		/// Max length: 64
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// Information about the batch policy.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string BatchPolicy { get; set; }
		
		/// <summary>
		/// A list of simulation job requests to create in the batch.
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public SimulationJobRequest[] CreateSimulationJobRequests { get; set; }
		
		/// <summary>
		/// A map that contains tag keys and tag values that are attached to the deployment job batch.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SyncDeploymentJobBody
	{
		
		/// <summary>
		/// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
		/// Max length: 64
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\-=]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// The target fleet for the synchronization.
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Fleet { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateRobotApplicationBody
	{
		
		/// <summary>
		/// The application information for the robot application.
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Application { get; set; }
		
		/// <summary>
		/// The sources of the robot application.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SourceConfig[] Sources { get; set; }
		
		/// <summary>
		/// Information about a robot software suite (ROS distribution).
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RobotSoftwareSuite { get; set; }
		
		/// <summary>
		/// The revision id for the robot application.
		/// Max length: 40
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(40, MinimumLength=1)]
		public string CurrentRevisionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateSimulationApplicationBody
	{
		
		/// <summary>
		/// The application information for the simulation application.
		/// Max length: 1224
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1224, MinimumLength=1)]
		public string Application { get; set; }
		
		/// <summary>
		/// The sources of the simulation application.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SourceConfig[] Sources { get; set; }
		
		/// <summary>
		/// Information about a simulation software suite.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SimulationSoftwareSuite { get; set; }
		
		/// <summary>
		/// Information about a robot software suite (ROS distribution).
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RobotSoftwareSuite { get; set; }
		
		/// <summary>
		/// Information about a rendering engine.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RenderingEngine { get; set; }
		
		/// <summary>
		/// The revision id for the robot application.
		/// Max length: 40
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(40, MinimumLength=1)]
		public string CurrentRevisionId { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}
