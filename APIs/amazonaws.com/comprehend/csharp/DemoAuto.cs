//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace My.Demo.Client
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Net.Http;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchDetectDominantLanguageResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BatchDetectDominantLanguageItemResult[] ResultList { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BatchItemError[] ErrorList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchDetectDominantLanguageRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public String[] TextList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchDetectEntitiesResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BatchDetectEntitiesItemResult[] ResultList { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BatchItemError[] ErrorList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchDetectEntitiesRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public String[] TextList { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BatchDetectEntitiesRequestLanguageCode LanguageCode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum BatchDetectEntitiesRequestLanguageCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		en = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		es = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fr = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		de = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		it = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pt = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ar = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hi = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ja = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ko = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh-TW = 11,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchDetectKeyPhrasesResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BatchDetectKeyPhrasesItemResult[] ResultList { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BatchItemError[] ErrorList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchDetectKeyPhrasesRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public String[] TextList { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BatchDetectKeyPhrasesRequestLanguageCode LanguageCode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum BatchDetectKeyPhrasesRequestLanguageCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		en = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		es = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fr = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		de = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		it = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pt = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ar = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hi = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ja = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ko = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh-TW = 11,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchDetectSentimentResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BatchDetectSentimentItemResult[] ResultList { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BatchItemError[] ErrorList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchDetectSentimentRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public String[] TextList { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BatchDetectSentimentRequestLanguageCode LanguageCode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum BatchDetectSentimentRequestLanguageCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		en = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		es = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fr = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		de = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		it = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pt = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ar = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hi = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ja = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ko = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh-TW = 11,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchDetectSyntaxResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BatchDetectSyntaxItemResult[] ResultList { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BatchItemError[] ErrorList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchDetectSyntaxRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public String[] TextList { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BatchDetectSyntaxRequestLanguageCode LanguageCode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum BatchDetectSyntaxRequestLanguageCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		en = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		es = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fr = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		de = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		it = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pt = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ClassifyDocumentResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentClass[] Classes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentLabel[] Labels { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ClassifyDocumentRequest
	{
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string Text { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:document-classifier-endpoint/[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string EndpointArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDocumentClassifierResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:document-classifier/[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string DocumentClassifierArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDocumentClassifierRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string DocumentClassifierName { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string DataAccessRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// <p>The input properties for training a document classifier. </p> <p>For more information on how the input file is formatted, see <a>how-document-classification-training-data</a>. </p>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DocumentClassifierInputDataConfig InputDataConfig { get; set; }
		
		/// <summary>
		/// Provides output results configuration parameters for custom classifier jobs. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DocumentClassifierOutputDataConfig OutputDataConfig { get; set; }
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9-]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateDocumentClassifierRequestLanguageCode LanguageCode { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string VolumeKmsKeyId { get; set; }
		
		/// <summary>
		///  Configuration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for the job. For For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConfig VpcConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CreateDocumentClassifierRequestMode Mode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateDocumentClassifierRequestLanguageCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		en = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		es = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fr = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		de = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		it = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pt = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ar = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hi = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ja = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ko = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh-TW = 11,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateDocumentClassifierRequestMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MULTI_CLASS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MULTI_LABEL = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateEndpointResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:document-classifier-endpoint/[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string EndpointArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateEndpointRequest
	{
		
		/// <summary>
		/// Max length: 40
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(40)]
		public string EndpointName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:document-classifier/[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string ModelArn { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int DesiredInferenceUnits { get; set; }
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9-]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateEntityRecognizerResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:entity-recognizer/[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string EntityRecognizerArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateEntityRecognizerRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string RecognizerName { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string DataAccessRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// Specifies the format and location of the input data.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EntityRecognizerInputDataConfig InputDataConfig { get; set; }
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9-]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateEntityRecognizerRequestLanguageCode LanguageCode { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string VolumeKmsKeyId { get; set; }
		
		/// <summary>
		///  Configuration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for the job. For For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConfig VpcConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateEntityRecognizerRequestLanguageCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		en = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		es = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fr = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		de = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		it = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pt = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ar = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hi = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ja = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ko = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh-TW = 11,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteDocumentClassifierRequest
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:document-classifier/[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string DocumentClassifierArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteEndpointRequest
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:document-classifier-endpoint/[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string EndpointArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteEntityRecognizerRequest
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:entity-recognizer/[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string EntityRecognizerArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDocumentClassificationJobResponse
	{
		
		/// <summary>
		/// Provides information about a document classification job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DocumentClassificationJobProperties DocumentClassificationJobProperties { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDocumentClassificationJobRequest
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string JobId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDocumentClassifierResponse
	{
		
		/// <summary>
		/// Provides information about a document classifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DocumentClassifierProperties DocumentClassifierProperties { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDocumentClassifierRequest
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:document-classifier/[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string DocumentClassifierArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDominantLanguageDetectionJobResponse
	{
		
		/// <summary>
		/// Provides information about a dominant language detection job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DominantLanguageDetectionJobProperties DominantLanguageDetectionJobProperties { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDominantLanguageDetectionJobRequest
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string JobId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeEndpointResponse
	{
		
		/// <summary>
		/// Specifies information about the specified endpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EndpointProperties EndpointProperties { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeEndpointRequest
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:document-classifier-endpoint/[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string EndpointArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeEntitiesDetectionJobResponse
	{
		
		/// <summary>
		/// Provides information about an entities detection job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EntitiesDetectionJobProperties EntitiesDetectionJobProperties { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeEntitiesDetectionJobRequest
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string JobId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeEntityRecognizerResponse
	{
		
		/// <summary>
		/// Describes information about an entity recognizer.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EntityRecognizerProperties EntityRecognizerProperties { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeEntityRecognizerRequest
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:entity-recognizer/[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string EntityRecognizerArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeKeyPhrasesDetectionJobResponse
	{
		
		/// <summary>
		/// Provides information about a key phrases detection job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public KeyPhrasesDetectionJobProperties KeyPhrasesDetectionJobProperties { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeKeyPhrasesDetectionJobRequest
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string JobId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeSentimentDetectionJobResponse
	{
		
		/// <summary>
		/// Provides information about a sentiment detection job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SentimentDetectionJobProperties SentimentDetectionJobProperties { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeSentimentDetectionJobRequest
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string JobId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeTopicsDetectionJobResponse
	{
		
		/// <summary>
		/// Provides information about a topic detection job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TopicsDetectionJobProperties TopicsDetectionJobProperties { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeTopicsDetectionJobRequest
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string JobId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DetectDominantLanguageResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DominantLanguage[] Languages { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DetectDominantLanguageRequest
	{
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string Text { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DetectEntitiesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Entity[] Entities { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DetectEntitiesRequest
	{
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string Text { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DetectEntitiesRequestLanguageCode LanguageCode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DetectEntitiesRequestLanguageCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		en = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		es = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fr = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		de = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		it = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pt = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ar = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hi = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ja = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ko = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh-TW = 11,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DetectKeyPhrasesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public KeyPhrase[] KeyPhrases { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DetectKeyPhrasesRequest
	{
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string Text { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DetectKeyPhrasesRequestLanguageCode LanguageCode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DetectKeyPhrasesRequestLanguageCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		en = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		es = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fr = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		de = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		it = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pt = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ar = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hi = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ja = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ko = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh-TW = 11,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DetectSentimentResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DetectSentimentResponseSentiment Sentiment { get; set; }
		
		/// <summary>
		/// Describes the level of confidence that Amazon Comprehend has in the accuracy of its detection of sentiments.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SentimentScore SentimentScore { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DetectSentimentResponseSentiment
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POSITIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEGATIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEUTRAL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MIXED = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DetectSentimentRequest
	{
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string Text { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DetectSentimentRequestLanguageCode LanguageCode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DetectSentimentRequestLanguageCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		en = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		es = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fr = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		de = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		it = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pt = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ar = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hi = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ja = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ko = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh-TW = 11,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DetectSyntaxResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SyntaxToken[] SyntaxTokens { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DetectSyntaxRequest
	{
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string Text { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DetectSyntaxRequestLanguageCode LanguageCode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DetectSyntaxRequestLanguageCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		en = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		es = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fr = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		de = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		it = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pt = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListDocumentClassificationJobsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentClassificationJobProperties[] DocumentClassificationJobPropertiesList { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListDocumentClassificationJobsRequest
	{
		
		/// <summary>
		/// Provides information for filtering a list of document classification jobs. For more information, see the operation. You can provide only one filter parameter in each request.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DocumentClassificationJobFilter Filter { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 500)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListDocumentClassifiersResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentClassifierProperties[] DocumentClassifierPropertiesList { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListDocumentClassifiersRequest
	{
		
		/// <summary>
		/// Provides information for filtering a list of document classifiers. You can only specify one filtering parameter in a request. For more information, see the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DocumentClassifierFilter Filter { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 500)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListDominantLanguageDetectionJobsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DominantLanguageDetectionJobProperties[] DominantLanguageDetectionJobPropertiesList { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListDominantLanguageDetectionJobsRequest
	{
		
		/// <summary>
		/// Provides information for filtering a list of dominant language detection jobs. For more information, see the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DominantLanguageDetectionJobFilter Filter { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 500)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListEndpointsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EndpointProperties[] EndpointPropertiesList { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListEndpointsRequest
	{
		
		/// <summary>
		/// The filter used to determine which endpoints are are returned. You can filter jobs on their name, model, status, or the date and time that they were created. You can only set one filter at a time. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EndpointFilter Filter { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 500)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListEntitiesDetectionJobsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EntitiesDetectionJobProperties[] EntitiesDetectionJobPropertiesList { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListEntitiesDetectionJobsRequest
	{
		
		/// <summary>
		/// Provides information for filtering a list of dominant language detection jobs. For more information, see the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EntitiesDetectionJobFilter Filter { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 500)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListEntityRecognizersResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EntityRecognizerProperties[] EntityRecognizerPropertiesList { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListEntityRecognizersRequest
	{
		
		/// <summary>
		/// Provides information for filtering a list of entity recognizers. You can only specify one filtering parameter in a request. For more information, see the operation./&gt;
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EntityRecognizerFilter Filter { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 500)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListKeyPhrasesDetectionJobsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public KeyPhrasesDetectionJobProperties[] KeyPhrasesDetectionJobPropertiesList { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListKeyPhrasesDetectionJobsRequest
	{
		
		/// <summary>
		/// Provides information for filtering a list of dominant language detection jobs. For more information, see the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public KeyPhrasesDetectionJobFilter Filter { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 500)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListSentimentDetectionJobsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SentimentDetectionJobProperties[] SentimentDetectionJobPropertiesList { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListSentimentDetectionJobsRequest
	{
		
		/// <summary>
		/// Provides information for filtering a list of dominant language detection jobs. For more information, see the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SentimentDetectionJobFilter Filter { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 500)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTagsForResourceResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:[a-zA-Z0-9-]{1,64}/[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string ResourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTagsForResourceRequest
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:[a-zA-Z0-9-]{1,64}/[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string ResourceArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTopicsDetectionJobsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TopicsDetectionJobProperties[] TopicsDetectionJobPropertiesList { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTopicsDetectionJobsRequest
	{
		
		/// <summary>
		/// Provides information for filtering topic detection jobs. For more information, see .
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TopicsDetectionJobFilter Filter { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 500)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartDocumentClassificationJobResponse
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string JobId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StartDocumentClassificationJobResponseJobStatus JobStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StartDocumentClassificationJobResponseJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_REQUESTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartDocumentClassificationJobRequest
	{
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string JobName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:document-classifier/[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string DocumentClassifierArn { get; set; }
		
		/// <summary>
		/// The input properties for a topic detection job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InputDataConfig InputDataConfig { get; set; }
		
		/// <summary>
		/// <p>Provides configuration parameters for the output of topic detection jobs.</p> <p/>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OutputDataConfig OutputDataConfig { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string DataAccessRoleArn { get; set; }
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9-]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string VolumeKmsKeyId { get; set; }
		
		/// <summary>
		///  Configuration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for the job. For For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConfig VpcConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartDominantLanguageDetectionJobResponse
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string JobId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StartDominantLanguageDetectionJobResponseJobStatus JobStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StartDominantLanguageDetectionJobResponseJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_REQUESTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartDominantLanguageDetectionJobRequest
	{
		
		/// <summary>
		/// The input properties for a topic detection job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InputDataConfig InputDataConfig { get; set; }
		
		/// <summary>
		/// <p>Provides configuration parameters for the output of topic detection jobs.</p> <p/>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OutputDataConfig OutputDataConfig { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string DataAccessRoleArn { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string JobName { get; set; }
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9-]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string VolumeKmsKeyId { get; set; }
		
		/// <summary>
		///  Configuration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for the job. For For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConfig VpcConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartEntitiesDetectionJobResponse
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string JobId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StartEntitiesDetectionJobResponseJobStatus JobStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StartEntitiesDetectionJobResponseJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_REQUESTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartEntitiesDetectionJobRequest
	{
		
		/// <summary>
		/// The input properties for a topic detection job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InputDataConfig InputDataConfig { get; set; }
		
		/// <summary>
		/// <p>Provides configuration parameters for the output of topic detection jobs.</p> <p/>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OutputDataConfig OutputDataConfig { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string DataAccessRoleArn { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string JobName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:entity-recognizer/[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string EntityRecognizerArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StartEntitiesDetectionJobRequestLanguageCode LanguageCode { get; set; }
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9-]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string VolumeKmsKeyId { get; set; }
		
		/// <summary>
		///  Configuration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for the job. For For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConfig VpcConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StartEntitiesDetectionJobRequestLanguageCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		en = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		es = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fr = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		de = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		it = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pt = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ar = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hi = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ja = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ko = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh-TW = 11,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartKeyPhrasesDetectionJobResponse
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string JobId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StartKeyPhrasesDetectionJobResponseJobStatus JobStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StartKeyPhrasesDetectionJobResponseJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_REQUESTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartKeyPhrasesDetectionJobRequest
	{
		
		/// <summary>
		/// The input properties for a topic detection job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InputDataConfig InputDataConfig { get; set; }
		
		/// <summary>
		/// <p>Provides configuration parameters for the output of topic detection jobs.</p> <p/>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OutputDataConfig OutputDataConfig { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string DataAccessRoleArn { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string JobName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StartKeyPhrasesDetectionJobRequestLanguageCode LanguageCode { get; set; }
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9-]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string VolumeKmsKeyId { get; set; }
		
		/// <summary>
		///  Configuration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for the job. For For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConfig VpcConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StartKeyPhrasesDetectionJobRequestLanguageCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		en = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		es = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fr = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		de = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		it = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pt = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ar = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hi = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ja = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ko = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh-TW = 11,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartSentimentDetectionJobResponse
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string JobId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StartSentimentDetectionJobResponseJobStatus JobStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StartSentimentDetectionJobResponseJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_REQUESTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartSentimentDetectionJobRequest
	{
		
		/// <summary>
		/// The input properties for a topic detection job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InputDataConfig InputDataConfig { get; set; }
		
		/// <summary>
		/// <p>Provides configuration parameters for the output of topic detection jobs.</p> <p/>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OutputDataConfig OutputDataConfig { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string DataAccessRoleArn { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string JobName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StartSentimentDetectionJobRequestLanguageCode LanguageCode { get; set; }
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9-]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string VolumeKmsKeyId { get; set; }
		
		/// <summary>
		///  Configuration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for the job. For For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConfig VpcConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StartSentimentDetectionJobRequestLanguageCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		en = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		es = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fr = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		de = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		it = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pt = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ar = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hi = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ja = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ko = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh-TW = 11,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartTopicsDetectionJobResponse
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string JobId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StartTopicsDetectionJobResponseJobStatus JobStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StartTopicsDetectionJobResponseJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_REQUESTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartTopicsDetectionJobRequest
	{
		
		/// <summary>
		/// The input properties for a topic detection job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InputDataConfig InputDataConfig { get; set; }
		
		/// <summary>
		/// <p>Provides configuration parameters for the output of topic detection jobs.</p> <p/>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OutputDataConfig OutputDataConfig { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string DataAccessRoleArn { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string JobName { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> NumberOfTopics { get; set; }
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9-]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string VolumeKmsKeyId { get; set; }
		
		/// <summary>
		///  Configuration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for the job. For For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConfig VpcConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopDominantLanguageDetectionJobResponse
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string JobId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StopDominantLanguageDetectionJobResponseJobStatus JobStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StopDominantLanguageDetectionJobResponseJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_REQUESTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopDominantLanguageDetectionJobRequest
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string JobId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopEntitiesDetectionJobResponse
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string JobId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StopEntitiesDetectionJobResponseJobStatus JobStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StopEntitiesDetectionJobResponseJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_REQUESTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopEntitiesDetectionJobRequest
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string JobId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopKeyPhrasesDetectionJobResponse
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string JobId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StopKeyPhrasesDetectionJobResponseJobStatus JobStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StopKeyPhrasesDetectionJobResponseJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_REQUESTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopKeyPhrasesDetectionJobRequest
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string JobId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopSentimentDetectionJobResponse
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string JobId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StopSentimentDetectionJobResponseJobStatus JobStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum StopSentimentDetectionJobResponseJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_REQUESTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopSentimentDetectionJobRequest
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string JobId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopTrainingDocumentClassifierRequest
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:document-classifier/[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string DocumentClassifierArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopTrainingEntityRecognizerRequest
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:entity-recognizer/[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string EntityRecognizerArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TagResourceRequest
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:[a-zA-Z0-9-]{1,64}/[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string ResourceArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UntagResourceRequest
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:[a-zA-Z0-9-]{1,64}/[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string ResourceArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TagKey[] TagKeys { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateEndpointRequest
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:document-classifier-endpoint/[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string EndpointArn { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int DesiredInferenceUnits { get; set; }
	}
	
	/// <summary>
	/// The result of calling the operation. The operation returns one object for each document that is successfully processed by the operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchDetectDominantLanguageItemResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Index { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DominantLanguage[] Languages { get; set; }
	}
	
	/// <summary>
	/// The result of calling the operation. The operation returns one object for each document that is successfully processed by the operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchDetectEntitiesItemResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Index { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Entity[] Entities { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum LanguageCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		en = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		es = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fr = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		de = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		it = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pt = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ar = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hi = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ja = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ko = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh-TW = 11,
	}
	
	/// <summary>
	/// The result of calling the operation. The operation returns one object for each document that is successfully processed by the operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchDetectKeyPhrasesItemResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Index { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KeyPhrase[] KeyPhrases { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SentimentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POSITIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEGATIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEUTRAL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MIXED = 3,
	}
	
	/// <summary>
	/// Describes the level of confidence that Amazon Comprehend has in the accuracy of its detection of sentiments.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SentimentScore
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Single> Positive { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Single> Negative { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Single> Neutral { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Single> Mixed { get; set; }
	}
	
	/// <summary>
	/// The result of calling the operation. The operation returns one object for each document that is successfully processed by the operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchDetectSentimentItemResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Index { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BatchDetectSentimentItemResultSentiment Sentiment { get; set; }
		
		/// <summary>
		/// Describes the level of confidence that Amazon Comprehend has in the accuracy of its detection of sentiments.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SentimentScore SentimentScore { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum BatchDetectSentimentItemResultSentiment
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POSITIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEGATIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEUTRAL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MIXED = 3,
	}
	
	/// <summary>
	/// The result of calling the operation. The operation returns one object that is successfully processed by the operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchDetectSyntaxItemResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Index { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SyntaxToken[] SyntaxTokens { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SyntaxLanguageCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		en = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		es = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fr = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		de = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		it = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pt = 5,
	}
	
	/// <summary>
	/// Describes an error that occurred while processing a document in a batch. The operation returns on <code>BatchItemError</code> object for each document that contained an error.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class BatchItemError
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Index { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string ErrorCode { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string ErrorMessage { get; set; }
	}
	
	/// <summary>
	/// Describes the result metrics for the test data associated with an documentation classifier.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ClassifierEvaluationMetrics
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Accuracy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Precision { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Recall { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> F1Score { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MicroPrecision { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MicroRecall { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MicroF1Score { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> HammingLoss { get; set; }
	}
	
	/// <summary>
	/// Provides information about a document classifier.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ClassifierMetadata
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> NumberOfLabels { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> NumberOfTrainedDocuments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> NumberOfTestDocuments { get; set; }
		
		/// <summary>
		/// Describes the result metrics for the test data associated with an documentation classifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ClassifierEvaluationMetrics EvaluationMetrics { get; set; }
	}
	
	/// <summary>
	/// <p>The input properties for training a document classifier. </p> <p>For more information on how the input file is formatted, see <a>how-document-classification-training-data</a>. </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DocumentClassifierInputDataConfig
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: s3://[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9](/.*)?
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string S3Uri { get; set; }
		
		/// <summary>
		/// Max length: 1
		/// Min length: 1
		/// Pattern: ^[ ~!@#$%^*\-_+=|\\:;\t>?/]$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1, MinimumLength=1)]
		public string LabelDelimiter { get; set; }
	}
	
	/// <summary>
	/// Provides output results configuration parameters for custom classifier jobs. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DocumentClassifierOutputDataConfig
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: s3://[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9](/.*)?
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string S3Uri { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string KmsKeyId { get; set; }
	}
	
	/// <summary>
	///  Configuration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for the job. For For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class VpcConfig
	{
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 5
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public SecurityGroupId[] SecurityGroupIds { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 16
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(16)]
		public SubnetId[] Subnets { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DocumentClassifierMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MULTI_CLASS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MULTI_LABEL = 1,
	}
	
	/// <summary>
	/// Specifies the format and location of the input data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EntityRecognizerInputDataConfig
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EntityTypesListItem[] EntityTypes { get; set; }
		
		/// <summary>
		/// Describes the training documents submitted with an entity recognizer.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EntityRecognizerDocuments Documents { get; set; }
		
		/// <summary>
		/// Describes the annotations associated with a entity recognizer.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EntityRecognizerAnnotations Annotations { get; set; }
		
		/// <summary>
		/// Describes the entity recognizer submitted with an entity recognizer.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EntityRecognizerEntityList EntityList { get; set; }
	}
	
	/// <summary>
	/// Provides information about a document classification job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DocumentClassificationJobProperties
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string JobId { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string JobName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentClassificationJobPropertiesJobStatus JobStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SubmitTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:document-classifier/[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string DocumentClassifierArn { get; set; }
		
		/// <summary>
		/// The input properties for a topic detection job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InputDataConfig InputDataConfig { get; set; }
		
		/// <summary>
		/// <p>Provides configuration parameters for the output of topic detection jobs.</p> <p/>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OutputDataConfig OutputDataConfig { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string DataAccessRoleArn { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string VolumeKmsKeyId { get; set; }
		
		/// <summary>
		///  Configuration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for the job. For For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConfig VpcConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DocumentClassificationJobPropertiesJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_REQUESTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 5,
	}
	
	/// <summary>
	/// Provides information about a document classifier.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DocumentClassifierProperties
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:document-classifier/[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string DocumentClassifierArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentClassifierPropertiesLanguageCode LanguageCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentClassifierPropertiesStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SubmitTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> TrainingStartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> TrainingEndTime { get; set; }
		
		/// <summary>
		/// <p>The input properties for training a document classifier. </p> <p>For more information on how the input file is formatted, see <a>how-document-classification-training-data</a>. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DocumentClassifierInputDataConfig InputDataConfig { get; set; }
		
		/// <summary>
		/// Provides output results configuration parameters for custom classifier jobs. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DocumentClassifierOutputDataConfig OutputDataConfig { get; set; }
		
		/// <summary>
		/// Provides information about a document classifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ClassifierMetadata ClassifierMetadata { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string DataAccessRoleArn { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string VolumeKmsKeyId { get; set; }
		
		/// <summary>
		///  Configuration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for the job. For For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConfig VpcConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentClassifierPropertiesMode Mode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DocumentClassifierPropertiesLanguageCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		en = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		es = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fr = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		de = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		it = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pt = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ar = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hi = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ja = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ko = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh-TW = 11,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DocumentClassifierPropertiesStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRAINING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_REQUESTED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_ERROR = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRAINED = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DocumentClassifierPropertiesMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MULTI_CLASS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MULTI_LABEL = 1,
	}
	
	/// <summary>
	/// Provides information about a dominant language detection job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DominantLanguageDetectionJobProperties
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string JobId { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string JobName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DominantLanguageDetectionJobPropertiesJobStatus JobStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SubmitTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		/// <summary>
		/// The input properties for a topic detection job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InputDataConfig InputDataConfig { get; set; }
		
		/// <summary>
		/// <p>Provides configuration parameters for the output of topic detection jobs.</p> <p/>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OutputDataConfig OutputDataConfig { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string DataAccessRoleArn { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string VolumeKmsKeyId { get; set; }
		
		/// <summary>
		///  Configuration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for the job. For For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConfig VpcConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DominantLanguageDetectionJobPropertiesJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_REQUESTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 5,
	}
	
	/// <summary>
	/// Specifies information about the specified endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EndpointProperties
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:document-classifier-endpoint/[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string EndpointArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EndpointPropertiesStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:document-classifier/[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string ModelArn { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> DesiredInferenceUnits { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> CurrentInferenceUnits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EndpointPropertiesStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_SERVICE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 4,
	}
	
	/// <summary>
	/// Provides information about an entities detection job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EntitiesDetectionJobProperties
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string JobId { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string JobName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EntitiesDetectionJobPropertiesJobStatus JobStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SubmitTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:entity-recognizer/[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string EntityRecognizerArn { get; set; }
		
		/// <summary>
		/// The input properties for a topic detection job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InputDataConfig InputDataConfig { get; set; }
		
		/// <summary>
		/// <p>Provides configuration parameters for the output of topic detection jobs.</p> <p/>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OutputDataConfig OutputDataConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EntitiesDetectionJobPropertiesLanguageCode LanguageCode { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string DataAccessRoleArn { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string VolumeKmsKeyId { get; set; }
		
		/// <summary>
		///  Configuration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for the job. For For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConfig VpcConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EntitiesDetectionJobPropertiesJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_REQUESTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EntitiesDetectionJobPropertiesLanguageCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		en = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		es = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fr = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		de = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		it = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pt = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ar = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hi = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ja = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ko = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh-TW = 11,
	}
	
	/// <summary>
	/// Describes information about an entity recognizer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EntityRecognizerProperties
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:entity-recognizer/[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string EntityRecognizerArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EntityRecognizerPropertiesLanguageCode LanguageCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EntityRecognizerPropertiesStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SubmitTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> TrainingStartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> TrainingEndTime { get; set; }
		
		/// <summary>
		/// Specifies the format and location of the input data.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EntityRecognizerInputDataConfig InputDataConfig { get; set; }
		
		/// <summary>
		/// Detailed information about an entity recognizer.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EntityRecognizerMetadata RecognizerMetadata { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string DataAccessRoleArn { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string VolumeKmsKeyId { get; set; }
		
		/// <summary>
		///  Configuration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for the job. For For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConfig VpcConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EntityRecognizerPropertiesLanguageCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		en = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		es = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fr = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		de = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		it = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pt = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ar = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hi = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ja = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ko = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh-TW = 11,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EntityRecognizerPropertiesStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRAINING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_REQUESTED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_ERROR = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRAINED = 6,
	}
	
	/// <summary>
	/// Provides information about a key phrases detection job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class KeyPhrasesDetectionJobProperties
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string JobId { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string JobName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KeyPhrasesDetectionJobPropertiesJobStatus JobStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SubmitTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		/// <summary>
		/// The input properties for a topic detection job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InputDataConfig InputDataConfig { get; set; }
		
		/// <summary>
		/// <p>Provides configuration parameters for the output of topic detection jobs.</p> <p/>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OutputDataConfig OutputDataConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KeyPhrasesDetectionJobPropertiesLanguageCode LanguageCode { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string DataAccessRoleArn { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string VolumeKmsKeyId { get; set; }
		
		/// <summary>
		///  Configuration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for the job. For For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConfig VpcConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum KeyPhrasesDetectionJobPropertiesJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_REQUESTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum KeyPhrasesDetectionJobPropertiesLanguageCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		en = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		es = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fr = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		de = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		it = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pt = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ar = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hi = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ja = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ko = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh-TW = 11,
	}
	
	/// <summary>
	/// Provides information about a sentiment detection job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SentimentDetectionJobProperties
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string JobId { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string JobName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SentimentDetectionJobPropertiesJobStatus JobStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SubmitTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		/// <summary>
		/// The input properties for a topic detection job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InputDataConfig InputDataConfig { get; set; }
		
		/// <summary>
		/// <p>Provides configuration parameters for the output of topic detection jobs.</p> <p/>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OutputDataConfig OutputDataConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SentimentDetectionJobPropertiesLanguageCode LanguageCode { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string DataAccessRoleArn { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string VolumeKmsKeyId { get; set; }
		
		/// <summary>
		///  Configuration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for the job. For For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConfig VpcConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SentimentDetectionJobPropertiesJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_REQUESTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SentimentDetectionJobPropertiesLanguageCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		en = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		es = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fr = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		de = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		it = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pt = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ar = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hi = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ja = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ko = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zh-TW = 11,
	}
	
	/// <summary>
	/// Provides information about a topic detection job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TopicsDetectionJobProperties
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string JobId { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string JobName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicsDetectionJobPropertiesJobStatus JobStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SubmitTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		/// <summary>
		/// The input properties for a topic detection job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InputDataConfig InputDataConfig { get; set; }
		
		/// <summary>
		/// <p>Provides configuration parameters for the output of topic detection jobs.</p> <p/>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OutputDataConfig OutputDataConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> NumberOfTopics { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string DataAccessRoleArn { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string VolumeKmsKeyId { get; set; }
		
		/// <summary>
		///  Configuration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for the job. For For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon VPC</a>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConfig VpcConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TopicsDetectionJobPropertiesJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_REQUESTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 5,
	}
	
	/// <summary>
	/// Specifies the class that categorizes the document being analyzed
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DocumentClass
	{
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Single> Score { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum JobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_REQUESTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 5,
	}
	
	/// <summary>
	/// Provides information for filtering a list of document classification jobs. For more information, see the operation. You can provide only one filter parameter in each request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DocumentClassificationJobFilter
	{
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string JobName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentClassificationJobFilterJobStatus JobStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SubmitTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SubmitTimeAfter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DocumentClassificationJobFilterJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_REQUESTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 5,
	}
	
	/// <summary>
	/// The input properties for a topic detection job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InputDataConfig
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: s3://[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9](/.*)?
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string S3Uri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InputDataConfigInputFormat InputFormat { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum InputDataConfigInputFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONE_DOC_PER_FILE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONE_DOC_PER_LINE = 1,
	}
	
	/// <summary>
	/// <p>Provides configuration parameters for the output of topic detection jobs.</p> <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class OutputDataConfig
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: s3://[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9](/.*)?
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string S3Uri { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string KmsKeyId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ModelStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRAINING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_REQUESTED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_ERROR = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRAINED = 6,
	}
	
	/// <summary>
	/// Provides information for filtering a list of document classifiers. You can only specify one filtering parameter in a request. For more information, see the operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DocumentClassifierFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentClassifierFilterStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SubmitTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SubmitTimeAfter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DocumentClassifierFilterStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRAINING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_REQUESTED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_ERROR = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRAINED = 6,
	}
	
	/// <summary>
	/// Specifies one of the label or labels that categorize the document being analyzed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DocumentLabel
	{
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Single> Score { get; set; }
	}
	
	/// <summary>
	/// Returns the code for the dominant language in the input text and the level of confidence that Amazon Comprehend has in the accuracy of the detection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DominantLanguage
	{
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string LanguageCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Single> Score { get; set; }
	}
	
	/// <summary>
	/// Provides information for filtering a list of dominant language detection jobs. For more information, see the operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DominantLanguageDetectionJobFilter
	{
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string JobName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DominantLanguageDetectionJobFilterJobStatus JobStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SubmitTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SubmitTimeAfter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DominantLanguageDetectionJobFilterJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_REQUESTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EndpointStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_SERVICE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 4,
	}
	
	/// <summary>
	/// The filter used to determine which endpoints are are returned. You can filter jobs on their name, model, status, or the date and time that they were created. You can only set one filter at a time. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EndpointFilter
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:document-classifier/[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string ModelArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EndpointFilterStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeAfter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EndpointFilterStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_SERVICE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 4,
	}
	
	/// <summary>
	/// Provides information for filtering a list of dominant language detection jobs. For more information, see the operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EntitiesDetectionJobFilter
	{
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string JobName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EntitiesDetectionJobFilterJobStatus JobStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SubmitTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SubmitTimeAfter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EntitiesDetectionJobFilterJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_REQUESTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EntityType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERSON = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOCATION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ORGANIZATION = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMMERCIAL_ITEM = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EVENT = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUANTITY = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TITLE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OTHER = 8,
	}
	
	/// <summary>
	/// <p>Provides information about an entity. </p> <p> </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Entity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Single> Score { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EntityType Type { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string Text { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BeginOffset { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> EndOffset { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EntityType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERSON = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOCATION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ORGANIZATION = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMMERCIAL_ITEM = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EVENT = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUANTITY = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TITLE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OTHER = 8,
	}
	
	/// <summary>
	/// Describes the annotations associated with a entity recognizer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EntityRecognizerAnnotations
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: s3://[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9](/.*)?
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string S3Uri { get; set; }
	}
	
	/// <summary>
	/// Describes the training documents submitted with an entity recognizer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EntityRecognizerDocuments
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: s3://[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9](/.*)?
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string S3Uri { get; set; }
	}
	
	/// <summary>
	/// Describes the entity recognizer submitted with an entity recognizer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EntityRecognizerEntityList
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: s3://[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9](/.*)?
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string S3Uri { get; set; }
	}
	
	/// <summary>
	/// Detailed information about the accuracy of an entity recognizer. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EntityRecognizerEvaluationMetrics
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Precision { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Recall { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> F1Score { get; set; }
	}
	
	/// <summary>
	/// Provides information for filtering a list of entity recognizers. You can only specify one filtering parameter in a request. For more information, see the operation./&gt;
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EntityRecognizerFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EntityRecognizerFilterStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SubmitTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SubmitTimeAfter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EntityRecognizerFilterStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRAINING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_REQUESTED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_ERROR = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRAINED = 6,
	}
	
	/// <summary>
	/// Detailed information about an entity recognizer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EntityRecognizerMetadata
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> NumberOfTrainedDocuments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> NumberOfTestDocuments { get; set; }
		
		/// <summary>
		/// Detailed information about the accuracy of an entity recognizer. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EntityRecognizerEvaluationMetrics EvaluationMetrics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EntityRecognizerMetadataEntityTypesListItem[] EntityTypes { get; set; }
	}
	
	/// <summary>
	/// Individual item from the list of entity types in the metadata of an entity recognizer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EntityRecognizerMetadataEntityTypesListItem
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
		
		/// <summary>
		/// Detailed information about the accuracy of an entity recognizer for a specific entity type. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EntityTypesEvaluationMetrics EvaluationMetrics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> NumberOfTrainMentions { get; set; }
	}
	
	/// <summary>
	/// Detailed information about the accuracy of an entity recognizer for a specific entity type. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EntityTypesEvaluationMetrics
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Precision { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Recall { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> F1Score { get; set; }
	}
	
	/// <summary>
	/// Information about an individual item on a list of entity types.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EntityTypesListItem
	{
		
		/// <summary>
		/// Max length: 64
		/// Pattern: [_A-Z0-9]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64)]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum InputFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONE_DOC_PER_FILE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONE_DOC_PER_LINE = 1,
	}
	
	/// <summary>
	/// Describes a key noun phrase.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class KeyPhrase
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Single> Score { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string Text { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BeginOffset { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> EndOffset { get; set; }
	}
	
	/// <summary>
	/// Provides information for filtering a list of dominant language detection jobs. For more information, see the operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class KeyPhrasesDetectionJobFilter
	{
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string JobName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KeyPhrasesDetectionJobFilterJobStatus JobStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SubmitTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SubmitTimeAfter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum KeyPhrasesDetectionJobFilterJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_REQUESTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 5,
	}
	
	/// <summary>
	/// Represents a work in the input text that was recognized and assigned a part of speech. There is one syntax token record for each word in the source text.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SyntaxToken
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TokenId { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string Text { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BeginOffset { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> EndOffset { get; set; }
		
		/// <summary>
		/// Identifies the part of speech represented by the token and gives the confidence that Amazon Comprehend has that the part of speech was correctly identified. For more information about the parts of speech that Amazon Comprehend can identify, see <a>how-syntax</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PartOfSpeechTag PartOfSpeech { get; set; }
	}
	
	/// <summary>
	/// Provides information for filtering a list of dominant language detection jobs. For more information, see the operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SentimentDetectionJobFilter
	{
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string JobName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SentimentDetectionJobFilterJobStatus JobStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SubmitTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SubmitTimeAfter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SentimentDetectionJobFilterJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_REQUESTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 5,
	}
	
	/// <summary>
	/// Provides information for filtering topic detection jobs. For more information, see .
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TopicsDetectionJobFilter
	{
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string JobName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicsDetectionJobFilterJobStatus JobStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SubmitTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SubmitTimeAfter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TopicsDetectionJobFilterJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_REQUESTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum PartOfSpeechTagType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADJ = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADP = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADV = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUX = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONJ = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CCONJ = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DET = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTJ = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOUN = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NUM = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		O = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PART = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRON = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROPN = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUNCT = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCONJ = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SYM = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERB = 17,
	}
	
	/// <summary>
	/// Identifies the part of speech represented by the token and gives the confidence that Amazon Comprehend has that the part of speech was correctly identified. For more information about the parts of speech that Amazon Comprehend can identify, see <a>how-syntax</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PartOfSpeechTag
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PartOfSpeechTagTag Tag { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Single> Score { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum PartOfSpeechTagTag
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADJ = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADP = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADV = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUX = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONJ = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CCONJ = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DET = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTJ = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOUN = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NUM = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		O = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PART = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRON = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROPN = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUNCT = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCONJ = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SYM = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERB = 17,
	}
	
	/// <summary>
	/// A key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with the key-value pair ‘Department’:’Sales’ might be added to a resource to indicate its use by a particular department. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Tag
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string Key { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=0)]
		public string Value { get; set; }
	}
	
	public partial class DemoClient
	{
		
		private System.Net.Http.HttpClient client;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public DemoClient(System.Net.Http.HttpClient client, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (client == null)
				throw new ArgumentNullException("Null HttpClient.", "client");

			if (client.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "client");

			this.client = client;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Determines the dominant language of the input text for a batch of documents. For a list of languages that Amazon Comprehend can detect, see <a href="https://docs.aws.amazon.com/comprehend/latest/dg/how-languages.html">Amazon Comprehend Supported Languages</a>.
		/// BatchDetectDominantLanguage /#X-Amz-Target=Comprehend_20171127.BatchDetectDominantLanguage
		/// </summary>
		/// <returns>Success</returns>
		public async Task<BatchDetectDominantLanguageResponse> BatchDetectDominantLanguageAsync(BatchDetectDominantLanguageRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.BatchDetectDominantLanguage";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<BatchDetectDominantLanguageResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Inspects the text of a batch of documents for named entities and returns information about them. For more information about named entities, see <a>how-entities</a>
		/// BatchDetectEntities /#X-Amz-Target=Comprehend_20171127.BatchDetectEntities
		/// </summary>
		/// <returns>Success</returns>
		public async Task<BatchDetectEntitiesResponse> BatchDetectEntitiesAsync(BatchDetectEntitiesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.BatchDetectEntities";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<BatchDetectEntitiesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Detects the key noun phrases found in a batch of documents.
		/// BatchDetectKeyPhrases /#X-Amz-Target=Comprehend_20171127.BatchDetectKeyPhrases
		/// </summary>
		/// <returns>Success</returns>
		public async Task<BatchDetectKeyPhrasesResponse> BatchDetectKeyPhrasesAsync(BatchDetectKeyPhrasesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.BatchDetectKeyPhrases";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<BatchDetectKeyPhrasesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Inspects a batch of documents and returns an inference of the prevailing sentiment, <code>POSITIVE</code>, <code>NEUTRAL</code>, <code>MIXED</code>, or <code>NEGATIVE</code>, in each one.
		/// BatchDetectSentiment /#X-Amz-Target=Comprehend_20171127.BatchDetectSentiment
		/// </summary>
		/// <returns>Success</returns>
		public async Task<BatchDetectSentimentResponse> BatchDetectSentimentAsync(BatchDetectSentimentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.BatchDetectSentiment";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<BatchDetectSentimentResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Inspects the text of a batch of documents for the syntax and part of speech of the words in the document and returns information about them. For more information, see <a>how-syntax</a>.
		/// BatchDetectSyntax /#X-Amz-Target=Comprehend_20171127.BatchDetectSyntax
		/// </summary>
		/// <returns>Success</returns>
		public async Task<BatchDetectSyntaxResponse> BatchDetectSyntaxAsync(BatchDetectSyntaxRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.BatchDetectSyntax";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<BatchDetectSyntaxResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a new document classification request to analyze a single document in real-time, using a previously created and trained custom model and an endpoint.
		/// ClassifyDocument /#X-Amz-Target=Comprehend_20171127.ClassifyDocument
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ClassifyDocumentResponse> ClassifyDocumentAsync(ClassifyDocumentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.ClassifyDocument";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ClassifyDocumentResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a new document classifier that you can use to categorize documents. To create a classifier you provide a set of training documents that labeled with the categories that you want to use. After the classifier is trained you can use it to categorize a set of labeled documents into the categories. For more information, see <a>how-document-classification</a>.
		/// CreateDocumentClassifier /#X-Amz-Target=Comprehend_20171127.CreateDocumentClassifier
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateDocumentClassifierResponse> CreateDocumentClassifierAsync(CreateDocumentClassifierRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.CreateDocumentClassifier";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateDocumentClassifierResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a model-specific endpoint for synchronous inference for a previously trained custom model
		/// CreateEndpoint /#X-Amz-Target=Comprehend_20171127.CreateEndpoint
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateEndpointResponse> CreateEndpointAsync(CreateEndpointRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.CreateEndpoint";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateEndpointResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates an entity recognizer using submitted files. After your <code>CreateEntityRecognizer</code> request is submitted, you can check job status using the API.
		/// CreateEntityRecognizer /#X-Amz-Target=Comprehend_20171127.CreateEntityRecognizer
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateEntityRecognizerResponse> CreateEntityRecognizerAsync(CreateEntityRecognizerRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.CreateEntityRecognizer";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateEntityRecognizerResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a previously created document classifier</p> <p>Only those classifiers that are in terminated states (IN_ERROR, TRAINED) will be deleted. If an active inference job is using the model, a <code>ResourceInUseException</code> will be returned.</p> <p>This is an asynchronous action that puts the classifier into a DELETING state, and it is then removed by a background job. Once removed, the classifier disappears from your account and is no longer available for use. </p>
		/// DeleteDocumentClassifier /#X-Amz-Target=Comprehend_20171127.DeleteDocumentClassifier
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteDocumentClassifierResponse> DeleteDocumentClassifierAsync(DeleteDocumentClassifierRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.DeleteDocumentClassifier";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteDocumentClassifierResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes a model-specific endpoint for a previously-trained custom model. All endpoints must be deleted in order for the model to be deleted.
		/// DeleteEndpoint /#X-Amz-Target=Comprehend_20171127.DeleteEndpoint
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteEndpointResponse> DeleteEndpointAsync(DeleteEndpointRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.DeleteEndpoint";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteEndpointResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes an entity recognizer.</p> <p>Only those recognizers that are in terminated states (IN_ERROR, TRAINED) will be deleted. If an active inference job is using the model, a <code>ResourceInUseException</code> will be returned.</p> <p>This is an asynchronous action that puts the recognizer into a DELETING state, and it is then removed by a background job. Once removed, the recognizer disappears from your account and is no longer available for use. </p>
		/// DeleteEntityRecognizer /#X-Amz-Target=Comprehend_20171127.DeleteEntityRecognizer
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteEntityRecognizerResponse> DeleteEntityRecognizerAsync(DeleteEntityRecognizerRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.DeleteEntityRecognizer";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteEntityRecognizerResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets the properties associated with a document classification job. Use this operation to get the status of a classification job.
		/// DescribeDocumentClassificationJob /#X-Amz-Target=Comprehend_20171127.DescribeDocumentClassificationJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeDocumentClassificationJobResponse> DescribeDocumentClassificationJobAsync(DescribeDocumentClassificationJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.DescribeDocumentClassificationJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeDocumentClassificationJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets the properties associated with a document classifier.
		/// DescribeDocumentClassifier /#X-Amz-Target=Comprehend_20171127.DescribeDocumentClassifier
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeDocumentClassifierResponse> DescribeDocumentClassifierAsync(DescribeDocumentClassifierRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.DescribeDocumentClassifier";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeDocumentClassifierResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets the properties associated with a dominant language detection job. Use this operation to get the status of a detection job.
		/// DescribeDominantLanguageDetectionJob /#X-Amz-Target=Comprehend_20171127.DescribeDominantLanguageDetectionJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeDominantLanguageDetectionJobResponse> DescribeDominantLanguageDetectionJobAsync(DescribeDominantLanguageDetectionJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.DescribeDominantLanguageDetectionJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeDominantLanguageDetectionJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets the properties associated with a specific endpoint. Use this operation to get the status of an endpoint.
		/// DescribeEndpoint /#X-Amz-Target=Comprehend_20171127.DescribeEndpoint
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeEndpointResponse> DescribeEndpointAsync(DescribeEndpointRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.DescribeEndpoint";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeEndpointResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets the properties associated with an entities detection job. Use this operation to get the status of a detection job.
		/// DescribeEntitiesDetectionJob /#X-Amz-Target=Comprehend_20171127.DescribeEntitiesDetectionJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeEntitiesDetectionJobResponse> DescribeEntitiesDetectionJobAsync(DescribeEntitiesDetectionJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.DescribeEntitiesDetectionJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeEntitiesDetectionJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Provides details about an entity recognizer including status, S3 buckets containing training data, recognizer metadata, metrics, and so on.
		/// DescribeEntityRecognizer /#X-Amz-Target=Comprehend_20171127.DescribeEntityRecognizer
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeEntityRecognizerResponse> DescribeEntityRecognizerAsync(DescribeEntityRecognizerRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.DescribeEntityRecognizer";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeEntityRecognizerResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets the properties associated with a key phrases detection job. Use this operation to get the status of a detection job.
		/// DescribeKeyPhrasesDetectionJob /#X-Amz-Target=Comprehend_20171127.DescribeKeyPhrasesDetectionJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeKeyPhrasesDetectionJobResponse> DescribeKeyPhrasesDetectionJobAsync(DescribeKeyPhrasesDetectionJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.DescribeKeyPhrasesDetectionJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeKeyPhrasesDetectionJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets the properties associated with a sentiment detection job. Use this operation to get the status of a detection job.
		/// DescribeSentimentDetectionJob /#X-Amz-Target=Comprehend_20171127.DescribeSentimentDetectionJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeSentimentDetectionJobResponse> DescribeSentimentDetectionJobAsync(DescribeSentimentDetectionJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.DescribeSentimentDetectionJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeSentimentDetectionJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets the properties associated with a topic detection job. Use this operation to get the status of a detection job.
		/// DescribeTopicsDetectionJob /#X-Amz-Target=Comprehend_20171127.DescribeTopicsDetectionJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeTopicsDetectionJobResponse> DescribeTopicsDetectionJobAsync(DescribeTopicsDetectionJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.DescribeTopicsDetectionJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeTopicsDetectionJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Determines the dominant language of the input text. For a list of languages that Amazon Comprehend can detect, see <a href="https://docs.aws.amazon.com/comprehend/latest/dg/how-languages.html">Amazon Comprehend Supported Languages</a>.
		/// DetectDominantLanguage /#X-Amz-Target=Comprehend_20171127.DetectDominantLanguage
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DetectDominantLanguageResponse> DetectDominantLanguageAsync(DetectDominantLanguageRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.DetectDominantLanguage";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DetectDominantLanguageResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Inspects text for named entities, and returns information about them. For more information, about named entities, see <a>how-entities</a>.
		/// DetectEntities /#X-Amz-Target=Comprehend_20171127.DetectEntities
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DetectEntitiesResponse> DetectEntitiesAsync(DetectEntitiesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.DetectEntities";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DetectEntitiesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Detects the key noun phrases found in the text.
		/// DetectKeyPhrases /#X-Amz-Target=Comprehend_20171127.DetectKeyPhrases
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DetectKeyPhrasesResponse> DetectKeyPhrasesAsync(DetectKeyPhrasesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.DetectKeyPhrases";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DetectKeyPhrasesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Inspects text and returns an inference of the prevailing sentiment (<code>POSITIVE</code>, <code>NEUTRAL</code>, <code>MIXED</code>, or <code>NEGATIVE</code>).
		/// DetectSentiment /#X-Amz-Target=Comprehend_20171127.DetectSentiment
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DetectSentimentResponse> DetectSentimentAsync(DetectSentimentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.DetectSentiment";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DetectSentimentResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Inspects text for syntax and the part of speech of words in the document. For more information, <a>how-syntax</a>.
		/// DetectSyntax /#X-Amz-Target=Comprehend_20171127.DetectSyntax
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DetectSyntaxResponse> DetectSyntaxAsync(DetectSyntaxRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.DetectSyntax";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DetectSyntaxResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets a list of the documentation classification jobs that you have submitted.
		/// ListDocumentClassificationJobs /#X-Amz-Target=Comprehend_20171127.ListDocumentClassificationJobs
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListDocumentClassificationJobsResponse> ListDocumentClassificationJobsAsync(string MaxResults, string NextToken, ListDocumentClassificationJobsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.ListDocumentClassificationJobs?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListDocumentClassificationJobsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets a list of the document classifiers that you have created.
		/// ListDocumentClassifiers /#X-Amz-Target=Comprehend_20171127.ListDocumentClassifiers
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListDocumentClassifiersResponse> ListDocumentClassifiersAsync(string MaxResults, string NextToken, ListDocumentClassifiersRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.ListDocumentClassifiers?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListDocumentClassifiersResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets a list of the dominant language detection jobs that you have submitted.
		/// ListDominantLanguageDetectionJobs /#X-Amz-Target=Comprehend_20171127.ListDominantLanguageDetectionJobs
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListDominantLanguageDetectionJobsResponse> ListDominantLanguageDetectionJobsAsync(string MaxResults, string NextToken, ListDominantLanguageDetectionJobsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.ListDominantLanguageDetectionJobs?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListDominantLanguageDetectionJobsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets a list of all existing endpoints that you've created.
		/// ListEndpoints /#X-Amz-Target=Comprehend_20171127.ListEndpoints
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ListEndpointsResponse> ListEndpointsAsync(ListEndpointsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.ListEndpoints";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListEndpointsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets a list of the entity detection jobs that you have submitted.
		/// ListEntitiesDetectionJobs /#X-Amz-Target=Comprehend_20171127.ListEntitiesDetectionJobs
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListEntitiesDetectionJobsResponse> ListEntitiesDetectionJobsAsync(string MaxResults, string NextToken, ListEntitiesDetectionJobsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.ListEntitiesDetectionJobs?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListEntitiesDetectionJobsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Gets a list of the properties of all entity recognizers that you created, including recognizers currently in training. Allows you to filter the list of recognizers based on criteria such as status and submission time. This call returns up to 500 entity recognizers in the list, with a default number of 100 recognizers in the list.</p> <p>The results of this list are not in any particular order. Please get the list and sort locally if needed.</p>
		/// ListEntityRecognizers /#X-Amz-Target=Comprehend_20171127.ListEntityRecognizers
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListEntityRecognizersResponse> ListEntityRecognizersAsync(string MaxResults, string NextToken, ListEntityRecognizersRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.ListEntityRecognizers?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListEntityRecognizersResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Get a list of key phrase detection jobs that you have submitted.
		/// ListKeyPhrasesDetectionJobs /#X-Amz-Target=Comprehend_20171127.ListKeyPhrasesDetectionJobs
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListKeyPhrasesDetectionJobsResponse> ListKeyPhrasesDetectionJobsAsync(string MaxResults, string NextToken, ListKeyPhrasesDetectionJobsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.ListKeyPhrasesDetectionJobs?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListKeyPhrasesDetectionJobsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets a list of sentiment detection jobs that you have submitted.
		/// ListSentimentDetectionJobs /#X-Amz-Target=Comprehend_20171127.ListSentimentDetectionJobs
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListSentimentDetectionJobsResponse> ListSentimentDetectionJobsAsync(string MaxResults, string NextToken, ListSentimentDetectionJobsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.ListSentimentDetectionJobs?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListSentimentDetectionJobsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all tags associated with a given Amazon Comprehend resource.
		/// ListTagsForResource /#X-Amz-Target=Comprehend_20171127.ListTagsForResource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.ListTagsForResource";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListTagsForResourceResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets a list of the topic detection jobs that you have submitted.
		/// ListTopicsDetectionJobs /#X-Amz-Target=Comprehend_20171127.ListTopicsDetectionJobs
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListTopicsDetectionJobsResponse> ListTopicsDetectionJobsAsync(string MaxResults, string NextToken, ListTopicsDetectionJobsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.ListTopicsDetectionJobs?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListTopicsDetectionJobsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Starts an asynchronous document classification job. Use the operation to track the progress of the job.
		/// StartDocumentClassificationJob /#X-Amz-Target=Comprehend_20171127.StartDocumentClassificationJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartDocumentClassificationJobResponse> StartDocumentClassificationJobAsync(StartDocumentClassificationJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.StartDocumentClassificationJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<StartDocumentClassificationJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Starts an asynchronous dominant language detection job for a collection of documents. Use the operation to track the status of a job.
		/// StartDominantLanguageDetectionJob /#X-Amz-Target=Comprehend_20171127.StartDominantLanguageDetectionJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartDominantLanguageDetectionJobResponse> StartDominantLanguageDetectionJobAsync(StartDominantLanguageDetectionJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.StartDominantLanguageDetectionJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<StartDominantLanguageDetectionJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Starts an asynchronous entity detection job for a collection of documents. Use the operation to track the status of a job.</p> <p>This API can be used for either standard entity detection or custom entity recognition. In order to be used for custom entity recognition, the optional <code>EntityRecognizerArn</code> must be used in order to provide access to the recognizer being used to detect the custom entity.</p>
		/// StartEntitiesDetectionJob /#X-Amz-Target=Comprehend_20171127.StartEntitiesDetectionJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartEntitiesDetectionJobResponse> StartEntitiesDetectionJobAsync(StartEntitiesDetectionJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.StartEntitiesDetectionJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<StartEntitiesDetectionJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Starts an asynchronous key phrase detection job for a collection of documents. Use the operation to track the status of a job.
		/// StartKeyPhrasesDetectionJob /#X-Amz-Target=Comprehend_20171127.StartKeyPhrasesDetectionJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartKeyPhrasesDetectionJobResponse> StartKeyPhrasesDetectionJobAsync(StartKeyPhrasesDetectionJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.StartKeyPhrasesDetectionJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<StartKeyPhrasesDetectionJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Starts an asynchronous sentiment detection job for a collection of documents. use the operation to track the status of a job.
		/// StartSentimentDetectionJob /#X-Amz-Target=Comprehend_20171127.StartSentimentDetectionJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartSentimentDetectionJobResponse> StartSentimentDetectionJobAsync(StartSentimentDetectionJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.StartSentimentDetectionJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<StartSentimentDetectionJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Starts an asynchronous topic detection job. Use the <code>DescribeTopicDetectionJob</code> operation to track the status of a job.
		/// StartTopicsDetectionJob /#X-Amz-Target=Comprehend_20171127.StartTopicsDetectionJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartTopicsDetectionJobResponse> StartTopicsDetectionJobAsync(StartTopicsDetectionJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.StartTopicsDetectionJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<StartTopicsDetectionJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Stops a dominant language detection job in progress.</p> <p>If the job state is <code>IN_PROGRESS</code> the job is marked for termination and put into the <code>STOP_REQUESTED</code> state. If the job completes before it can be stopped, it is put into the <code>COMPLETED</code> state; otherwise the job is stopped and put into the <code>STOPPED</code> state.</p> <p>If the job is in the <code>COMPLETED</code> or <code>FAILED</code> state when you call the <code>StopDominantLanguageDetectionJob</code> operation, the operation returns a 400 Internal Request Exception. </p> <p>When a job is stopped, any documents already processed are written to the output location.</p>
		/// StopDominantLanguageDetectionJob /#X-Amz-Target=Comprehend_20171127.StopDominantLanguageDetectionJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StopDominantLanguageDetectionJobResponse> StopDominantLanguageDetectionJobAsync(StopDominantLanguageDetectionJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.StopDominantLanguageDetectionJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<StopDominantLanguageDetectionJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Stops an entities detection job in progress.</p> <p>If the job state is <code>IN_PROGRESS</code> the job is marked for termination and put into the <code>STOP_REQUESTED</code> state. If the job completes before it can be stopped, it is put into the <code>COMPLETED</code> state; otherwise the job is stopped and put into the <code>STOPPED</code> state.</p> <p>If the job is in the <code>COMPLETED</code> or <code>FAILED</code> state when you call the <code>StopDominantLanguageDetectionJob</code> operation, the operation returns a 400 Internal Request Exception. </p> <p>When a job is stopped, any documents already processed are written to the output location.</p>
		/// StopEntitiesDetectionJob /#X-Amz-Target=Comprehend_20171127.StopEntitiesDetectionJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StopEntitiesDetectionJobResponse> StopEntitiesDetectionJobAsync(StopEntitiesDetectionJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.StopEntitiesDetectionJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<StopEntitiesDetectionJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Stops a key phrases detection job in progress.</p> <p>If the job state is <code>IN_PROGRESS</code> the job is marked for termination and put into the <code>STOP_REQUESTED</code> state. If the job completes before it can be stopped, it is put into the <code>COMPLETED</code> state; otherwise the job is stopped and put into the <code>STOPPED</code> state.</p> <p>If the job is in the <code>COMPLETED</code> or <code>FAILED</code> state when you call the <code>StopDominantLanguageDetectionJob</code> operation, the operation returns a 400 Internal Request Exception. </p> <p>When a job is stopped, any documents already processed are written to the output location.</p>
		/// StopKeyPhrasesDetectionJob /#X-Amz-Target=Comprehend_20171127.StopKeyPhrasesDetectionJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StopKeyPhrasesDetectionJobResponse> StopKeyPhrasesDetectionJobAsync(StopKeyPhrasesDetectionJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.StopKeyPhrasesDetectionJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<StopKeyPhrasesDetectionJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Stops a sentiment detection job in progress.</p> <p>If the job state is <code>IN_PROGRESS</code> the job is marked for termination and put into the <code>STOP_REQUESTED</code> state. If the job completes before it can be stopped, it is put into the <code>COMPLETED</code> state; otherwise the job is be stopped and put into the <code>STOPPED</code> state.</p> <p>If the job is in the <code>COMPLETED</code> or <code>FAILED</code> state when you call the <code>StopDominantLanguageDetectionJob</code> operation, the operation returns a 400 Internal Request Exception. </p> <p>When a job is stopped, any documents already processed are written to the output location.</p>
		/// StopSentimentDetectionJob /#X-Amz-Target=Comprehend_20171127.StopSentimentDetectionJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StopSentimentDetectionJobResponse> StopSentimentDetectionJobAsync(StopSentimentDetectionJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.StopSentimentDetectionJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<StopSentimentDetectionJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Stops a document classifier training job while in progress.</p> <p>If the training job state is <code>TRAINING</code>, the job is marked for termination and put into the <code>STOP_REQUESTED</code> state. If the training job completes before it can be stopped, it is put into the <code>TRAINED</code>; otherwise the training job is stopped and put into the <code>STOPPED</code> state and the service sends back an HTTP 200 response with an empty HTTP body. </p>
		/// StopTrainingDocumentClassifier /#X-Amz-Target=Comprehend_20171127.StopTrainingDocumentClassifier
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StopTrainingDocumentClassifierResponse> StopTrainingDocumentClassifierAsync(StopTrainingDocumentClassifierRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.StopTrainingDocumentClassifier";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<StopTrainingDocumentClassifierResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Stops an entity recognizer training job while in progress.</p> <p>If the training job state is <code>TRAINING</code>, the job is marked for termination and put into the <code>STOP_REQUESTED</code> state. If the training job completes before it can be stopped, it is put into the <code>TRAINED</code>; otherwise the training job is stopped and putted into the <code>STOPPED</code> state and the service sends back an HTTP 200 response with an empty HTTP body.</p>
		/// StopTrainingEntityRecognizer /#X-Amz-Target=Comprehend_20171127.StopTrainingEntityRecognizer
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StopTrainingEntityRecognizerResponse> StopTrainingEntityRecognizerAsync(StopTrainingEntityRecognizerRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.StopTrainingEntityRecognizer";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<StopTrainingEntityRecognizerResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Associates a specific tag with an Amazon Comprehend resource. A tag is a key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with "Sales" as the key might be added to a resource to indicate its use by the sales department.
		/// TagResource /#X-Amz-Target=Comprehend_20171127.TagResource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<TagResourceResponse> TagResourceAsync(TagResourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.TagResource";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<TagResourceResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Removes a specific tag associated with an Amazon Comprehend resource.
		/// UntagResource /#X-Amz-Target=Comprehend_20171127.UntagResource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.UntagResource";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UntagResourceResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Updates information about the specified endpoint.
		/// UpdateEndpoint /#X-Amz-Target=Comprehend_20171127.UpdateEndpoint
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateEndpointResponse> UpdateEndpointAsync(UpdateEndpointRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=Comprehend_20171127.UpdateEndpoint";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UpdateEndpointResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}
