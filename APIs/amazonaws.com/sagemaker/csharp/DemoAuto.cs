//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace My.Demo.Client
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Net.Http;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AddTagsOutput
	{
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AddTagsInput
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string ResourceArn { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AssociateTrialComponentResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment-trial-component/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TrialComponentArn { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment-trial/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TrialArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AssociateTrialComponentRequest
	{
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string TrialComponentName { get; set; }
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string TrialName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateAlgorithmOutput
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:algorithm/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string AlgorithmArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateAlgorithmInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string AlgorithmName { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: [\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string AlgorithmDescription { get; set; }
		
		/// <summary>
		/// Defines how the algorithm is used for a training job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TrainingSpecification TrainingSpecification { get; set; }
		
		/// <summary>
		/// Defines how to perform inference generation after a training job is run.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InferenceSpecification InferenceSpecification { get; set; }
		
		/// <summary>
		/// Specifies configurations for one or more training jobs that Amazon SageMaker runs to test the algorithm.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AlgorithmValidationSpecification ValidationSpecification { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CertifyForMarketplace { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateAppResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:app/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string AppArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateAppRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string DomainId { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string UserProfileName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateAppRequestAppType AppType { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string AppName { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. The ARN is stored as metadata in SageMaker Studio notebooks.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourceSpec ResourceSpec { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateAppRequestAppType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JupyterServer = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KernelGateway = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TensorBoard = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateAutoMLJobResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:automl-job/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string AutoMLJobArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateAutoMLJobRequest
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string AutoMLJobName { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 20
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public AutoMLChannel[] InputDataConfig { get; set; }
		
		/// <summary>
		/// The output data configuration.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AutoMLOutputDataConfig OutputDataConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CreateAutoMLJobRequestProblemType ProblemType { get; set; }
		
		/// <summary>
		/// Applies a metric to minimize or maximize for the job's objective.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AutoMLJobObjective AutoMLJobObjective { get; set; }
		
		/// <summary>
		/// A collection of settings used for a job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AutoMLJobConfig AutoMLJobConfig { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> GenerateCandidateDefinitionsOnly { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateAutoMLJobRequestProblemType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BinaryClassification = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MulticlassClassification = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Regression = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateCodeRepositoryOutput
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:code-repository/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string CodeRepositoryArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateCodeRepositoryInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string CodeRepositoryName { get; set; }
		
		/// <summary>
		/// Specifies configuration details for a Git repository in your AWS account.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GitConfig GitConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateCompilationJobResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:compilation-job/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string CompilationJobArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateCompilationJobRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string CompilationJobName { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Contains information about the location of input model artifacts, the name and shape of the expected data inputs, and the framework in which the model was trained.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InputConfig InputConfig { get; set; }
		
		/// <summary>
		/// Contains information about the output location for the compiled model and the device (target) that the model runs on.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OutputConfig OutputConfig { get; set; }
		
		/// <summary>
		/// <p>Specifies a limit to how long a model training or compilation job can run. It also specifies how long you are willing to wait for a managed spot training job to complete. When the job reaches the time limit, Amazon SageMaker ends the training or compilation job. Use this API to cap model training costs.</p> <p>To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost. </p> <p>The training algorithms provided by Amazon SageMaker automatically save the intermediate results of a model training job when possible. This attempt to save artifacts is only a best effort case as model might not be in a state from which it can be saved. For example, if training has just started, the model might not be ready to save. When saved, this intermediate data is a valid model artifact. You can use it to create a model with <code>CreateModel</code>.</p> <note> <p>The Neural Topic Model (NTM) currently does not support saving intermediate model artifacts. When training NTMs, make sure that the maximum runtime is sufficient for the training job to complete.</p> </note>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StoppingCondition StoppingCondition { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDomainResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:domain/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string DomainArn { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateDomainRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string DomainName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateDomainRequestAuthMode AuthMode { get; set; }
		
		/// <summary>
		/// A collection of settings.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UserSettings DefaultUserSettings { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 16
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(16)]
		public SubnetId[] SubnetIds { get; set; }
		
		/// <summary>
		/// Max length: 32
		/// Pattern: [-0-9a-zA-Z]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32)]
		public string VpcId { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string HomeEfsFileSystemKmsKeyId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateDomainRequestAuthMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SSO = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IAM = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateEndpointOutput
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:endpoint/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string EndpointArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateEndpointInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string EndpointName { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string EndpointConfigName { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateEndpointConfigOutput
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:endpoint-config/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string EndpointConfigArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateEndpointConfigInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string EndpointConfigName { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 10
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public ProductionVariant[] ProductionVariants { get; set; }
		
		/// <summary>
		/// <p/>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DataCaptureConfig DataCaptureConfig { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string KmsKeyId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateExperimentResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string ExperimentArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateExperimentRequest
	{
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string ExperimentName { get; set; }
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Max length: 3072
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(3072)]
		public string Description { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateFlowDefinitionResponse
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:flow-definition/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string FlowDefinitionArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateFlowDefinitionRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-z0-9](-*[a-z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string FlowDefinitionName { get; set; }
		
		/// <summary>
		/// Container for configuring the source of human task requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public HumanLoopRequestSource HumanLoopRequestSource { get; set; }
		
		/// <summary>
		/// Provides information about how and under what conditions SageMaker creates a human loop. If <code>HumanLoopActivationConfig</code> is not given, then all requests go to humans.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public HumanLoopActivationConfig HumanLoopActivationConfig { get; set; }
		
		/// <summary>
		/// Describes the work to be performed by human workers.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HumanLoopConfig HumanLoopConfig { get; set; }
		
		/// <summary>
		/// Contains information about where human output will be stored.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FlowDefinitionOutputConfig OutputConfig { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateHumanTaskUiResponse
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:human-task-ui/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string HumanTaskUiArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateHumanTaskUiRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-z0-9](-*[a-z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string HumanTaskUiName { get; set; }
		
		/// <summary>
		/// The Liquid template for the worker user interface.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UiTemplate UiTemplate { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateHyperParameterTuningJobResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:hyper-parameter-tuning-job/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string HyperParameterTuningJobArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateHyperParameterTuningJobRequest
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string HyperParameterTuningJobName { get; set; }
		
		/// <summary>
		/// Configures a hyperparameter tuning job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HyperParameterTuningJobConfig HyperParameterTuningJobConfig { get; set; }
		
		/// <summary>
		/// Defines the training jobs launched by a hyperparameter tuning job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public HyperParameterTrainingJobDefinition TrainingJobDefinition { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 10
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public HyperParameterTrainingJobDefinition[] TrainingJobDefinitions { get; set; }
		
		/// <summary>
		/// <p>Specifies the configuration for a hyperparameter tuning job that uses one or more previous hyperparameter tuning jobs as a starting point. The results of previous tuning jobs are used to inform which combinations of hyperparameters to search over in the new tuning job.</p> <p>All training jobs launched by the new hyperparameter tuning job are evaluated by using the objective metric, and the training job that performs the best is compared to the best training jobs from the parent tuning jobs. From these, the training job that performs the best as measured by the objective metric is returned as the overall best training job.</p> <note> <p>All training jobs launched by parent hyperparameter tuning jobs and the new hyperparameter tuning jobs count against the limit of training jobs for the tuning job.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public HyperParameterTuningJobWarmStartConfig WarmStartConfig { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateLabelingJobResponse
	{
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:labeling-job/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string LabelingJobArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateLabelingJobRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string LabelingJobName { get; set; }
		
		/// <summary>
		/// Max length: 127
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(127, MinimumLength=1)]
		public string LabelAttributeName { get; set; }
		
		/// <summary>
		/// Input configuration information for a labeling job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LabelingJobInputConfig InputConfig { get; set; }
		
		/// <summary>
		/// Output configuration information for a labeling job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LabelingJobOutputConfig OutputConfig { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string LabelCategoryConfigS3Uri { get; set; }
		
		/// <summary>
		/// <p>A set of conditions for stopping a labeling job. If any of the conditions are met, the job is automatically stopped. You can use these conditions to control the cost of data labeling.</p> <note> <p>Labeling jobs fail after 30 days with an appropriate client error message.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LabelingJobStoppingConditions StoppingConditions { get; set; }
		
		/// <summary>
		/// Provides configuration information for auto-labeling of your data objects. A <code>LabelingJobAlgorithmsConfig</code> object must be supplied in order to use auto-labeling.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LabelingJobAlgorithmsConfig LabelingJobAlgorithmsConfig { get; set; }
		
		/// <summary>
		/// Information required for human workers to complete a labeling task.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HumanTaskConfig HumanTaskConfig { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateModelOutput
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:model/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string ModelArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateModelInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string ModelName { get; set; }
		
		/// <summary>
		/// Describes the container, as part of model definition.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ContainerDefinition PrimaryContainer { get; set; }
		
		/// <summary>
		/// Maximum items: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public ContainerDefinition[] Containers { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string ExecutionRoleArn { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html">Protect Endpoints by Using an Amazon Virtual Private Cloud</a> and <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConfig VpcConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableNetworkIsolation { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateModelPackageOutput
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:model-package/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ModelPackageArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateModelPackageInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string ModelPackageName { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: [\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string ModelPackageDescription { get; set; }
		
		/// <summary>
		/// Defines how to perform inference generation after a training job is run.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InferenceSpecification InferenceSpecification { get; set; }
		
		/// <summary>
		/// Specifies batch transform jobs that Amazon SageMaker runs to validate your model package.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ModelPackageValidationSpecification ValidationSpecification { get; set; }
		
		/// <summary>
		/// A list of algorithms that were used to create a model package.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SourceAlgorithmSpecification SourceAlgorithmSpecification { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CertifyForMarketplace { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateMonitoringScheduleResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string MonitoringScheduleArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateMonitoringScheduleRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string MonitoringScheduleName { get; set; }
		
		/// <summary>
		/// Configures the monitoring schedule and defines the monitoring job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MonitoringScheduleConfig MonitoringScheduleConfig { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateNotebookInstanceOutput
	{
		
		/// <summary>
		/// Max length: 256
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string NotebookInstanceArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateNotebookInstanceInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NotebookInstanceName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateNotebookInstanceInputInstanceType InstanceType { get; set; }
		
		/// <summary>
		/// Max length: 32
		/// Pattern: [-0-9a-zA-Z]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32)]
		public string SubnetId { get; set; }
		
		/// <summary>
		/// Maximum items: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public SecurityGroupId[] SecurityGroupIds { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string KmsKeyId { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string LifecycleConfigName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CreateNotebookInstanceInputDirectInternetAccess DirectInternetAccess { get; set; }
		
		/// <summary>
		/// Minimum: 5
		/// Maximum: 16384
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(5, 16384)]
		public System.Nullable<System.Int32> VolumeSizeInGB { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NotebookInstanceAcceleratorType[] AcceleratorTypes { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// Pattern: ^https://([^/]+)/?(.*)$|^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string DefaultCodeRepository { get; set; }
		
		/// <summary>
		/// Maximum items: 3
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(3)]
		public CodeRepositoryNameOrUrl[] AdditionalCodeRepositories { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CreateNotebookInstanceInputRootAccess RootAccess { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateNotebookInstanceInputInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t2.medium = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t2.large = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t2.xlarge = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t2.2xlarge = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.medium = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.large = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.xlarge = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.2xlarge = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.xlarge = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.2xlarge = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.4xlarge = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.10xlarge = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.16xlarge = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.xlarge = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.2xlarge = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.4xlarge = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.12xlarge = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.24xlarge = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.xlarge = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.2xlarge = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.4xlarge = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.8xlarge = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.xlarge = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.2xlarge = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.4xlarge = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.9xlarge = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.18xlarge = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.xlarge = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.2xlarge = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.4xlarge = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.9xlarge = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.18xlarge = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.xlarge = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.8xlarge = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.16xlarge = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.2xlarge = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.8xlarge = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.16xlarge = 37,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateNotebookInstanceInputDirectInternetAccess
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Enabled = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Disabled = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateNotebookInstanceInputRootAccess
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Enabled = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Disabled = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateNotebookInstanceLifecycleConfigOutput
	{
		
		/// <summary>
		/// Max length: 256
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string NotebookInstanceLifecycleConfigArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateNotebookInstanceLifecycleConfigInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NotebookInstanceLifecycleConfigName { get; set; }
		
		/// <summary>
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public NotebookInstanceLifecycleHook[] OnCreate { get; set; }
		
		/// <summary>
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public NotebookInstanceLifecycleHook[] OnStart { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreatePresignedDomainUrlResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AuthorizedUrl { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreatePresignedDomainUrlRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string DomainId { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string UserProfileName { get; set; }
		
		/// <summary>
		/// Minimum: 1800
		/// Maximum: 43200
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1800, 43200)]
		public System.Nullable<System.Int32> SessionExpirationDurationInSeconds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreatePresignedNotebookInstanceUrlOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AuthorizedUrl { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreatePresignedNotebookInstanceUrlInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NotebookInstanceName { get; set; }
		
		/// <summary>
		/// Minimum: 1800
		/// Maximum: 43200
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1800, 43200)]
		public System.Nullable<System.Int32> SessionExpirationDurationInSeconds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateProcessingJobResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:processing-job/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string ProcessingJobArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateProcessingJobRequest
	{
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 10
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public ProcessingInput[] ProcessingInputs { get; set; }
		
		/// <summary>
		/// The output configuration for the processing job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ProcessingOutputConfig ProcessingOutputConfig { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string ProcessingJobName { get; set; }
		
		/// <summary>
		/// Identifies the resources, ML compute instances, and ML storage volumes to deploy for a processing job. In distributed training, you specify more than one instance.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ProcessingResources ProcessingResources { get; set; }
		
		/// <summary>
		/// Specifies a time limit for how long the processing job is allowed to run.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ProcessingStoppingCondition StoppingCondition { get; set; }
		
		/// <summary>
		/// Configuration to run a processing job in a specified container image.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AppSpecification AppSpecification { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ProcessingEnvironmentMap Environment { get; set; }
		
		/// <summary>
		/// Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public NetworkConfig NetworkConfig { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// Configuration for the experiment.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ExperimentConfig ExperimentConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateTrainingJobResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:training-job/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TrainingJobArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateTrainingJobRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string TrainingJobName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HyperParameters HyperParameters { get; set; }
		
		/// <summary>
		/// <p>Specifies the training algorithm to use in a <a>CreateTrainingJob</a> request.</p> <p>For more information about algorithms provided by Amazon SageMaker, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. For information about using your own algorithms, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html">Using Your Own Algorithms with Amazon SageMaker</a>. </p>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AlgorithmSpecification AlgorithmSpecification { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public Channel[] InputDataConfig { get; set; }
		
		/// <summary>
		/// Provides information about how to store model training results (model artifacts).
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OutputDataConfig OutputDataConfig { get; set; }
		
		/// <summary>
		/// Describes the resources, including ML compute instances and ML storage volumes, to use for model training. 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ResourceConfig ResourceConfig { get; set; }
		
		/// <summary>
		/// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html">Protect Endpoints by Using an Amazon Virtual Private Cloud</a> and <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConfig VpcConfig { get; set; }
		
		/// <summary>
		/// <p>Specifies a limit to how long a model training or compilation job can run. It also specifies how long you are willing to wait for a managed spot training job to complete. When the job reaches the time limit, Amazon SageMaker ends the training or compilation job. Use this API to cap model training costs.</p> <p>To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost. </p> <p>The training algorithms provided by Amazon SageMaker automatically save the intermediate results of a model training job when possible. This attempt to save artifacts is only a best effort case as model might not be in a state from which it can be saved. For example, if training has just started, the model might not be ready to save. When saved, this intermediate data is a valid model artifact. You can use it to create a model with <code>CreateModel</code>.</p> <note> <p>The Neural Topic Model (NTM) currently does not support saving intermediate model artifacts. When training NTMs, make sure that the maximum runtime is sufficient for the training job to complete.</p> </note>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StoppingCondition StoppingCondition { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableNetworkIsolation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableInterContainerTrafficEncryption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableManagedSpotTraining { get; set; }
		
		/// <summary>
		/// Contains information about the output location for managed spot training checkpoint data. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CheckpointConfig CheckpointConfig { get; set; }
		
		/// <summary>
		/// Configuration information for the debug hook parameters, collection configuration, and storage paths.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DebugHookConfig DebugHookConfig { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public DebugRuleConfiguration[] DebugRuleConfigurations { get; set; }
		
		/// <summary>
		/// Configuration of storage locations for TensorBoard output.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TensorBoardOutputConfig TensorBoardOutputConfig { get; set; }
		
		/// <summary>
		/// Configuration for the experiment.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ExperimentConfig ExperimentConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateTransformJobResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:transform-job/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TransformJobArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateTransformJobRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string TransformJobName { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string ModelName { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> MaxConcurrentTransforms { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> MaxPayloadInMB { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CreateTransformJobRequestBatchStrategy BatchStrategy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TransformEnvironmentMap Environment { get; set; }
		
		/// <summary>
		/// Describes the input source of a transform job and the way the transform job consumes it.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TransformInput TransformInput { get; set; }
		
		/// <summary>
		/// Describes the results of a transform job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TransformOutput TransformOutput { get; set; }
		
		/// <summary>
		/// Describes the resources, including ML instance types and ML instance count, to use for transform job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TransformResources TransformResources { get; set; }
		
		/// <summary>
		/// The data structure used to specify the data to be used for inference in a batch transform job and to associate the data that is relevant to the prediction results in the output. The input filter provided allows you to exclude input data that is not needed for inference in a batch transform job. The output filter provided allows you to include input data relevant to interpreting the predictions in the output from the job. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform-data-processing.html">Associate Prediction Results with their Corresponding Input Records</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DataProcessing DataProcessing { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// Configuration for the experiment.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ExperimentConfig ExperimentConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateTransformJobRequestBatchStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MultiRecord = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SingleRecord = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateTrialResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment-trial/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TrialArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateTrialRequest
	{
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string TrialName { get; set; }
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string ExperimentName { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateTrialComponentResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment-trial-component/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TrialComponentArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateTrialComponentRequest
	{
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string TrialComponentName { get; set; }
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The status of the trial component.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentParameters Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentArtifacts InputArtifacts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentArtifacts OutputArtifacts { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateUserProfileResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:user-profile/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string UserProfileArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateUserProfileRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string DomainId { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string UserProfileName { get; set; }
		
		/// <summary>
		/// Pattern: UserName
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SingleSignOnUserIdentifier { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string SingleSignOnUserValue { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// A collection of settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UserSettings UserSettings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateWorkteamResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:workteam/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string WorkteamArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateWorkteamRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string WorkteamName { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 10
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public MemberDefinition[] MemberDefinitions { get; set; }
		
		/// <summary>
		/// Max length: 200
		/// Min length: 1
		/// Pattern: .+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(200, MinimumLength=1)]
		public string Description { get; set; }
		
		/// <summary>
		/// Configures SNS notifications of available or expiring work items for work teams.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public NotificationConfiguration NotificationConfiguration { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteAlgorithmInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string AlgorithmName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteAppRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string DomainId { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string UserProfileName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DeleteAppRequestAppType AppType { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string AppName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DeleteAppRequestAppType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JupyterServer = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KernelGateway = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TensorBoard = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteCodeRepositoryInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string CodeRepositoryName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteDomainRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string DomainId { get; set; }
		
		/// <summary>
		/// The retention policy for data stored on an Amazon Elastic File System (EFS) volume.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RetentionPolicy RetentionPolicy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteEndpointInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string EndpointName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteEndpointConfigInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string EndpointConfigName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteExperimentResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string ExperimentArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteExperimentRequest
	{
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string ExperimentName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteFlowDefinitionRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-z0-9](-*[a-z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string FlowDefinitionName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteModelInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string ModelName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteModelPackageInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string ModelPackageName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteMonitoringScheduleRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string MonitoringScheduleName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteNotebookInstanceInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NotebookInstanceName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteNotebookInstanceLifecycleConfigInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NotebookInstanceLifecycleConfigName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteTagsInput
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string ResourceArn { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 50
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public TagKey[] TagKeys { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteTrialResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment-trial/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TrialArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteTrialRequest
	{
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string TrialName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteTrialComponentResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment-trial-component/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TrialComponentArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteTrialComponentRequest
	{
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string TrialComponentName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteUserProfileRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string DomainId { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string UserProfileName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteWorkteamResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool Success { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteWorkteamRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string WorkteamName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeAlgorithmOutput
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string AlgorithmName { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:algorithm/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string AlgorithmArn { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: [\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string AlgorithmDescription { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		/// <summary>
		/// Defines how the algorithm is used for a training job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TrainingSpecification TrainingSpecification { get; set; }
		
		/// <summary>
		/// Defines how to perform inference generation after a training job is run.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InferenceSpecification InferenceSpecification { get; set; }
		
		/// <summary>
		/// Specifies configurations for one or more training jobs that Amazon SageMaker runs to test the algorithm.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AlgorithmValidationSpecification ValidationSpecification { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DescribeAlgorithmOutputAlgorithmStatus AlgorithmStatus { get; set; }
		
		/// <summary>
		/// Specifies the validation and image scan statuses of the algorithm.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AlgorithmStatusDetails AlgorithmStatusDetails { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string ProductId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CertifyForMarketplace { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeAlgorithmOutputAlgorithmStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeAlgorithmInput
	{
		
		/// <summary>
		/// Max length: 170
		/// Min length: 1
		/// Pattern: (arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:[a-z\-]*\/)?([a-zA-Z0-9]([a-zA-Z0-9-]){0,62})(?<!-)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(170, MinimumLength=1)]
		public string AlgorithmName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeAppResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:app/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string AppArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeAppResponseAppType AppType { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string AppName { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string DomainId { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string UserProfileName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeAppResponseStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastHealthCheckTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUserActivityTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string FailureReason { get; set; }
		
		/// <summary>
		/// The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. The ARN is stored as metadata in SageMaker Studio notebooks.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourceSpec ResourceSpec { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeAppResponseAppType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JupyterServer = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KernelGateway = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TensorBoard = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeAppResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleted = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InService = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeAppRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string DomainId { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string UserProfileName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DescribeAppRequestAppType AppType { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string AppName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeAppRequestAppType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JupyterServer = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KernelGateway = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TensorBoard = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeAutoMLJobResponse
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string AutoMLJobName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:automl-job/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string AutoMLJobArn { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 20
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public AutoMLChannel[] InputDataConfig { get; set; }
		
		/// <summary>
		/// The output data configuration.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AutoMLOutputDataConfig OutputDataConfig { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Applies a metric to minimize or maximize for the job's objective.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AutoMLJobObjective AutoMLJobObjective { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeAutoMLJobResponseProblemType ProblemType { get; set; }
		
		/// <summary>
		/// A collection of settings used for a job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AutoMLJobConfig AutoMLJobConfig { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string FailureReason { get; set; }
		
		/// <summary>
		/// An AutoPilot job will return recommendations, or candidates. Each candidate has futher details about the steps involed, and the status.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AutoMLCandidate BestCandidate { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DescribeAutoMLJobResponseAutoMLJobStatus AutoMLJobStatus { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DescribeAutoMLJobResponseAutoMLJobSecondaryStatus AutoMLJobSecondaryStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> GenerateCandidateDefinitionsOnly { get; set; }
		
		/// <summary>
		/// Artifacts that are generation during a job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AutoMLJobArtifacts AutoMLJobArtifacts { get; set; }
		
		/// <summary>
		/// The resolved attributes.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResolvedAttributes ResolvedAttributes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeAutoMLJobResponseProblemType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BinaryClassification = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MulticlassClassification = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Regression = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeAutoMLJobResponseAutoMLJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeAutoMLJobResponseAutoMLJobSecondaryStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Starting = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AnalyzingData = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FeatureEngineering = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ModelTuning = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MaxCandidatesReached = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MaxAutoMLJobRuntimeReached = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CandidateDefinitionsGenerated = 9,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeAutoMLJobRequest
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string AutoMLJobName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeCodeRepositoryOutput
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string CodeRepositoryName { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:code-repository/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string CodeRepositoryArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
		
		/// <summary>
		/// Specifies configuration details for a Git repository in your AWS account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GitConfig GitConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeCodeRepositoryInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string CodeRepositoryName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeCompilationJobResponse
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string CompilationJobName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:compilation-job/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string CompilationJobArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DescribeCompilationJobResponseCompilationJobStatus CompilationJobStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CompilationStartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CompilationEndTime { get; set; }
		
		/// <summary>
		/// <p>Specifies a limit to how long a model training or compilation job can run. It also specifies how long you are willing to wait for a managed spot training job to complete. When the job reaches the time limit, Amazon SageMaker ends the training or compilation job. Use this API to cap model training costs.</p> <p>To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost. </p> <p>The training algorithms provided by Amazon SageMaker automatically save the intermediate results of a model training job when possible. This attempt to save artifacts is only a best effort case as model might not be in a state from which it can be saved. For example, if training has just started, the model might not be ready to save. When saved, this intermediate data is a valid model artifact. You can use it to create a model with <code>CreateModel</code>.</p> <note> <p>The Neural Topic Model (NTM) currently does not support saving intermediate model artifacts. When training NTMs, make sure that the maximum runtime is sufficient for the training job to complete.</p> </note>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StoppingCondition StoppingCondition { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string FailureReason { get; set; }
		
		/// <summary>
		/// <p>Provides information about the location that is configured for storing model artifacts. </p> <p>Model artifacts are the output that results from training a model, and typically consist of trained parameters, a model defintion that desribes how to compute inferences, and other metadata.</p>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ModelArtifacts ModelArtifacts { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Contains information about the location of input model artifacts, the name and shape of the expected data inputs, and the framework in which the model was trained.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InputConfig InputConfig { get; set; }
		
		/// <summary>
		/// Contains information about the output location for the compiled model and the device (target) that the model runs on.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OutputConfig OutputConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeCompilationJobResponseCompilationJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INPROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STARTING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeCompilationJobRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string CompilationJobName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDomainResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:domain/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string DomainArn { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string DomainId { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string DomainName { get; set; }
		
		/// <summary>
		/// Max length: 32
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32)]
		public string HomeEfsFileSystemId { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string SingleSignOnManagedApplicationInstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeDomainResponseStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeDomainResponseAuthMode AuthMode { get; set; }
		
		/// <summary>
		/// A collection of settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UserSettings DefaultUserSettings { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string HomeEfsFileSystemKmsKeyId { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 16
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(16)]
		public SubnetId[] SubnetIds { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string Url { get; set; }
		
		/// <summary>
		/// Max length: 32
		/// Pattern: [-0-9a-zA-Z]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32)]
		public string VpcId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeDomainResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InService = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeDomainResponseAuthMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SSO = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IAM = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeDomainRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string DomainId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeEndpointOutput
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string EndpointName { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:endpoint/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string EndpointArn { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string EndpointConfigName { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public ProductionVariantSummary[] ProductionVariants { get; set; }
		
		/// <summary>
		/// <p/>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DataCaptureConfigSummary DataCaptureConfig { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DescribeEndpointOutputEndpointStatus EndpointStatus { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string FailureReason { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeEndpointOutputEndpointStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OutOfService = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Creating = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Updating = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SystemUpdating = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RollingBack = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InService = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 7,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeEndpointInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string EndpointName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeEndpointConfigOutput
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string EndpointConfigName { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:endpoint-config/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string EndpointConfigArn { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 10
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public ProductionVariant[] ProductionVariants { get; set; }
		
		/// <summary>
		/// <p/>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DataCaptureConfig DataCaptureConfig { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string KmsKeyId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeEndpointConfigInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string EndpointConfigName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeExperimentResponse
	{
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string ExperimentName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string ExperimentArn { get; set; }
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The source of the experiment.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ExperimentSource Source { get; set; }
		
		/// <summary>
		/// Max length: 3072
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(3072)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		/// <summary>
		/// Information about the user who created or modified an experiment, trial, or trial component.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UserContext CreatedBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
		
		/// <summary>
		/// Information about the user who created or modified an experiment, trial, or trial component.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UserContext LastModifiedBy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeExperimentRequest
	{
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string ExperimentName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeFlowDefinitionResponse
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:flow-definition/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string FlowDefinitionArn { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-z0-9](-*[a-z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string FlowDefinitionName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DescribeFlowDefinitionResponseFlowDefinitionStatus FlowDefinitionStatus { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		/// <summary>
		/// Container for configuring the source of human task requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public HumanLoopRequestSource HumanLoopRequestSource { get; set; }
		
		/// <summary>
		/// Provides information about how and under what conditions SageMaker creates a human loop. If <code>HumanLoopActivationConfig</code> is not given, then all requests go to humans.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public HumanLoopActivationConfig HumanLoopActivationConfig { get; set; }
		
		/// <summary>
		/// Describes the work to be performed by human workers.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HumanLoopConfig HumanLoopConfig { get; set; }
		
		/// <summary>
		/// Contains information about where human output will be stored.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FlowDefinitionOutputConfig OutputConfig { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string FailureReason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeFlowDefinitionResponseFlowDefinitionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Initializing = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeFlowDefinitionRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-z0-9](-*[a-z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string FlowDefinitionName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeHumanTaskUiResponse
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:human-task-ui/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string HumanTaskUiArn { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-z0-9](-*[a-z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string HumanTaskUiName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		/// <summary>
		/// Container for user interface template information.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UiTemplateInfo UiTemplate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeHumanTaskUiRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-z0-9](-*[a-z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string HumanTaskUiName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeHyperParameterTuningJobResponse
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string HyperParameterTuningJobName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:hyper-parameter-tuning-job/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string HyperParameterTuningJobArn { get; set; }
		
		/// <summary>
		/// Configures a hyperparameter tuning job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HyperParameterTuningJobConfig HyperParameterTuningJobConfig { get; set; }
		
		/// <summary>
		/// Defines the training jobs launched by a hyperparameter tuning job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public HyperParameterTrainingJobDefinition TrainingJobDefinition { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 10
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public HyperParameterTrainingJobDefinition[] TrainingJobDefinitions { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DescribeHyperParameterTuningJobResponseHyperParameterTuningJobStatus HyperParameterTuningJobStatus { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> HyperParameterTuningEndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
		
		/// <summary>
		/// The numbers of training jobs launched by a hyperparameter tuning job, categorized by status.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TrainingJobStatusCounters TrainingJobStatusCounters { get; set; }
		
		/// <summary>
		/// Specifies the number of training jobs that this hyperparameter tuning job launched, categorized by the status of their objective metric. The objective metric status shows whether the final objective metric for the training job has been evaluated by the tuning job and used in the hyperparameter tuning process.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ObjectiveStatusCounters ObjectiveStatusCounters { get; set; }
		
		/// <summary>
		/// Specifies summary information about a training job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public HyperParameterTrainingJobSummary BestTrainingJob { get; set; }
		
		/// <summary>
		/// Specifies summary information about a training job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public HyperParameterTrainingJobSummary OverallBestTrainingJob { get; set; }
		
		/// <summary>
		/// <p>Specifies the configuration for a hyperparameter tuning job that uses one or more previous hyperparameter tuning jobs as a starting point. The results of previous tuning jobs are used to inform which combinations of hyperparameters to search over in the new tuning job.</p> <p>All training jobs launched by the new hyperparameter tuning job are evaluated by using the objective metric, and the training job that performs the best is compared to the best training jobs from the parent tuning jobs. From these, the training job that performs the best as measured by the objective metric is returned as the overall best training job.</p> <note> <p>All training jobs launched by parent hyperparameter tuning jobs and the new hyperparameter tuning jobs count against the limit of training jobs for the tuning job.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public HyperParameterTuningJobWarmStartConfig WarmStartConfig { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string FailureReason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeHyperParameterTuningJobResponseHyperParameterTuningJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeHyperParameterTuningJobRequest
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string HyperParameterTuningJobName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeLabelingJobResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DescribeLabelingJobResponseLabelingJobStatus LabelingJobStatus { get; set; }
		
		/// <summary>
		/// Provides a breakdown of the number of objects labeled.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LabelCounters LabelCounters { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string FailureReason { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: .+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string JobReferenceCode { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string LabelingJobName { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:labeling-job/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string LabelingJobArn { get; set; }
		
		/// <summary>
		/// Max length: 127
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(127, MinimumLength=1)]
		public string LabelAttributeName { get; set; }
		
		/// <summary>
		/// Input configuration information for a labeling job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LabelingJobInputConfig InputConfig { get; set; }
		
		/// <summary>
		/// Output configuration information for a labeling job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LabelingJobOutputConfig OutputConfig { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string LabelCategoryConfigS3Uri { get; set; }
		
		/// <summary>
		/// <p>A set of conditions for stopping a labeling job. If any of the conditions are met, the job is automatically stopped. You can use these conditions to control the cost of data labeling.</p> <note> <p>Labeling jobs fail after 30 days with an appropriate client error message.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LabelingJobStoppingConditions StoppingConditions { get; set; }
		
		/// <summary>
		/// Provides configuration information for auto-labeling of your data objects. A <code>LabelingJobAlgorithmsConfig</code> object must be supplied in order to use auto-labeling.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LabelingJobAlgorithmsConfig LabelingJobAlgorithmsConfig { get; set; }
		
		/// <summary>
		/// Information required for human workers to complete a labeling task.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HumanTaskConfig HumanTaskConfig { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// Specifies the location of the output produced by the labeling job. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LabelingJobOutput LabelingJobOutput { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeLabelingJobResponseLabelingJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeLabelingJobRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string LabelingJobName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeModelOutput
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string ModelName { get; set; }
		
		/// <summary>
		/// Describes the container, as part of model definition.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ContainerDefinition PrimaryContainer { get; set; }
		
		/// <summary>
		/// Maximum items: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public ContainerDefinition[] Containers { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string ExecutionRoleArn { get; set; }
		
		/// <summary>
		/// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html">Protect Endpoints by Using an Amazon Virtual Private Cloud</a> and <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConfig VpcConfig { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:model/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string ModelArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableNetworkIsolation { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeModelInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string ModelName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeModelPackageOutput
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string ModelPackageName { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:model-package/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ModelPackageArn { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: [\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string ModelPackageDescription { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		/// <summary>
		/// Defines how to perform inference generation after a training job is run.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InferenceSpecification InferenceSpecification { get; set; }
		
		/// <summary>
		/// A list of algorithms that were used to create a model package.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SourceAlgorithmSpecification SourceAlgorithmSpecification { get; set; }
		
		/// <summary>
		/// Specifies batch transform jobs that Amazon SageMaker runs to validate your model package.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ModelPackageValidationSpecification ValidationSpecification { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DescribeModelPackageOutputModelPackageStatus ModelPackageStatus { get; set; }
		
		/// <summary>
		/// Specifies the validation and image scan statuses of the model package.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ModelPackageStatusDetails ModelPackageStatusDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CertifyForMarketplace { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeModelPackageOutputModelPackageStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeModelPackageInput
	{
		
		/// <summary>
		/// Max length: 170
		/// Min length: 1
		/// Pattern: (arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:[a-z\-]*\/)?([a-zA-Z0-9]([a-zA-Z0-9-]){0,62})(?<!-)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(170, MinimumLength=1)]
		public string ModelPackageName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeMonitoringScheduleResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string MonitoringScheduleArn { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string MonitoringScheduleName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DescribeMonitoringScheduleResponseMonitoringScheduleStatus MonitoringScheduleStatus { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string FailureReason { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
		
		/// <summary>
		/// Configures the monitoring schedule and defines the monitoring job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MonitoringScheduleConfig MonitoringScheduleConfig { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string EndpointName { get; set; }
		
		/// <summary>
		/// Summary of information about the last monitoring job to run.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public MonitoringExecutionSummary LastMonitoringExecutionSummary { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeMonitoringScheduleResponseMonitoringScheduleStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Scheduled = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeMonitoringScheduleRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string MonitoringScheduleName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeNotebookInstanceOutput
	{
		
		/// <summary>
		/// Max length: 256
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string NotebookInstanceArn { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NotebookInstanceName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeNotebookInstanceOutputNotebookInstanceStatus NotebookInstanceStatus { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Url { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeNotebookInstanceOutputInstanceType InstanceType { get; set; }
		
		/// <summary>
		/// Max length: 32
		/// Pattern: [-0-9a-zA-Z]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32)]
		public string SubnetId { get; set; }
		
		/// <summary>
		/// Maximum items: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public SecurityGroupId[] SecurityGroups { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NetworkInterfaceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NotebookInstanceLifecycleConfigName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeNotebookInstanceOutputDirectInternetAccess DirectInternetAccess { get; set; }
		
		/// <summary>
		/// Minimum: 5
		/// Maximum: 16384
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(5, 16384)]
		public System.Nullable<System.Int32> VolumeSizeInGB { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NotebookInstanceAcceleratorType[] AcceleratorTypes { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// Pattern: ^https://([^/]+)/?(.*)$|^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string DefaultCodeRepository { get; set; }
		
		/// <summary>
		/// Maximum items: 3
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(3)]
		public CodeRepositoryNameOrUrl[] AdditionalCodeRepositories { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeNotebookInstanceOutputRootAccess RootAccess { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeNotebookInstanceOutputNotebookInstanceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InService = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Updating = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeNotebookInstanceOutputInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t2.medium = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t2.large = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t2.xlarge = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t2.2xlarge = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.medium = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.large = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.xlarge = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.2xlarge = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.xlarge = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.2xlarge = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.4xlarge = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.10xlarge = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.16xlarge = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.xlarge = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.2xlarge = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.4xlarge = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.12xlarge = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.24xlarge = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.xlarge = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.2xlarge = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.4xlarge = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.8xlarge = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.xlarge = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.2xlarge = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.4xlarge = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.9xlarge = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.18xlarge = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.xlarge = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.2xlarge = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.4xlarge = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.9xlarge = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.18xlarge = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.xlarge = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.8xlarge = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.16xlarge = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.2xlarge = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.8xlarge = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.16xlarge = 37,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeNotebookInstanceOutputDirectInternetAccess
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Enabled = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Disabled = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeNotebookInstanceOutputRootAccess
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Enabled = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Disabled = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeNotebookInstanceInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NotebookInstanceName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeNotebookInstanceLifecycleConfigOutput
	{
		
		/// <summary>
		/// Max length: 256
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string NotebookInstanceLifecycleConfigArn { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NotebookInstanceLifecycleConfigName { get; set; }
		
		/// <summary>
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public NotebookInstanceLifecycleHook[] OnCreate { get; set; }
		
		/// <summary>
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public NotebookInstanceLifecycleHook[] OnStart { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeNotebookInstanceLifecycleConfigInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NotebookInstanceLifecycleConfigName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeProcessingJobResponse
	{
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 10
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public ProcessingInput[] ProcessingInputs { get; set; }
		
		/// <summary>
		/// The output configuration for the processing job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ProcessingOutputConfig ProcessingOutputConfig { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string ProcessingJobName { get; set; }
		
		/// <summary>
		/// Identifies the resources, ML compute instances, and ML storage volumes to deploy for a processing job. In distributed training, you specify more than one instance.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ProcessingResources ProcessingResources { get; set; }
		
		/// <summary>
		/// Specifies a time limit for how long the processing job is allowed to run.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ProcessingStoppingCondition StoppingCondition { get; set; }
		
		/// <summary>
		/// Configuration to run a processing job in a specified container image.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AppSpecification AppSpecification { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ProcessingEnvironmentMap Environment { get; set; }
		
		/// <summary>
		/// Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public NetworkConfig NetworkConfig { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Configuration for the experiment.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ExperimentConfig ExperimentConfig { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:processing-job/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string ProcessingJobArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DescribeProcessingJobResponseProcessingJobStatus ProcessingJobStatus { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: [\S\s]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string ExitMessage { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ProcessingEndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ProcessingStartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string MonitoringScheduleArn { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:automl-job/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string AutoMLJobArn { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:training-job/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TrainingJobArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeProcessingJobResponseProcessingJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeProcessingJobRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string ProcessingJobName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeSubscribedWorkteamResponse
	{
		
		/// <summary>
		/// Describes a work team of a vendor that does the a labelling job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SubscribedWorkteam SubscribedWorkteam { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeSubscribedWorkteamRequest
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:workteam/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string WorkteamArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeTrainingJobResponse
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string TrainingJobName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:training-job/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TrainingJobArn { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:hyper-parameter-tuning-job/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TuningJobArn { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:labeling-job/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string LabelingJobArn { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:automl-job/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string AutoMLJobArn { get; set; }
		
		/// <summary>
		/// <p>Provides information about the location that is configured for storing model artifacts. </p> <p>Model artifacts are the output that results from training a model, and typically consist of trained parameters, a model defintion that desribes how to compute inferences, and other metadata.</p>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ModelArtifacts ModelArtifacts { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DescribeTrainingJobResponseTrainingJobStatus TrainingJobStatus { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DescribeTrainingJobResponseSecondaryStatus SecondaryStatus { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HyperParameters HyperParameters { get; set; }
		
		/// <summary>
		/// <p>Specifies the training algorithm to use in a <a>CreateTrainingJob</a> request.</p> <p>For more information about algorithms provided by Amazon SageMaker, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. For information about using your own algorithms, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html">Using Your Own Algorithms with Amazon SageMaker</a>. </p>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AlgorithmSpecification AlgorithmSpecification { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public Channel[] InputDataConfig { get; set; }
		
		/// <summary>
		/// Provides information about how to store model training results (model artifacts).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OutputDataConfig OutputDataConfig { get; set; }
		
		/// <summary>
		/// Describes the resources, including ML compute instances and ML storage volumes, to use for model training. 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ResourceConfig ResourceConfig { get; set; }
		
		/// <summary>
		/// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html">Protect Endpoints by Using an Amazon Virtual Private Cloud</a> and <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConfig VpcConfig { get; set; }
		
		/// <summary>
		/// <p>Specifies a limit to how long a model training or compilation job can run. It also specifies how long you are willing to wait for a managed spot training job to complete. When the job reaches the time limit, Amazon SageMaker ends the training or compilation job. Use this API to cap model training costs.</p> <p>To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost. </p> <p>The training algorithms provided by Amazon SageMaker automatically save the intermediate results of a model training job when possible. This attempt to save artifacts is only a best effort case as model might not be in a state from which it can be saved. For example, if training has just started, the model might not be ready to save. When saved, this intermediate data is a valid model artifact. You can use it to create a model with <code>CreateModel</code>.</p> <note> <p>The Neural Topic Model (NTM) currently does not support saving intermediate model artifacts. When training NTMs, make sure that the maximum runtime is sufficient for the training job to complete.</p> </note>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StoppingCondition StoppingCondition { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> TrainingStartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> TrainingEndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SecondaryStatusTransition[] SecondaryStatusTransitions { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 40
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(40)]
		public MetricData[] FinalMetricDataList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableNetworkIsolation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableInterContainerTrafficEncryption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableManagedSpotTraining { get; set; }
		
		/// <summary>
		/// Contains information about the output location for managed spot training checkpoint data. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CheckpointConfig CheckpointConfig { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> TrainingTimeInSeconds { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> BillableTimeInSeconds { get; set; }
		
		/// <summary>
		/// Configuration information for the debug hook parameters, collection configuration, and storage paths.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DebugHookConfig DebugHookConfig { get; set; }
		
		/// <summary>
		/// Configuration for the experiment.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ExperimentConfig ExperimentConfig { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public DebugRuleConfiguration[] DebugRuleConfigurations { get; set; }
		
		/// <summary>
		/// Configuration of storage locations for TensorBoard output.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TensorBoardOutputConfig TensorBoardOutputConfig { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public DebugRuleEvaluationStatus[] DebugRuleEvaluationStatuses { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeTrainingJobResponseTrainingJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeTrainingJobResponseSecondaryStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Starting = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LaunchingMLInstances = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PreparingTrainingStack = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Downloading = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DownloadingTrainingImage = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Training = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Uploading = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MaxRuntimeExceeded = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Interrupted = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MaxWaitTimeExceeded = 13,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeTrainingJobRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string TrainingJobName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeTransformJobResponse
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string TransformJobName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:transform-job/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TransformJobArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DescribeTransformJobResponseTransformJobStatus TransformJobStatus { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string FailureReason { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string ModelName { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> MaxConcurrentTransforms { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> MaxPayloadInMB { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeTransformJobResponseBatchStrategy BatchStrategy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TransformEnvironmentMap Environment { get; set; }
		
		/// <summary>
		/// Describes the input source of a transform job and the way the transform job consumes it.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TransformInput TransformInput { get; set; }
		
		/// <summary>
		/// Describes the results of a transform job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TransformOutput TransformOutput { get; set; }
		
		/// <summary>
		/// Describes the resources, including ML instance types and ML instance count, to use for transform job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TransformResources TransformResources { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> TransformStartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> TransformEndTime { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:labeling-job/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string LabelingJobArn { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:automl-job/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string AutoMLJobArn { get; set; }
		
		/// <summary>
		/// The data structure used to specify the data to be used for inference in a batch transform job and to associate the data that is relevant to the prediction results in the output. The input filter provided allows you to exclude input data that is not needed for inference in a batch transform job. The output filter provided allows you to include input data relevant to interpreting the predictions in the output from the job. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform-data-processing.html">Associate Prediction Results with their Corresponding Input Records</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DataProcessing DataProcessing { get; set; }
		
		/// <summary>
		/// Configuration for the experiment.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ExperimentConfig ExperimentConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeTransformJobResponseTransformJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeTransformJobResponseBatchStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MultiRecord = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SingleRecord = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeTransformJobRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string TransformJobName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeTrialResponse
	{
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string TrialName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment-trial/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TrialArn { get; set; }
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string ExperimentName { get; set; }
		
		/// <summary>
		/// The source of the trial.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TrialSource Source { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		/// <summary>
		/// Information about the user who created or modified an experiment, trial, or trial component.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UserContext CreatedBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
		
		/// <summary>
		/// Information about the user who created or modified an experiment, trial, or trial component.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UserContext LastModifiedBy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeTrialRequest
	{
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string TrialName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeTrialComponentResponse
	{
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string TrialComponentName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment-trial-component/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TrialComponentArn { get; set; }
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) and job type of the source of a trial component.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentSource Source { get; set; }
		
		/// <summary>
		/// The status of the trial component.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		/// <summary>
		/// Information about the user who created or modified an experiment, trial, or trial component.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UserContext CreatedBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
		
		/// <summary>
		/// Information about the user who created or modified an experiment, trial, or trial component.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UserContext LastModifiedBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentParameters Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentArtifacts InputArtifacts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentArtifacts OutputArtifacts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentMetricSummary[] Metrics { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeTrialComponentRequest
	{
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string TrialComponentName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeUserProfileResponse
	{
		
		/// <summary>
		/// Max length: 63
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string DomainId { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:user-profile/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string UserProfileArn { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string UserProfileName { get; set; }
		
		/// <summary>
		/// Max length: 10
		/// Pattern: \d+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(10)]
		public string HomeEfsFileSystemUid { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DescribeUserProfileResponseStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string FailureReason { get; set; }
		
		/// <summary>
		/// Pattern: UserName
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SingleSignOnUserIdentifier { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string SingleSignOnUserValue { get; set; }
		
		/// <summary>
		/// A collection of settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UserSettings UserSettings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DescribeUserProfileResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InService = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeUserProfileRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string DomainId { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string UserProfileName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeWorkforceResponse
	{
		
		/// <summary>
		/// A single private workforce, which is automatically created when you create your first private work team. You can create one private work force in each AWS Region. By default, any workforce-related API operation used in a specific region will apply to the workforce created in that region. To learn how to create a private workforce, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-workforce-create-private.html">Create a Private Workforce</a>.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Workforce Workforce { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeWorkforceRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9]([a-zA-Z0-9\-])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string WorkforceName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeWorkteamResponse
	{
		
		/// <summary>
		/// Provides details about a labeling work team.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Workteam Workteam { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeWorkteamRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string WorkteamName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DisassociateTrialComponentResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment-trial-component/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TrialComponentArn { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment-trial/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TrialArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DisassociateTrialComponentRequest
	{
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string TrialComponentName { get; set; }
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string TrialName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetSearchSuggestionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PropertyNameSuggestion[] PropertyNameSuggestions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GetSearchSuggestionsRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GetSearchSuggestionsRequestResource Resource { get; set; }
		
		/// <summary>
		/// Specified in the <a>GetSearchSuggestions</a> request. Limits the property names that are included in the response.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SuggestionQuery SuggestionQuery { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum GetSearchSuggestionsRequestResource
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TrainingJob = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Experiment = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExperimentTrial = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExperimentTrialComponent = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListAlgorithmsOutput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AlgorithmSummary[] AlgorithmSummaryList { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListAlgorithmsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeBefore { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: [a-zA-Z0-9\-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NameContains { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListAlgorithmsInputSortBy SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListAlgorithmsInputSortOrder SortOrder { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListAlgorithmsInputSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListAlgorithmsInputSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListAppsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AppDetails[] Apps { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListAppsRequest
	{
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListAppsRequestSortOrder SortOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListAppsRequestSortBy SortBy { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string DomainIdEquals { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string UserProfileNameEquals { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListAppsRequestSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListAppsRequestSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListAutoMLJobsResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AutoMLJobSummary[] AutoMLJobSummaries { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListAutoMLJobsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTimeBefore { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: [a-zA-Z0-9\-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NameContains { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListAutoMLJobsRequestStatusEquals StatusEquals { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListAutoMLJobsRequestSortOrder SortOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListAutoMLJobsRequestSortBy SortBy { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListAutoMLJobsRequestStatusEquals
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListAutoMLJobsRequestSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListAutoMLJobsRequestSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Status = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListCandidatesForAutoMLJobResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AutoMLCandidate[] Candidates { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListCandidatesForAutoMLJobRequest
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string AutoMLJobName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListCandidatesForAutoMLJobRequestStatusEquals StatusEquals { get; set; }
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string CandidateNameEquals { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListCandidatesForAutoMLJobRequestSortOrder SortOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListCandidatesForAutoMLJobRequestSortBy SortBy { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListCandidatesForAutoMLJobRequestStatusEquals
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListCandidatesForAutoMLJobRequestSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListCandidatesForAutoMLJobRequestSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Status = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FinalObjectiveMetricValue = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListCodeRepositoriesOutput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CodeRepositorySummary[] CodeRepositorySummaryList { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListCodeRepositoriesInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTimeBefore { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: [a-zA-Z0-9-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NameContains { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListCodeRepositoriesInputSortBy SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListCodeRepositoriesInputSortOrder SortOrder { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListCodeRepositoriesInputSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LastModifiedTime = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListCodeRepositoriesInputSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListCompilationJobsResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CompilationJobSummary[] CompilationJobSummaries { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListCompilationJobsRequest
	{
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTimeBefore { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: [a-zA-Z0-9\-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NameContains { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListCompilationJobsRequestStatusEquals StatusEquals { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListCompilationJobsRequestSortBy SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListCompilationJobsRequestSortOrder SortOrder { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListCompilationJobsRequestStatusEquals
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INPROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STARTING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListCompilationJobsRequestSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Status = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListCompilationJobsRequestSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListDomainsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainDetails[] Domains { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListDomainsRequest
	{
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListEndpointConfigsOutput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EndpointConfigSummary[] EndpointConfigs { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListEndpointConfigsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ListEndpointConfigsInputSortBy SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListEndpointConfigsInputSortOrder SortOrder { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: [a-zA-Z0-9-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NameContains { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeAfter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListEndpointConfigsInputSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListEndpointConfigsInputSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListEndpointsOutput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EndpointSummary[] Endpoints { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListEndpointsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ListEndpointsInputSortBy SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListEndpointsInputSortOrder SortOrder { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: [a-zA-Z0-9-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NameContains { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListEndpointsInputStatusEquals StatusEquals { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListEndpointsInputSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Status = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListEndpointsInputSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListEndpointsInputStatusEquals
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OutOfService = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Creating = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Updating = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SystemUpdating = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RollingBack = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InService = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 7,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListExperimentsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ExperimentSummary[] ExperimentSummaries { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListExperimentsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListExperimentsRequestSortBy SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListExperimentsRequestSortOrder SortOrder { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListExperimentsRequestSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListExperimentsRequestSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListFlowDefinitionsResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FlowDefinitionSummary[] FlowDefinitionSummaries { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListFlowDefinitionsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListFlowDefinitionsRequestSortOrder SortOrder { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListFlowDefinitionsRequestSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListHumanTaskUisResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HumanTaskUiSummary[] HumanTaskUiSummaries { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListHumanTaskUisRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListHumanTaskUisRequestSortOrder SortOrder { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListHumanTaskUisRequestSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListHyperParameterTuningJobsResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HyperParameterTuningJobSummary[] HyperParameterTuningJobSummaries { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListHyperParameterTuningJobsRequest
	{
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListHyperParameterTuningJobsRequestSortBy SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListHyperParameterTuningJobsRequestSortOrder SortOrder { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: [a-zA-Z0-9\-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NameContains { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListHyperParameterTuningJobsRequestStatusEquals StatusEquals { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListHyperParameterTuningJobsRequestSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Status = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListHyperParameterTuningJobsRequestSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListHyperParameterTuningJobsRequestStatusEquals
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListLabelingJobsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public LabelingJobSummary[] LabelingJobSummaryList { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListLabelingJobsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTimeBefore { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: [a-zA-Z0-9\-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NameContains { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListLabelingJobsRequestSortBy SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListLabelingJobsRequestSortOrder SortOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListLabelingJobsRequestStatusEquals StatusEquals { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListLabelingJobsRequestSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Status = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListLabelingJobsRequestSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListLabelingJobsRequestStatusEquals
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListLabelingJobsForWorkteamResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LabelingJobForWorkteamSummary[] LabelingJobSummaryList { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListLabelingJobsForWorkteamRequest
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:workteam/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string WorkteamArn { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeBefore { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: .+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string JobReferenceCodeContains { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListLabelingJobsForWorkteamRequestSortBy SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListLabelingJobsForWorkteamRequestSortOrder SortOrder { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListLabelingJobsForWorkteamRequestSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListLabelingJobsForWorkteamRequestSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListModelPackagesOutput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ModelPackageSummary[] ModelPackageSummaryList { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListModelPackagesInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeBefore { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: [a-zA-Z0-9\-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NameContains { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListModelPackagesInputSortBy SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListModelPackagesInputSortOrder SortOrder { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListModelPackagesInputSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListModelPackagesInputSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListModelsOutput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ModelSummary[] Models { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListModelsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ListModelsInputSortBy SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListModelsInputSortOrder SortOrder { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: [a-zA-Z0-9-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NameContains { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeAfter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListModelsInputSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListModelsInputSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListMonitoringExecutionsResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MonitoringExecutionSummary[] MonitoringExecutionSummaries { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListMonitoringExecutionsRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string MonitoringScheduleName { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string EndpointName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListMonitoringExecutionsRequestSortBy SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListMonitoringExecutionsRequestSortOrder SortOrder { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ScheduledTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ScheduledTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListMonitoringExecutionsRequestStatusEquals StatusEquals { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListMonitoringExecutionsRequestSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ScheduledTime = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Status = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListMonitoringExecutionsRequestSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListMonitoringExecutionsRequestStatusEquals
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CompletedWithViolations = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListMonitoringSchedulesResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MonitoringScheduleSummary[] MonitoringScheduleSummaries { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListMonitoringSchedulesRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string EndpointName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListMonitoringSchedulesRequestSortBy SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListMonitoringSchedulesRequestSortOrder SortOrder { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: [a-zA-Z0-9\-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NameContains { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListMonitoringSchedulesRequestStatusEquals StatusEquals { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListMonitoringSchedulesRequestSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Status = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListMonitoringSchedulesRequestSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListMonitoringSchedulesRequestStatusEquals
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Scheduled = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListNotebookInstanceLifecycleConfigsOutput
	{
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NotebookInstanceLifecycleConfigSummary[] NotebookInstanceLifecycleConfigs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListNotebookInstanceLifecycleConfigsInput
	{
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListNotebookInstanceLifecycleConfigsInputSortBy SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListNotebookInstanceLifecycleConfigsInputSortOrder SortOrder { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: [a-zA-Z0-9-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NameContains { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTimeAfter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListNotebookInstanceLifecycleConfigsInputSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LastModifiedTime = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListNotebookInstanceLifecycleConfigsInputSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListNotebookInstancesOutput
	{
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NotebookInstanceSummary[] NotebookInstances { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListNotebookInstancesInput
	{
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListNotebookInstancesInputSortBy SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListNotebookInstancesInputSortOrder SortOrder { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: [a-zA-Z0-9-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NameContains { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListNotebookInstancesInputStatusEquals StatusEquals { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NotebookInstanceLifecycleConfigNameContains { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: [a-zA-Z0-9-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string DefaultCodeRepositoryContains { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// Pattern: ^https://([^/]+)/?(.*)$|^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string AdditionalCodeRepositoryEquals { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListNotebookInstancesInputSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Status = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListNotebookInstancesInputSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListNotebookInstancesInputStatusEquals
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InService = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Updating = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListProcessingJobsResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ProcessingJobSummary[] ProcessingJobSummaries { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListProcessingJobsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NameContains { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListProcessingJobsRequestStatusEquals StatusEquals { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListProcessingJobsRequestSortBy SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListProcessingJobsRequestSortOrder SortOrder { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListProcessingJobsRequestStatusEquals
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListProcessingJobsRequestSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Status = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListProcessingJobsRequestSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListSubscribedWorkteamsResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SubscribedWorkteam[] SubscribedWorkteams { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListSubscribedWorkteamsRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string NameContains { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTagsOutput
	{
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTagsInput
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string ResourceArn { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(50, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTrainingJobsResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TrainingJobSummary[] TrainingJobSummaries { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTrainingJobsRequest
	{
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTimeBefore { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: [a-zA-Z0-9\-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NameContains { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListTrainingJobsRequestStatusEquals StatusEquals { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListTrainingJobsRequestSortBy SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListTrainingJobsRequestSortOrder SortOrder { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListTrainingJobsRequestStatusEquals
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListTrainingJobsRequestSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Status = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListTrainingJobsRequestSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTrainingJobsForHyperParameterTuningJobResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HyperParameterTrainingJobSummary[] TrainingJobSummaries { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTrainingJobsForHyperParameterTuningJobRequest
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string HyperParameterTuningJobName { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListTrainingJobsForHyperParameterTuningJobRequestStatusEquals StatusEquals { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListTrainingJobsForHyperParameterTuningJobRequestSortBy SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListTrainingJobsForHyperParameterTuningJobRequestSortOrder SortOrder { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListTrainingJobsForHyperParameterTuningJobRequestStatusEquals
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListTrainingJobsForHyperParameterTuningJobRequestSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Status = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FinalObjectiveMetricValue = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListTrainingJobsForHyperParameterTuningJobRequestSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTransformJobsResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TransformJobSummary[] TransformJobSummaries { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTransformJobsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTimeBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTimeAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTimeBefore { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: [a-zA-Z0-9\-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NameContains { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListTransformJobsRequestStatusEquals StatusEquals { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListTransformJobsRequestSortBy SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListTransformJobsRequestSortOrder SortOrder { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListTransformJobsRequestStatusEquals
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListTransformJobsRequestSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Status = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListTransformJobsRequestSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTrialComponentsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentSummary[] TrialComponentSummaries { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTrialComponentsRequest
	{
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string ExperimentName { get; set; }
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string TrialName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string SourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListTrialComponentsRequestSortBy SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListTrialComponentsRequestSortOrder SortOrder { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListTrialComponentsRequestSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListTrialComponentsRequestSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTrialsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TrialSummary[] TrialSummaries { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTrialsRequest
	{
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string ExperimentName { get; set; }
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string TrialComponentName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListTrialsRequestSortBy SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListTrialsRequestSortOrder SortOrder { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListTrialsRequestSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListTrialsRequestSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListUserProfilesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UserProfileDetails[] UserProfiles { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListUserProfilesRequest
	{
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListUserProfilesRequestSortOrder SortOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListUserProfilesRequestSortBy SortBy { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string DomainIdEquals { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string UserProfileNameContains { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListUserProfilesRequestSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListUserProfilesRequestSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LastModifiedTime = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListWorkteamsResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Workteam[] Workteams { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListWorkteamsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ListWorkteamsRequestSortBy SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListWorkteamsRequestSortOrder SortOrder { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string NameContains { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListWorkteamsRequestSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreateDate = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListWorkteamsRequestSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RenderUiTemplateResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RenderedContent { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RenderingError[] Errors { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RenderUiTemplateRequest
	{
		
		/// <summary>
		/// The Liquid template for the worker user interface.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UiTemplate UiTemplate { get; set; }
		
		/// <summary>
		/// Contains input values for a task.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RenderableTask Task { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:human-task-ui/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string HumanTaskUiArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SearchResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SearchRecord[] Results { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SearchRequest
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SearchRequestResource Resource { get; set; }
		
		/// <summary>
		/// <p>A multi-expression that searches for the specified resource or resources in a search. All resource objects that satisfy the expression's condition are included in the search results. You must specify at least one subexpression, filter, or nested filter. A <code>SearchExpression</code> can contain up to twenty elements.</p> <p>A <code>SearchExpression</code> contains the following components:</p> <ul> <li> <p>A list of <code>Filter</code> objects. Each filter defines a simple Boolean expression comprised of a resource property name, Boolean operator, and value. A <code>SearchExpression</code> can include only one <code>Contains</code> operator.</p> </li> <li> <p>A list of <code>NestedFilter</code> objects. Each nested filter defines a list of Boolean expressions using a list of resource properties. A nested filter is satisfied if a single object in the list satisfies all Boolean expressions.</p> </li> <li> <p>A list of <code>SearchExpression</code> objects. A search expression object can be nested in a list of search expression objects.</p> </li> <li> <p>A Boolean operator: <code>And</code> or <code>Or</code>.</p> </li> </ul>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SearchExpression SearchExpression { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: .+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SearchRequestSortOrder SortOrder { get; set; }
		
		/// <summary>
		/// Max length: 8192
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(8192)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SearchRequestResource
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TrainingJob = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Experiment = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExperimentTrial = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExperimentTrialComponent = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SearchRequestSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartMonitoringScheduleRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string MonitoringScheduleName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartNotebookInstanceInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NotebookInstanceName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopAutoMLJobRequest
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string AutoMLJobName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopCompilationJobRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string CompilationJobName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopHyperParameterTuningJobRequest
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string HyperParameterTuningJobName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopLabelingJobRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string LabelingJobName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopMonitoringScheduleRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string MonitoringScheduleName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopNotebookInstanceInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NotebookInstanceName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopProcessingJobRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string ProcessingJobName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopTrainingJobRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string TrainingJobName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopTransformJobRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string TransformJobName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateCodeRepositoryOutput
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:code-repository/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string CodeRepositoryArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateCodeRepositoryInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string CodeRepositoryName { get; set; }
		
		/// <summary>
		/// Specifies configuration details for a Git repository when the repository is updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GitConfigForUpdate GitConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateDomainResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:domain/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string DomainArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateDomainRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string DomainId { get; set; }
		
		/// <summary>
		/// A collection of settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UserSettings DefaultUserSettings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateEndpointOutput
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:endpoint/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string EndpointArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateEndpointInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string EndpointName { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string EndpointConfigName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RetainAllVariantProperties { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 3
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(3)]
		public VariantProperty[] ExcludeRetainedVariantProperties { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateEndpointWeightsAndCapacitiesOutput
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:endpoint/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string EndpointArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateEndpointWeightsAndCapacitiesInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string EndpointName { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public DesiredWeightAndCapacity[] DesiredWeightsAndCapacities { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateExperimentResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string ExperimentArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateExperimentRequest
	{
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string ExperimentName { get; set; }
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Max length: 3072
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(3072)]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateMonitoringScheduleResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string MonitoringScheduleArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateMonitoringScheduleRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string MonitoringScheduleName { get; set; }
		
		/// <summary>
		/// Configures the monitoring schedule and defines the monitoring job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MonitoringScheduleConfig MonitoringScheduleConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateNotebookInstanceInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NotebookInstanceName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpdateNotebookInstanceInputInstanceType InstanceType { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string LifecycleConfigName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisassociateLifecycleConfig { get; set; }
		
		/// <summary>
		/// Minimum: 5
		/// Maximum: 16384
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(5, 16384)]
		public System.Nullable<System.Int32> VolumeSizeInGB { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// Pattern: ^https://([^/]+)/?(.*)$|^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string DefaultCodeRepository { get; set; }
		
		/// <summary>
		/// Maximum items: 3
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(3)]
		public CodeRepositoryNameOrUrl[] AdditionalCodeRepositories { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NotebookInstanceAcceleratorType[] AcceleratorTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisassociateAcceleratorTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisassociateDefaultCodeRepository { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisassociateAdditionalCodeRepositories { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpdateNotebookInstanceInputRootAccess RootAccess { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateNotebookInstanceInputInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t2.medium = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t2.large = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t2.xlarge = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t2.2xlarge = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.medium = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.large = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.xlarge = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.2xlarge = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.xlarge = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.2xlarge = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.4xlarge = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.10xlarge = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.16xlarge = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.xlarge = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.2xlarge = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.4xlarge = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.12xlarge = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.24xlarge = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.xlarge = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.2xlarge = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.4xlarge = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.8xlarge = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.xlarge = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.2xlarge = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.4xlarge = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.9xlarge = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.18xlarge = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.xlarge = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.2xlarge = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.4xlarge = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.9xlarge = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.18xlarge = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.xlarge = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.8xlarge = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.16xlarge = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.2xlarge = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.8xlarge = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.16xlarge = 37,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UpdateNotebookInstanceInputRootAccess
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Enabled = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Disabled = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateNotebookInstanceLifecycleConfigInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NotebookInstanceLifecycleConfigName { get; set; }
		
		/// <summary>
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public NotebookInstanceLifecycleHook[] OnCreate { get; set; }
		
		/// <summary>
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public NotebookInstanceLifecycleHook[] OnStart { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateTrialResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment-trial/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TrialArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateTrialRequest
	{
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string TrialName { get; set; }
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string DisplayName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateTrialComponentResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment-trial-component/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TrialComponentArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateTrialComponentRequest
	{
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string TrialComponentName { get; set; }
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The status of the trial component.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentParameters Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentKey256[] ParametersToRemove { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentArtifacts InputArtifacts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentKey256[] InputArtifactsToRemove { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentArtifacts OutputArtifacts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentKey256[] OutputArtifactsToRemove { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateUserProfileResponse
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:user-profile/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string UserProfileArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateUserProfileRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string DomainId { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string UserProfileName { get; set; }
		
		/// <summary>
		/// A collection of settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UserSettings UserSettings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateWorkforceResponse
	{
		
		/// <summary>
		/// A single private workforce, which is automatically created when you create your first private work team. You can create one private work force in each AWS Region. By default, any workforce-related API operation used in a specific region will apply to the workforce created in that region. To learn how to create a private workforce, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-workforce-create-private.html">Create a Private Workforce</a>.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Workforce Workforce { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateWorkforceRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9]([a-zA-Z0-9\-])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string WorkforceName { get; set; }
		
		/// <summary>
		/// A list of IP address ranges (<a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">CIDRs</a>). Used to create an allow list of IP addresses for a private workforce. For more information, see .
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SourceIpConfig SourceIpConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateWorkteamResponse
	{
		
		/// <summary>
		/// Provides details about a labeling work team.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Workteam Workteam { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateWorkteamRequest
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string WorkteamName { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 10
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public MemberDefinition[] MemberDefinitions { get; set; }
		
		/// <summary>
		/// Max length: 200
		/// Min length: 1
		/// Pattern: .+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(200, MinimumLength=1)]
		public string Description { get; set; }
		
		/// <summary>
		/// Configures SNS notifications of available or expiring work items for work teams.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public NotificationConfiguration NotificationConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AlgorithmSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TrainingInputMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pipe = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		File = 1,
	}
	
	/// <summary>
	/// <p>Specifies the training algorithm to use in a <a>CreateTrainingJob</a> request.</p> <p>For more information about algorithms provided by Amazon SageMaker, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. For information about using your own algorithms, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html">Using Your Own Algorithms with Amazon SageMaker</a>. </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AlgorithmSpecification
	{
		
		/// <summary>
		/// Max length: 255
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255)]
		public string TrainingImage { get; set; }
		
		/// <summary>
		/// Max length: 170
		/// Min length: 1
		/// Pattern: (arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:[a-z\-]*\/)?([a-zA-Z0-9]([a-zA-Z0-9-]){0,62})(?<!-)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(170, MinimumLength=1)]
		public string AlgorithmName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AlgorithmSpecificationTrainingInputMode TrainingInputMode { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 40
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(40)]
		public MetricDefinition[] MetricDefinitions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableSageMakerMetricsTimeSeries { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AlgorithmSpecificationTrainingInputMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pipe = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		File = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AlgorithmStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 4,
	}
	
	/// <summary>
	/// Specifies the validation and image scan statuses of the algorithm.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AlgorithmStatusDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AlgorithmStatusItem[] ValidationStatuses { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AlgorithmStatusItem[] ImageScanStatuses { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DetailedAlgorithmStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotStarted = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
	}
	
	/// <summary>
	/// Represents the overall status of an algorithm.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AlgorithmStatusItem
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string Name { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AlgorithmStatusItemStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FailureReason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AlgorithmStatusItemStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotStarted = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
	}
	
	/// <summary>
	/// Provides summary information about an algorithm.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AlgorithmSummary
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string AlgorithmName { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:algorithm/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string AlgorithmArn { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: [\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string AlgorithmDescription { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AlgorithmSummaryAlgorithmStatus AlgorithmStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AlgorithmSummaryAlgorithmStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 4,
	}
	
	/// <summary>
	/// Defines the input needed to run a training job using the algorithm.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TrainingJobDefinition
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TrainingJobDefinitionTrainingInputMode TrainingInputMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HyperParameters HyperParameters { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 20
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public Channel[] InputDataConfig { get; set; }
		
		/// <summary>
		/// Provides information about how to store model training results (model artifacts).
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OutputDataConfig OutputDataConfig { get; set; }
		
		/// <summary>
		/// Describes the resources, including ML compute instances and ML storage volumes, to use for model training. 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ResourceConfig ResourceConfig { get; set; }
		
		/// <summary>
		/// <p>Specifies a limit to how long a model training or compilation job can run. It also specifies how long you are willing to wait for a managed spot training job to complete. When the job reaches the time limit, Amazon SageMaker ends the training or compilation job. Use this API to cap model training costs.</p> <p>To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost. </p> <p>The training algorithms provided by Amazon SageMaker automatically save the intermediate results of a model training job when possible. This attempt to save artifacts is only a best effort case as model might not be in a state from which it can be saved. For example, if training has just started, the model might not be ready to save. When saved, this intermediate data is a valid model artifact. You can use it to create a model with <code>CreateModel</code>.</p> <note> <p>The Neural Topic Model (NTM) currently does not support saving intermediate model artifacts. When training NTMs, make sure that the maximum runtime is sufficient for the training job to complete.</p> </note>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StoppingCondition StoppingCondition { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TrainingJobDefinitionTrainingInputMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pipe = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		File = 1,
	}
	
	/// <summary>
	/// Defines the input needed to run a transform job using the inference specification specified in the algorithm.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TransformJobDefinition
	{
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> MaxConcurrentTransforms { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> MaxPayloadInMB { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TransformJobDefinitionBatchStrategy BatchStrategy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TransformEnvironmentMap Environment { get; set; }
		
		/// <summary>
		/// Describes the input source of a transform job and the way the transform job consumes it.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TransformInput TransformInput { get; set; }
		
		/// <summary>
		/// Describes the results of a transform job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TransformOutput TransformOutput { get; set; }
		
		/// <summary>
		/// Describes the resources, including ML instance types and ML instance count, to use for transform job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TransformResources TransformResources { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TransformJobDefinitionBatchStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MultiRecord = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SingleRecord = 1,
	}
	
	/// <summary>
	/// <p>Defines a training job and a batch transform job that Amazon SageMaker runs to validate your algorithm.</p> <p>The data provided in the validation profile is made available to your buyers on AWS Marketplace.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AlgorithmValidationProfile
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string ProfileName { get; set; }
		
		/// <summary>
		/// Defines the input needed to run a training job using the algorithm.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TrainingJobDefinition TrainingJobDefinition { get; set; }
		
		/// <summary>
		/// Defines the input needed to run a transform job using the inference specification specified in the algorithm.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TransformJobDefinition TransformJobDefinition { get; set; }
	}
	
	/// <summary>
	/// Specifies configurations for one or more training jobs that Amazon SageMaker runs to test the algorithm.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AlgorithmValidationSpecification
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string ValidationRole { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public AlgorithmValidationProfile[] ValidationProfiles { get; set; }
	}
	
	/// <summary>
	/// Configures how labels are consolidated across human workers.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AnnotationConsolidationConfig
	{
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: arn:aws[a-z\-]*:lambda:[a-z]{2}-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_\.]+(:(\$LATEST|[a-zA-Z0-9-_]+))?
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string AnnotationConsolidationLambdaArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AppType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JupyterServer = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KernelGateway = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TensorBoard = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AppStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleted = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InService = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 4,
	}
	
	/// <summary>
	/// The app's details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AppDetails
	{
		
		/// <summary>
		/// Max length: 63
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string DomainId { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string UserProfileName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AppDetailsAppType AppType { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string AppName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AppDetailsStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AppDetailsAppType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JupyterServer = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KernelGateway = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TensorBoard = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AppDetailsStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleted = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InService = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AppInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		system = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.micro = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.small = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.medium = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.large = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.xlarge = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.2xlarge = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.large = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.xlarge = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.2xlarge = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.4xlarge = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.8xlarge = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.12xlarge = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.16xlarge = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.24xlarge = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.large = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.xlarge = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.2xlarge = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.4xlarge = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.9xlarge = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.12xlarge = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.18xlarge = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.24xlarge = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.2xlarge = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.8xlarge = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.16xlarge = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.xlarge = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.2xlarge = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.4xlarge = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.8xlarge = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.12xlarge = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.16xlarge = 31,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AppSortKey
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 0,
	}
	
	/// <summary>
	/// Configuration to run a processing job in a specified container image.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AppSpecification
	{
		
		/// <summary>
		/// Max length: 255
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255)]
		public string ImageUri { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public ContainerEntrypointString[] ContainerEntrypoint { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public ContainerArgument[] ContainerArguments { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AssemblyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Line = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AuthMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SSO = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IAM = 1,
	}
	
	/// <summary>
	/// The candidate result from a job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FinalAutoMLJobObjectiveMetric
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FinalAutoMLJobObjectiveMetricType Type { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FinalAutoMLJobObjectiveMetricMetricName MetricName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public float Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FinalAutoMLJobObjectiveMetricType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Maximize = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Minimize = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FinalAutoMLJobObjectiveMetricMetricName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Accuracy = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MSE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		F1 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		F1macro = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ObjectiveStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CandidateStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 4,
	}
	
	/// <summary>
	/// An AutoPilot job will return recommendations, or candidates. Each candidate has futher details about the steps involed, and the status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AutoMLCandidate
	{
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string CandidateName { get; set; }
		
		/// <summary>
		/// The candidate result from a job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FinalAutoMLJobObjectiveMetric FinalAutoMLJobObjectiveMetric { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AutoMLCandidateObjectiveStatus ObjectiveStatus { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AutoMLCandidateStep[] CandidateSteps { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AutoMLCandidateCandidateStatus CandidateStatus { get; set; }
		
		/// <summary>
		/// Maximum items: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public AutoMLContainerDefinition[] InferenceContainers { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string FailureReason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AutoMLCandidateObjectiveStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AutoMLCandidateCandidateStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CandidateStepType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS::SageMaker::TrainingJob = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS::SageMaker::TransformJob = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS::SageMaker::ProcessingJob = 2,
	}
	
	/// <summary>
	/// Information about the steps for a Candidate, and what step it is working on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AutoMLCandidateStep
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AutoMLCandidateStepCandidateStepType CandidateStepType { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:.*/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string CandidateStepArn { get; set; }
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string CandidateStepName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AutoMLCandidateStepCandidateStepType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS::SageMaker::TrainingJob = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS::SageMaker::TransformJob = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS::SageMaker::ProcessingJob = 2,
	}
	
	/// <summary>
	/// The data source for the AutoPilot job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AutoMLDataSource
	{
		
		/// <summary>
		/// The Amazon S3 data source.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AutoMLS3DataSource S3DataSource { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CompressionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Gzip = 1,
	}
	
	/// <summary>
	/// Similar to Channel. A channel is a named input source that training algorithms can consume. Refer to Channel for detailed descriptions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AutoMLChannel
	{
		
		/// <summary>
		/// The data source for the AutoPilot job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AutoMLDataSource DataSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoMLChannelCompressionType CompressionType { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string TargetAttributeName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AutoMLChannelCompressionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Gzip = 1,
	}
	
	/// <summary>
	/// A list of container definitions that describe the different containers that make up one AutoML candidate. Refer to ContainerDefinition for more details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AutoMLContainerDefinition
	{
		
		/// <summary>
		/// Max length: 255
		/// Pattern: [\S]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255)]
		public string Image { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string ModelDataUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EnvironmentMap Environment { get; set; }
	}
	
	/// <summary>
	/// The Amazon S3 data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AutoMLS3DataSource
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AutoMLS3DataSourceS3DataType S3DataType { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string S3Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AutoMLS3DataSourceS3DataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ManifestFile = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3Prefix = 1,
	}
	
	/// <summary>
	/// Artifacts that are generation during a job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AutoMLJobArtifacts
	{
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string CandidateDefinitionNotebookLocation { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string DataExplorationNotebookLocation { get; set; }
	}
	
	/// <summary>
	/// How long a job is allowed to run, or how many candidates a job is allowed to generate.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AutoMLJobCompletionCriteria
	{
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> MaxCandidates { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> MaxRuntimePerTrainingJobInSeconds { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> MaxAutoMLJobRuntimeInSeconds { get; set; }
	}
	
	/// <summary>
	/// Security options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AutoMLSecurityConfig
	{
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string VolumeKmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableInterContainerTrafficEncryption { get; set; }
		
		/// <summary>
		/// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html">Protect Endpoints by Using an Amazon Virtual Private Cloud</a> and <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConfig VpcConfig { get; set; }
	}
	
	/// <summary>
	/// A collection of settings used for a job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AutoMLJobConfig
	{
		
		/// <summary>
		/// How long a job is allowed to run, or how many candidates a job is allowed to generate.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AutoMLJobCompletionCriteria CompletionCriteria { get; set; }
		
		/// <summary>
		/// Security options.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AutoMLSecurityConfig SecurityConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AutoMLMetricEnum
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Accuracy = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MSE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		F1 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		F1macro = 3,
	}
	
	/// <summary>
	/// Applies a metric to minimize or maximize for the job's objective.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AutoMLJobObjective
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AutoMLJobObjectiveMetricName MetricName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AutoMLJobObjectiveMetricName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Accuracy = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MSE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		F1 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		F1macro = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AutoMLJobObjectiveType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Maximize = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Minimize = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AutoMLJobSecondaryStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Starting = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AnalyzingData = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FeatureEngineering = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ModelTuning = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MaxCandidatesReached = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MaxAutoMLJobRuntimeReached = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CandidateDefinitionsGenerated = 9,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AutoMLJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 4,
	}
	
	/// <summary>
	/// Provides a summary about a job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AutoMLJobSummary
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string AutoMLJobName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:automl-job/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string AutoMLJobArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AutoMLJobSummaryAutoMLJobStatus AutoMLJobStatus { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AutoMLJobSummaryAutoMLJobSecondaryStatus AutoMLJobSecondaryStatus { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string FailureReason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AutoMLJobSummaryAutoMLJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AutoMLJobSummaryAutoMLJobSecondaryStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Starting = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AnalyzingData = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FeatureEngineering = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ModelTuning = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MaxCandidatesReached = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MaxAutoMLJobRuntimeReached = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CandidateDefinitionsGenerated = 9,
	}
	
	/// <summary>
	/// The output data configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AutoMLOutputDataConfig
	{
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string KmsKeyId { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string S3OutputPath { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AutoMLS3DataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ManifestFile = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3Prefix = 1,
	}
	
	/// <summary>
	/// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html">Protect Endpoints by Using an Amazon Virtual Private Cloud</a> and <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class VpcConfig
	{
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 5
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public SecurityGroupId[] SecurityGroupIds { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 16
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(16)]
		public SubnetId[] Subnets { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AutoMLSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Status = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AutoMLSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum AwsManagedHumanLoopRequestSource
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS/Rekognition/DetectModerationLabels/Image/V3 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS/Textract/AnalyzeDocument/Forms/V1 = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum BatchStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MultiRecord = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SingleRecord = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum BooleanOperator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		And = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Or = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CandidateSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Status = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FinalObjectiveMetricValue = 2,
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CaptureContentTypeHeader
	{
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 10
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public CsvContentType[] CsvContentTypes { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 10
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public JsonContentType[] JsonContentTypes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CaptureMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Input = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Output = 1,
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CaptureOption
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CaptureOptionCaptureMode CaptureMode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CaptureOptionCaptureMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Input = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Output = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CaptureStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Started = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 1,
	}
	
	/// <summary>
	/// A list of categorical hyperparameters to tune.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CategoricalParameterRange
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string Name { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 20
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public ParameterValue[] Values { get; set; }
	}
	
	/// <summary>
	/// Defines the possible values for a categorical hyperparameter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CategoricalParameterRangeSpecification
	{
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 20
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public ParameterValue[] Values { get; set; }
	}
	
	/// <summary>
	/// Describes the location of the channel data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DataSource
	{
		
		/// <summary>
		/// Describes the S3 data source.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3DataSource S3DataSource { get; set; }
		
		/// <summary>
		/// Specifies a file system data source for a channel.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FileSystemDataSource FileSystemDataSource { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RecordWrapper
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecordIO = 1,
	}
	
	/// <summary>
	/// <p>A configuration for a shuffle option for input data in a channel. If you use <code>S3Prefix</code> for <code>S3DataType</code>, the results of the S3 key prefix matches are shuffled. If you use <code>ManifestFile</code>, the order of the S3 object references in the <code>ManifestFile</code> is shuffled. If you use <code>AugmentedManifestFile</code>, the order of the JSON lines in the <code>AugmentedManifestFile</code> is shuffled. The shuffling order is determined using the <code>Seed</code> value.</p> <p>For Pipe input mode, when <code>ShuffleConfig</code> is specified shuffling is done at the start of every epoch. With large datasets, this ensures that the order of the training data is different for each epoch, and it helps reduce bias and possible overfitting. In a multi-node training job when <code>ShuffleConfig</code> is combined with <code>S3DataDistributionType</code> of <code>ShardedByS3Key</code>, the data is shuffled across nodes so that the content sent to a particular node on the first epoch might be sent to a different node on the second epoch.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ShuffleConfig
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Seed { get; set; }
	}
	
	/// <summary>
	/// A channel is a named input source that training algorithms can consume. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Channel
	{
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// Pattern: [A-Za-z0-9\.\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string ChannelName { get; set; }
		
		/// <summary>
		/// Describes the location of the channel data.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataSource DataSource { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string ContentType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChannelCompressionType CompressionType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChannelRecordWrapperType RecordWrapperType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChannelInputMode InputMode { get; set; }
		
		/// <summary>
		/// <p>A configuration for a shuffle option for input data in a channel. If you use <code>S3Prefix</code> for <code>S3DataType</code>, the results of the S3 key prefix matches are shuffled. If you use <code>ManifestFile</code>, the order of the S3 object references in the <code>ManifestFile</code> is shuffled. If you use <code>AugmentedManifestFile</code>, the order of the JSON lines in the <code>AugmentedManifestFile</code> is shuffled. The shuffling order is determined using the <code>Seed</code> value.</p> <p>For Pipe input mode, when <code>ShuffleConfig</code> is specified shuffling is done at the start of every epoch. With large datasets, this ensures that the order of the training data is different for each epoch, and it helps reduce bias and possible overfitting. In a multi-node training job when <code>ShuffleConfig</code> is combined with <code>S3DataDistributionType</code> of <code>ShardedByS3Key</code>, the data is shuffled across nodes so that the content sent to a particular node on the first epoch might be sent to a different node on the second epoch.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ShuffleConfig ShuffleConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ChannelCompressionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Gzip = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ChannelRecordWrapperType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecordIO = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ChannelInputMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pipe = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		File = 1,
	}
	
	/// <summary>
	/// Defines a named input source, called a channel, to be used by an algorithm.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ChannelSpecification
	{
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// Pattern: [A-Za-z0-9\.\-_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: [\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsRequired { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ContentType[] SupportedContentTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CompressionType[] SupportedCompressionTypes { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public TrainingInputMode[] SupportedInputModes { get; set; }
	}
	
	/// <summary>
	/// Contains information about the output location for managed spot training checkpoint data. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CheckpointConfig
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string S3Uri { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(4096)]
		public string LocalPath { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CodeRepositorySortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LastModifiedTime = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CodeRepositorySortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	/// <summary>
	/// Specifies configuration details for a Git repository in your AWS account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GitConfig
	{
		
		/// <summary>
		/// Pattern: ^https://([^/]+)/?(.*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RepositoryUrl { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// Pattern: [^ ~^:?*\[]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string Branch { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:aws[a-z\-]*:secretsmanager:[a-z0-9\-]*:[0-9]{12}:secret:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string SecretArn { get; set; }
	}
	
	/// <summary>
	/// Specifies summary information about a Git repository.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CodeRepositorySummary
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string CodeRepositoryName { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:code-repository/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string CodeRepositoryArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
		
		/// <summary>
		/// Specifies configuration details for a Git repository in your AWS account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GitConfig GitConfig { get; set; }
	}
	
	/// <summary>
	/// Identifies a Amazon Cognito user group. A user group can be used in on or more work teams.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CognitoMemberDefinition
	{
		
		/// <summary>
		/// Max length: 55
		/// Min length: 1
		/// Pattern: [\w-]+_[0-9a-zA-Z]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(55, MinimumLength=1)]
		public string UserPool { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [\p{L}\p{M}\p{S}\p{N}\p{P}]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string UserGroup { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [\w+]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ClientId { get; set; }
	}
	
	/// <summary>
	/// Configuration information for tensor collections.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CollectionConfiguration
	{
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string CollectionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CollectionParameters CollectionParameters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CompilationJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INPROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STARTING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 5,
	}
	
	/// <summary>
	/// A summary of a model compilation job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CompilationJobSummary
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string CompilationJobName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:compilation-job/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string CompilationJobArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CompilationStartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CompilationEndTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CompilationJobSummaryCompilationTargetDevice CompilationTargetDevice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CompilationJobSummaryCompilationJobStatus CompilationJobStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CompilationJobSummaryCompilationTargetDevice
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml_m4 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml_m5 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml_c4 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml_c5 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml_p2 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml_p3 = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml_inf1 = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		jetson_tx1 = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		jetson_tx2 = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		jetson_nano = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		jetson_xavier = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rasp3b = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		imx8qm = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		deeplens = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rk3399 = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rk3288 = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		aisage = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sbe_c = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		qcs605 = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		qcs603 = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sitara_am57x = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		amba_cv22 = 22,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CompilationJobSummaryCompilationJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INPROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STARTING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TargetDevice
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml_m4 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml_m5 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml_c4 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml_c5 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml_p2 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml_p3 = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml_inf1 = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		jetson_tx1 = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		jetson_tx2 = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		jetson_nano = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		jetson_xavier = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rasp3b = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		imx8qm = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		deeplens = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rk3399 = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rk3288 = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		aisage = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sbe_c = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		qcs605 = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		qcs603 = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sitara_am57x = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		amba_cv22 = 22,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ContainerMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SingleModel = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MultiModel = 1,
	}
	
	/// <summary>
	/// Describes the container, as part of model definition.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ContainerDefinition
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string ContainerHostname { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Pattern: [\S]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255)]
		public string Image { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContainerDefinitionMode Mode { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string ModelDataUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EnvironmentMap Environment { get; set; }
		
		/// <summary>
		/// Max length: 170
		/// Min length: 1
		/// Pattern: (arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:[a-z\-]*\/)?([a-zA-Z0-9]([a-zA-Z0-9-]){0,62})(?<!-)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(170, MinimumLength=1)]
		public string ModelPackageName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ContainerDefinitionMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SingleModel = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MultiModel = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ContentClassifier
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FreeOfPersonallyIdentifiableInformation = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FreeOfAdultContent = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum HyperParameterScalingType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Auto = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Linear = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Logarithmic = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ReverseLogarithmic = 3,
	}
	
	/// <summary>
	/// A list of continuous hyperparameters to tune.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ContinuousParameterRange
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string Name { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string MinValue { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string MaxValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContinuousParameterRangeScalingType ScalingType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ContinuousParameterRangeScalingType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Auto = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Linear = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Logarithmic = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ReverseLogarithmic = 3,
	}
	
	/// <summary>
	/// Defines the possible values for a continuous hyperparameter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ContinuousParameterRangeSpecification
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string MinValue { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string MaxValue { get; set; }
	}
	
	/// <summary>
	/// Defines how the algorithm is used for a training job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TrainingSpecification
	{
		
		/// <summary>
		/// Max length: 255
		/// Pattern: [\S]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255)]
		public string TrainingImage { get; set; }
		
		/// <summary>
		/// Max length: 72
		/// Pattern: ^[Ss][Hh][Aa]256:[0-9a-fA-F]{64}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(72)]
		public string TrainingImageDigest { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public HyperParameterSpecification[] SupportedHyperParameters { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TrainingInstanceType[] SupportedTrainingInstanceTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsDistributedTraining { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 40
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(40)]
		public MetricDefinition[] MetricDefinitions { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 8
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(8)]
		public ChannelSpecification[] TrainingChannels { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HyperParameterTuningJobObjective[] SupportedTuningJobObjectiveMetrics { get; set; }
	}
	
	/// <summary>
	/// Defines how to perform inference generation after a training job is run.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InferenceSpecification
	{
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public ModelPackageContainerDefinition[] Containers { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public TransformInstanceType[] SupportedTransformInstanceTypes { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ProductionVariantInstanceType[] SupportedRealtimeInferenceInstanceTypes { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ContentType[] SupportedContentTypes { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ResponseMIMEType[] SupportedResponseMIMETypes { get; set; }
	}
	
	/// <summary>
	/// The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. The ARN is stored as metadata in SageMaker Studio notebooks.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ResourceSpec
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: ^arn:aws(-[\w]+)*:sagemaker:.+:[0-9]{12}:image/[a-z0-9]([-.]?[a-z0-9])*$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string SageMakerImageArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceSpecInstanceType InstanceType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ResourceSpecInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		system = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.micro = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.small = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.medium = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.large = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.xlarge = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.2xlarge = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.large = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.xlarge = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.2xlarge = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.4xlarge = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.8xlarge = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.12xlarge = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.16xlarge = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.24xlarge = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.large = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.xlarge = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.2xlarge = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.4xlarge = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.9xlarge = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.12xlarge = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.18xlarge = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.24xlarge = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.2xlarge = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.8xlarge = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.16xlarge = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.xlarge = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.2xlarge = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.4xlarge = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.8xlarge = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.12xlarge = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.16xlarge = 31,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ProblemType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BinaryClassification = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MulticlassClassification = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Regression = 2,
	}
	
	/// <summary>
	/// Contains information about the location of input model artifacts, the name and shape of the expected data inputs, and the framework in which the model was trained.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InputConfig
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string S3Uri { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// Pattern: [\S\s]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string DataInputConfig { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InputConfigFramework Framework { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum InputConfigFramework
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TENSORFLOW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KERAS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MXNET = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONNX = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PYTORCH = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XGBOOST = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TFLITE = 6,
	}
	
	/// <summary>
	/// Contains information about the output location for the compiled model and the device (target) that the model runs on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class OutputConfig
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string S3OutputLocation { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OutputConfigTargetDevice TargetDevice { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum OutputConfigTargetDevice
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lambda = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml_m4 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml_m5 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml_c4 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml_c5 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml_p2 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml_p3 = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml_inf1 = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		jetson_tx1 = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		jetson_tx2 = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		jetson_nano = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		jetson_xavier = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rasp3b = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		imx8qm = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		deeplens = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rk3399 = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rk3288 = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		aisage = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sbe_c = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		qcs605 = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		qcs603 = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sitara_am57x = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		amba_cv22 = 22,
	}
	
	/// <summary>
	/// <p>Specifies a limit to how long a model training or compilation job can run. It also specifies how long you are willing to wait for a managed spot training job to complete. When the job reaches the time limit, Amazon SageMaker ends the training or compilation job. Use this API to cap model training costs.</p> <p>To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost. </p> <p>The training algorithms provided by Amazon SageMaker automatically save the intermediate results of a model training job when possible. This attempt to save artifacts is only a best effort case as model might not be in a state from which it can be saved. For example, if training has just started, the model might not be ready to save. When saved, this intermediate data is a valid model artifact. You can use it to create a model with <code>CreateModel</code>.</p> <note> <p>The Neural Topic Model (NTM) currently does not support saving intermediate model artifacts. When training NTMs, make sure that the maximum runtime is sufficient for the training job to complete.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StoppingCondition
	{
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> MaxRuntimeInSeconds { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> MaxWaitTimeInSeconds { get; set; }
	}
	
	/// <summary>
	/// A collection of settings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UserSettings
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string ExecutionRole { get; set; }
		
		/// <summary>
		/// Maximum items: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public SecurityGroupId[] SecurityGroups { get; set; }
		
		/// <summary>
		/// Specifies options when sharing an Amazon SageMaker Studio notebook. These settings are specified as part of <code>DefaultUserSettings</code> when the <a>CreateDomain</a> API is called, and as part of <code>UserSettings</code> when the <a>CreateUserProfile</a> API is called.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SharingSettings SharingSettings { get; set; }
		
		/// <summary>
		/// Jupyter server's app settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public JupyterServerAppSettings JupyterServerAppSettings { get; set; }
		
		/// <summary>
		/// The kernel gateway app settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public KernelGatewayAppSettings KernelGatewayAppSettings { get; set; }
		
		/// <summary>
		/// The TensorBoard app settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TensorBoardAppSettings TensorBoardAppSettings { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DataCaptureConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableCapture { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 100)]
		public int InitialSamplingPercentage { get; set; }
		
		/// <summary>
		/// Max length: 512
		/// Pattern: ^(https|s3)://([^/])/?(.*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(512)]
		public string DestinationS3Uri { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string KmsKeyId { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 2
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2)]
		public CaptureOption[] CaptureOptions { get; set; }
		
		/// <summary>
		/// <p/>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CaptureContentTypeHeader CaptureContentTypeHeader { get; set; }
	}
	
	/// <summary>
	/// Container for configuring the source of human task requests.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class HumanLoopRequestSource
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HumanLoopRequestSourceAwsManagedHumanLoopRequestSource AwsManagedHumanLoopRequestSource { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum HumanLoopRequestSourceAwsManagedHumanLoopRequestSource
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS/Rekognition/DetectModerationLabels/Image/V3 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS/Textract/AnalyzeDocument/Forms/V1 = 1,
	}
	
	/// <summary>
	/// Provides information about how and under what conditions SageMaker creates a human loop. If <code>HumanLoopActivationConfig</code> is not given, then all requests go to humans.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class HumanLoopActivationConfig
	{
		
		/// <summary>
		/// Defines under what conditions SageMaker creates a human loop. Used within . See for the required format of activation conditions.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HumanLoopActivationConditionsConfig HumanLoopActivationConditionsConfig { get; set; }
	}
	
	/// <summary>
	/// Describes the work to be performed by human workers.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class HumanLoopConfig
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:workteam/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string WorkteamArn { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:human-task-ui/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string HumanTaskUiArn { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: ^[\t\n\r -\uD7FF\uE000-\uFFFD]*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string TaskTitle { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: .+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string TaskDescription { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 3
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 3)]
		public int TaskCount { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 864000
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 864000)]
		public System.Nullable<System.Int32> TaskAvailabilityLifetimeInSeconds { get; set; }
		
		/// <summary>
		/// Minimum: 30
		/// Maximum: 28800
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(30, 28800)]
		public System.Nullable<System.Int32> TaskTimeLimitInSeconds { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public FlowDefinitionTaskKeyword[] TaskKeywords { get; set; }
		
		/// <summary>
		/// <p>Defines the amount of money paid to an Amazon Mechanical Turk worker for each task performed. </p> <p>Use one of the following prices for bounding box tasks. Prices are in US dollars and should be based on the complexity of the task; the longer it takes in your initial testing, the more you should offer.</p> <ul> <li> <p>0.036</p> </li> <li> <p>0.048</p> </li> <li> <p>0.060</p> </li> <li> <p>0.072</p> </li> <li> <p>0.120</p> </li> <li> <p>0.240</p> </li> <li> <p>0.360</p> </li> <li> <p>0.480</p> </li> <li> <p>0.600</p> </li> <li> <p>0.720</p> </li> <li> <p>0.840</p> </li> <li> <p>0.960</p> </li> <li> <p>1.080</p> </li> <li> <p>1.200</p> </li> </ul> <p>Use one of the following prices for image classification, text classification, and custom tasks. Prices are in US dollars.</p> <ul> <li> <p>0.012</p> </li> <li> <p>0.024</p> </li> <li> <p>0.036</p> </li> <li> <p>0.048</p> </li> <li> <p>0.060</p> </li> <li> <p>0.072</p> </li> <li> <p>0.120</p> </li> <li> <p>0.240</p> </li> <li> <p>0.360</p> </li> <li> <p>0.480</p> </li> <li> <p>0.600</p> </li> <li> <p>0.720</p> </li> <li> <p>0.840</p> </li> <li> <p>0.960</p> </li> <li> <p>1.080</p> </li> <li> <p>1.200</p> </li> </ul> <p>Use one of the following prices for semantic segmentation tasks. Prices are in US dollars.</p> <ul> <li> <p>0.840</p> </li> <li> <p>0.960</p> </li> <li> <p>1.080</p> </li> <li> <p>1.200</p> </li> </ul> <p>Use one of the following prices for Textract AnalyzeDocument Important Form Key Amazon Augmented AI review tasks. Prices are in US dollars.</p> <ul> <li> <p>2.400 </p> </li> <li> <p>2.280 </p> </li> <li> <p>2.160 </p> </li> <li> <p>2.040 </p> </li> <li> <p>1.920 </p> </li> <li> <p>1.800 </p> </li> <li> <p>1.680 </p> </li> <li> <p>1.560 </p> </li> <li> <p>1.440 </p> </li> <li> <p>1.320 </p> </li> <li> <p>1.200 </p> </li> <li> <p>1.080 </p> </li> <li> <p>0.960 </p> </li> <li> <p>0.840 </p> </li> <li> <p>0.720 </p> </li> <li> <p>0.600 </p> </li> <li> <p>0.480 </p> </li> <li> <p>0.360 </p> </li> <li> <p>0.240 </p> </li> <li> <p>0.120 </p> </li> <li> <p>0.072 </p> </li> <li> <p>0.060 </p> </li> <li> <p>0.048 </p> </li> <li> <p>0.036 </p> </li> <li> <p>0.024 </p> </li> <li> <p>0.012 </p> </li> </ul> <p>Use one of the following prices for Rekognition DetectModerationLabels Amazon Augmented AI review tasks. Prices are in US dollars.</p> <ul> <li> <p>1.200 </p> </li> <li> <p>1.080 </p> </li> <li> <p>0.960 </p> </li> <li> <p>0.840 </p> </li> <li> <p>0.720 </p> </li> <li> <p>0.600 </p> </li> <li> <p>0.480 </p> </li> <li> <p>0.360 </p> </li> <li> <p>0.240 </p> </li> <li> <p>0.120 </p> </li> <li> <p>0.072 </p> </li> <li> <p>0.060 </p> </li> <li> <p>0.048 </p> </li> <li> <p>0.036 </p> </li> <li> <p>0.024 </p> </li> <li> <p>0.012 </p> </li> </ul> <p>Use one of the following prices for Amazon Augmented AI custom human review tasks. Prices are in US dollars.</p> <ul> <li> <p>1.200 </p> </li> <li> <p>1.080 </p> </li> <li> <p>0.960 </p> </li> <li> <p>0.840 </p> </li> <li> <p>0.720 </p> </li> <li> <p>0.600 </p> </li> <li> <p>0.480 </p> </li> <li> <p>0.360 </p> </li> <li> <p>0.240 </p> </li> <li> <p>0.120 </p> </li> <li> <p>0.072 </p> </li> <li> <p>0.060 </p> </li> <li> <p>0.048 </p> </li> <li> <p>0.036 </p> </li> <li> <p>0.024 </p> </li> <li> <p>0.012 </p> </li> </ul>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PublicWorkforceTaskPrice PublicWorkforceTaskPrice { get; set; }
	}
	
	/// <summary>
	/// Contains information about where human output will be stored.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FlowDefinitionOutputConfig
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string S3OutputPath { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string KmsKeyId { get; set; }
	}
	
	/// <summary>
	/// The Liquid template for the worker user interface.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UiTemplate
	{
		
		/// <summary>
		/// Max length: 128000
		/// Min length: 1
		/// Pattern: [\S\s]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128000, MinimumLength=1)]
		public string Content { get; set; }
	}
	
	/// <summary>
	/// Configures a hyperparameter tuning job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class HyperParameterTuningJobConfig
	{
		
		/// <summary>
		/// The strategy hyperparameter tuning uses to find the best combination of hyperparameters for your model. Currently, the only supported value is <code>Bayesian</code>.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HyperParameterTuningJobConfigStrategy Strategy { get; set; }
		
		/// <summary>
		/// Defines the objective metric for a hyperparameter tuning job. Hyperparameter tuning uses the value of this metric to evaluate the training jobs it launches, and returns the training job that results in either the highest or lowest value for this metric, depending on the value you specify for the <code>Type</code> parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public HyperParameterTuningJobObjective HyperParameterTuningJobObjective { get; set; }
		
		/// <summary>
		/// Specifies the maximum number of training jobs and parallel training jobs that a hyperparameter tuning job can launch.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ResourceLimits ResourceLimits { get; set; }
		
		/// <summary>
		/// <p>Specifies ranges of integer, continuous, and categorical hyperparameters that a hyperparameter tuning job searches. The hyperparameter tuning job launches training jobs with hyperparameter values within these ranges to find the combination of values that result in the training job with the best performance as measured by the objective metric of the hyperparameter tuning job.</p> <note> <p>You can specify a maximum of 20 hyperparameters that a hyperparameter tuning job can search over. Every possible value of a categorical parameter range counts against this limit.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ParameterRanges ParameterRanges { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HyperParameterTuningJobConfigTrainingJobEarlyStoppingType TrainingJobEarlyStoppingType { get; set; }
		
		/// <summary>
		/// The job completion criteria.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TuningJobCompletionCriteria TuningJobCompletionCriteria { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum HyperParameterTuningJobConfigStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bayesian = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Random = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum HyperParameterTuningJobConfigTrainingJobEarlyStoppingType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Off = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Auto = 1,
	}
	
	/// <summary>
	/// Defines the training jobs launched by a hyperparameter tuning job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class HyperParameterTrainingJobDefinition
	{
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string DefinitionName { get; set; }
		
		/// <summary>
		/// Defines the objective metric for a hyperparameter tuning job. Hyperparameter tuning uses the value of this metric to evaluate the training jobs it launches, and returns the training job that results in either the highest or lowest value for this metric, depending on the value you specify for the <code>Type</code> parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public HyperParameterTuningJobObjective TuningObjective { get; set; }
		
		/// <summary>
		/// <p>Specifies ranges of integer, continuous, and categorical hyperparameters that a hyperparameter tuning job searches. The hyperparameter tuning job launches training jobs with hyperparameter values within these ranges to find the combination of values that result in the training job with the best performance as measured by the objective metric of the hyperparameter tuning job.</p> <note> <p>You can specify a maximum of 20 hyperparameters that a hyperparameter tuning job can search over. Every possible value of a categorical parameter range counts against this limit.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ParameterRanges HyperParameterRanges { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HyperParameters StaticHyperParameters { get; set; }
		
		/// <summary>
		/// Specifies which training algorithm to use for training jobs that a hyperparameter tuning job launches and the metrics to monitor.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HyperParameterAlgorithmSpecification AlgorithmSpecification { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public Channel[] InputDataConfig { get; set; }
		
		/// <summary>
		/// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html">Protect Endpoints by Using an Amazon Virtual Private Cloud</a> and <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConfig VpcConfig { get; set; }
		
		/// <summary>
		/// Provides information about how to store model training results (model artifacts).
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OutputDataConfig OutputDataConfig { get; set; }
		
		/// <summary>
		/// Describes the resources, including ML compute instances and ML storage volumes, to use for model training. 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ResourceConfig ResourceConfig { get; set; }
		
		/// <summary>
		/// <p>Specifies a limit to how long a model training or compilation job can run. It also specifies how long you are willing to wait for a managed spot training job to complete. When the job reaches the time limit, Amazon SageMaker ends the training or compilation job. Use this API to cap model training costs.</p> <p>To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost. </p> <p>The training algorithms provided by Amazon SageMaker automatically save the intermediate results of a model training job when possible. This attempt to save artifacts is only a best effort case as model might not be in a state from which it can be saved. For example, if training has just started, the model might not be ready to save. When saved, this intermediate data is a valid model artifact. You can use it to create a model with <code>CreateModel</code>.</p> <note> <p>The Neural Topic Model (NTM) currently does not support saving intermediate model artifacts. When training NTMs, make sure that the maximum runtime is sufficient for the training job to complete.</p> </note>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StoppingCondition StoppingCondition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableNetworkIsolation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableInterContainerTrafficEncryption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableManagedSpotTraining { get; set; }
		
		/// <summary>
		/// Contains information about the output location for managed spot training checkpoint data. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CheckpointConfig CheckpointConfig { get; set; }
	}
	
	/// <summary>
	/// <p>Specifies the configuration for a hyperparameter tuning job that uses one or more previous hyperparameter tuning jobs as a starting point. The results of previous tuning jobs are used to inform which combinations of hyperparameters to search over in the new tuning job.</p> <p>All training jobs launched by the new hyperparameter tuning job are evaluated by using the objective metric, and the training job that performs the best is compared to the best training jobs from the parent tuning jobs. From these, the training job that performs the best as measured by the objective metric is returned as the overall best training job.</p> <note> <p>All training jobs launched by parent hyperparameter tuning jobs and the new hyperparameter tuning jobs count against the limit of training jobs for the tuning job.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class HyperParameterTuningJobWarmStartConfig
	{
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 5
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public ParentHyperParameterTuningJob[] ParentHyperParameterTuningJobs { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HyperParameterTuningJobWarmStartConfigWarmStartType WarmStartType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum HyperParameterTuningJobWarmStartConfigWarmStartType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IdenticalDataAndAlgorithm = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TransferLearning = 1,
	}
	
	/// <summary>
	/// Input configuration information for a labeling job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class LabelingJobInputConfig
	{
		
		/// <summary>
		/// Provides information about the location of input data.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LabelingJobDataSource DataSource { get; set; }
		
		/// <summary>
		/// Attributes of the data specified by the customer. Use these to describe the data to be labeled.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LabelingJobDataAttributes DataAttributes { get; set; }
	}
	
	/// <summary>
	/// Output configuration information for a labeling job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class LabelingJobOutputConfig
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string S3OutputPath { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string KmsKeyId { get; set; }
	}
	
	/// <summary>
	/// <p>A set of conditions for stopping a labeling job. If any of the conditions are met, the job is automatically stopped. You can use these conditions to control the cost of data labeling.</p> <note> <p>Labeling jobs fail after 30 days with an appropriate client error message.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class LabelingJobStoppingConditions
	{
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> MaxHumanLabeledObjectCount { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxPercentageOfInputDatasetLabeled { get; set; }
	}
	
	/// <summary>
	/// Provides configuration information for auto-labeling of your data objects. A <code>LabelingJobAlgorithmsConfig</code> object must be supplied in order to use auto-labeling.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class LabelingJobAlgorithmsConfig
	{
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string LabelingJobAlgorithmSpecificationArn { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:model/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string InitialActiveLearningModelArn { get; set; }
		
		/// <summary>
		/// Provides configuration information for labeling jobs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LabelingJobResourceConfig LabelingJobResourceConfig { get; set; }
	}
	
	/// <summary>
	/// Information required for human workers to complete a labeling task.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class HumanTaskConfig
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:workteam/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string WorkteamArn { get; set; }
		
		/// <summary>
		/// Provided configuration information for the worker UI for a labeling job. 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UiConfig UiConfig { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: arn:aws[a-z\-]*:lambda:[a-z]{2}-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_\.]+(:(\$LATEST|[a-zA-Z0-9-_]+))?
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string PreHumanTaskLambdaArn { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public TaskKeyword[] TaskKeywords { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: ^[\t\n\r -\uD7FF\uE000-\uFFFD]*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string TaskTitle { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: .+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string TaskDescription { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 9
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 9)]
		public int NumberOfHumanWorkersPerDataObject { get; set; }
		
		/// <summary>
		/// Minimum: 30
		/// Maximum: 604800
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(30, 604800)]
		public int TaskTimeLimitInSeconds { get; set; }
		
		/// <summary>
		/// Minimum: 60
		/// Maximum: 864000
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(60, 864000)]
		public System.Nullable<System.Int32> TaskAvailabilityLifetimeInSeconds { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 1000
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 1000)]
		public System.Nullable<System.Int32> MaxConcurrentTaskCount { get; set; }
		
		/// <summary>
		/// Configures how labels are consolidated across human workers.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AnnotationConsolidationConfig AnnotationConsolidationConfig { get; set; }
		
		/// <summary>
		/// <p>Defines the amount of money paid to an Amazon Mechanical Turk worker for each task performed. </p> <p>Use one of the following prices for bounding box tasks. Prices are in US dollars and should be based on the complexity of the task; the longer it takes in your initial testing, the more you should offer.</p> <ul> <li> <p>0.036</p> </li> <li> <p>0.048</p> </li> <li> <p>0.060</p> </li> <li> <p>0.072</p> </li> <li> <p>0.120</p> </li> <li> <p>0.240</p> </li> <li> <p>0.360</p> </li> <li> <p>0.480</p> </li> <li> <p>0.600</p> </li> <li> <p>0.720</p> </li> <li> <p>0.840</p> </li> <li> <p>0.960</p> </li> <li> <p>1.080</p> </li> <li> <p>1.200</p> </li> </ul> <p>Use one of the following prices for image classification, text classification, and custom tasks. Prices are in US dollars.</p> <ul> <li> <p>0.012</p> </li> <li> <p>0.024</p> </li> <li> <p>0.036</p> </li> <li> <p>0.048</p> </li> <li> <p>0.060</p> </li> <li> <p>0.072</p> </li> <li> <p>0.120</p> </li> <li> <p>0.240</p> </li> <li> <p>0.360</p> </li> <li> <p>0.480</p> </li> <li> <p>0.600</p> </li> <li> <p>0.720</p> </li> <li> <p>0.840</p> </li> <li> <p>0.960</p> </li> <li> <p>1.080</p> </li> <li> <p>1.200</p> </li> </ul> <p>Use one of the following prices for semantic segmentation tasks. Prices are in US dollars.</p> <ul> <li> <p>0.840</p> </li> <li> <p>0.960</p> </li> <li> <p>1.080</p> </li> <li> <p>1.200</p> </li> </ul> <p>Use one of the following prices for Textract AnalyzeDocument Important Form Key Amazon Augmented AI review tasks. Prices are in US dollars.</p> <ul> <li> <p>2.400 </p> </li> <li> <p>2.280 </p> </li> <li> <p>2.160 </p> </li> <li> <p>2.040 </p> </li> <li> <p>1.920 </p> </li> <li> <p>1.800 </p> </li> <li> <p>1.680 </p> </li> <li> <p>1.560 </p> </li> <li> <p>1.440 </p> </li> <li> <p>1.320 </p> </li> <li> <p>1.200 </p> </li> <li> <p>1.080 </p> </li> <li> <p>0.960 </p> </li> <li> <p>0.840 </p> </li> <li> <p>0.720 </p> </li> <li> <p>0.600 </p> </li> <li> <p>0.480 </p> </li> <li> <p>0.360 </p> </li> <li> <p>0.240 </p> </li> <li> <p>0.120 </p> </li> <li> <p>0.072 </p> </li> <li> <p>0.060 </p> </li> <li> <p>0.048 </p> </li> <li> <p>0.036 </p> </li> <li> <p>0.024 </p> </li> <li> <p>0.012 </p> </li> </ul> <p>Use one of the following prices for Rekognition DetectModerationLabels Amazon Augmented AI review tasks. Prices are in US dollars.</p> <ul> <li> <p>1.200 </p> </li> <li> <p>1.080 </p> </li> <li> <p>0.960 </p> </li> <li> <p>0.840 </p> </li> <li> <p>0.720 </p> </li> <li> <p>0.600 </p> </li> <li> <p>0.480 </p> </li> <li> <p>0.360 </p> </li> <li> <p>0.240 </p> </li> <li> <p>0.120 </p> </li> <li> <p>0.072 </p> </li> <li> <p>0.060 </p> </li> <li> <p>0.048 </p> </li> <li> <p>0.036 </p> </li> <li> <p>0.024 </p> </li> <li> <p>0.012 </p> </li> </ul> <p>Use one of the following prices for Amazon Augmented AI custom human review tasks. Prices are in US dollars.</p> <ul> <li> <p>1.200 </p> </li> <li> <p>1.080 </p> </li> <li> <p>0.960 </p> </li> <li> <p>0.840 </p> </li> <li> <p>0.720 </p> </li> <li> <p>0.600 </p> </li> <li> <p>0.480 </p> </li> <li> <p>0.360 </p> </li> <li> <p>0.240 </p> </li> <li> <p>0.120 </p> </li> <li> <p>0.072 </p> </li> <li> <p>0.060 </p> </li> <li> <p>0.048 </p> </li> <li> <p>0.036 </p> </li> <li> <p>0.024 </p> </li> <li> <p>0.012 </p> </li> </ul>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PublicWorkforceTaskPrice PublicWorkforceTaskPrice { get; set; }
	}
	
	/// <summary>
	/// Specifies batch transform jobs that Amazon SageMaker runs to validate your model package.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModelPackageValidationSpecification
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string ValidationRole { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public ModelPackageValidationProfile[] ValidationProfiles { get; set; }
	}
	
	/// <summary>
	/// A list of algorithms that were used to create a model package.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SourceAlgorithmSpecification
	{
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public SourceAlgorithm[] SourceAlgorithms { get; set; }
	}
	
	/// <summary>
	/// Configures the monitoring schedule and defines the monitoring job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class MonitoringScheduleConfig
	{
		
		/// <summary>
		/// Configuration details about the monitoring schedule.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ScheduleConfig ScheduleConfig { get; set; }
		
		/// <summary>
		/// Defines the monitoring job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MonitoringJobDefinition MonitoringJobDefinition { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum InstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t2.medium = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t2.large = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t2.xlarge = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t2.2xlarge = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.medium = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.large = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.xlarge = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.2xlarge = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.xlarge = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.2xlarge = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.4xlarge = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.10xlarge = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.16xlarge = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.xlarge = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.2xlarge = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.4xlarge = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.12xlarge = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.24xlarge = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.xlarge = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.2xlarge = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.4xlarge = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.8xlarge = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.xlarge = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.2xlarge = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.4xlarge = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.9xlarge = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.18xlarge = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.xlarge = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.2xlarge = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.4xlarge = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.9xlarge = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.18xlarge = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.xlarge = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.8xlarge = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.16xlarge = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.2xlarge = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.8xlarge = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.16xlarge = 37,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DirectInternetAccess
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Enabled = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Disabled = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RootAccess
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Enabled = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Disabled = 1,
	}
	
	/// <summary>
	/// The output configuration for the processing job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ProcessingOutputConfig
	{
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 10
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public ProcessingOutput[] Outputs { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string KmsKeyId { get; set; }
	}
	
	/// <summary>
	/// Identifies the resources, ML compute instances, and ML storage volumes to deploy for a processing job. In distributed training, you specify more than one instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ProcessingResources
	{
		
		/// <summary>
		/// Configuration for the cluster used to run a processing job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ProcessingClusterConfig ClusterConfig { get; set; }
	}
	
	/// <summary>
	/// Specifies a time limit for how long the processing job is allowed to run.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ProcessingStoppingCondition
	{
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 604800
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 604800)]
		public int MaxRuntimeInSeconds { get; set; }
	}
	
	/// <summary>
	/// Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class NetworkConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableInterContainerTrafficEncryption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableNetworkIsolation { get; set; }
		
		/// <summary>
		/// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html">Protect Endpoints by Using an Amazon Virtual Private Cloud</a> and <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConfig VpcConfig { get; set; }
	}
	
	/// <summary>
	/// Configuration for the experiment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ExperimentConfig
	{
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string ExperimentName { get; set; }
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string TrialName { get; set; }
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string TrialComponentDisplayName { get; set; }
	}
	
	/// <summary>
	/// Provides information about how to store model training results (model artifacts).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class OutputDataConfig
	{
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string KmsKeyId { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string S3OutputPath { get; set; }
	}
	
	/// <summary>
	/// Describes the resources, including ML compute instances and ML storage volumes, to use for model training. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ResourceConfig
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ResourceConfigInstanceType InstanceType { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int InstanceCount { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int VolumeSizeInGB { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string VolumeKmsKeyId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ResourceConfigInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.xlarge = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.2xlarge = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.4xlarge = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.10xlarge = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.16xlarge = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.xlarge = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.2xlarge = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.4xlarge = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.8xlarge = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.12xlarge = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.16xlarge = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.large = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.xlarge = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.2xlarge = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.4xlarge = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.12xlarge = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.24xlarge = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.xlarge = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.2xlarge = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.4xlarge = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.8xlarge = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.xlarge = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.8xlarge = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.16xlarge = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.2xlarge = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.8xlarge = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.16xlarge = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3dn.24xlarge = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.xlarge = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.2xlarge = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.4xlarge = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.9xlarge = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.18xlarge = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5n.xlarge = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5n.2xlarge = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5n.4xlarge = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5n.9xlarge = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5n.18xlarge = 37,
	}
	
	/// <summary>
	/// Configuration information for the debug hook parameters, collection configuration, and storage paths.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DebugHookConfig
	{
		
		/// <summary>
		/// Max length: 4096
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(4096)]
		public string LocalPath { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string S3OutputPath { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HookParameters HookParameters { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public CollectionConfiguration[] CollectionConfigurations { get; set; }
	}
	
	/// <summary>
	/// Configuration of storage locations for TensorBoard output.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TensorBoardOutputConfig
	{
		
		/// <summary>
		/// Max length: 4096
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(4096)]
		public string LocalPath { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string S3OutputPath { get; set; }
	}
	
	/// <summary>
	/// Describes the input source of a transform job and the way the transform job consumes it.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TransformInput
	{
		
		/// <summary>
		/// Describes the location of the channel data.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TransformDataSource DataSource { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string ContentType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TransformInputCompressionType CompressionType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TransformInputSplitType SplitType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TransformInputCompressionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Gzip = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TransformInputSplitType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Line = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecordIO = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TFRecord = 3,
	}
	
	/// <summary>
	/// Describes the results of a transform job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TransformOutput
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string S3OutputPath { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string Accept { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TransformOutputAssembleWith AssembleWith { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string KmsKeyId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TransformOutputAssembleWith
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Line = 1,
	}
	
	/// <summary>
	/// Describes the resources, including ML instance types and ML instance count, to use for transform job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TransformResources
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TransformResourcesInstanceType InstanceType { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int InstanceCount { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string VolumeKmsKeyId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TransformResourcesInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.xlarge = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.2xlarge = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.4xlarge = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.10xlarge = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.16xlarge = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.xlarge = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.2xlarge = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.4xlarge = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.8xlarge = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.xlarge = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.8xlarge = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.16xlarge = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.2xlarge = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.8xlarge = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.16xlarge = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.xlarge = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.2xlarge = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.4xlarge = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.9xlarge = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.18xlarge = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.large = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.xlarge = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.2xlarge = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.4xlarge = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.12xlarge = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.24xlarge = 25,
	}
	
	/// <summary>
	/// The data structure used to specify the data to be used for inference in a batch transform job and to associate the data that is relevant to the prediction results in the output. The input filter provided allows you to exclude input data that is not needed for inference in a batch transform job. The output filter provided allows you to include input data relevant to interpreting the predictions in the output from the job. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform-data-processing.html">Associate Prediction Results with their Corresponding Input Records</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DataProcessing
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=0)]
		public string InputFilter { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=0)]
		public string OutputFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataProcessingJoinSource JoinSource { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DataProcessingJoinSource
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Input = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 1,
	}
	
	/// <summary>
	/// The status of the trial component.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TrialComponentStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentStatusPrimaryStatus PrimaryStatus { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TrialComponentStatusPrimaryStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 4,
	}
	
	/// <summary>
	/// Configures SNS notifications of available or expiring work items for work teams.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class NotificationConfiguration
	{
		
		/// <summary>
		/// Pattern: arn:aws[a-z\-]*:sns:[a-z0-9\-]*:[0-9]{12}:[a-zA-Z0-9_.-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NotificationTopicArn { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DataCaptureConfigSummary
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool EnableCapture { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataCaptureConfigSummaryCaptureStatus CaptureStatus { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 100)]
		public int CurrentSamplingPercentage { get; set; }
		
		/// <summary>
		/// Max length: 512
		/// Pattern: ^(https|s3)://([^/])/?(.*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(512)]
		public string DestinationS3Uri { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string KmsKeyId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DataCaptureConfigSummaryCaptureStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Started = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum JoinSource
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Input = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 1,
	}
	
	/// <summary>
	/// Describes the S3 data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3DataSource
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public S3DataSourceS3DataType S3DataType { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string S3Uri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3DataSourceS3DataDistributionType S3DataDistributionType { get; set; }
		
		/// <summary>
		/// Maximum items: 16
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(16)]
		public AttributeName[] AttributeNames { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum S3DataSourceS3DataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ManifestFile = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3Prefix = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AugmentedManifestFile = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum S3DataSourceS3DataDistributionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FullyReplicated = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ShardedByS3Key = 1,
	}
	
	/// <summary>
	/// Specifies a file system data source for a channel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FileSystemDataSource
	{
		
		/// <summary>
		/// Min length: 11
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=11)]
		public string FileSystemId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FileSystemDataSourceFileSystemAccessMode FileSystemAccessMode { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FileSystemDataSourceFileSystemType FileSystemType { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(4096)]
		public string DirectoryPath { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FileSystemDataSourceFileSystemAccessMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rw = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ro = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FileSystemDataSourceFileSystemType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EFS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FSxLustre = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ProcessingInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.medium = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.large = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.xlarge = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.2xlarge = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.xlarge = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.2xlarge = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.4xlarge = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.10xlarge = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.16xlarge = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.xlarge = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.2xlarge = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.4xlarge = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.8xlarge = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.xlarge = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.8xlarge = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.16xlarge = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.2xlarge = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.8xlarge = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.16xlarge = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.xlarge = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.2xlarge = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.4xlarge = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.9xlarge = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.18xlarge = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.large = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.xlarge = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.2xlarge = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.4xlarge = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.12xlarge = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.24xlarge = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.large = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.xlarge = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.2xlarge = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.4xlarge = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.8xlarge = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.12xlarge = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.16xlarge = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.24xlarge = 37,
	}
	
	/// <summary>
	/// Configuration information for debugging rules.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DebugRuleConfiguration
	{
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string RuleConfigurationName { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(4096)]
		public string LocalPath { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string S3OutputPath { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255)]
		public string RuleEvaluatorImage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DebugRuleConfigurationInstanceType InstanceType { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> VolumeSizeInGB { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RuleParameters RuleParameters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DebugRuleConfigurationInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.medium = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.large = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.xlarge = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.2xlarge = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.xlarge = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.2xlarge = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.4xlarge = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.10xlarge = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.16xlarge = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.xlarge = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.2xlarge = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.4xlarge = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.8xlarge = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.xlarge = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.8xlarge = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.16xlarge = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.2xlarge = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.8xlarge = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.16xlarge = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.xlarge = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.2xlarge = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.4xlarge = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.9xlarge = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.18xlarge = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.large = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.xlarge = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.2xlarge = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.4xlarge = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.12xlarge = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.24xlarge = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.large = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.xlarge = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.2xlarge = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.4xlarge = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.8xlarge = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.12xlarge = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.16xlarge = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.24xlarge = 37,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RuleEvaluationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NoIssuesFound = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IssuesFound = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Error = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 5,
	}
	
	/// <summary>
	/// Information about the status of the rule evaluation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DebugRuleEvaluationStatus
	{
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string RuleConfigurationName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:processing-job/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string RuleEvaluationJobArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DebugRuleEvaluationStatusRuleEvaluationStatus RuleEvaluationStatus { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string StatusDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DebugRuleEvaluationStatusRuleEvaluationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NoIssuesFound = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IssuesFound = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Error = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 5,
	}
	
	/// <summary>
	/// The retention policy for data stored on an Amazon Elastic File System (EFS) volume.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RetentionPolicy
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RetentionPolicyHomeEfsFileSystem HomeEfsFileSystem { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RetentionPolicyHomeEfsFileSystem
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Retain = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Delete = 1,
	}
	
	/// <summary>
	/// <p>Gets the Amazon EC2 Container Registry path of the docker image of the model that is hosted in this <a>ProductionVariant</a>.</p> <p>If you used the <code>registry/repository[:tag]</code> form to specify the image path of the primary container when you created the model hosted in this <code>ProductionVariant</code>, the path resolves to a path of the form <code>registry/repository[@digest]</code>. A digest is a hash value that identifies a specific version of an image. For information about Amazon ECR paths, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/docker-pull-ecr-image.html">Pulling an Image</a> in the <i>Amazon ECR User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeployedImage
	{
		
		/// <summary>
		/// Max length: 255
		/// Pattern: [\S]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255)]
		public string SpecifiedImage { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Pattern: [\S]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255)]
		public string ResolvedImage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ResolutionTime { get; set; }
	}
	
	/// <summary>
	/// The resolved attributes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ResolvedAttributes
	{
		
		/// <summary>
		/// Applies a metric to minimize or maximize for the job's objective.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AutoMLJobObjective AutoMLJobObjective { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResolvedAttributesProblemType ProblemType { get; set; }
		
		/// <summary>
		/// How long a job is allowed to run, or how many candidates a job is allowed to generate.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AutoMLJobCompletionCriteria CompletionCriteria { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ResolvedAttributesProblemType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BinaryClassification = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MulticlassClassification = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Regression = 2,
	}
	
	/// <summary>
	/// <p>Provides information about the location that is configured for storing model artifacts. </p> <p>Model artifacts are the output that results from training a model, and typically consist of trained parameters, a model defintion that desribes how to compute inferences, and other metadata.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModelArtifacts
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string S3ModelArtifacts { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DomainStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InService = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EndpointStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OutOfService = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Creating = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Updating = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SystemUpdating = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RollingBack = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InService = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 7,
	}
	
	/// <summary>
	/// The source of the experiment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ExperimentSource
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string SourceArn { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128)]
		public string SourceType { get; set; }
	}
	
	/// <summary>
	/// Information about the user who created or modified an experiment, trial, or trial component.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UserContext
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string UserProfileArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UserProfileName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FlowDefinitionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Initializing = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 3,
	}
	
	/// <summary>
	/// Container for user interface template information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UiTemplateInfo
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string Url { get; set; }
		
		/// <summary>
		/// Max length: 128000
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128000, MinimumLength=1)]
		public string ContentSha256 { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum HyperParameterTuningJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 4,
	}
	
	/// <summary>
	/// The numbers of training jobs launched by a hyperparameter tuning job, categorized by status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TrainingJobStatusCounters
	{
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Completed { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> InProgress { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> RetryableError { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> NonRetryableError { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Stopped { get; set; }
	}
	
	/// <summary>
	/// Specifies the number of training jobs that this hyperparameter tuning job launched, categorized by the status of their objective metric. The objective metric status shows whether the final objective metric for the training job has been evaluated by the tuning job and used in the hyperparameter tuning process.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ObjectiveStatusCounters
	{
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Succeeded { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Pending { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Failed { get; set; }
	}
	
	/// <summary>
	/// Specifies summary information about a training job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class HyperParameterTrainingJobSummary
	{
		
		/// <summary>
		/// Max length: 64
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength=1)]
		public string TrainingJobDefinitionName { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string TrainingJobName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:training-job/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TrainingJobArn { get; set; }
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string TuningJobName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> TrainingStartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> TrainingEndTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HyperParameterTrainingJobSummaryTrainingJobStatus TrainingJobStatus { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HyperParameters TunedHyperParameters { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string FailureReason { get; set; }
		
		/// <summary>
		/// Shows the final value for the objective metric for a training job that was launched by a hyperparameter tuning job. You define the objective metric in the <code>HyperParameterTuningJobObjective</code> parameter of <a>HyperParameterTuningJobConfig</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FinalHyperParameterTuningJobObjectiveMetric FinalHyperParameterTuningJobObjectiveMetric { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HyperParameterTrainingJobSummaryObjectiveStatus ObjectiveStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum HyperParameterTrainingJobSummaryTrainingJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum HyperParameterTrainingJobSummaryObjectiveStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum LabelingJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 4,
	}
	
	/// <summary>
	/// Provides a breakdown of the number of objects labeled.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class LabelCounters
	{
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> TotalLabeled { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> HumanLabeled { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> MachineLabeled { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> FailedNonRetryableError { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Unlabeled { get; set; }
	}
	
	/// <summary>
	/// Specifies the location of the output produced by the labeling job. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class LabelingJobOutput
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string OutputDatasetS3Uri { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:model/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string FinalActiveLearningModelArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ModelPackageStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 4,
	}
	
	/// <summary>
	/// Specifies the validation and image scan statuses of the model package.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModelPackageStatusDetails
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ModelPackageStatusItem[] ValidationStatuses { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ModelPackageStatusItem[] ImageScanStatuses { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ScheduleStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Scheduled = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 3,
	}
	
	/// <summary>
	/// Summary of information about the last monitoring job to run.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class MonitoringExecutionSummary
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string MonitoringScheduleName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ScheduledTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MonitoringExecutionSummaryMonitoringExecutionStatus MonitoringExecutionStatus { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:processing-job/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string ProcessingJobArn { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string EndpointName { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string FailureReason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MonitoringExecutionSummaryMonitoringExecutionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CompletedWithViolations = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum NotebookInstanceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InService = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Updating = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ProcessingJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 4,
	}
	
	/// <summary>
	/// Describes a work team of a vendor that does the a labelling job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SubscribedWorkteam
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:workteam/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string WorkteamArn { get; set; }
		
		/// <summary>
		/// Max length: 200
		/// Min length: 1
		/// Pattern: .+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(200, MinimumLength=1)]
		public string MarketplaceTitle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SellerName { get; set; }
		
		/// <summary>
		/// Max length: 200
		/// Min length: 1
		/// Pattern: .+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(200, MinimumLength=1)]
		public string MarketplaceDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ListingId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TrainingJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SecondaryStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Starting = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LaunchingMLInstances = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PreparingTrainingStack = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Downloading = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DownloadingTrainingImage = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Training = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Uploading = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MaxRuntimeExceeded = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Interrupted = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MaxWaitTimeExceeded = 13,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TransformJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 4,
	}
	
	/// <summary>
	/// The Amazon Resource Name (ARN) and job type of the source of a trial component.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TrialComponentSource
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string SourceArn { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128)]
		public string SourceType { get; set; }
	}
	
	/// <summary>
	/// The source of the trial.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TrialSource
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string SourceArn { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128)]
		public string SourceType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UserProfileStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InService = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 3,
	}
	
	/// <summary>
	/// A single private workforce, which is automatically created when you create your first private work team. You can create one private work force in each AWS Region. By default, any workforce-related API operation used in a specific region will apply to the workforce created in that region. To learn how to create a private workforce, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-workforce-create-private.html">Create a Private Workforce</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Workforce
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9]([a-zA-Z0-9\-])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string WorkforceName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:workforce/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string WorkforceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdatedDate { get; set; }
		
		/// <summary>
		/// A list of IP address ranges (<a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">CIDRs</a>). Used to create an allow list of IP addresses for a private workforce. For more information, see .
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SourceIpConfig SourceIpConfig { get; set; }
	}
	
	/// <summary>
	/// Provides details about a labeling work team.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Workteam
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string WorkteamName { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 10
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public MemberDefinition[] MemberDefinitions { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:workteam/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string WorkteamArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public String[] ProductListingIds { get; set; }
		
		/// <summary>
		/// Max length: 200
		/// Min length: 1
		/// Pattern: .+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(200, MinimumLength=1)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SubDomain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreateDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdatedDate { get; set; }
		
		/// <summary>
		/// Configures SNS notifications of available or expiring work items for work teams.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public NotificationConfiguration NotificationConfiguration { get; set; }
	}
	
	/// <summary>
	/// Specifies weight and capacity values for a production variant.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DesiredWeightAndCapacity
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string VariantName { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Single.MaxValue)]
		public System.Nullable<System.Single> DesiredWeight { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> DesiredInstanceCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DetailedModelPackageStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotStarted = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
	}
	
	/// <summary>
	/// The domain's details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DomainDetails
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:domain/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string DomainArn { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string DomainId { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainDetailsStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DomainDetailsStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InService = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EndpointConfigSortKey
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
	}
	
	/// <summary>
	/// Provides summary information for an endpoint configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EndpointConfigSummary
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string EndpointConfigName { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:endpoint-config/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string EndpointConfigArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ProcessingS3InputMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pipe = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		File = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ProcessingS3DataDistributionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FullyReplicated = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ShardedByS3Key = 1,
	}
	
	/// <summary>
	/// Input object for the endpoint
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EndpointInput
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string EndpointName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string LocalPath { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EndpointInputS3InputMode S3InputMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EndpointInputS3DataDistributionType S3DataDistributionType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EndpointInputS3InputMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pipe = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		File = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EndpointInputS3DataDistributionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FullyReplicated = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ShardedByS3Key = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EndpointSortKey
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Status = 2,
	}
	
	/// <summary>
	/// Provides summary information for an endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EndpointSummary
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string EndpointName { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:endpoint/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string EndpointArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EndpointSummaryEndpointStatus EndpointStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum EndpointSummaryEndpointStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OutOfService = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Creating = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Updating = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SystemUpdating = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RollingBack = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InService = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 7,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ExecutionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CompletedWithViolations = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 6,
	}
	
	/// <summary>
	/// The properties of an experiment as returned by the <a>Search</a> API.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Experiment
	{
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string ExperimentName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string ExperimentArn { get; set; }
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The source of the experiment.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ExperimentSource Source { get; set; }
		
		/// <summary>
		/// Max length: 3072
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(3072)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		/// <summary>
		/// Information about the user who created or modified an experiment, trial, or trial component.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UserContext CreatedBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
		
		/// <summary>
		/// Information about the user who created or modified an experiment, trial, or trial component.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UserContext LastModifiedBy { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
	}
	
	/// <summary>
	/// A summary of the properties of an experiment. To get the complete set of properties, call the <a>DescribeExperiment</a> API and provide the <code>ExperimentName</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ExperimentSummary
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string ExperimentArn { get; set; }
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string ExperimentName { get; set; }
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The source of the experiment.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ExperimentSource ExperimentSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FileSystemAccessMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rw = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ro = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FileSystemType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EFS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FSxLustre = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum Operator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Equals = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotEquals = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GreaterThan = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GreaterThanOrEqualTo = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LessThan = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LessThanOrEqualTo = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Contains = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Exists = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotExists = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		In = 9,
	}
	
	/// <summary>
	/// <p>A conditional statement for a search expression that includes a resource property, a Boolean operator, and a value. Resources that match the statement are returned in the results from the <a>Search</a> API.</p> <p>If you specify a <code>Value</code>, but not an <code>Operator</code>, Amazon SageMaker uses the equals operator.</p> <p>In search, there are several property types:</p> <dl> <dt>Metrics</dt> <dd> <p>To define a metric filter, enter a value using the form <code>"Metrics.&lt;name&gt;"</code>, where <code>&lt;name&gt;</code> is a metric name. For example, the following filter searches for training jobs with an <code>"accuracy"</code> metric greater than <code>"0.9"</code>:</p> <p> <code>{</code> </p> <p> <code>"Name": "Metrics.accuracy",</code> </p> <p> <code>"Operator": "GreaterThan",</code> </p> <p> <code>"Value": "0.9"</code> </p> <p> <code>}</code> </p> </dd> <dt>HyperParameters</dt> <dd> <p>To define a hyperparameter filter, enter a value with the form <code>"HyperParameters.&lt;name&gt;"</code>. Decimal hyperparameter values are treated as a decimal in a comparison if the specified <code>Value</code> is also a decimal value. If the specified <code>Value</code> is an integer, the decimal hyperparameter values are treated as integers. For example, the following filter is satisfied by training jobs with a <code>"learning_rate"</code> hyperparameter that is less than <code>"0.5"</code>:</p> <p> <code> {</code> </p> <p> <code> "Name": "HyperParameters.learning_rate",</code> </p> <p> <code> "Operator": "LessThan",</code> </p> <p> <code> "Value": "0.5"</code> </p> <p> <code> }</code> </p> </dd> <dt>Tags</dt> <dd> <p>To define a tag filter, enter a value with the form <code>Tags.&lt;key&gt;</code>.</p> </dd> </dl>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Filter
	{
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: .+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterOperator Operator { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// Pattern: .+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FilterOperator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Equals = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotEquals = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GreaterThan = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GreaterThanOrEqualTo = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LessThan = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LessThanOrEqualTo = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Contains = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Exists = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotExists = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		In = 9,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum HyperParameterTuningJobObjectiveType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Maximize = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Minimize = 1,
	}
	
	/// <summary>
	/// Shows the final value for the objective metric for a training job that was launched by a hyperparameter tuning job. You define the objective metric in the <code>HyperParameterTuningJobObjective</code> parameter of <a>HyperParameterTuningJobConfig</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FinalHyperParameterTuningJobObjectiveMetric
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FinalHyperParameterTuningJobObjectiveMetricType Type { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: .+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string MetricName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public float Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FinalHyperParameterTuningJobObjectiveMetricType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Maximize = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Minimize = 1,
	}
	
	/// <summary>
	/// The name, value, and date and time of a metric that was emitted to Amazon CloudWatch.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class MetricData
	{
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: .+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string MetricName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Single> Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> Timestamp { get; set; }
	}
	
	/// <summary>
	/// Contains summary information about the flow definition.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FlowDefinitionSummary
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-z0-9](-*[a-z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string FlowDefinitionName { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:flow-definition/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string FlowDefinitionArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FlowDefinitionSummaryFlowDefinitionStatus FlowDefinitionStatus { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string FailureReason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum FlowDefinitionSummaryFlowDefinitionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Initializing = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum Framework
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TENSORFLOW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KERAS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MXNET = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONNX = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PYTORCH = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XGBOOST = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TFLITE = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ResourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TrainingJob = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Experiment = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExperimentTrial = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExperimentTrialComponent = 3,
	}
	
	/// <summary>
	/// Specified in the <a>GetSearchSuggestions</a> request. Limits the property names that are included in the response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SuggestionQuery
	{
		
		/// <summary>
		/// Part of the <code>SuggestionQuery</code> type. Specifies a hint for retrieving property names that begin with the specified text.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PropertyNameQuery PropertyNameQuery { get; set; }
	}
	
	/// <summary>
	/// Specifies configuration details for a Git repository when the repository is updated.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class GitConfigForUpdate
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:aws[a-z\-]*:secretsmanager:[a-z0-9\-]*:[0-9]{12}:secret:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string SecretArn { get; set; }
	}
	
	/// <summary>
	/// Defines under what conditions SageMaker creates a human loop. Used within . See for the required format of activation conditions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class HumanLoopActivationConditionsConfig
	{
		
		/// <summary>
		/// Max length: 10240
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(10240)]
		public string HumanLoopActivationConditions { get; set; }
	}
	
	/// <summary>
	/// <p>Defines the amount of money paid to an Amazon Mechanical Turk worker for each task performed. </p> <p>Use one of the following prices for bounding box tasks. Prices are in US dollars and should be based on the complexity of the task; the longer it takes in your initial testing, the more you should offer.</p> <ul> <li> <p>0.036</p> </li> <li> <p>0.048</p> </li> <li> <p>0.060</p> </li> <li> <p>0.072</p> </li> <li> <p>0.120</p> </li> <li> <p>0.240</p> </li> <li> <p>0.360</p> </li> <li> <p>0.480</p> </li> <li> <p>0.600</p> </li> <li> <p>0.720</p> </li> <li> <p>0.840</p> </li> <li> <p>0.960</p> </li> <li> <p>1.080</p> </li> <li> <p>1.200</p> </li> </ul> <p>Use one of the following prices for image classification, text classification, and custom tasks. Prices are in US dollars.</p> <ul> <li> <p>0.012</p> </li> <li> <p>0.024</p> </li> <li> <p>0.036</p> </li> <li> <p>0.048</p> </li> <li> <p>0.060</p> </li> <li> <p>0.072</p> </li> <li> <p>0.120</p> </li> <li> <p>0.240</p> </li> <li> <p>0.360</p> </li> <li> <p>0.480</p> </li> <li> <p>0.600</p> </li> <li> <p>0.720</p> </li> <li> <p>0.840</p> </li> <li> <p>0.960</p> </li> <li> <p>1.080</p> </li> <li> <p>1.200</p> </li> </ul> <p>Use one of the following prices for semantic segmentation tasks. Prices are in US dollars.</p> <ul> <li> <p>0.840</p> </li> <li> <p>0.960</p> </li> <li> <p>1.080</p> </li> <li> <p>1.200</p> </li> </ul> <p>Use one of the following prices for Textract AnalyzeDocument Important Form Key Amazon Augmented AI review tasks. Prices are in US dollars.</p> <ul> <li> <p>2.400 </p> </li> <li> <p>2.280 </p> </li> <li> <p>2.160 </p> </li> <li> <p>2.040 </p> </li> <li> <p>1.920 </p> </li> <li> <p>1.800 </p> </li> <li> <p>1.680 </p> </li> <li> <p>1.560 </p> </li> <li> <p>1.440 </p> </li> <li> <p>1.320 </p> </li> <li> <p>1.200 </p> </li> <li> <p>1.080 </p> </li> <li> <p>0.960 </p> </li> <li> <p>0.840 </p> </li> <li> <p>0.720 </p> </li> <li> <p>0.600 </p> </li> <li> <p>0.480 </p> </li> <li> <p>0.360 </p> </li> <li> <p>0.240 </p> </li> <li> <p>0.120 </p> </li> <li> <p>0.072 </p> </li> <li> <p>0.060 </p> </li> <li> <p>0.048 </p> </li> <li> <p>0.036 </p> </li> <li> <p>0.024 </p> </li> <li> <p>0.012 </p> </li> </ul> <p>Use one of the following prices for Rekognition DetectModerationLabels Amazon Augmented AI review tasks. Prices are in US dollars.</p> <ul> <li> <p>1.200 </p> </li> <li> <p>1.080 </p> </li> <li> <p>0.960 </p> </li> <li> <p>0.840 </p> </li> <li> <p>0.720 </p> </li> <li> <p>0.600 </p> </li> <li> <p>0.480 </p> </li> <li> <p>0.360 </p> </li> <li> <p>0.240 </p> </li> <li> <p>0.120 </p> </li> <li> <p>0.072 </p> </li> <li> <p>0.060 </p> </li> <li> <p>0.048 </p> </li> <li> <p>0.036 </p> </li> <li> <p>0.024 </p> </li> <li> <p>0.012 </p> </li> </ul> <p>Use one of the following prices for Amazon Augmented AI custom human review tasks. Prices are in US dollars.</p> <ul> <li> <p>1.200 </p> </li> <li> <p>1.080 </p> </li> <li> <p>0.960 </p> </li> <li> <p>0.840 </p> </li> <li> <p>0.720 </p> </li> <li> <p>0.600 </p> </li> <li> <p>0.480 </p> </li> <li> <p>0.360 </p> </li> <li> <p>0.240 </p> </li> <li> <p>0.120 </p> </li> <li> <p>0.072 </p> </li> <li> <p>0.060 </p> </li> <li> <p>0.048 </p> </li> <li> <p>0.036 </p> </li> <li> <p>0.024 </p> </li> <li> <p>0.012 </p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PublicWorkforceTaskPrice
	{
		
		/// <summary>
		/// Represents an amount of money in United States dollars/
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public USD AmountInUsd { get; set; }
	}
	
	/// <summary>
	/// Provided configuration information for the worker UI for a labeling job. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UiConfig
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string UiTemplateS3Uri { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:human-task-ui/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string HumanTaskUiArn { get; set; }
	}
	
	/// <summary>
	/// Container for human task user interface information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class HumanTaskUiSummary
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-z0-9](-*[a-z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string HumanTaskUiName { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:human-task-ui/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string HumanTaskUiArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
	}
	
	/// <summary>
	/// Specifies which training algorithm to use for training jobs that a hyperparameter tuning job launches and the metrics to monitor.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class HyperParameterAlgorithmSpecification
	{
		
		/// <summary>
		/// Max length: 255
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255)]
		public string TrainingImage { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HyperParameterAlgorithmSpecificationTrainingInputMode TrainingInputMode { get; set; }
		
		/// <summary>
		/// Max length: 170
		/// Min length: 1
		/// Pattern: (arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:[a-z\-]*\/)?([a-zA-Z0-9]([a-zA-Z0-9-]){0,62})(?<!-)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(170, MinimumLength=1)]
		public string AlgorithmName { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 40
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(40)]
		public MetricDefinition[] MetricDefinitions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum HyperParameterAlgorithmSpecificationTrainingInputMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pipe = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		File = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ParameterType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Integer = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Continuous = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Categorical = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FreeText = 3,
	}
	
	/// <summary>
	/// Defines the possible values for categorical, continuous, and integer hyperparameters to be used by an algorithm.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ParameterRange
	{
		
		/// <summary>
		/// Defines the possible values for an integer hyperparameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IntegerParameterRangeSpecification IntegerParameterRangeSpecification { get; set; }
		
		/// <summary>
		/// Defines the possible values for a continuous hyperparameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ContinuousParameterRangeSpecification ContinuousParameterRangeSpecification { get; set; }
		
		/// <summary>
		/// Defines the possible values for a categorical hyperparameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CategoricalParameterRangeSpecification CategoricalParameterRangeSpecification { get; set; }
	}
	
	/// <summary>
	/// Defines a hyperparameter to be used by an algorithm.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class HyperParameterSpecification
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: [\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string Name { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: [\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string Description { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HyperParameterSpecificationType Type { get; set; }
		
		/// <summary>
		/// Defines the possible values for categorical, continuous, and integer hyperparameters to be used by an algorithm.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ParameterRange Range { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsTunable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsRequired { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string DefaultValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum HyperParameterSpecificationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Integer = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Continuous = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Categorical = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FreeText = 3,
	}
	
	/// <summary>
	/// Defines the objective metric for a hyperparameter tuning job. Hyperparameter tuning uses the value of this metric to evaluate the training jobs it launches, and returns the training job that results in either the highest or lowest value for this metric, depending on the value you specify for the <code>Type</code> parameter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class HyperParameterTuningJobObjective
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HyperParameterTuningJobObjectiveType Type { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: .+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string MetricName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum HyperParameterTuningJobObjectiveType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Maximize = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Minimize = 1,
	}
	
	/// <summary>
	/// <p>Specifies ranges of integer, continuous, and categorical hyperparameters that a hyperparameter tuning job searches. The hyperparameter tuning job launches training jobs with hyperparameter values within these ranges to find the combination of values that result in the training job with the best performance as measured by the objective metric of the hyperparameter tuning job.</p> <note> <p>You can specify a maximum of 20 hyperparameters that a hyperparameter tuning job can search over. Every possible value of a categorical parameter range counts against this limit.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ParameterRanges
	{
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public IntegerParameterRange[] IntegerParameterRanges { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public ContinuousParameterRange[] ContinuousParameterRanges { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public CategoricalParameterRange[] CategoricalParameterRanges { get; set; }
	}
	
	/// <summary>
	/// The strategy hyperparameter tuning uses to find the best combination of hyperparameters for your model. Currently, the only supported value is <code>Bayesian</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum HyperParameterTuningJobStrategyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bayesian = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Random = 1,
	}
	
	/// <summary>
	/// Specifies the maximum number of training jobs and parallel training jobs that a hyperparameter tuning job can launch.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ResourceLimits
	{
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int MaxNumberOfTrainingJobs { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int MaxParallelTrainingJobs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TrainingJobEarlyStoppingType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Off = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Auto = 1,
	}
	
	/// <summary>
	/// The job completion criteria.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TuningJobCompletionCriteria
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public float TargetObjectiveMetricValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum HyperParameterTuningJobSortByOptions
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Status = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 2,
	}
	
	/// <summary>
	/// Provides summary information about a hyperparameter tuning job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class HyperParameterTuningJobSummary
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string HyperParameterTuningJobName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:hyper-parameter-tuning-job/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string HyperParameterTuningJobArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HyperParameterTuningJobSummaryHyperParameterTuningJobStatus HyperParameterTuningJobStatus { get; set; }
		
		/// <summary>
		/// The strategy hyperparameter tuning uses to find the best combination of hyperparameters for your model. Currently, the only supported value is <code>Bayesian</code>.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HyperParameterTuningJobSummaryStrategy Strategy { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> HyperParameterTuningEndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
		
		/// <summary>
		/// The numbers of training jobs launched by a hyperparameter tuning job, categorized by status.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TrainingJobStatusCounters TrainingJobStatusCounters { get; set; }
		
		/// <summary>
		/// Specifies the number of training jobs that this hyperparameter tuning job launched, categorized by the status of their objective metric. The objective metric status shows whether the final objective metric for the training job has been evaluated by the tuning job and used in the hyperparameter tuning process.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ObjectiveStatusCounters ObjectiveStatusCounters { get; set; }
		
		/// <summary>
		/// Specifies the maximum number of training jobs and parallel training jobs that a hyperparameter tuning job can launch.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourceLimits ResourceLimits { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum HyperParameterTuningJobSummaryHyperParameterTuningJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum HyperParameterTuningJobSummaryStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bayesian = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Random = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum HyperParameterTuningJobWarmStartType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IdenticalDataAndAlgorithm = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TransferLearning = 1,
	}
	
	/// <summary>
	/// For a hyperparameter of the integer type, specifies the range that a hyperparameter tuning job searches.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class IntegerParameterRange
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string Name { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string MinValue { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string MaxValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IntegerParameterRangeScalingType ScalingType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum IntegerParameterRangeScalingType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Auto = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Linear = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Logarithmic = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ReverseLogarithmic = 3,
	}
	
	/// <summary>
	/// Defines the possible values for an integer hyperparameter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class IntegerParameterRangeSpecification
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string MinValue { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string MaxValue { get; set; }
	}
	
	/// <summary>
	/// Jupyter server's app settings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class JupyterServerAppSettings
	{
		
		/// <summary>
		/// The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. The ARN is stored as metadata in SageMaker Studio notebooks.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourceSpec DefaultResourceSpec { get; set; }
	}
	
	/// <summary>
	/// The kernel gateway app settings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class KernelGatewayAppSettings
	{
		
		/// <summary>
		/// The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. The ARN is stored as metadata in SageMaker Studio notebooks.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourceSpec DefaultResourceSpec { get; set; }
	}
	
	/// <summary>
	/// Provides counts for human-labeled tasks in the labeling job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class LabelCountersForWorkteam
	{
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> HumanLabeled { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> PendingHuman { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Total { get; set; }
	}
	
	/// <summary>
	/// Provides configuration information for labeling jobs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class LabelingJobResourceConfig
	{
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string VolumeKmsKeyId { get; set; }
	}
	
	/// <summary>
	/// Attributes of the data specified by the customer. Use these to describe the data to be labeled.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class LabelingJobDataAttributes
	{
		
		/// <summary>
		/// Maximum items: 256
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public ContentClassifier[] ContentClassifiers { get; set; }
	}
	
	/// <summary>
	/// The Amazon S3 location of the input data objects.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class LabelingJobS3DataSource
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string ManifestS3Uri { get; set; }
	}
	
	/// <summary>
	/// Provides information about the location of input data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class LabelingJobDataSource
	{
		
		/// <summary>
		/// The Amazon S3 location of the input data objects.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LabelingJobS3DataSource S3DataSource { get; set; }
	}
	
	/// <summary>
	/// Provides summary information for a work team.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class LabelingJobForWorkteamSummary
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string LabelingJobName { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: .+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string JobReferenceCode { get; set; }
		
		/// <summary>
		/// Pattern: ^\d+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string WorkRequesterAccountId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		/// <summary>
		/// Provides counts for human-labeled tasks in the labeling job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LabelCountersForWorkteam LabelCounters { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 9
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 9)]
		public System.Nullable<System.Int32> NumberOfHumanWorkersPerDataObject { get; set; }
	}
	
	/// <summary>
	/// Provides summary information about a labeling job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class LabelingJobSummary
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string LabelingJobName { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:labeling-job/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string LabelingJobArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LabelingJobSummaryLabelingJobStatus LabelingJobStatus { get; set; }
		
		/// <summary>
		/// Provides a breakdown of the number of objects labeled.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LabelCounters LabelCounters { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:workteam/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string WorkteamArn { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: arn:aws[a-z\-]*:lambda:[a-z]{2}-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_\.]+(:(\$LATEST|[a-zA-Z0-9-_]+))?
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string PreHumanTaskLambdaArn { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: arn:aws[a-z\-]*:lambda:[a-z]{2}-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_\.]+(:(\$LATEST|[a-zA-Z0-9-_]+))?
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string AnnotationConsolidationLambdaArn { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string FailureReason { get; set; }
		
		/// <summary>
		/// Specifies the location of the output produced by the labeling job. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LabelingJobOutput LabelingJobOutput { get; set; }
		
		/// <summary>
		/// Input configuration information for a labeling job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LabelingJobInputConfig InputConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum LabelingJobSummaryLabelingJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListCompilationJobsSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Status = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum OrderKey
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SortExperimentsBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListLabelingJobsForWorkteamSortByOptions
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Status = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ModelPackageSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ModelSortKey
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MonitoringExecutionSortKey
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ScheduledTime = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Status = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MonitoringScheduleSortKey
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Status = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum NotebookInstanceLifecycleConfigSortKey
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LastModifiedTime = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum NotebookInstanceLifecycleConfigSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum NotebookInstanceSortKey
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Status = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum NotebookInstanceSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TrainingJobSortByOptions
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Status = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FinalObjectiveMetricValue = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SortTrialComponentsBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SortTrialsBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UserProfileSortKey
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LastModifiedTime = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ListWorkteamsSortByOptions
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreateDate = 1,
	}
	
	/// <summary>
	/// Defines the Amazon Cognito user group that is part of a work team.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class MemberDefinition
	{
		
		/// <summary>
		/// Identifies a Amazon Cognito user group. A user group can be used in on or more work teams.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CognitoMemberDefinition CognitoMemberDefinition { get; set; }
	}
	
	/// <summary>
	/// Specifies a metric that the training algorithm writes to <code>stderr</code> or <code>stdout</code> . Amazon SageMakerhyperparameter tuning captures all defined metrics. You specify one metric that a hyperparameter tuning job uses as its objective metric to choose the best training job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class MetricDefinition
	{
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: .+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Max length: 500
		/// Min length: 1
		/// Pattern: .+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(500, MinimumLength=1)]
		public string Regex { get; set; }
	}
	
	/// <summary>
	/// Describes the Docker container for the model package.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModelPackageContainerDefinition
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string ContainerHostname { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// Pattern: [\S]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255)]
		public string Image { get; set; }
		
		/// <summary>
		/// Max length: 72
		/// Pattern: ^[Ss][Hh][Aa]256:[0-9a-fA-F]{64}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(72)]
		public string ImageDigest { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string ModelDataUrl { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string ProductId { get; set; }
	}
	
	/// <summary>
	/// Represents the overall status of a model package.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModelPackageStatusItem
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string Name { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ModelPackageStatusItemStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FailureReason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ModelPackageStatusItemStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotStarted = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
	}
	
	/// <summary>
	/// Provides summary information about a model package.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModelPackageSummary
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string ModelPackageName { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:model-package/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ModelPackageArn { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: [\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string ModelPackageDescription { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ModelPackageSummaryModelPackageStatus ModelPackageStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ModelPackageSummaryModelPackageStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 4,
	}
	
	/// <summary>
	/// <p>Contains data, such as the inputs and targeted instance types that are used in the process of validating the model package.</p> <p>The data provided in the validation profile is made available to your buyers on AWS Marketplace.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModelPackageValidationProfile
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string ProfileName { get; set; }
		
		/// <summary>
		/// Defines the input needed to run a transform job using the inference specification specified in the algorithm.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TransformJobDefinition TransformJobDefinition { get; set; }
	}
	
	/// <summary>
	/// Provides summary information about a model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ModelSummary
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string ModelName { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:model/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string ModelArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
	}
	
	/// <summary>
	/// Container image configuration object for the monitoring job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class MonitoringAppSpecification
	{
		
		/// <summary>
		/// Max length: 255
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255)]
		public string ImageUri { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public ContainerEntrypointString[] ContainerEntrypoint { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public ContainerArgument[] ContainerArguments { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string RecordPreprocessorSourceUri { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string PostAnalyticsProcessorSourceUri { get; set; }
	}
	
	/// <summary>
	/// The constraints resource for a monitoring job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class MonitoringConstraintsResource
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string S3Uri { get; set; }
	}
	
	/// <summary>
	/// The statistics resource for a monitoring job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class MonitoringStatisticsResource
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string S3Uri { get; set; }
	}
	
	/// <summary>
	/// Configuration for monitoring constraints and monitoring statistics. These baseline resources are compared against the results of the current job from the series of jobs scheduled to collect data periodically.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class MonitoringBaselineConfig
	{
		
		/// <summary>
		/// The constraints resource for a monitoring job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public MonitoringConstraintsResource ConstraintsResource { get; set; }
		
		/// <summary>
		/// The statistics resource for a monitoring job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public MonitoringStatisticsResource StatisticsResource { get; set; }
	}
	
	/// <summary>
	/// Configuration for the cluster used to run model monitoring jobs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class MonitoringClusterConfig
	{
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public int InstanceCount { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MonitoringClusterConfigInstanceType InstanceType { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 16384
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 16384)]
		public int VolumeSizeInGB { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string VolumeKmsKeyId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MonitoringClusterConfigInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.medium = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.large = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.xlarge = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.2xlarge = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.xlarge = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.2xlarge = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.4xlarge = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.10xlarge = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.16xlarge = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.xlarge = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.2xlarge = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.4xlarge = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.8xlarge = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.xlarge = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.8xlarge = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.16xlarge = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.2xlarge = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.8xlarge = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.16xlarge = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.xlarge = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.2xlarge = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.4xlarge = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.9xlarge = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.18xlarge = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.large = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.xlarge = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.2xlarge = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.4xlarge = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.12xlarge = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.24xlarge = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.large = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.xlarge = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.2xlarge = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.4xlarge = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.8xlarge = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.12xlarge = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.16xlarge = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.24xlarge = 37,
	}
	
	/// <summary>
	/// The inputs for a monitoring job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class MonitoringInput
	{
		
		/// <summary>
		/// Input object for the endpoint
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EndpointInput EndpointInput { get; set; }
	}
	
	/// <summary>
	/// The output configuration for monitoring jobs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class MonitoringOutputConfig
	{
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public MonitoringOutput[] MonitoringOutputs { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string KmsKeyId { get; set; }
	}
	
	/// <summary>
	/// Identifies the resources to deploy for a monitoring job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class MonitoringResources
	{
		
		/// <summary>
		/// Configuration for the cluster used to run model monitoring jobs.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MonitoringClusterConfig ClusterConfig { get; set; }
	}
	
	/// <summary>
	/// A time limit for how long the monitoring job is allowed to run before stopping.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class MonitoringStoppingCondition
	{
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 86400
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 86400)]
		public int MaxRuntimeInSeconds { get; set; }
	}
	
	/// <summary>
	/// Defines the monitoring job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class MonitoringJobDefinition
	{
		
		/// <summary>
		/// Configuration for monitoring constraints and monitoring statistics. These baseline resources are compared against the results of the current job from the series of jobs scheduled to collect data periodically.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public MonitoringBaselineConfig BaselineConfig { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public MonitoringInput[] MonitoringInputs { get; set; }
		
		/// <summary>
		/// The output configuration for monitoring jobs.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MonitoringOutputConfig MonitoringOutputConfig { get; set; }
		
		/// <summary>
		/// Identifies the resources to deploy for a monitoring job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MonitoringResources MonitoringResources { get; set; }
		
		/// <summary>
		/// Container image configuration object for the monitoring job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MonitoringAppSpecification MonitoringAppSpecification { get; set; }
		
		/// <summary>
		/// A time limit for how long the monitoring job is allowed to run before stopping.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public MonitoringStoppingCondition StoppingCondition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MonitoringEnvironmentMap Environment { get; set; }
		
		/// <summary>
		/// Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public NetworkConfig NetworkConfig { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string RoleArn { get; set; }
	}
	
	/// <summary>
	/// Information about where and how you want to store the results of a monitoring job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class MonitoringS3Output
	{
		
		/// <summary>
		/// Max length: 512
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(512)]
		public string S3Uri { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string LocalPath { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MonitoringS3OutputS3UploadMode S3UploadMode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MonitoringS3OutputS3UploadMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Continuous = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EndOfJob = 1,
	}
	
	/// <summary>
	/// The output object for a monitoring job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class MonitoringOutput
	{
		
		/// <summary>
		/// Information about where and how you want to store the results of a monitoring job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MonitoringS3Output S3Output { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ProcessingS3UploadMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Continuous = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EndOfJob = 1,
	}
	
	/// <summary>
	/// Configuration details about the monitoring schedule.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ScheduleConfig
	{
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string ScheduleExpression { get; set; }
	}
	
	/// <summary>
	/// Summarizes the monitoring schedule.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class MonitoringScheduleSummary
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string MonitoringScheduleName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string MonitoringScheduleArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MonitoringScheduleSummaryMonitoringScheduleStatus MonitoringScheduleStatus { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string EndpointName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MonitoringScheduleSummaryMonitoringScheduleStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Scheduled = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 3,
	}
	
	/// <summary>
	/// <p>A list of nested <a>Filter</a> objects. A resource must satisfy the conditions of all filters to be included in the results returned from the <a>Search</a> API.</p> <p>For example, to filter on a training job's <code>InputDataConfig</code> property with a specific channel name and <code>S3Uri</code> prefix, define the following filters:</p> <ul> <li> <p> <code>'{Name:"InputDataConfig.ChannelName", "Operator":"Equals", "Value":"train"}',</code> </p> </li> <li> <p> <code>'{Name:"InputDataConfig.DataSource.S3DataSource.S3Uri", "Operator":"Contains", "Value":"mybucket/catdata"}'</code> </p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class NestedFilters
	{
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: .+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string NestedPropertyName { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 20
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public Filter[] Filters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum NotebookInstanceAcceleratorType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.eia1.medium = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.eia1.large = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.eia1.xlarge = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.eia2.medium = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.eia2.large = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.eia2.xlarge = 5,
	}
	
	/// <summary>
	/// <p>Contains the notebook instance lifecycle configuration script.</p> <p>Each lifecycle configuration script has a limit of 16384 characters.</p> <p>The value of the <code>$PATH</code> environment variable that is available to both scripts is <code>/sbin:bin:/usr/sbin:/usr/bin</code>.</p> <p>View CloudWatch Logs for notebook instance lifecycle configurations in log group <code>/aws/sagemaker/NotebookInstances</code> in log stream <code>[notebook-instance-name]/[LifecycleConfigHook]</code>.</p> <p>Lifecycle configuration scripts cannot run for longer than 5 minutes. If a script runs for longer than 5 minutes, it fails and the notebook instance is not created or started.</p> <p>For information about notebook instance lifestyle configurations, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html">Step 2.1: (Optional) Customize a Notebook Instance</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class NotebookInstanceLifecycleHook
	{
		
		/// <summary>
		/// Max length: 16384
		/// Min length: 1
		/// Pattern: [\S\s]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(16384, MinimumLength=1)]
		public string Content { get; set; }
	}
	
	/// <summary>
	/// Provides a summary of a notebook instance lifecycle configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class NotebookInstanceLifecycleConfigSummary
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NotebookInstanceLifecycleConfigName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string NotebookInstanceLifecycleConfigArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
	}
	
	/// <summary>
	/// Provides summary information for an Amazon SageMaker notebook instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class NotebookInstanceSummary
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NotebookInstanceName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string NotebookInstanceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NotebookInstanceSummaryNotebookInstanceStatus NotebookInstanceStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Url { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NotebookInstanceSummaryInstanceType InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string NotebookInstanceLifecycleConfigName { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// Pattern: ^https://([^/]+)/?(.*)$|^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string DefaultCodeRepository { get; set; }
		
		/// <summary>
		/// Maximum items: 3
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(3)]
		public CodeRepositoryNameOrUrl[] AdditionalCodeRepositories { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum NotebookInstanceSummaryNotebookInstanceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InService = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Updating = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum NotebookInstanceSummaryInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t2.medium = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t2.large = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t2.xlarge = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t2.2xlarge = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.medium = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.large = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.xlarge = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.2xlarge = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.xlarge = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.2xlarge = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.4xlarge = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.10xlarge = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.16xlarge = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.xlarge = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.2xlarge = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.4xlarge = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.12xlarge = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.24xlarge = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.xlarge = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.2xlarge = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.4xlarge = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.8xlarge = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.xlarge = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.2xlarge = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.4xlarge = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.9xlarge = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.18xlarge = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.xlarge = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.2xlarge = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.4xlarge = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.9xlarge = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.18xlarge = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.xlarge = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.8xlarge = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.16xlarge = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.2xlarge = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.8xlarge = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.16xlarge = 37,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum NotebookOutputOption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Allowed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Disabled = 1,
	}
	
	/// <summary>
	/// The trial that a trial component is associated with and the experiment the trial is part of. A component might not be associated with a trial. A component can be associated with multiple trials.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Parent
	{
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string TrialName { get; set; }
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string ExperimentName { get; set; }
	}
	
	/// <summary>
	/// A previously completed or stopped hyperparameter tuning job to be used as a starting point for a new hyperparameter tuning job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ParentHyperParameterTuningJob
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string HyperParameterTuningJobName { get; set; }
	}
	
	/// <summary>
	/// Configuration for the cluster used to run a processing job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ProcessingClusterConfig
	{
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public int InstanceCount { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ProcessingClusterConfigInstanceType InstanceType { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 16384
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 16384)]
		public int VolumeSizeInGB { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string VolumeKmsKeyId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ProcessingClusterConfigInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.medium = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.large = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.xlarge = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t3.2xlarge = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.xlarge = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.2xlarge = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.4xlarge = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.10xlarge = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.16xlarge = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.xlarge = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.2xlarge = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.4xlarge = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.8xlarge = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.xlarge = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.8xlarge = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.16xlarge = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.2xlarge = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.8xlarge = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.16xlarge = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.xlarge = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.2xlarge = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.4xlarge = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.9xlarge = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.18xlarge = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.large = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.xlarge = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.2xlarge = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.4xlarge = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.12xlarge = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.24xlarge = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.large = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.xlarge = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.2xlarge = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.4xlarge = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.8xlarge = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.12xlarge = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.16xlarge = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.24xlarge = 37,
	}
	
	/// <summary>
	/// Information about where and how you want to obtain the inputs for an processing job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ProcessingS3Input
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string S3Uri { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string LocalPath { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ProcessingS3InputS3DataType S3DataType { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ProcessingS3InputS3InputMode S3InputMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ProcessingS3InputS3DataDistributionType S3DataDistributionType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ProcessingS3InputS3CompressionType S3CompressionType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ProcessingS3InputS3DataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ManifestFile = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3Prefix = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ProcessingS3InputS3InputMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pipe = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		File = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ProcessingS3InputS3DataDistributionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FullyReplicated = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ShardedByS3Key = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ProcessingS3InputS3CompressionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Gzip = 1,
	}
	
	/// <summary>
	/// The inputs for a processing job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ProcessingInput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InputName { get; set; }
		
		/// <summary>
		/// Information about where and how you want to obtain the inputs for an processing job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ProcessingS3Input S3Input { get; set; }
	}
	
	/// <summary>
	/// An Amazon SageMaker processing job that is used to analyze data and evaluate models. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/processing-job.html">Process Data and Evaluate Models</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ProcessingJob
	{
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 10
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public ProcessingInput[] ProcessingInputs { get; set; }
		
		/// <summary>
		/// The output configuration for the processing job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ProcessingOutputConfig ProcessingOutputConfig { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string ProcessingJobName { get; set; }
		
		/// <summary>
		/// Identifies the resources, ML compute instances, and ML storage volumes to deploy for a processing job. In distributed training, you specify more than one instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ProcessingResources ProcessingResources { get; set; }
		
		/// <summary>
		/// Specifies a time limit for how long the processing job is allowed to run.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ProcessingStoppingCondition StoppingCondition { get; set; }
		
		/// <summary>
		/// Configuration to run a processing job in a specified container image.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AppSpecification AppSpecification { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ProcessingEnvironmentMap Environment { get; set; }
		
		/// <summary>
		/// Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public NetworkConfig NetworkConfig { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Configuration for the experiment.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ExperimentConfig ExperimentConfig { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:processing-job/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string ProcessingJobArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ProcessingJobProcessingJobStatus ProcessingJobStatus { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: [\S\s]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string ExitMessage { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ProcessingEndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ProcessingStartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string MonitoringScheduleArn { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:automl-job/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string AutoMLJobArn { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:training-job/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TrainingJobArn { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ProcessingJobProcessingJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 4,
	}
	
	/// <summary>
	/// Summary of information about a processing job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ProcessingJobSummary
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string ProcessingJobName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:processing-job/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string ProcessingJobArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ProcessingEndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ProcessingJobSummaryProcessingJobStatus ProcessingJobStatus { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string FailureReason { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: [\S\s]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string ExitMessage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ProcessingJobSummaryProcessingJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 4,
	}
	
	/// <summary>
	/// Information about where and how you want to store the results of an processing job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ProcessingS3Output
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string S3Uri { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string LocalPath { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ProcessingS3OutputS3UploadMode S3UploadMode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ProcessingS3OutputS3UploadMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Continuous = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EndOfJob = 1,
	}
	
	/// <summary>
	/// Describes the results of a processing job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ProcessingOutput
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OutputName { get; set; }
		
		/// <summary>
		/// Information about where and how you want to store the results of an processing job.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ProcessingS3Output S3Output { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ProcessingS3CompressionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Gzip = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ProcessingS3DataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ManifestFile = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3Prefix = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ProductionVariantInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t2.medium = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t2.large = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t2.xlarge = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t2.2xlarge = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.xlarge = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.2xlarge = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.4xlarge = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.10xlarge = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.16xlarge = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.large = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.xlarge = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.2xlarge = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.4xlarge = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.12xlarge = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.24xlarge = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5d.large = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5d.xlarge = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5d.2xlarge = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5d.4xlarge = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5d.12xlarge = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5d.24xlarge = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.large = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.xlarge = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.2xlarge = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.4xlarge = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.8xlarge = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.xlarge = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.8xlarge = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.16xlarge = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.2xlarge = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.8xlarge = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.16xlarge = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.large = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.xlarge = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.2xlarge = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.4xlarge = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.9xlarge = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.18xlarge = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.large = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.xlarge = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.2xlarge = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.4xlarge = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.9xlarge = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.18xlarge = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.xlarge = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.2xlarge = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.4xlarge = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.8xlarge = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.12xlarge = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.16xlarge = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.large = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.xlarge = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.2xlarge = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.4xlarge = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.12xlarge = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.24xlarge = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5d.large = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5d.xlarge = 57,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5d.2xlarge = 58,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5d.4xlarge = 59,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5d.12xlarge = 60,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5d.24xlarge = 61,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.inf1.xlarge = 62,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.inf1.2xlarge = 63,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.inf1.6xlarge = 64,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.inf1.24xlarge = 65,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ProductionVariantAcceleratorType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.eia1.medium = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.eia1.large = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.eia1.xlarge = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.eia2.medium = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.eia2.large = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.eia2.xlarge = 5,
	}
	
	/// <summary>
	/// Identifies a model that you want to host and the resources to deploy for hosting it. If you are deploying multiple models, tell Amazon SageMaker how to distribute traffic among the models by specifying variant weights. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ProductionVariant
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string VariantName { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string ModelName { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int InitialInstanceCount { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ProductionVariantInstanceType InstanceType { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Single.MaxValue)]
		public System.Nullable<System.Single> InitialVariantWeight { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ProductionVariantAcceleratorType AcceleratorType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ProductionVariantInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t2.medium = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t2.large = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t2.xlarge = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.t2.2xlarge = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.xlarge = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.2xlarge = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.4xlarge = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.10xlarge = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.16xlarge = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.large = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.xlarge = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.2xlarge = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.4xlarge = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.12xlarge = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.24xlarge = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5d.large = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5d.xlarge = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5d.2xlarge = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5d.4xlarge = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5d.12xlarge = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5d.24xlarge = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.large = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.xlarge = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.2xlarge = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.4xlarge = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.8xlarge = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.xlarge = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.8xlarge = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.16xlarge = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.2xlarge = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.8xlarge = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.16xlarge = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.large = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.xlarge = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.2xlarge = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.4xlarge = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.9xlarge = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.18xlarge = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.large = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.xlarge = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.2xlarge = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.4xlarge = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.9xlarge = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5d.18xlarge = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.xlarge = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.2xlarge = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.4xlarge = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.8xlarge = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.12xlarge = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.16xlarge = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.large = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.xlarge = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.2xlarge = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.4xlarge = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.12xlarge = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5.24xlarge = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5d.large = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5d.xlarge = 57,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5d.2xlarge = 58,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5d.4xlarge = 59,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5d.12xlarge = 60,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.r5d.24xlarge = 61,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.inf1.xlarge = 62,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.inf1.2xlarge = 63,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.inf1.6xlarge = 64,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.inf1.24xlarge = 65,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ProductionVariantAcceleratorType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.eia1.medium = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.eia1.large = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.eia1.xlarge = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.eia2.medium = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.eia2.large = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.eia2.xlarge = 5,
	}
	
	/// <summary>
	/// Describes weight and capacities for a production variant associated with an endpoint. If you sent a request to the <code>UpdateEndpointWeightsAndCapacities</code> API and the endpoint status is <code>Updating</code>, you get different desired and current values. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ProductionVariantSummary
	{
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string VariantName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DeployedImage[] DeployedImages { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Single.MaxValue)]
		public System.Nullable<System.Single> CurrentWeight { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Single.MaxValue)]
		public System.Nullable<System.Single> DesiredWeight { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> CurrentInstanceCount { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> DesiredInstanceCount { get; set; }
	}
	
	/// <summary>
	/// Part of the <code>SuggestionQuery</code> type. Specifies a hint for retrieving property names that begin with the specified text.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PropertyNameQuery
	{
		
		/// <summary>
		/// Max length: 100
		/// Min length: 0
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength=0)]
		public string PropertyNameHint { get; set; }
	}
	
	/// <summary>
	/// A property name returned from a <code>GetSearchSuggestions</code> call that specifies a value in the <code>PropertyNameQuery</code> field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PropertyNameSuggestion
	{
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: .+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string PropertyName { get; set; }
	}
	
	/// <summary>
	/// Represents an amount of money in United States dollars/
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class USD
	{
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 2
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 2)]
		public System.Nullable<System.Int32> Dollars { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 99
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 99)]
		public System.Nullable<System.Int32> Cents { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 9
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 9)]
		public System.Nullable<System.Int32> TenthFractionsOfACent { get; set; }
	}
	
	/// <summary>
	/// Contains input values for a task.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RenderableTask
	{
		
		/// <summary>
		/// Max length: 128000
		/// Min length: 2
		/// Pattern: [\S\s]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128000, MinimumLength=2)]
		public string Input { get; set; }
	}
	
	/// <summary>
	/// A description of an error that occurred while rendering the template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RenderingError
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Code { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TrainingInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.xlarge = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.2xlarge = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.4xlarge = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.10xlarge = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.16xlarge = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.xlarge = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.2xlarge = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.4xlarge = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.8xlarge = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.12xlarge = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.g4dn.16xlarge = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.large = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.xlarge = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.2xlarge = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.4xlarge = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.12xlarge = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.24xlarge = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.xlarge = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.2xlarge = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.4xlarge = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.8xlarge = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.xlarge = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.8xlarge = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.16xlarge = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.2xlarge = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.8xlarge = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.16xlarge = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3dn.24xlarge = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.xlarge = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.2xlarge = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.4xlarge = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.9xlarge = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.18xlarge = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5n.xlarge = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5n.2xlarge = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5n.4xlarge = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5n.9xlarge = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5n.18xlarge = 37,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RetentionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Retain = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Delete = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum S3DataDistribution
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FullyReplicated = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ShardedByS3Key = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum S3DataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ManifestFile = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3Prefix = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AugmentedManifestFile = 2,
	}
	
	/// <summary>
	/// <p>A multi-expression that searches for the specified resource or resources in a search. All resource objects that satisfy the expression's condition are included in the search results. You must specify at least one subexpression, filter, or nested filter. A <code>SearchExpression</code> can contain up to twenty elements.</p> <p>A <code>SearchExpression</code> contains the following components:</p> <ul> <li> <p>A list of <code>Filter</code> objects. Each filter defines a simple Boolean expression comprised of a resource property name, Boolean operator, and value. A <code>SearchExpression</code> can include only one <code>Contains</code> operator.</p> </li> <li> <p>A list of <code>NestedFilter</code> objects. Each nested filter defines a list of Boolean expressions using a list of resource properties. A nested filter is satisfied if a single object in the list satisfies all Boolean expressions.</p> </li> <li> <p>A list of <code>SearchExpression</code> objects. A search expression object can be nested in a list of search expression objects.</p> </li> <li> <p>A Boolean operator: <code>And</code> or <code>Or</code>.</p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SearchExpression
	{
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public Filter[] Filters { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public NestedFilters[] NestedFilters { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public SearchExpression[] SubExpressions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SearchExpressionOperator Operator { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SearchExpressionOperator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		And = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Or = 1,
	}
	
	/// <summary>
	/// Contains information about a training job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TrainingJob
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string TrainingJobName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:training-job/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TrainingJobArn { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:hyper-parameter-tuning-job/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TuningJobArn { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:labeling-job/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string LabelingJobArn { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:automl-job/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string AutoMLJobArn { get; set; }
		
		/// <summary>
		/// <p>Provides information about the location that is configured for storing model artifacts. </p> <p>Model artifacts are the output that results from training a model, and typically consist of trained parameters, a model defintion that desribes how to compute inferences, and other metadata.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ModelArtifacts ModelArtifacts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TrainingJobTrainingJobStatus TrainingJobStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TrainingJobSecondaryStatus SecondaryStatus { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HyperParameters HyperParameters { get; set; }
		
		/// <summary>
		/// <p>Specifies the training algorithm to use in a <a>CreateTrainingJob</a> request.</p> <p>For more information about algorithms provided by Amazon SageMaker, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. For information about using your own algorithms, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html">Using Your Own Algorithms with Amazon SageMaker</a>. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AlgorithmSpecification AlgorithmSpecification { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 20
		/// Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=20)]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public Channel[] InputDataConfig { get; set; }
		
		/// <summary>
		/// Provides information about how to store model training results (model artifacts).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OutputDataConfig OutputDataConfig { get; set; }
		
		/// <summary>
		/// Describes the resources, including ML compute instances and ML storage volumes, to use for model training. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourceConfig ResourceConfig { get; set; }
		
		/// <summary>
		/// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html">Protect Endpoints by Using an Amazon Virtual Private Cloud</a> and <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConfig VpcConfig { get; set; }
		
		/// <summary>
		/// <p>Specifies a limit to how long a model training or compilation job can run. It also specifies how long you are willing to wait for a managed spot training job to complete. When the job reaches the time limit, Amazon SageMaker ends the training or compilation job. Use this API to cap model training costs.</p> <p>To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost. </p> <p>The training algorithms provided by Amazon SageMaker automatically save the intermediate results of a model training job when possible. This attempt to save artifacts is only a best effort case as model might not be in a state from which it can be saved. For example, if training has just started, the model might not be ready to save. When saved, this intermediate data is a valid model artifact. You can use it to create a model with <code>CreateModel</code>.</p> <note> <p>The Neural Topic Model (NTM) currently does not support saving intermediate model artifacts. When training NTMs, make sure that the maximum runtime is sufficient for the training job to complete.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StoppingCondition StoppingCondition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> TrainingStartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> TrainingEndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SecondaryStatusTransition[] SecondaryStatusTransitions { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 40
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(40)]
		public MetricData[] FinalMetricDataList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableNetworkIsolation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableInterContainerTrafficEncryption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableManagedSpotTraining { get; set; }
		
		/// <summary>
		/// Contains information about the output location for managed spot training checkpoint data. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CheckpointConfig CheckpointConfig { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> TrainingTimeInSeconds { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> BillableTimeInSeconds { get; set; }
		
		/// <summary>
		/// Configuration information for the debug hook parameters, collection configuration, and storage paths.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DebugHookConfig DebugHookConfig { get; set; }
		
		/// <summary>
		/// Configuration for the experiment.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ExperimentConfig ExperimentConfig { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public DebugRuleConfiguration[] DebugRuleConfigurations { get; set; }
		
		/// <summary>
		/// Configuration of storage locations for TensorBoard output.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TensorBoardOutputConfig TensorBoardOutputConfig { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public DebugRuleEvaluationStatus[] DebugRuleEvaluationStatuses { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TrainingJobTrainingJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TrainingJobSecondaryStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Starting = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LaunchingMLInstances = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PreparingTrainingStack = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Downloading = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DownloadingTrainingImage = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Training = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Uploading = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MaxRuntimeExceeded = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Interrupted = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MaxWaitTimeExceeded = 13,
	}
	
	/// <summary>
	/// The properties of a trial as returned by the <a>Search</a> API.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Trial
	{
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string TrialName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment-trial/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TrialArn { get; set; }
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string ExperimentName { get; set; }
		
		/// <summary>
		/// The source of the trial.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TrialSource Source { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		/// <summary>
		/// Information about the user who created or modified an experiment, trial, or trial component.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UserContext CreatedBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
		
		/// <summary>
		/// Information about the user who created or modified an experiment, trial, or trial component.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UserContext LastModifiedBy { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentSimpleSummary[] TrialComponentSummaries { get; set; }
	}
	
	/// <summary>
	/// The properties of a trial component as returned by the <a>Search</a> API.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TrialComponent
	{
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string TrialComponentName { get; set; }
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment-trial-component/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TrialComponentArn { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) and job type of the source of a trial component.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentSource Source { get; set; }
		
		/// <summary>
		/// The status of the trial component.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		/// <summary>
		/// Information about the user who created or modified an experiment, trial, or trial component.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UserContext CreatedBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
		
		/// <summary>
		/// Information about the user who created or modified an experiment, trial, or trial component.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UserContext LastModifiedBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentParameters Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentArtifacts InputArtifacts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentArtifacts OutputArtifacts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentMetricSummary[] Metrics { get; set; }
		
		/// <summary>
		/// Detailed information about the source of a trial component. Either <code>ProcessingJob</code> or <code>TrainingJob</code> is returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentSourceDetail SourceDetail { get; set; }
		
		/// <summary>
		/// Minimum items: 0
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parent[] Parents { get; set; }
	}
	
	/// <summary>
	/// A single resource returned as part of the <a>Search</a> API response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SearchRecord
	{
		
		/// <summary>
		/// Contains information about a training job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TrainingJob TrainingJob { get; set; }
		
		/// <summary>
		/// The properties of an experiment as returned by the <a>Search</a> API.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Experiment Experiment { get; set; }
		
		/// <summary>
		/// The properties of a trial as returned by the <a>Search</a> API.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Trial Trial { get; set; }
		
		/// <summary>
		/// The properties of a trial component as returned by the <a>Search</a> API.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TrialComponent TrialComponent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SearchSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Descending = 1,
	}
	
	/// <summary>
	/// <p>An array element of <a>DescribeTrainingJobResponse$SecondaryStatusTransitions</a>. It provides additional details about a status that the training job has transitioned through. A training job can be in one of several states, for example, starting, downloading, training, or uploading. Within each state, there are a number of intermediate states. For example, within the starting state, Amazon SageMaker could be starting the training job or launching the ML instances. These transitional states are referred to as the job's secondary status. </p> <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SecondaryStatusTransition
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SecondaryStatusTransitionStatus Status { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusMessage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SecondaryStatusTransitionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Starting = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LaunchingMLInstances = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PreparingTrainingStack = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Downloading = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DownloadingTrainingImage = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Training = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Uploading = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MaxRuntimeExceeded = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Interrupted = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MaxWaitTimeExceeded = 13,
	}
	
	/// <summary>
	/// Specifies options when sharing an Amazon SageMaker Studio notebook. These settings are specified as part of <code>DefaultUserSettings</code> when the <a>CreateDomain</a> API is called, and as part of <code>UserSettings</code> when the <a>CreateUserProfile</a> API is called.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SharingSettings
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SharingSettingsNotebookOutputOption NotebookOutputOption { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string S3OutputPath { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string S3KmsKeyId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SharingSettingsNotebookOutputOption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Allowed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Disabled = 1,
	}
	
	/// <summary>
	/// Specifies an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your Amazon SageMaker account or an algorithm in AWS Marketplace that you are subscribed to.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SourceAlgorithm
	{
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string ModelDataUrl { get; set; }
		
		/// <summary>
		/// Max length: 170
		/// Min length: 1
		/// Pattern: (arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:[a-z\-]*\/)?([a-zA-Z0-9]([a-zA-Z0-9-]){0,62})(?<!-)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(170, MinimumLength=1)]
		public string AlgorithmName { get; set; }
	}
	
	/// <summary>
	/// A list of IP address ranges (<a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">CIDRs</a>). Used to create an allow list of IP addresses for a private workforce. For more information, see .
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SourceIpConfig
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Cidr[] Cidrs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SplitType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Line = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecordIO = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TFRecord = 3,
	}
	
	/// <summary>
	/// Describes a tag. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Tag
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string Key { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 0
		/// Pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=0)]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// The TensorBoard app settings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TensorBoardAppSettings
	{
		
		/// <summary>
		/// The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. The ARN is stored as metadata in SageMaker Studio notebooks.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourceSpec DefaultResourceSpec { get; set; }
	}
	
	/// <summary>
	/// Provides summary information about a training job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TrainingJobSummary
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string TrainingJobName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:training-job/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TrainingJobArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> TrainingEndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TrainingJobSummaryTrainingJobStatus TrainingJobStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TrainingJobSummaryTrainingJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 4,
	}
	
	/// <summary>
	/// Describes the S3 data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TransformS3DataSource
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TransformS3DataSourceS3DataType S3DataType { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Pattern: ^(https|s3)://([^/]+)/?(.*)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string S3Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TransformS3DataSourceS3DataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ManifestFile = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3Prefix = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AugmentedManifestFile = 2,
	}
	
	/// <summary>
	/// Describes the location of the channel data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TransformDataSource
	{
		
		/// <summary>
		/// Describes the S3 data source.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TransformS3DataSource S3DataSource { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TransformInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.xlarge = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.2xlarge = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.4xlarge = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.10xlarge = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m4.16xlarge = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.xlarge = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.2xlarge = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.4xlarge = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c4.8xlarge = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.xlarge = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.8xlarge = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p2.16xlarge = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.2xlarge = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.8xlarge = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.p3.16xlarge = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.xlarge = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.2xlarge = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.4xlarge = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.9xlarge = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.c5.18xlarge = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.large = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.xlarge = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.2xlarge = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.4xlarge = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.12xlarge = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ml.m5.24xlarge = 25,
	}
	
	/// <summary>
	/// Provides a summary of a transform job. Multiple <code>TransformJobSummary</code> objects are returned as a list after in response to a <a>ListTransformJobs</a> call.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TransformJobSummary
	{
		
		/// <summary>
		/// Max length: 63
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63, MinimumLength=1)]
		public string TransformJobName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:transform-job/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TransformJobArn { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> TransformEndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TransformJobSummaryTransformJobStatus TransformJobStatus { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024)]
		public string FailureReason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TransformJobSummaryTransformJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 4,
	}
	
	/// <summary>
	/// Detailed information about the source of a trial component. Either <code>ProcessingJob</code> or <code>TrainingJob</code> is returned.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TrialComponentSourceDetail
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string SourceArn { get; set; }
		
		/// <summary>
		/// Contains information about a training job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TrainingJob TrainingJob { get; set; }
		
		/// <summary>
		/// An Amazon SageMaker processing job that is used to analyze data and evaluate models. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/processing-job.html">Process Data and Evaluate Models</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ProcessingJob ProcessingJob { get; set; }
	}
	
	/// <summary>
	/// <p>Represents an input or output artifact of a trial component. You specify <code>TrialComponentArtifact</code> as part of the <code>InputArtifacts</code> and <code>OutputArtifacts</code> parameters in the <a>CreateTrialComponent</a> request.</p> <p>Examples of input artifacts are datasets, algorithms, hyperparameters, source code, and instance types. Examples of output artifacts are metrics, snapshots, logs, and images.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TrialComponentArtifact
	{
		
		/// <summary>
		/// Max length: 64
		/// Pattern: ^[\w]+\/[\w+]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(64)]
		public string MediaType { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048)]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// A summary of the metrics of a trial component.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TrialComponentMetricSummary
	{
		
		/// <summary>
		/// Max length: 255
		/// Min length: 1
		/// Pattern: .+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength=1)]
		public string MetricName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string SourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> TimeStamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Max { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Min { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Last { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Count { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Avg { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> StdDev { get; set; }
	}
	
	/// <summary>
	/// <p>The value of a hyperparameter. Only one of <code>NumberValue</code> or <code>StringValue</code> can be specified.</p> <p>This object is specified in the <a>CreateTrialComponent</a> request.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TrialComponentParameterValue
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string StringValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> NumberValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum TrialComponentPrimaryStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 4,
	}
	
	/// <summary>
	/// A short summary of a trial component.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TrialComponentSimpleSummary
	{
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string TrialComponentName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment-trial-component/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TrialComponentArn { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) and job type of the source of a trial component.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentSource TrialComponentSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		/// <summary>
		/// Information about the user who created or modified an experiment, trial, or trial component.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UserContext CreatedBy { get; set; }
	}
	
	/// <summary>
	/// A summary of the properties of a trial component. To get all the properties, call the <a>DescribeTrialComponent</a> API and provide the <code>TrialComponentName</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TrialComponentSummary
	{
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string TrialComponentName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment-trial-component/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TrialComponentArn { get; set; }
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) and job type of the source of a trial component.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentSource TrialComponentSource { get; set; }
		
		/// <summary>
		/// The status of the trial component.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TrialComponentStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		/// <summary>
		/// Information about the user who created or modified an experiment, trial, or trial component.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UserContext CreatedBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
		
		/// <summary>
		/// Information about the user who created or modified an experiment, trial, or trial component.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UserContext LastModifiedBy { get; set; }
	}
	
	/// <summary>
	/// A summary of the properties of a trial. To get the complete set of properties, call the <a>DescribeTrial</a> API and provide the <code>TrialName</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TrialSummary
	{
		
		/// <summary>
		/// Max length: 256
		/// Pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment-trial/.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256)]
		public string TrialArn { get; set; }
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string TrialName { get; set; }
		
		/// <summary>
		/// Max length: 82
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(82, MinimumLength=1)]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The source of the trial.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TrialSource TrialSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
	}
	
	/// <summary>
	/// The user profile details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UserProfileDetails
	{
		
		/// <summary>
		/// Max length: 63
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string DomainId { get; set; }
		
		/// <summary>
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(63)]
		public string UserProfileName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserProfileDetailsStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum UserProfileDetailsStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InService = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum VariantPropertyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DesiredInstanceCount = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DesiredWeight = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DataCaptureConfig = 2,
	}
	
	/// <summary>
	/// <p>Specifies a production variant property type for an Endpoint.</p> <p>If you are updating an endpoint with the <a>UpdateEndpointInput$RetainAllVariantProperties</a> option set to <code>true</code>, the <code>VariantProperty</code> objects listed in <a>UpdateEndpointInput$ExcludeRetainedVariantProperties</a> override the existing variant properties of the endpoint.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class VariantProperty
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VariantPropertyVariantPropertyType VariantPropertyType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum VariantPropertyVariantPropertyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DesiredInstanceCount = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DesiredWeight = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DataCaptureConfig = 2,
	}
	
	public partial class DemoClient
	{
		
		private System.Net.Http.HttpClient client;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public DemoClient(System.Net.Http.HttpClient client, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (client == null)
				throw new ArgumentNullException("Null HttpClient.", "client");

			if (client.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "client");

			this.client = client;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// <p>Adds or overwrites one or more tags for the specified Amazon SageMaker resource. You can add tags to notebook instances, training jobs, hyperparameter tuning jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations, and endpoints.</p> <p>Each tag consists of a key and an optional value. Tag keys must be unique per resource. For more information about tags, see For more information, see <a href="https://aws.amazon.com/answers/account-management/aws-tagging-strategies/">AWS Tagging Strategies</a>.</p> <note> <p>Tags that you add to a hyperparameter tuning job by calling this API are also added to any training jobs that the hyperparameter tuning job launches after you call this API, but not to training jobs that the hyperparameter tuning job launched before you called this API. To make sure that the tags associated with a hyperparameter tuning job are also added to all training jobs that the hyperparameter tuning job launches, add the tags when you first create the tuning job by specifying them in the <code>Tags</code> parameter of <a>CreateHyperParameterTuningJob</a> </p> </note>
		/// AddTags /#X-Amz-Target=SageMaker.AddTags
		/// </summary>
		/// <returns>Success</returns>
		public async Task<AddTagsOutput> AddTagsAsync(AddTagsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.AddTags";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<AddTagsOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Associates a trial component with a trial. A trial component can be associated with multiple trials. To disassociate a trial component from a trial, call the <a>DisassociateTrialComponent</a> API.
		/// AssociateTrialComponent /#X-Amz-Target=SageMaker.AssociateTrialComponent
		/// </summary>
		/// <returns>Success</returns>
		public async Task<AssociateTrialComponentResponse> AssociateTrialComponentAsync(AssociateTrialComponentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.AssociateTrialComponent";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<AssociateTrialComponentResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Create a machine learning algorithm that you can use in Amazon SageMaker and list in the AWS Marketplace.
		/// CreateAlgorithm /#X-Amz-Target=SageMaker.CreateAlgorithm
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateAlgorithmOutput> CreateAlgorithmAsync(CreateAlgorithmInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.CreateAlgorithm";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateAlgorithmOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a running App for the specified UserProfile. Supported Apps are JupyterServer, KernelGateway, and TensorBoard. This operation is automatically invoked by Amazon SageMaker Studio upon access to the associated Domain, and when new kernel configurations are selected by the user. A user may have multiple Apps active simultaneously. UserProfiles are limited to 5 concurrently running Apps at a time.
		/// CreateApp /#X-Amz-Target=SageMaker.CreateApp
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateAppResponse> CreateAppAsync(CreateAppRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.CreateApp";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateAppResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Creates an AutoPilot job.</p> <p>After you run an AutoPilot job, you can find the best performing model by calling , and then deploy that model by following the steps described in <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/ex1-deploy-model.html">Step 6.1: Deploy the Model to Amazon SageMaker Hosting Services</a>.</p> <p>For information about how to use AutoPilot, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-automate-model-development.html">Use AutoPilot to Automate Model Development</a>.</p>
		/// CreateAutoMLJob /#X-Amz-Target=SageMaker.CreateAutoMLJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateAutoMLJobResponse> CreateAutoMLJobAsync(CreateAutoMLJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.CreateAutoMLJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateAutoMLJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a Git repository as a resource in your Amazon SageMaker account. You can associate the repository with notebook instances so that you can use Git source control for the notebooks you create. The Git repository is a resource in your Amazon SageMaker account, so it can be associated with more than one notebook instance, and it persists independently from the lifecycle of any notebook instances it is associated with.</p> <p>The repository can be hosted either in <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">AWS CodeCommit</a> or in any other Git repository.</p>
		/// CreateCodeRepository /#X-Amz-Target=SageMaker.CreateCodeRepository
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateCodeRepositoryOutput> CreateCodeRepositoryAsync(CreateCodeRepositoryInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.CreateCodeRepository";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateCodeRepositoryOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Starts a model compilation job. After the model has been compiled, Amazon SageMaker saves the resulting model artifacts to an Amazon Simple Storage Service (Amazon S3) bucket that you specify. </p> <p>If you choose to host your model using Amazon SageMaker hosting services, you can use the resulting model artifacts as part of the model. You can also use the artifacts with AWS IoT Greengrass. In that case, deploy them as an ML resource.</p> <p>In the request body, you provide the following:</p> <ul> <li> <p>A name for the compilation job</p> </li> <li> <p> Information about the input model artifacts </p> </li> <li> <p>The output location for the compiled model and the device (target) that the model runs on </p> </li> <li> <p> <code>The Amazon Resource Name (ARN) of the IAM role that Amazon SageMaker assumes to perform the model compilation job</code> </p> </li> </ul> <p>You can also provide a <code>Tag</code> to track the model compilation job's resource use and costs. The response body contains the <code>CompilationJobArn</code> for the compiled job.</p> <p>To stop a model compilation job, use <a>StopCompilationJob</a>. To get information about a particular model compilation job, use <a>DescribeCompilationJob</a>. To get information about multiple model compilation jobs, use <a>ListCompilationJobs</a>.</p>
		/// CreateCompilationJob /#X-Amz-Target=SageMaker.CreateCompilationJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateCompilationJobResponse> CreateCompilationJobAsync(CreateCompilationJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.CreateCompilationJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateCompilationJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a <code>Domain</code> used by SageMaker Studio. A domain consists of an associated directory, a list of authorized users, and a variety of security, application, policy, and Amazon Virtual Private Cloud (VPC) configurations. An AWS account is limited to one domain per region. Users within a domain can share notebook files and other artifacts with each other.</p> <p>When a domain is created, an Amazon Elastic File System (EFS) volume is also created for use by all of the users within the domain. Each user receives a private home directory within the EFS for notebooks, Git repositories, and data files.</p> <p>All traffic between the domain and the EFS volume is communicated through the specified subnet IDs. All other traffic goes over the Internet through an Amazon SageMaker system VPC. The EFS traffic uses the NFS/TCP protocol over port 2049.</p> <important> <p>NFS traffic over TCP on port 2049 needs to be allowed in both inbound and outbound rules in order to launch a SageMaker Studio app successfully.</p> </important>
		/// CreateDomain /#X-Amz-Target=SageMaker.CreateDomain
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateDomainResponse> CreateDomainAsync(CreateDomainRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.CreateDomain";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateDomainResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Creates an endpoint using the endpoint configuration specified in the request. Amazon SageMaker uses the endpoint to provision resources and deploy models. You create the endpoint configuration with the <a>CreateEndpointConfig</a> API. </p> <p> Use this API to deploy models using Amazon SageMaker hosting services. </p> <p>For an example that calls this method when deploying a model to Amazon SageMaker hosting services, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/ex1-deploy-model.html#ex1-deploy-model-boto">Deploy the Model to Amazon SageMaker Hosting Services (AWS SDK for Python (Boto 3)).</a> </p> <note> <p> You must not delete an <code>EndpointConfig</code> that is in use by an endpoint that is live or while the <code>UpdateEndpoint</code> or <code>CreateEndpoint</code> operations are being performed on the endpoint. To update an endpoint, you must create a new <code>EndpointConfig</code>.</p> </note> <p>The endpoint name must be unique within an AWS Region in your AWS account. </p> <p>When it receives the request, Amazon SageMaker creates the endpoint, launches the resources (ML compute instances), and deploys the model(s) on them. </p> <note> <p>When you call <a>CreateEndpoint</a>, a load call is made to DynamoDB to verify that your endpoint configuration exists. When you read data from a DynamoDB table supporting <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadConsistency.html"> <code>Eventually Consistent Reads</code> </a>, the response might not reflect the results of a recently completed write operation. The response might include some stale data. If the dependent entities are not yet in DynamoDB, this causes a validation error. If you repeat your read request after a short time, the response should return the latest data. So retry logic is recommended to handle these possible issues. We also recommend that customers call <a>DescribeEndpointConfig</a> before calling <a>CreateEndpoint</a> to minimize the potential impact of a DynamoDB eventually consistent read.</p> </note> <p>When Amazon SageMaker receives the request, it sets the endpoint status to <code>Creating</code>. After it creates the endpoint, it sets the status to <code>InService</code>. Amazon SageMaker can then process incoming requests for inferences. To check the status of an endpoint, use the <a>DescribeEndpoint</a> API.</p> <p>If any of the models hosted at this endpoint get model data from an Amazon S3 location, Amazon SageMaker uses AWS Security Token Service to download model artifacts from the S3 path you provided. AWS STS is activated in your IAM user account by default. If you previously deactivated AWS STS for a region, you need to reactivate AWS STS for that region. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_enable-regions.html">Activating and Deactivating AWS STS in an AWS Region</a> in the <i>AWS Identity and Access Management User Guide</i>.</p>
		/// CreateEndpoint /#X-Amz-Target=SageMaker.CreateEndpoint
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateEndpointOutput> CreateEndpointAsync(CreateEndpointInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.CreateEndpoint";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateEndpointOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Creates an endpoint configuration that Amazon SageMaker hosting services uses to deploy models. In the configuration, you identify one or more models, created using the <code>CreateModel</code> API, to deploy and the resources that you want Amazon SageMaker to provision. Then you call the <a>CreateEndpoint</a> API.</p> <note> <p> Use this API if you want to use Amazon SageMaker hosting services to deploy models into production. </p> </note> <p>In the request, you define a <code>ProductionVariant</code>, for each model that you want to deploy. Each <code>ProductionVariant</code> parameter also describes the resources that you want Amazon SageMaker to provision. This includes the number and type of ML compute instances to deploy. </p> <p>If you are hosting multiple models, you also assign a <code>VariantWeight</code> to specify how much traffic you want to allocate to each model. For example, suppose that you want to host two models, A and B, and you assign traffic weight 2 for model A and 1 for model B. Amazon SageMaker distributes two-thirds of the traffic to Model A, and one-third to model B. </p> <p>For an example that calls this method when deploying a model to Amazon SageMaker hosting services, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/ex1-deploy-model.html#ex1-deploy-model-boto">Deploy the Model to Amazon SageMaker Hosting Services (AWS SDK for Python (Boto 3)).</a> </p> <note> <p>When you call <a>CreateEndpoint</a>, a load call is made to DynamoDB to verify that your endpoint configuration exists. When you read data from a DynamoDB table supporting <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadConsistency.html"> <code>Eventually Consistent Reads</code> </a>, the response might not reflect the results of a recently completed write operation. The response might include some stale data. If the dependent entities are not yet in DynamoDB, this causes a validation error. If you repeat your read request after a short time, the response should return the latest data. So retry logic is recommended to handle these possible issues. We also recommend that customers call <a>DescribeEndpointConfig</a> before calling <a>CreateEndpoint</a> to minimize the potential impact of a DynamoDB eventually consistent read.</p> </note>
		/// CreateEndpointConfig /#X-Amz-Target=SageMaker.CreateEndpointConfig
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateEndpointConfigOutput> CreateEndpointConfigAsync(CreateEndpointConfigInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.CreateEndpointConfig";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateEndpointConfigOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Creates an Amazon SageMaker <i>experiment</i>. An experiment is a collection of <i>trials</i> that are observed, compared and evaluated as a group. A trial is a set of steps, called <i>trial components</i>, that produce a machine learning model.</p> <p>The goal of an experiment is to determine the components that produce the best model. Multiple trials are performed, each one isolating and measuring the impact of a change to one or more inputs, while keeping the remaining inputs constant.</p> <p>When you use Amazon SageMaker Studio or the Amazon SageMaker Python SDK, all experiments, trials, and trial components are automatically tracked, logged, and indexed. When you use the AWS SDK for Python (Boto), you must use the logging APIs provided by the SDK.</p> <p>You can add tags to experiments, trials, trial components and then use the <a>Search</a> API to search for the tags.</p> <p>To add a description to an experiment, specify the optional <code>Description</code> parameter. To add a description later, or to change the description, call the <a>UpdateExperiment</a> API.</p> <p>To get a list of all your experiments, call the <a>ListExperiments</a> API. To view an experiment's properties, call the <a>DescribeExperiment</a> API. To get a list of all the trials associated with an experiment, call the <a>ListTrials</a> API. To create a trial call the <a>CreateTrial</a> API.</p>
		/// CreateExperiment /#X-Amz-Target=SageMaker.CreateExperiment
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateExperimentResponse> CreateExperimentAsync(CreateExperimentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.CreateExperiment";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateExperimentResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a flow definition.
		/// CreateFlowDefinition /#X-Amz-Target=SageMaker.CreateFlowDefinition
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateFlowDefinitionResponse> CreateFlowDefinitionAsync(CreateFlowDefinitionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.CreateFlowDefinition";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateFlowDefinitionResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Defines the settings you will use for the human review workflow user interface. Reviewers will see a three-panel interface with an instruction area, the item to review, and an input area.
		/// CreateHumanTaskUi /#X-Amz-Target=SageMaker.CreateHumanTaskUi
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateHumanTaskUiResponse> CreateHumanTaskUiAsync(CreateHumanTaskUiRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.CreateHumanTaskUi";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateHumanTaskUiResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Starts a hyperparameter tuning job. A hyperparameter tuning job finds the best version of a model by running many training jobs on your dataset using the algorithm you choose and values for hyperparameters within ranges that you specify. It then chooses the hyperparameter values that result in a model that performs the best, as measured by an objective metric that you choose.
		/// CreateHyperParameterTuningJob /#X-Amz-Target=SageMaker.CreateHyperParameterTuningJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateHyperParameterTuningJobResponse> CreateHyperParameterTuningJobAsync(CreateHyperParameterTuningJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.CreateHyperParameterTuningJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateHyperParameterTuningJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a job that uses workers to label the data objects in your input dataset. You can use the labeled data to train machine learning models.</p> <p>You can select your workforce from one of three providers:</p> <ul> <li> <p>A private workforce that you create. It can include employees, contractors, and outside experts. Use a private workforce when want the data to stay within your organization or when a specific set of skills is required.</p> </li> <li> <p>One or more vendors that you select from the AWS Marketplace. Vendors provide expertise in specific areas. </p> </li> <li> <p>The Amazon Mechanical Turk workforce. This is the largest workforce, but it should only be used for public data or data that has been stripped of any personally identifiable information.</p> </li> </ul> <p>You can also use <i>automated data labeling</i> to reduce the number of data objects that need to be labeled by a human. Automated data labeling uses <i>active learning</i> to determine if a data object can be labeled by machine or if it needs to be sent to a human worker. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-automated-labeling.html">Using Automated Data Labeling</a>.</p> <p>The data objects to be labeled are contained in an Amazon S3 bucket. You create a <i>manifest file</i> that describes the location of each object. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-data.html">Using Input and Output Data</a>.</p> <p>The output can be used as the manifest file for another labeling job or as training data for your machine learning models.</p>
		/// CreateLabelingJob /#X-Amz-Target=SageMaker.CreateLabelingJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateLabelingJobResponse> CreateLabelingJobAsync(CreateLabelingJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.CreateLabelingJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateLabelingJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a model in Amazon SageMaker. In the request, you name the model and describe a primary container. For the primary container, you specify the Docker image that contains inference code, artifacts (from prior training), and a custom environment map that the inference code uses when you deploy the model for predictions.</p> <p>Use this API to create a model if you want to use Amazon SageMaker hosting services or run a batch transform job.</p> <p>To host your model, you create an endpoint configuration with the <code>CreateEndpointConfig</code> API, and then create an endpoint with the <code>CreateEndpoint</code> API. Amazon SageMaker then deploys all of the containers that you defined for the model in the hosting environment. </p> <p>For an example that calls this method when deploying a model to Amazon SageMaker hosting services, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/ex1-deploy-model.html#ex1-deploy-model-boto">Deploy the Model to Amazon SageMaker Hosting Services (AWS SDK for Python (Boto 3)).</a> </p> <p>To run a batch transform using your model, you start a job with the <code>CreateTransformJob</code> API. Amazon SageMaker uses your model and your dataset to get inferences which are then saved to a specified S3 location.</p> <p>In the <code>CreateModel</code> request, you must define a container with the <code>PrimaryContainer</code> parameter.</p> <p>In the request, you also provide an IAM role that Amazon SageMaker can assume to access model artifacts and docker image for deployment on ML compute hosting instances or for batch transform jobs. In addition, you also use the IAM role to manage permissions the inference code needs. For example, if the inference code access any other AWS resources, you grant necessary permissions via this role.</p>
		/// CreateModel /#X-Amz-Target=SageMaker.CreateModel
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateModelOutput> CreateModelAsync(CreateModelInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.CreateModel";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateModelOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a model package that you can use to create Amazon SageMaker models or list on AWS Marketplace. Buyers can subscribe to model packages listed on AWS Marketplace to create models in Amazon SageMaker.</p> <p>To create a model package by specifying a Docker container that contains your inference code and the Amazon S3 location of your model artifacts, provide values for <code>InferenceSpecification</code>. To create a model from an algorithm resource that you created or subscribed to in AWS Marketplace, provide a value for <code>SourceAlgorithmSpecification</code>.</p>
		/// CreateModelPackage /#X-Amz-Target=SageMaker.CreateModelPackage
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateModelPackageOutput> CreateModelPackageAsync(CreateModelPackageInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.CreateModelPackage";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateModelPackageOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a schedule that regularly starts Amazon SageMaker Processing Jobs to monitor the data captured for an Amazon SageMaker Endoint.
		/// CreateMonitoringSchedule /#X-Amz-Target=SageMaker.CreateMonitoringSchedule
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateMonitoringScheduleResponse> CreateMonitoringScheduleAsync(CreateMonitoringScheduleRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.CreateMonitoringSchedule";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateMonitoringScheduleResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Creates an Amazon SageMaker notebook instance. A notebook instance is a machine learning (ML) compute instance running on a Jupyter notebook. </p> <p>In a <code>CreateNotebookInstance</code> request, specify the type of ML compute instance that you want to run. Amazon SageMaker launches the instance, installs common libraries that you can use to explore datasets for model training, and attaches an ML storage volume to the notebook instance. </p> <p>Amazon SageMaker also provides a set of example notebooks. Each notebook demonstrates how to use Amazon SageMaker with a specific algorithm or with a machine learning framework. </p> <p>After receiving the request, Amazon SageMaker does the following:</p> <ol> <li> <p>Creates a network interface in the Amazon SageMaker VPC.</p> </li> <li> <p>(Option) If you specified <code>SubnetId</code>, Amazon SageMaker creates a network interface in your own VPC, which is inferred from the subnet ID that you provide in the input. When creating this network interface, Amazon SageMaker attaches the security group that you specified in the request to the network interface that it creates in your VPC.</p> </li> <li> <p>Launches an EC2 instance of the type specified in the request in the Amazon SageMaker VPC. If you specified <code>SubnetId</code> of your VPC, Amazon SageMaker specifies both network interfaces when launching this instance. This enables inbound traffic from your own VPC to the notebook instance, assuming that the security groups allow it.</p> </li> </ol> <p>After creating the notebook instance, Amazon SageMaker returns its Amazon Resource Name (ARN). You can't change the name of a notebook instance after you create it.</p> <p>After Amazon SageMaker creates the notebook instance, you can connect to the Jupyter server and work in Jupyter notebooks. For example, you can write code to explore a dataset that you can use for model training, train a model, host models by creating Amazon SageMaker endpoints, and validate hosted models. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/how-it-works.html">How It Works</a>. </p>
		/// CreateNotebookInstance /#X-Amz-Target=SageMaker.CreateNotebookInstance
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateNotebookInstanceOutput> CreateNotebookInstanceAsync(CreateNotebookInstanceInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.CreateNotebookInstance";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateNotebookInstanceOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a lifecycle configuration that you can associate with a notebook instance. A <i>lifecycle configuration</i> is a collection of shell scripts that run when you create or start a notebook instance.</p> <p>Each lifecycle configuration script has a limit of 16384 characters.</p> <p>The value of the <code>$PATH</code> environment variable that is available to both scripts is <code>/sbin:bin:/usr/sbin:/usr/bin</code>.</p> <p>View CloudWatch Logs for notebook instance lifecycle configurations in log group <code>/aws/sagemaker/NotebookInstances</code> in log stream <code>[notebook-instance-name]/[LifecycleConfigHook]</code>.</p> <p>Lifecycle configuration scripts cannot run for longer than 5 minutes. If a script runs for longer than 5 minutes, it fails and the notebook instance is not created or started.</p> <p>For information about notebook instance lifestyle configurations, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html">Step 2.1: (Optional) Customize a Notebook Instance</a>.</p>
		/// CreateNotebookInstanceLifecycleConfig /#X-Amz-Target=SageMaker.CreateNotebookInstanceLifecycleConfig
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateNotebookInstanceLifecycleConfigOutput> CreateNotebookInstanceLifecycleConfigAsync(CreateNotebookInstanceLifecycleConfigInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.CreateNotebookInstanceLifecycleConfig";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateNotebookInstanceLifecycleConfigOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a URL for a specified UserProfile in a Domain. When accessed in a web browser, the user will be automatically signed in to Amazon SageMaker Studio, and granted access to all of the Apps and files associated with the Domain's Amazon Elastic File System (EFS) volume. This operation can only be called when the authentication mode equals IAM.
		/// CreatePresignedDomainUrl /#X-Amz-Target=SageMaker.CreatePresignedDomainUrl
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreatePresignedDomainUrlResponse> CreatePresignedDomainUrlAsync(CreatePresignedDomainUrlRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.CreatePresignedDomainUrl";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreatePresignedDomainUrlResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Returns a URL that you can use to connect to the Jupyter server from a notebook instance. In the Amazon SageMaker console, when you choose <code>Open</code> next to a notebook instance, Amazon SageMaker opens a new tab showing the Jupyter server home page from the notebook instance. The console uses this API to get the URL and show the page.</p> <p> The IAM role or user used to call this API defines the permissions to access the notebook instance. Once the presigned URL is created, no additional permission is required to access this URL. IAM authorization policies for this API are also enforced for every HTTP request and WebSocket frame that attempts to connect to the notebook instance.</p> <p>You can restrict access to this API and to the URL that it returns to a list of IP addresses that you specify. Use the <code>NotIpAddress</code> condition operator and the <code>aws:SourceIP</code> condition context key to specify the list of IP addresses that you want to have access to the notebook instance. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/security_iam_id-based-policy-examples.html#nbi-ip-filter">Limit Access to a Notebook Instance by IP Address</a>.</p> <note> <p>The URL that you get from a call to <a>CreatePresignedNotebookInstanceUrl</a> is valid only for 5 minutes. If you try to use the URL after the 5-minute limit expires, you are directed to the AWS console sign-in page.</p> </note>
		/// CreatePresignedNotebookInstanceUrl /#X-Amz-Target=SageMaker.CreatePresignedNotebookInstanceUrl
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreatePresignedNotebookInstanceUrlOutput> CreatePresignedNotebookInstanceUrlAsync(CreatePresignedNotebookInstanceUrlInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.CreatePresignedNotebookInstanceUrl";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreatePresignedNotebookInstanceUrlOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a processing job.
		/// CreateProcessingJob /#X-Amz-Target=SageMaker.CreateProcessingJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateProcessingJobResponse> CreateProcessingJobAsync(CreateProcessingJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.CreateProcessingJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateProcessingJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Starts a model training job. After training completes, Amazon SageMaker saves the resulting model artifacts to an Amazon S3 location that you specify. </p> <p>If you choose to host your model using Amazon SageMaker hosting services, you can use the resulting model artifacts as part of the model. You can also use the artifacts in a machine learning service other than Amazon SageMaker, provided that you know how to use them for inferences. </p> <p>In the request body, you provide the following: </p> <ul> <li> <p> <code>AlgorithmSpecification</code> - Identifies the training algorithm to use. </p> </li> <li> <p> <code>HyperParameters</code> - Specify these algorithm-specific parameters to enable the estimation of model parameters during training. Hyperparameters can be tuned to optimize this learning process. For a list of hyperparameters for each training algorithm provided by Amazon SageMaker, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. </p> </li> <li> <p> <code>InputDataConfig</code> - Describes the training dataset and the Amazon S3, EFS, or FSx location where it is stored.</p> </li> <li> <p> <code>OutputDataConfig</code> - Identifies the Amazon S3 bucket where you want Amazon SageMaker to save the results of model training. </p> <p/> </li> <li> <p> <code>ResourceConfig</code> - Identifies the resources, ML compute instances, and ML storage volumes to deploy for model training. In distributed training, you specify more than one instance. </p> </li> <li> <p> <code>EnableManagedSpotTraining</code> - Optimize the cost of training machine learning models by up to 80% by using Amazon EC2 Spot instances. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/model-managed-spot-training.html">Managed Spot Training</a>. </p> </li> <li> <p> <code>RoleARN</code> - The Amazon Resource Number (ARN) that Amazon SageMaker assumes to perform tasks on your behalf during model training. You must grant this role the necessary permissions so that Amazon SageMaker can successfully complete model training. </p> </li> <li> <p> <code>StoppingCondition</code> - To help cap training costs, use <code>MaxRuntimeInSeconds</code> to set a time limit for training. Use <code>MaxWaitTimeInSeconds</code> to specify how long you are willing to wait for a managed spot training job to complete. </p> </li> </ul> <p> For more information about Amazon SageMaker, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/how-it-works.html">How It Works</a>. </p>
		/// CreateTrainingJob /#X-Amz-Target=SageMaker.CreateTrainingJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateTrainingJobResponse> CreateTrainingJobAsync(CreateTrainingJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.CreateTrainingJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateTrainingJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Starts a transform job. A transform job uses a trained model to get inferences on a dataset and saves these results to an Amazon S3 location that you specify.</p> <p>To perform batch transformations, you create a transform job and use the data that you have readily available.</p> <p>In the request body, you provide the following:</p> <ul> <li> <p> <code>TransformJobName</code> - Identifies the transform job. The name must be unique within an AWS Region in an AWS account.</p> </li> <li> <p> <code>ModelName</code> - Identifies the model to use. <code>ModelName</code> must be the name of an existing Amazon SageMaker model in the same AWS Region and AWS account. For information on creating a model, see <a>CreateModel</a>.</p> </li> <li> <p> <code>TransformInput</code> - Describes the dataset to be transformed and the Amazon S3 location where it is stored.</p> </li> <li> <p> <code>TransformOutput</code> - Identifies the Amazon S3 location where you want Amazon SageMaker to save the results from the transform job.</p> </li> <li> <p> <code>TransformResources</code> - Identifies the ML compute instances for the transform job.</p> </li> </ul> <p>For more information about how batch transformation works, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform.html">Batch Transform</a>.</p>
		/// CreateTransformJob /#X-Amz-Target=SageMaker.CreateTransformJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateTransformJobResponse> CreateTransformJobAsync(CreateTransformJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.CreateTransformJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateTransformJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Creates an Amazon SageMaker <i>trial</i>. A trial is a set of steps called <i>trial components</i> that produce a machine learning model. A trial is part of a single Amazon SageMaker <i>experiment</i>.</p> <p>When you use Amazon SageMaker Studio or the Amazon SageMaker Python SDK, all experiments, trials, and trial components are automatically tracked, logged, and indexed. When you use the AWS SDK for Python (Boto), you must use the logging APIs provided by the SDK.</p> <p>You can add tags to a trial and then use the <a>Search</a> API to search for the tags.</p> <p>To get a list of all your trials, call the <a>ListTrials</a> API. To view a trial's properties, call the <a>DescribeTrial</a> API. To create a trial component, call the <a>CreateTrialComponent</a> API.</p>
		/// CreateTrial /#X-Amz-Target=SageMaker.CreateTrial
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateTrialResponse> CreateTrialAsync(CreateTrialRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.CreateTrial";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateTrialResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a <i>trial component</i>, which is a stage of a machine learning <i>trial</i>. A trial is composed of one or more trial components. A trial component can be used in multiple trials.</p> <p>Trial components include pre-processing jobs, training jobs, and batch transform jobs.</p> <p>When you use Amazon SageMaker Studio or the Amazon SageMaker Python SDK, all experiments, trials, and trial components are automatically tracked, logged, and indexed. When you use the AWS SDK for Python (Boto), you must use the logging APIs provided by the SDK.</p> <p>You can add tags to a trial component and then use the <a>Search</a> API to search for the tags.</p> <note> <p> <code>CreateTrialComponent</code> can only be invoked from within an Amazon SageMaker managed environment. This includes Amazon SageMaker training jobs, processing jobs, transform jobs, and Amazon SageMaker notebooks. A call to <code>CreateTrialComponent</code> from outside one of these environments results in an error.</p> </note>
		/// CreateTrialComponent /#X-Amz-Target=SageMaker.CreateTrialComponent
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateTrialComponentResponse> CreateTrialComponentAsync(CreateTrialComponentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.CreateTrialComponent";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateTrialComponentResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a user profile. A user profile represents a single user within a domain, and is the main way to reference a "person" for the purposes of sharing, reporting, and other user-oriented features. This entity is created when a user onboards to Amazon SageMaker Studio. If an administrator invites a person by email or imports them from SSO, a user profile is automatically created. A user profile is the primary holder of settings for an individual user and has a reference to the user's private Amazon Elastic File System (EFS) home directory.
		/// CreateUserProfile /#X-Amz-Target=SageMaker.CreateUserProfile
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateUserProfileResponse> CreateUserProfileAsync(CreateUserProfileRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.CreateUserProfile";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateUserProfileResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a new work team for labeling your data. A work team is defined by one or more Amazon Cognito user pools. You must first create the user pools before you can create a work team.</p> <p>You cannot create more than 25 work teams in an account and region.</p>
		/// CreateWorkteam /#X-Amz-Target=SageMaker.CreateWorkteam
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateWorkteamResponse> CreateWorkteamAsync(CreateWorkteamRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.CreateWorkteam";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateWorkteamResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Removes the specified algorithm from your account.
		/// DeleteAlgorithm /#X-Amz-Target=SageMaker.DeleteAlgorithm
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeleteAlgorithmAsync(DeleteAlgorithmInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DeleteAlgorithm";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Used to stop and delete an app.
		/// DeleteApp /#X-Amz-Target=SageMaker.DeleteApp
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeleteAppAsync(DeleteAppRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DeleteApp";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes the specified Git repository from your account.
		/// DeleteCodeRepository /#X-Amz-Target=SageMaker.DeleteCodeRepository
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeleteCodeRepositoryAsync(DeleteCodeRepositoryInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DeleteCodeRepository";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Used to delete a domain. If you onboarded with IAM mode, you will need to delete your domain to onboard again using SSO. Use with caution. All of the members of the domain will lose access to their EFS volume, including data, notebooks, and other artifacts.
		/// DeleteDomain /#X-Amz-Target=SageMaker.DeleteDomain
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeleteDomainAsync(DeleteDomainRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DeleteDomain";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes an endpoint. Amazon SageMaker frees up all of the resources that were deployed when the endpoint was created. </p> <p>Amazon SageMaker retires any custom KMS key grants associated with the endpoint, meaning you don't need to use the <a href="http://docs.aws.amazon.com/kms/latest/APIReference/API_RevokeGrant.html">RevokeGrant</a> API call.</p>
		/// DeleteEndpoint /#X-Amz-Target=SageMaker.DeleteEndpoint
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeleteEndpointAsync(DeleteEndpointInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DeleteEndpoint";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes an endpoint configuration. The <code>DeleteEndpointConfig</code> API deletes only the specified configuration. It does not delete endpoints created using the configuration. </p> <p>You must not delete an <code>EndpointConfig</code> in use by an endpoint that is live or while the <code>UpdateEndpoint</code> or <code>CreateEndpoint</code> operations are being performed on the endpoint. If you delete the <code>EndpointConfig</code> of an endpoint that is active or being created or updated you may lose visibility into the instance type the endpoint is using. The endpoint must be deleted in order to stop incurring charges.</p>
		/// DeleteEndpointConfig /#X-Amz-Target=SageMaker.DeleteEndpointConfig
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeleteEndpointConfigAsync(DeleteEndpointConfigInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DeleteEndpointConfig";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes an Amazon SageMaker experiment. All trials associated with the experiment must be deleted first. Use the <a>ListTrials</a> API to get a list of the trials associated with the experiment.
		/// DeleteExperiment /#X-Amz-Target=SageMaker.DeleteExperiment
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteExperimentResponse> DeleteExperimentAsync(DeleteExperimentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DeleteExperiment";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteExperimentResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes the specified flow definition.
		/// DeleteFlowDefinition /#X-Amz-Target=SageMaker.DeleteFlowDefinition
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteFlowDefinitionResponse> DeleteFlowDefinitionAsync(DeleteFlowDefinitionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DeleteFlowDefinition";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteFlowDefinitionResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes a model. The <code>DeleteModel</code> API deletes only the model entry that was created in Amazon SageMaker when you called the <a>CreateModel</a> API. It does not delete model artifacts, inference code, or the IAM role that you specified when creating the model.
		/// DeleteModel /#X-Amz-Target=SageMaker.DeleteModel
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeleteModelAsync(DeleteModelInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DeleteModel";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a model package.</p> <p>A model package is used to create Amazon SageMaker models or list on AWS Marketplace. Buyers can subscribe to model packages listed on AWS Marketplace to create models in Amazon SageMaker.</p>
		/// DeleteModelPackage /#X-Amz-Target=SageMaker.DeleteModelPackage
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeleteModelPackageAsync(DeleteModelPackageInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DeleteModelPackage";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes a monitoring schedule. Also stops the schedule had not already been stopped. This does not delete the job execution history of the monitoring schedule.
		/// DeleteMonitoringSchedule /#X-Amz-Target=SageMaker.DeleteMonitoringSchedule
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeleteMonitoringScheduleAsync(DeleteMonitoringScheduleRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DeleteMonitoringSchedule";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p> Deletes an Amazon SageMaker notebook instance. Before you can delete a notebook instance, you must call the <code>StopNotebookInstance</code> API. </p> <important> <p>When you delete a notebook instance, you lose all of your data. Amazon SageMaker removes the ML compute instance, and deletes the ML storage volume and the network interface associated with the notebook instance. </p> </important>
		/// DeleteNotebookInstance /#X-Amz-Target=SageMaker.DeleteNotebookInstance
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeleteNotebookInstanceAsync(DeleteNotebookInstanceInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DeleteNotebookInstance";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes a notebook instance lifecycle configuration.
		/// DeleteNotebookInstanceLifecycleConfig /#X-Amz-Target=SageMaker.DeleteNotebookInstanceLifecycleConfig
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeleteNotebookInstanceLifecycleConfigAsync(DeleteNotebookInstanceLifecycleConfigInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DeleteNotebookInstanceLifecycleConfig";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes the specified tags from an Amazon SageMaker resource.</p> <p>To list a resource's tags, use the <code>ListTags</code> API. </p> <note> <p>When you call this API to delete tags from a hyperparameter tuning job, the deleted tags are not removed from training jobs that the hyperparameter tuning job launched before you called this API.</p> </note>
		/// DeleteTags /#X-Amz-Target=SageMaker.DeleteTags
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteTagsOutput> DeleteTagsAsync(DeleteTagsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DeleteTags";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteTagsOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes the specified trial. All trial components that make up the trial must be deleted first. Use the <a>DescribeTrialComponent</a> API to get the list of trial components.
		/// DeleteTrial /#X-Amz-Target=SageMaker.DeleteTrial
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteTrialResponse> DeleteTrialAsync(DeleteTrialRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DeleteTrial";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteTrialResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes the specified trial component. A trial component must be disassociated from all trials before the trial component can be deleted. To disassociate a trial component from a trial, call the <a>DisassociateTrialComponent</a> API.
		/// DeleteTrialComponent /#X-Amz-Target=SageMaker.DeleteTrialComponent
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteTrialComponentResponse> DeleteTrialComponentAsync(DeleteTrialComponentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DeleteTrialComponent";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteTrialComponentResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes a user profile. When a user profile is deleted, the user loses access to their EFS volume, including data, notebooks, and other artifacts.
		/// DeleteUserProfile /#X-Amz-Target=SageMaker.DeleteUserProfile
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeleteUserProfileAsync(DeleteUserProfileRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DeleteUserProfile";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes an existing work team. This operation can't be undone.
		/// DeleteWorkteam /#X-Amz-Target=SageMaker.DeleteWorkteam
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteWorkteamResponse> DeleteWorkteamAsync(DeleteWorkteamRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DeleteWorkteam";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteWorkteamResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns a description of the specified algorithm that is in your account.
		/// DescribeAlgorithm /#X-Amz-Target=SageMaker.DescribeAlgorithm
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeAlgorithmOutput> DescribeAlgorithmAsync(DescribeAlgorithmInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DescribeAlgorithm";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeAlgorithmOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Describes the app.
		/// DescribeApp /#X-Amz-Target=SageMaker.DescribeApp
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeAppResponse> DescribeAppAsync(DescribeAppRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DescribeApp";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeAppResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns information about an Amazon SageMaker job.
		/// DescribeAutoMLJob /#X-Amz-Target=SageMaker.DescribeAutoMLJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeAutoMLJobResponse> DescribeAutoMLJobAsync(DescribeAutoMLJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DescribeAutoMLJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeAutoMLJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets details about the specified Git repository.
		/// DescribeCodeRepository /#X-Amz-Target=SageMaker.DescribeCodeRepository
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeCodeRepositoryOutput> DescribeCodeRepositoryAsync(DescribeCodeRepositoryInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DescribeCodeRepository";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeCodeRepositoryOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Returns information about a model compilation job.</p> <p>To create a model compilation job, use <a>CreateCompilationJob</a>. To get information about multiple model compilation jobs, use <a>ListCompilationJobs</a>.</p>
		/// DescribeCompilationJob /#X-Amz-Target=SageMaker.DescribeCompilationJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeCompilationJobResponse> DescribeCompilationJobAsync(DescribeCompilationJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DescribeCompilationJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeCompilationJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// The description of the domain.
		/// DescribeDomain /#X-Amz-Target=SageMaker.DescribeDomain
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeDomainResponse> DescribeDomainAsync(DescribeDomainRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DescribeDomain";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeDomainResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns the description of an endpoint.
		/// DescribeEndpoint /#X-Amz-Target=SageMaker.DescribeEndpoint
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeEndpointOutput> DescribeEndpointAsync(DescribeEndpointInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DescribeEndpoint";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeEndpointOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns the description of an endpoint configuration created using the <code>CreateEndpointConfig</code> API.
		/// DescribeEndpointConfig /#X-Amz-Target=SageMaker.DescribeEndpointConfig
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeEndpointConfigOutput> DescribeEndpointConfigAsync(DescribeEndpointConfigInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DescribeEndpointConfig";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeEndpointConfigOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Provides a list of an experiment's properties.
		/// DescribeExperiment /#X-Amz-Target=SageMaker.DescribeExperiment
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeExperimentResponse> DescribeExperimentAsync(DescribeExperimentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DescribeExperiment";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeExperimentResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns information about the specified flow definition.
		/// DescribeFlowDefinition /#X-Amz-Target=SageMaker.DescribeFlowDefinition
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeFlowDefinitionResponse> DescribeFlowDefinitionAsync(DescribeFlowDefinitionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DescribeFlowDefinition";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeFlowDefinitionResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns information about the requested human task user interface.
		/// DescribeHumanTaskUi /#X-Amz-Target=SageMaker.DescribeHumanTaskUi
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeHumanTaskUiResponse> DescribeHumanTaskUiAsync(DescribeHumanTaskUiRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DescribeHumanTaskUi";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeHumanTaskUiResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets a description of a hyperparameter tuning job.
		/// DescribeHyperParameterTuningJob /#X-Amz-Target=SageMaker.DescribeHyperParameterTuningJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeHyperParameterTuningJobResponse> DescribeHyperParameterTuningJobAsync(DescribeHyperParameterTuningJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DescribeHyperParameterTuningJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeHyperParameterTuningJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets information about a labeling job.
		/// DescribeLabelingJob /#X-Amz-Target=SageMaker.DescribeLabelingJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeLabelingJobResponse> DescribeLabelingJobAsync(DescribeLabelingJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DescribeLabelingJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeLabelingJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Describes a model that you created using the <code>CreateModel</code> API.
		/// DescribeModel /#X-Amz-Target=SageMaker.DescribeModel
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeModelOutput> DescribeModelAsync(DescribeModelInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DescribeModel";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeModelOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Returns a description of the specified model package, which is used to create Amazon SageMaker models or list them on AWS Marketplace.</p> <p>To create models in Amazon SageMaker, buyers can subscribe to model packages listed on AWS Marketplace.</p>
		/// DescribeModelPackage /#X-Amz-Target=SageMaker.DescribeModelPackage
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeModelPackageOutput> DescribeModelPackageAsync(DescribeModelPackageInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DescribeModelPackage";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeModelPackageOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Describes the schedule for a monitoring job.
		/// DescribeMonitoringSchedule /#X-Amz-Target=SageMaker.DescribeMonitoringSchedule
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeMonitoringScheduleResponse> DescribeMonitoringScheduleAsync(DescribeMonitoringScheduleRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DescribeMonitoringSchedule";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeMonitoringScheduleResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns information about a notebook instance.
		/// DescribeNotebookInstance /#X-Amz-Target=SageMaker.DescribeNotebookInstance
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeNotebookInstanceOutput> DescribeNotebookInstanceAsync(DescribeNotebookInstanceInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DescribeNotebookInstance";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeNotebookInstanceOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Returns a description of a notebook instance lifecycle configuration.</p> <p>For information about notebook instance lifestyle configurations, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html">Step 2.1: (Optional) Customize a Notebook Instance</a>.</p>
		/// DescribeNotebookInstanceLifecycleConfig /#X-Amz-Target=SageMaker.DescribeNotebookInstanceLifecycleConfig
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeNotebookInstanceLifecycleConfigOutput> DescribeNotebookInstanceLifecycleConfigAsync(DescribeNotebookInstanceLifecycleConfigInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DescribeNotebookInstanceLifecycleConfig";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeNotebookInstanceLifecycleConfigOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns a description of a processing job.
		/// DescribeProcessingJob /#X-Amz-Target=SageMaker.DescribeProcessingJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeProcessingJobResponse> DescribeProcessingJobAsync(DescribeProcessingJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DescribeProcessingJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeProcessingJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets information about a work team provided by a vendor. It returns details about the subscription with a vendor in the AWS Marketplace.
		/// DescribeSubscribedWorkteam /#X-Amz-Target=SageMaker.DescribeSubscribedWorkteam
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeSubscribedWorkteamResponse> DescribeSubscribedWorkteamAsync(DescribeSubscribedWorkteamRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DescribeSubscribedWorkteam";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeSubscribedWorkteamResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns information about a training job.
		/// DescribeTrainingJob /#X-Amz-Target=SageMaker.DescribeTrainingJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeTrainingJobResponse> DescribeTrainingJobAsync(DescribeTrainingJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DescribeTrainingJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeTrainingJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns information about a transform job.
		/// DescribeTransformJob /#X-Amz-Target=SageMaker.DescribeTransformJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeTransformJobResponse> DescribeTransformJobAsync(DescribeTransformJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DescribeTransformJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeTransformJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Provides a list of a trial's properties.
		/// DescribeTrial /#X-Amz-Target=SageMaker.DescribeTrial
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeTrialResponse> DescribeTrialAsync(DescribeTrialRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DescribeTrial";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeTrialResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Provides a list of a trials component's properties.
		/// DescribeTrialComponent /#X-Amz-Target=SageMaker.DescribeTrialComponent
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeTrialComponentResponse> DescribeTrialComponentAsync(DescribeTrialComponentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DescribeTrialComponent";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeTrialComponentResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Describes a user profile. For more information, see <code>CreateUserProfile</code>.
		/// DescribeUserProfile /#X-Amz-Target=SageMaker.DescribeUserProfile
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeUserProfileResponse> DescribeUserProfileAsync(DescribeUserProfileRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DescribeUserProfile";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeUserProfileResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Lists private workforce information, including workforce name, Amazon Resource Name (ARN), and, if applicable, allowed IP address ranges (<a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">CIDRs</a>). Allowable IP address ranges are the IP addresses that workers can use to access tasks. </p> <important> <p>This operation applies only to private workforces.</p> </important>
		/// DescribeWorkforce /#X-Amz-Target=SageMaker.DescribeWorkforce
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeWorkforceResponse> DescribeWorkforceAsync(DescribeWorkforceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DescribeWorkforce";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeWorkforceResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets information about a specific work team. You can see information such as the create date, the last updated date, membership information, and the work team's Amazon Resource Name (ARN).
		/// DescribeWorkteam /#X-Amz-Target=SageMaker.DescribeWorkteam
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeWorkteamResponse> DescribeWorkteamAsync(DescribeWorkteamRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DescribeWorkteam";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeWorkteamResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Disassociates a trial component from a trial. This doesn't effect other trials the component is associated with. Before you can delete a component, you must disassociate the component from all trials it is associated with. To associate a trial component with a trial, call the <a>AssociateTrialComponent</a> API.</p> <p>To get a list of the trials a component is associated with, use the <a>Search</a> API. Specify <code>ExperimentTrialComponent</code> for the <code>Resource</code> parameter. The list appears in the response under <code>Results.TrialComponent.Parents</code>.</p>
		/// DisassociateTrialComponent /#X-Amz-Target=SageMaker.DisassociateTrialComponent
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DisassociateTrialComponentResponse> DisassociateTrialComponentAsync(DisassociateTrialComponentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.DisassociateTrialComponent";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DisassociateTrialComponentResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// An auto-complete API for the search functionality in the Amazon SageMaker console. It returns suggestions of possible matches for the property name to use in <code>Search</code> queries. Provides suggestions for <code>HyperParameters</code>, <code>Tags</code>, and <code>Metrics</code>.
		/// GetSearchSuggestions /#X-Amz-Target=SageMaker.GetSearchSuggestions
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetSearchSuggestionsResponse> GetSearchSuggestionsAsync(GetSearchSuggestionsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.GetSearchSuggestions";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<GetSearchSuggestionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists the machine learning algorithms that have been created.
		/// ListAlgorithms /#X-Amz-Target=SageMaker.ListAlgorithms
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListAlgorithmsOutput> ListAlgorithmsAsync(string MaxResults, string NextToken, ListAlgorithmsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListAlgorithms?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListAlgorithmsOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists apps.
		/// ListApps /#X-Amz-Target=SageMaker.ListApps
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListAppsResponse> ListAppsAsync(string MaxResults, string NextToken, ListAppsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListApps?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListAppsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Request a list of jobs.
		/// ListAutoMLJobs /#X-Amz-Target=SageMaker.ListAutoMLJobs
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListAutoMLJobsResponse> ListAutoMLJobsAsync(string MaxResults, string NextToken, ListAutoMLJobsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListAutoMLJobs?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListAutoMLJobsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// List the Candidates created for the job.
		/// ListCandidatesForAutoMLJob /#X-Amz-Target=SageMaker.ListCandidatesForAutoMLJob
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListCandidatesForAutoMLJobResponse> ListCandidatesForAutoMLJobAsync(string MaxResults, string NextToken, ListCandidatesForAutoMLJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListCandidatesForAutoMLJob?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListCandidatesForAutoMLJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets a list of the Git repositories in your account.
		/// ListCodeRepositories /#X-Amz-Target=SageMaker.ListCodeRepositories
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListCodeRepositoriesOutput> ListCodeRepositoriesAsync(string MaxResults, string NextToken, ListCodeRepositoriesInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListCodeRepositories?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListCodeRepositoriesOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Lists model compilation jobs that satisfy various filters.</p> <p>To create a model compilation job, use <a>CreateCompilationJob</a>. To get information about a particular model compilation job you have created, use <a>DescribeCompilationJob</a>.</p>
		/// ListCompilationJobs /#X-Amz-Target=SageMaker.ListCompilationJobs
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListCompilationJobsResponse> ListCompilationJobsAsync(string MaxResults, string NextToken, ListCompilationJobsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListCompilationJobs?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListCompilationJobsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists the domains.
		/// ListDomains /#X-Amz-Target=SageMaker.ListDomains
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListDomainsResponse> ListDomainsAsync(string MaxResults, string NextToken, ListDomainsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListDomains?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListDomainsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists endpoint configurations.
		/// ListEndpointConfigs /#X-Amz-Target=SageMaker.ListEndpointConfigs
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListEndpointConfigsOutput> ListEndpointConfigsAsync(string MaxResults, string NextToken, ListEndpointConfigsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListEndpointConfigs?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListEndpointConfigsOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists endpoints.
		/// ListEndpoints /#X-Amz-Target=SageMaker.ListEndpoints
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListEndpointsOutput> ListEndpointsAsync(string MaxResults, string NextToken, ListEndpointsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListEndpoints?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListEndpointsOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all the experiments in your account. The list can be filtered to show only experiments that were created in a specific time range. The list can be sorted by experiment name or creation time.
		/// ListExperiments /#X-Amz-Target=SageMaker.ListExperiments
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListExperimentsResponse> ListExperimentsAsync(string MaxResults, string NextToken, ListExperimentsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListExperiments?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListExperimentsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns information about the flow definitions in your account.
		/// ListFlowDefinitions /#X-Amz-Target=SageMaker.ListFlowDefinitions
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListFlowDefinitionsResponse> ListFlowDefinitionsAsync(string MaxResults, string NextToken, ListFlowDefinitionsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListFlowDefinitions?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListFlowDefinitionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns information about the human task user interfaces in your account.
		/// ListHumanTaskUis /#X-Amz-Target=SageMaker.ListHumanTaskUis
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListHumanTaskUisResponse> ListHumanTaskUisAsync(string MaxResults, string NextToken, ListHumanTaskUisRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListHumanTaskUis?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListHumanTaskUisResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets a list of <a>HyperParameterTuningJobSummary</a> objects that describe the hyperparameter tuning jobs launched in your account.
		/// ListHyperParameterTuningJobs /#X-Amz-Target=SageMaker.ListHyperParameterTuningJobs
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListHyperParameterTuningJobsResponse> ListHyperParameterTuningJobsAsync(string MaxResults, string NextToken, ListHyperParameterTuningJobsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListHyperParameterTuningJobs?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListHyperParameterTuningJobsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets a list of labeling jobs.
		/// ListLabelingJobs /#X-Amz-Target=SageMaker.ListLabelingJobs
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListLabelingJobsResponse> ListLabelingJobsAsync(string MaxResults, string NextToken, ListLabelingJobsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListLabelingJobs?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListLabelingJobsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets a list of labeling jobs assigned to a specified work team.
		/// ListLabelingJobsForWorkteam /#X-Amz-Target=SageMaker.ListLabelingJobsForWorkteam
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListLabelingJobsForWorkteamResponse> ListLabelingJobsForWorkteamAsync(string MaxResults, string NextToken, ListLabelingJobsForWorkteamRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListLabelingJobsForWorkteam?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListLabelingJobsForWorkteamResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists the model packages that have been created.
		/// ListModelPackages /#X-Amz-Target=SageMaker.ListModelPackages
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListModelPackagesOutput> ListModelPackagesAsync(string MaxResults, string NextToken, ListModelPackagesInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListModelPackages?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListModelPackagesOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists models created with the <a>CreateModel</a> API.
		/// ListModels /#X-Amz-Target=SageMaker.ListModels
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListModelsOutput> ListModelsAsync(string MaxResults, string NextToken, ListModelsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListModels?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListModelsOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns list of all monitoring job executions.
		/// ListMonitoringExecutions /#X-Amz-Target=SageMaker.ListMonitoringExecutions
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListMonitoringExecutionsResponse> ListMonitoringExecutionsAsync(string MaxResults, string NextToken, ListMonitoringExecutionsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListMonitoringExecutions?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListMonitoringExecutionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns list of all monitoring schedules.
		/// ListMonitoringSchedules /#X-Amz-Target=SageMaker.ListMonitoringSchedules
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListMonitoringSchedulesResponse> ListMonitoringSchedulesAsync(string MaxResults, string NextToken, ListMonitoringSchedulesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListMonitoringSchedules?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListMonitoringSchedulesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists notebook instance lifestyle configurations created with the <a>CreateNotebookInstanceLifecycleConfig</a> API.
		/// ListNotebookInstanceLifecycleConfigs /#X-Amz-Target=SageMaker.ListNotebookInstanceLifecycleConfigs
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListNotebookInstanceLifecycleConfigsOutput> ListNotebookInstanceLifecycleConfigsAsync(string MaxResults, string NextToken, ListNotebookInstanceLifecycleConfigsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListNotebookInstanceLifecycleConfigs?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListNotebookInstanceLifecycleConfigsOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns a list of the Amazon SageMaker notebook instances in the requester's account in an AWS Region.
		/// ListNotebookInstances /#X-Amz-Target=SageMaker.ListNotebookInstances
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListNotebookInstancesOutput> ListNotebookInstancesAsync(string MaxResults, string NextToken, ListNotebookInstancesInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListNotebookInstances?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListNotebookInstancesOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists processing jobs that satisfy various filters.
		/// ListProcessingJobs /#X-Amz-Target=SageMaker.ListProcessingJobs
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListProcessingJobsResponse> ListProcessingJobsAsync(string MaxResults, string NextToken, ListProcessingJobsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListProcessingJobs?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListProcessingJobsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets a list of the work teams that you are subscribed to in the AWS Marketplace. The list may be empty if no work team satisfies the filter specified in the <code>NameContains</code> parameter.
		/// ListSubscribedWorkteams /#X-Amz-Target=SageMaker.ListSubscribedWorkteams
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListSubscribedWorkteamsResponse> ListSubscribedWorkteamsAsync(string MaxResults, string NextToken, ListSubscribedWorkteamsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListSubscribedWorkteams?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListSubscribedWorkteamsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns the tags for the specified Amazon SageMaker resource.
		/// ListTags /#X-Amz-Target=SageMaker.ListTags
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListTagsOutput> ListTagsAsync(string MaxResults, string NextToken, ListTagsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListTags?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListTagsOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists training jobs.
		/// ListTrainingJobs /#X-Amz-Target=SageMaker.ListTrainingJobs
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListTrainingJobsResponse> ListTrainingJobsAsync(string MaxResults, string NextToken, ListTrainingJobsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListTrainingJobs?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListTrainingJobsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets a list of <a>TrainingJobSummary</a> objects that describe the training jobs that a hyperparameter tuning job launched.
		/// ListTrainingJobsForHyperParameterTuningJob /#X-Amz-Target=SageMaker.ListTrainingJobsForHyperParameterTuningJob
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListTrainingJobsForHyperParameterTuningJobResponse> ListTrainingJobsForHyperParameterTuningJobAsync(string MaxResults, string NextToken, ListTrainingJobsForHyperParameterTuningJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListTrainingJobsForHyperParameterTuningJob?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListTrainingJobsForHyperParameterTuningJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists transform jobs.
		/// ListTransformJobs /#X-Amz-Target=SageMaker.ListTransformJobs
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListTransformJobsResponse> ListTransformJobsAsync(string MaxResults, string NextToken, ListTransformJobsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListTransformJobs?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListTransformJobsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Lists the trial components in your account. You can sort the list by trial component name or creation time. You can filter the list to show only components that were created in a specific time range. You can also filter on one of the following:</p> <ul> <li> <p> <code>ExperimentName</code> </p> </li> <li> <p> <code>SourceArn</code> </p> </li> <li> <p> <code>TrialName</code> </p> </li> </ul>
		/// ListTrialComponents /#X-Amz-Target=SageMaker.ListTrialComponents
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListTrialComponentsResponse> ListTrialComponentsAsync(string MaxResults, string NextToken, ListTrialComponentsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListTrialComponents?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListTrialComponentsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists the trials in your account. Specify an experiment name to limit the list to the trials that are part of that experiment. Specify a trial component name to limit the list to the trials that associated with that trial component. The list can be filtered to show only trials that were created in a specific time range. The list can be sorted by trial name or creation time.
		/// ListTrials /#X-Amz-Target=SageMaker.ListTrials
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListTrialsResponse> ListTrialsAsync(string MaxResults, string NextToken, ListTrialsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListTrials?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListTrialsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists user profiles.
		/// ListUserProfiles /#X-Amz-Target=SageMaker.ListUserProfiles
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListUserProfilesResponse> ListUserProfilesAsync(string MaxResults, string NextToken, ListUserProfilesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListUserProfiles?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListUserProfilesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets a list of work teams that you have defined in a region. The list may be empty if no work team satisfies the filter specified in the <code>NameContains</code> parameter.
		/// ListWorkteams /#X-Amz-Target=SageMaker.ListWorkteams
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListWorkteamsResponse> ListWorkteamsAsync(string MaxResults, string NextToken, ListWorkteamsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.ListWorkteams?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListWorkteamsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Renders the UI template so that you can preview the worker's experience.
		/// RenderUiTemplate /#X-Amz-Target=SageMaker.RenderUiTemplate
		/// </summary>
		/// <returns>Success</returns>
		public async Task<RenderUiTemplateResponse> RenderUiTemplateAsync(RenderUiTemplateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.RenderUiTemplate";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<RenderUiTemplateResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Finds Amazon SageMaker resources that match a search query. Matching resources are returned as a list of <code>SearchRecord</code> objects in the response. You can sort the search results by any resource property in a ascending or descending order.</p> <p>You can query against the following value types: numeric, text, Boolean, and timestamp.</p>
		/// Search /#X-Amz-Target=SageMaker.Search
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<SearchResponse> SearchAsync(string MaxResults, string NextToken, SearchRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.Search?MaxResults=" + (MaxResults==null? "" : Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : Uri.EscapeDataString(NextToken));
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<SearchResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Starts a previously stopped monitoring schedule.</p> <note> <p>New monitoring schedules are immediately started after creation.</p> </note>
		/// StartMonitoringSchedule /#X-Amz-Target=SageMaker.StartMonitoringSchedule
		/// </summary>
		/// <returns>Success</returns>
		public async Task StartMonitoringScheduleAsync(StartMonitoringScheduleRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.StartMonitoringSchedule";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Launches an ML compute instance with the latest version of the libraries and attaches your ML storage volume. After configuring the notebook instance, Amazon SageMaker sets the notebook instance status to <code>InService</code>. A notebook instance's status must be <code>InService</code> before you can connect to your Jupyter notebook.
		/// StartNotebookInstance /#X-Amz-Target=SageMaker.StartNotebookInstance
		/// </summary>
		/// <returns>Success</returns>
		public async Task StartNotebookInstanceAsync(StartNotebookInstanceInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.StartNotebookInstance";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// A method for forcing the termination of a running job.
		/// StopAutoMLJob /#X-Amz-Target=SageMaker.StopAutoMLJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task StopAutoMLJobAsync(StopAutoMLJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.StopAutoMLJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Stops a model compilation job.</p> <p> To stop a job, Amazon SageMaker sends the algorithm the SIGTERM signal. This gracefully shuts the job down. If the job hasn't stopped, it sends the SIGKILL signal.</p> <p>When it receives a <code>StopCompilationJob</code> request, Amazon SageMaker changes the <a>CompilationJobSummary$CompilationJobStatus</a> of the job to <code>Stopping</code>. After Amazon SageMaker stops the job, it sets the <a>CompilationJobSummary$CompilationJobStatus</a> to <code>Stopped</code>. </p>
		/// StopCompilationJob /#X-Amz-Target=SageMaker.StopCompilationJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task StopCompilationJobAsync(StopCompilationJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.StopCompilationJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Stops a running hyperparameter tuning job and all running training jobs that the tuning job launched.</p> <p>All model artifacts output from the training jobs are stored in Amazon Simple Storage Service (Amazon S3). All data that the training jobs write to Amazon CloudWatch Logs are still available in CloudWatch. After the tuning job moves to the <code>Stopped</code> state, it releases all reserved resources for the tuning job.</p>
		/// StopHyperParameterTuningJob /#X-Amz-Target=SageMaker.StopHyperParameterTuningJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task StopHyperParameterTuningJobAsync(StopHyperParameterTuningJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.StopHyperParameterTuningJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Stops a running labeling job. A job that is stopped cannot be restarted. Any results obtained before the job is stopped are placed in the Amazon S3 output bucket.
		/// StopLabelingJob /#X-Amz-Target=SageMaker.StopLabelingJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task StopLabelingJobAsync(StopLabelingJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.StopLabelingJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Stops a previously started monitoring schedule.
		/// StopMonitoringSchedule /#X-Amz-Target=SageMaker.StopMonitoringSchedule
		/// </summary>
		/// <returns>Success</returns>
		public async Task StopMonitoringScheduleAsync(StopMonitoringScheduleRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.StopMonitoringSchedule";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Terminates the ML compute instance. Before terminating the instance, Amazon SageMaker disconnects the ML storage volume from it. Amazon SageMaker preserves the ML storage volume. Amazon SageMaker stops charging you for the ML compute instance when you call <code>StopNotebookInstance</code>.</p> <p>To access data on the ML storage volume for a notebook instance that has been terminated, call the <code>StartNotebookInstance</code> API. <code>StartNotebookInstance</code> launches another ML compute instance, configures it, and attaches the preserved ML storage volume so you can continue your work. </p>
		/// StopNotebookInstance /#X-Amz-Target=SageMaker.StopNotebookInstance
		/// </summary>
		/// <returns>Success</returns>
		public async Task StopNotebookInstanceAsync(StopNotebookInstanceInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.StopNotebookInstance";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Stops a processing job.
		/// StopProcessingJob /#X-Amz-Target=SageMaker.StopProcessingJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task StopProcessingJobAsync(StopProcessingJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.StopProcessingJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Stops a training job. To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms might use this 120-second window to save the model artifacts, so the results of the training is not lost. </p> <p>When it receives a <code>StopTrainingJob</code> request, Amazon SageMaker changes the status of the job to <code>Stopping</code>. After Amazon SageMaker stops the job, it sets the status to <code>Stopped</code>.</p>
		/// StopTrainingJob /#X-Amz-Target=SageMaker.StopTrainingJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task StopTrainingJobAsync(StopTrainingJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.StopTrainingJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Stops a transform job.</p> <p>When Amazon SageMaker receives a <code>StopTransformJob</code> request, the status of the job changes to <code>Stopping</code>. After Amazon SageMaker stops the job, the status is set to <code>Stopped</code>. When you stop a transform job before it is completed, Amazon SageMaker doesn't store the job's output in Amazon S3.</p>
		/// StopTransformJob /#X-Amz-Target=SageMaker.StopTransformJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task StopTransformJobAsync(StopTransformJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.StopTransformJob";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Updates the specified Git repository with the specified values.
		/// UpdateCodeRepository /#X-Amz-Target=SageMaker.UpdateCodeRepository
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateCodeRepositoryOutput> UpdateCodeRepositoryAsync(UpdateCodeRepositoryInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.UpdateCodeRepository";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UpdateCodeRepositoryOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Updates the default settings for new user profiles in the domain.
		/// UpdateDomain /#X-Amz-Target=SageMaker.UpdateDomain
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateDomainResponse> UpdateDomainAsync(UpdateDomainRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.UpdateDomain";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UpdateDomainResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Deploys the new <code>EndpointConfig</code> specified in the request, switches to using newly created endpoint, and then deletes resources provisioned for the endpoint using the previous <code>EndpointConfig</code> (there is no availability loss). </p> <p>When Amazon SageMaker receives the request, it sets the endpoint status to <code>Updating</code>. After updating the endpoint, it sets the status to <code>InService</code>. To check the status of an endpoint, use the <a>DescribeEndpoint</a> API. </p> <note> <p>You must not delete an <code>EndpointConfig</code> in use by an endpoint that is live or while the <code>UpdateEndpoint</code> or <code>CreateEndpoint</code> operations are being performed on the endpoint. To update an endpoint, you must create a new <code>EndpointConfig</code>.</p> <p>If you delete the <code>EndpointConfig</code> of an endpoint that is active or being created or updated you may lose visibility into the instance type the endpoint is using. The endpoint must be deleted in order to stop incurring charges.</p> </note>
		/// UpdateEndpoint /#X-Amz-Target=SageMaker.UpdateEndpoint
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateEndpointOutput> UpdateEndpointAsync(UpdateEndpointInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.UpdateEndpoint";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UpdateEndpointOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Updates variant weight of one or more variants associated with an existing endpoint, or capacity of one variant associated with an existing endpoint. When it receives the request, Amazon SageMaker sets the endpoint status to <code>Updating</code>. After updating the endpoint, it sets the status to <code>InService</code>. To check the status of an endpoint, use the <a>DescribeEndpoint</a> API.
		/// UpdateEndpointWeightsAndCapacities /#X-Amz-Target=SageMaker.UpdateEndpointWeightsAndCapacities
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateEndpointWeightsAndCapacitiesOutput> UpdateEndpointWeightsAndCapacitiesAsync(UpdateEndpointWeightsAndCapacitiesInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.UpdateEndpointWeightsAndCapacities";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UpdateEndpointWeightsAndCapacitiesOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Adds, updates, or removes the description of an experiment. Updates the display name of an experiment.
		/// UpdateExperiment /#X-Amz-Target=SageMaker.UpdateExperiment
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateExperimentResponse> UpdateExperimentAsync(UpdateExperimentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.UpdateExperiment";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UpdateExperimentResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Updates a previously created schedule.
		/// UpdateMonitoringSchedule /#X-Amz-Target=SageMaker.UpdateMonitoringSchedule
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateMonitoringScheduleResponse> UpdateMonitoringScheduleAsync(UpdateMonitoringScheduleRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.UpdateMonitoringSchedule";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UpdateMonitoringScheduleResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Updates a notebook instance. NotebookInstance updates include upgrading or downgrading the ML compute instance used for your notebook instance to accommodate changes in your workload requirements.
		/// UpdateNotebookInstance /#X-Amz-Target=SageMaker.UpdateNotebookInstance
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateNotebookInstanceOutput> UpdateNotebookInstanceAsync(UpdateNotebookInstanceInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.UpdateNotebookInstance";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UpdateNotebookInstanceOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Updates a notebook instance lifecycle configuration created with the <a>CreateNotebookInstanceLifecycleConfig</a> API.
		/// UpdateNotebookInstanceLifecycleConfig /#X-Amz-Target=SageMaker.UpdateNotebookInstanceLifecycleConfig
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateNotebookInstanceLifecycleConfigOutput> UpdateNotebookInstanceLifecycleConfigAsync(UpdateNotebookInstanceLifecycleConfigInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.UpdateNotebookInstanceLifecycleConfig";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UpdateNotebookInstanceLifecycleConfigOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Updates the display name of a trial.
		/// UpdateTrial /#X-Amz-Target=SageMaker.UpdateTrial
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateTrialResponse> UpdateTrialAsync(UpdateTrialRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.UpdateTrial";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UpdateTrialResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Updates one or more properties of a trial component.
		/// UpdateTrialComponent /#X-Amz-Target=SageMaker.UpdateTrialComponent
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateTrialComponentResponse> UpdateTrialComponentAsync(UpdateTrialComponentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.UpdateTrialComponent";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UpdateTrialComponentResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Updates a user profile.
		/// UpdateUserProfile /#X-Amz-Target=SageMaker.UpdateUserProfile
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateUserProfileResponse> UpdateUserProfileAsync(UpdateUserProfileRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.UpdateUserProfile";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UpdateUserProfileResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Restricts access to tasks assigned to workers in the specified workforce to those within specific ranges of IP addresses. You specify allowed IP addresses by creating a list of up to four <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">CIDRs</a>.</p> <p>By default, a workforce isn't restricted to specific IP addresses. If you specify a range of IP addresses, workers who attempt to access tasks using any IP address outside the specified range are denied access and get a <code>Not Found</code> error message on the worker portal. After restricting access with this operation, you can see the allowed IP values for a private workforce with the operation.</p> <important> <p>This operation applies only to private workforces.</p> </important>
		/// UpdateWorkforce /#X-Amz-Target=SageMaker.UpdateWorkforce
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateWorkforceResponse> UpdateWorkforceAsync(UpdateWorkforceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.UpdateWorkforce";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UpdateWorkforceResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Updates an existing work team with new member definitions or description.
		/// UpdateWorkteam /#X-Amz-Target=SageMaker.UpdateWorkteam
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateWorkteamResponse> UpdateWorkteamAsync(UpdateWorkteamRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=SageMaker.UpdateWorkteam";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UpdateWorkteamResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}
