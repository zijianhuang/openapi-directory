//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace My.Demo.Client
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Net.Http;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AddApplicationCloudWatchLoggingOptionResponse
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ApplicationARN { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 999999999
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 999999999)]
		public System.Nullable<System.Int32> ApplicationVersionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchLoggingOptionDescription[] CloudWatchLoggingOptionDescriptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AddApplicationCloudWatchLoggingOptionRequest
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 999999999
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 999999999)]
		public int CurrentApplicationVersionId { get; set; }
		
		/// <summary>
		/// Provides a description of Amazon CloudWatch logging options, including the log stream Amazon Resource Name (ARN). 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchLoggingOption CloudWatchLoggingOption { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AddApplicationInputResponse
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ApplicationARN { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 999999999
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 999999999)]
		public System.Nullable<System.Int32> ApplicationVersionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InputDescription[] InputDescriptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AddApplicationInputRequest
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 999999999
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 999999999)]
		public int CurrentApplicationVersionId { get; set; }
		
		/// <summary>
		/// When you configure the application input for an SQL-based Amazon Kinesis Data Analytics application, you specify the streaming source, the in-application stream name that is created, and the mapping between the two. 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Input Input { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AddApplicationInputProcessingConfigurationResponse
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ApplicationARN { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 999999999
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 999999999)]
		public System.Nullable<System.Int32> ApplicationVersionId { get; set; }
		
		/// <summary>
		/// Max length: 50
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength=1)]
		public string InputId { get; set; }
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application, provides the configuration information about an input processor. Currently, the only input processor available is <a href="https://aws.amazon.com/documentation/lambda/">AWS Lambda</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InputProcessingConfigurationDescription InputProcessingConfigurationDescription { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AddApplicationInputProcessingConfigurationRequest
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 999999999
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 999999999)]
		public int CurrentApplicationVersionId { get; set; }
		
		/// <summary>
		/// Max length: 50
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength=1)]
		public string InputId { get; set; }
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application, describes a processor that is used to preprocess the records in the stream before being processed by your application code. Currently, the only input processor available is <a href="https://aws.amazon.com/documentation/lambda/">AWS Lambda</a>.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InputProcessingConfiguration InputProcessingConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AddApplicationOutputResponse
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ApplicationARN { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 999999999
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 999999999)]
		public System.Nullable<System.Int32> ApplicationVersionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OutputDescription[] OutputDescriptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AddApplicationOutputRequest
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 999999999
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 999999999)]
		public int CurrentApplicationVersionId { get; set; }
		
		/// <summary>
		/// <p> Describes an SQL-based Amazon Kinesis Data Analytics application's output configuration, in which you identify an in-application stream and a destination where you want the in-application stream data to be written. The destination can be a Kinesis data stream or a Kinesis Data Firehose delivery stream. </p> <p/>
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Output Output { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AddApplicationReferenceDataSourceResponse
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ApplicationARN { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 999999999
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 999999999)]
		public System.Nullable<System.Int32> ApplicationVersionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReferenceDataSourceDescription[] ReferenceDataSourceDescriptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AddApplicationReferenceDataSourceRequest
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 999999999
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 999999999)]
		public int CurrentApplicationVersionId { get; set; }
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application, describes the reference data source by providing the source information (Amazon S3 bucket name and object key name), the resulting in-application table name that is created, and the necessary schema to map the data elements in the Amazon S3 object to the in-application table.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ReferenceDataSource ReferenceDataSource { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AddApplicationVpcConfigurationResponse
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ApplicationARN { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 999999999
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 999999999)]
		public System.Nullable<System.Int32> ApplicationVersionId { get; set; }
		
		/// <summary>
		/// Describes the parameters of a VPC used by the application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConfigurationDescription VpcConfigurationDescription { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class AddApplicationVpcConfigurationRequest
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 999999999
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 999999999)]
		public int CurrentApplicationVersionId { get; set; }
		
		/// <summary>
		/// Describes the parameters of a VPC used by the application.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VpcConfiguration VpcConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateApplicationResponse
	{
		
		/// <summary>
		/// Describes the application, including the application Amazon Resource Name (ARN), status, latest version, and input and output configurations.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationDetail ApplicationDetail { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateApplicationRequest
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=0)]
		public string ApplicationDescription { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateApplicationRequestRuntimeEnvironment RuntimeEnvironment { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ServiceExecutionRole { get; set; }
		
		/// <summary>
		/// Specifies the creation parameters for an Amazon Kinesis Data Analytics application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ApplicationConfiguration ApplicationConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchLoggingOption[] CloudWatchLoggingOptions { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(200)]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CreateApplicationRequestRuntimeEnvironment
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SQL-1_0 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FLINK-1_6 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FLINK-1_8 = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CreateApplicationSnapshotRequest
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string SnapshotName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteApplicationRequest
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ApplicationName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreateTimestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteApplicationCloudWatchLoggingOptionResponse
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ApplicationARN { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 999999999
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 999999999)]
		public System.Nullable<System.Int32> ApplicationVersionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchLoggingOptionDescription[] CloudWatchLoggingOptionDescriptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteApplicationCloudWatchLoggingOptionRequest
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 999999999
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 999999999)]
		public int CurrentApplicationVersionId { get; set; }
		
		/// <summary>
		/// Max length: 50
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength=1)]
		public string CloudWatchLoggingOptionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteApplicationInputProcessingConfigurationResponse
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ApplicationARN { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 999999999
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 999999999)]
		public System.Nullable<System.Int32> ApplicationVersionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteApplicationInputProcessingConfigurationRequest
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 999999999
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 999999999)]
		public int CurrentApplicationVersionId { get; set; }
		
		/// <summary>
		/// Max length: 50
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength=1)]
		public string InputId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteApplicationOutputResponse
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ApplicationARN { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 999999999
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 999999999)]
		public System.Nullable<System.Int32> ApplicationVersionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteApplicationOutputRequest
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 999999999
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 999999999)]
		public int CurrentApplicationVersionId { get; set; }
		
		/// <summary>
		/// Max length: 50
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength=1)]
		public string OutputId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteApplicationReferenceDataSourceResponse
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ApplicationARN { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 999999999
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 999999999)]
		public System.Nullable<System.Int32> ApplicationVersionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteApplicationReferenceDataSourceRequest
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 999999999
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 999999999)]
		public int CurrentApplicationVersionId { get; set; }
		
		/// <summary>
		/// Max length: 50
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength=1)]
		public string ReferenceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteApplicationSnapshotRequest
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string SnapshotName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset SnapshotCreationTimestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteApplicationVpcConfigurationResponse
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ApplicationARN { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 999999999
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 999999999)]
		public System.Nullable<System.Int32> ApplicationVersionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DeleteApplicationVpcConfigurationRequest
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 999999999
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 999999999)]
		public int CurrentApplicationVersionId { get; set; }
		
		/// <summary>
		/// Max length: 50
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength=1)]
		public string VpcConfigurationId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeApplicationResponse
	{
		
		/// <summary>
		/// Describes the application, including the application Amazon Resource Name (ARN), status, latest version, and input and output configurations.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationDetail ApplicationDetail { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeApplicationRequest
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ApplicationName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeAdditionalDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeApplicationSnapshotResponse
	{
		
		/// <summary>
		/// Provides details about a snapshot of application state.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SnapshotDetails SnapshotDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DescribeApplicationSnapshotRequest
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string SnapshotName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DiscoverInputSchemaResponse
	{
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application, describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SourceSchema InputSchema { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ParsedInputRecord[] ParsedInputRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ProcessedInputRecord[] ProcessedInputRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RawInputRecord[] RawInputRecords { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DiscoverInputSchemaRequest
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ResourceARN { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ServiceExecutionRole { get; set; }
		
		/// <summary>
		/// Describes the point at which the application reads from the streaming source.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InputStartingPositionConfiguration InputStartingPositionConfiguration { get; set; }
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application, provides a description of an Amazon S3 data source, including the Amazon Resource Name (ARN) of the S3 bucket and the name of the Amazon S3 object that contains the data.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3Configuration S3Configuration { get; set; }
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application, describes a processor that is used to preprocess the records in the stream before being processed by your application code. Currently, the only input processor available is <a href="https://aws.amazon.com/documentation/lambda/">AWS Lambda</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InputProcessingConfiguration InputProcessingConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListApplicationSnapshotsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotDetails[] SnapshotSummaries { get; set; }
		
		/// <summary>
		/// Max length: 512
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(512, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListApplicationSnapshotsRequest
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 50)]
		public System.Nullable<System.Int32> Limit { get; set; }
		
		/// <summary>
		/// Max length: 512
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(512, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListApplicationsResponse
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationSummary[] ApplicationSummaries { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListApplicationsRequest
	{
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 50)]
		public System.Nullable<System.Int32> Limit { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTagsForResourceResponse
	{
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(200)]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ListTagsForResourceRequest
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:aws:kinesisanalytics:[a-z]\{2\}-[a-z]\+-\d\{1\}\+:\d\{12\}\+:application/[a-zA-Z0-9_.-]\{1,128\}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ResourceARN { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StartApplicationRequest
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Describes the starting parameters for an Amazon Kinesis Data Analytics application.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RunConfiguration RunConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class StopApplicationRequest
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ApplicationName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class TagResourceRequest
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:aws:kinesisanalytics:[a-z]\{2\}-[a-z]\+-\d\{1\}\+:\d\{12\}\+:application/[a-zA-Z0-9_.-]\{1,128\}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ResourceARN { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 200
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(200)]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UntagResourceRequest
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:aws:kinesisanalytics:[a-z]\{2\}-[a-z]\+-\d\{1\}\+:\d\{12\}\+:application/[a-zA-Z0-9_.-]\{1,128\}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ResourceARN { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 200
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(200)]
		public TagKey[] TagKeys { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateApplicationResponse
	{
		
		/// <summary>
		/// Describes the application, including the application Amazon Resource Name (ARN), status, latest version, and input and output configurations.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationDetail ApplicationDetail { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class UpdateApplicationRequest
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 999999999
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 999999999)]
		public int CurrentApplicationVersionId { get; set; }
		
		/// <summary>
		/// Describes updates to an application's configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ApplicationConfigurationUpdate ApplicationConfigurationUpdate { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ServiceExecutionRoleUpdate { get; set; }
		
		/// <summary>
		/// Describes the updates to the starting parameters for a Kinesis Data Analytics application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RunConfigurationUpdate RunConfigurationUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchLoggingOptionUpdate[] CloudWatchLoggingOptionUpdates { get; set; }
	}
	
	/// <summary>
	/// Provides a description of Amazon CloudWatch logging options, including the log stream Amazon Resource Name (ARN). 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CloudWatchLoggingOption
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string LogStreamARN { get; set; }
	}
	
	/// <summary>
	/// For an SQL-based Amazon Kinesis Data Analytics application, describes a processor that is used to preprocess the records in the stream before being processed by your application code. Currently, the only input processor available is <a href="https://aws.amazon.com/documentation/lambda/">AWS Lambda</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InputProcessingConfiguration
	{
		
		/// <summary>
		/// An object that contains the Amazon Resource Name (ARN) of the AWS Lambda function that is used to preprocess records in the stream in an SQL-based Amazon Kinesis Data Analytics application. 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InputLambdaProcessor InputLambdaProcessor { get; set; }
	}
	
	/// <summary>
	/// For an SQL-based Amazon Kinesis Data Analytics application, provides the configuration information about an input processor. Currently, the only input processor available is <a href="https://aws.amazon.com/documentation/lambda/">AWS Lambda</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InputProcessingConfigurationDescription
	{
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application, an object that contains the Amazon Resource Name (ARN) of the AWS Lambda function that is used to preprocess records in the stream.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InputLambdaProcessorDescription InputLambdaProcessorDescription { get; set; }
	}
	
	/// <summary>
	/// When you configure the application input for an SQL-based Amazon Kinesis Data Analytics application, you specify the streaming source, the in-application stream name that is created, and the mapping between the two. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Input
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string NamePrefix { get; set; }
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application, describes a processor that is used to preprocess the records in the stream before being processed by your application code. Currently, the only input processor available is <a href="https://aws.amazon.com/documentation/lambda/">AWS Lambda</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InputProcessingConfiguration InputProcessingConfiguration { get; set; }
		
		/// <summary>
		///  Identifies an Amazon Kinesis data stream as the streaming source. You provide the stream's Amazon Resource Name (ARN).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public KinesisStreamsInput KinesisStreamsInput { get; set; }
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application, identifies a Kinesis Data Firehose delivery stream as the streaming source. You provide the delivery stream's Amazon Resource Name (ARN).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public KinesisFirehoseInput KinesisFirehoseInput { get; set; }
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application, describes the number of in-application streams to create for a given streaming source. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InputParallelism InputParallelism { get; set; }
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application, describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream. 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SourceSchema InputSchema { get; set; }
	}
	
	/// <summary>
	/// <p> Describes an SQL-based Amazon Kinesis Data Analytics application's output configuration, in which you identify an in-application stream and a destination where you want the in-application stream data to be written. The destination can be a Kinesis data stream or a Kinesis Data Firehose delivery stream. </p> <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Output
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// When you configure an SQL-based Amazon Kinesis Data Analytics application's output, identifies a Kinesis data stream as the destination. You provide the stream Amazon Resource Name (ARN). 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public KinesisStreamsOutput KinesisStreamsOutput { get; set; }
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application, when configuring application output, identifies a Kinesis Data Firehose delivery stream as the destination. You provide the stream Amazon Resource Name (ARN) of the delivery stream. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public KinesisFirehoseOutput KinesisFirehoseOutput { get; set; }
		
		/// <summary>
		/// When you configure an SQL-based Amazon Kinesis Data Analytics application's output, identifies an AWS Lambda function as the destination. You provide the function Amazon Resource Name (ARN) of the Lambda function. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LambdaOutput LambdaOutput { get; set; }
		
		/// <summary>
		/// Describes the data format when records are written to the destination in an SQL-based Amazon Kinesis Data Analytics application. 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DestinationSchema DestinationSchema { get; set; }
	}
	
	/// <summary>
	/// For an SQL-based Amazon Kinesis Data Analytics application, describes the reference data source by providing the source information (Amazon S3 bucket name and object key name), the resulting in-application table name that is created, and the necessary schema to map the data elements in the Amazon S3 object to the in-application table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ReferenceDataSource
	{
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string TableName { get; set; }
		
		/// <summary>
		/// <p>For an SQL-based Amazon Kinesis Data Analytics application, identifies the Amazon S3 bucket and object that contains the reference data.</p> <p>A Kinesis Data Analytics application loads reference data only once. If the data changes, you call the <a>UpdateApplication</a> operation to trigger reloading of data into your application. </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3ReferenceDataSource S3ReferenceDataSource { get; set; }
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application, describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream. 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SourceSchema ReferenceSchema { get; set; }
	}
	
	/// <summary>
	/// Describes the parameters of a VPC used by the application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class VpcConfiguration
	{
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 16
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(16)]
		public SubnetId[] SubnetIds { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 5
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public SecurityGroupId[] SecurityGroupIds { get; set; }
	}
	
	/// <summary>
	/// Describes the parameters of a VPC used by the application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class VpcConfigurationDescription
	{
		
		/// <summary>
		/// Max length: 50
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength=1)]
		public string VpcConfigurationId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 16
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(16)]
		public SubnetId[] SubnetIds { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 5
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public SecurityGroupId[] SecurityGroupIds { get; set; }
	}
	
	/// <summary>
	/// Specifies either the application code, or the location of the application code, for a Java-based Amazon Kinesis Data Analytics application. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CodeContent
	{
		
		/// <summary>
		/// Max length: 102400
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(102400, MinimumLength=0)]
		public string TextContent { get; set; }
		
		/// <summary>
		/// Max length: 52428800
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(52428800, MinimumLength=0)]
		public string ZipFileContent { get; set; }
		
		/// <summary>
		/// For a Java-based Amazon Kinesis Data Analytics application, provides a description of an Amazon S3 object, including the Amazon Resource Name (ARN) of the S3 bucket, the name of the Amazon S3 object that contains the data, and the version number of the Amazon S3 object that contains the data. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3ContentLocation S3ContentLocation { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CodeContentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PLAINTEXT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ZIPFILE = 1,
	}
	
	/// <summary>
	/// Describes code configuration for a Java-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ApplicationCodeConfiguration
	{
		
		/// <summary>
		/// Specifies either the application code, or the location of the application code, for a Java-based Amazon Kinesis Data Analytics application. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CodeContent CodeContent { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationCodeConfigurationCodeContentType CodeContentType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ApplicationCodeConfigurationCodeContentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PLAINTEXT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ZIPFILE = 1,
	}
	
	/// <summary>
	/// Describes details about the application code for a Java-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CodeContentDescription
	{
		
		/// <summary>
		/// Max length: 102400
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(102400, MinimumLength=0)]
		public string TextContent { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 128
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=128)]
		public string CodeMD5 { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 52428800
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 52428800)]
		public System.Nullable<System.Int32> CodeSize { get; set; }
		
		/// <summary>
		/// Describes the location of a Java-based Amazon Kinesis Data Analytics application's code stored in an S3 bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3ApplicationCodeLocationDescription S3ApplicationCodeLocationDescription { get; set; }
	}
	
	/// <summary>
	/// Describes code configuration for a Java-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ApplicationCodeConfigurationDescription
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationCodeConfigurationDescriptionCodeContentType CodeContentType { get; set; }
		
		/// <summary>
		/// Describes details about the application code for a Java-based Kinesis Data Analytics application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CodeContentDescription CodeContentDescription { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ApplicationCodeConfigurationDescriptionCodeContentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PLAINTEXT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ZIPFILE = 1,
	}
	
	/// <summary>
	/// Describes an update to the code of a Java-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CodeContentUpdate
	{
		
		/// <summary>
		/// Max length: 102400
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(102400, MinimumLength=0)]
		public string TextContentUpdate { get; set; }
		
		/// <summary>
		/// Max length: 52428800
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(52428800, MinimumLength=0)]
		public string ZipFileContentUpdate { get; set; }
		
		/// <summary>
		/// Describes an update for the Amazon S3 code content location for a Java-based Amazon Kinesis Data Analytics application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3ContentLocationUpdate S3ContentLocationUpdate { get; set; }
	}
	
	/// <summary>
	/// Describes updates to a Java-based Amazon Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ApplicationCodeConfigurationUpdate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationCodeConfigurationUpdateCodeContentTypeUpdate CodeContentTypeUpdate { get; set; }
		
		/// <summary>
		/// Describes an update to the code of a Java-based Kinesis Data Analytics application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CodeContentUpdate CodeContentUpdate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ApplicationCodeConfigurationUpdateCodeContentTypeUpdate
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PLAINTEXT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ZIPFILE = 1,
	}
	
	/// <summary>
	/// Describes the inputs, outputs, and reference data sources for an SQL-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SqlApplicationConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Input[] Inputs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Output[] Outputs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReferenceDataSource[] ReferenceDataSources { get; set; }
	}
	
	/// <summary>
	/// Describes configuration parameters for a Java-based Amazon Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FlinkApplicationConfiguration
	{
		
		/// <summary>
		/// Describes an application's checkpointing configuration. Checkpointing is the process of persisting application state for fault tolerance. For more information, see <a href="https://ci.apache.org/projects/flink/flink-docs-release-1.6/concepts/programming-model.html#checkpoints-for-fault-tolerance"> Checkpoints for Fault Tolerance</a> in the <a href="https://ci.apache.org/projects/flink/flink-docs-release-1.6/">Apache Flink Documentation</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CheckpointConfiguration CheckpointConfiguration { get; set; }
		
		/// <summary>
		/// Describes configuration parameters for Amazon CloudWatch logging for a Java-based Kinesis Data Analytics application. For more information about CloudWatch logging, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/java/monitoring-overview.html">Monitoring</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public MonitoringConfiguration MonitoringConfiguration { get; set; }
		
		/// <summary>
		/// Describes parameters for how a Java-based Amazon Kinesis Data Analytics application executes multiple tasks simultaneously. For more information about parallelism, see <a href="https://ci.apache.org/projects/flink/flink-docs-stable/dev/parallel.html">Parallel Execution</a> in the <a href="https://ci.apache.org/projects/flink/flink-docs-release-1.6/">Apache Flink Documentation</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ParallelismConfiguration ParallelismConfiguration { get; set; }
	}
	
	/// <summary>
	/// Describes execution properties for a Java-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EnvironmentProperties
	{
		
		/// <summary>
		/// Maximum items: 50
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public PropertyGroup[] PropertyGroups { get; set; }
	}
	
	/// <summary>
	/// Describes whether snapshots are enabled for a Java-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ApplicationSnapshotConfiguration
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool SnapshotsEnabled { get; set; }
	}
	
	/// <summary>
	/// Specifies the creation parameters for an Amazon Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ApplicationConfiguration
	{
		
		/// <summary>
		/// Describes the inputs, outputs, and reference data sources for an SQL-based Kinesis Data Analytics application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SqlApplicationConfiguration SqlApplicationConfiguration { get; set; }
		
		/// <summary>
		/// Describes configuration parameters for a Java-based Amazon Kinesis Data Analytics application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FlinkApplicationConfiguration FlinkApplicationConfiguration { get; set; }
		
		/// <summary>
		/// Describes execution properties for a Java-based Kinesis Data Analytics application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EnvironmentProperties EnvironmentProperties { get; set; }
		
		/// <summary>
		/// Describes code configuration for a Java-based Kinesis Data Analytics application.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationCodeConfiguration ApplicationCodeConfiguration { get; set; }
		
		/// <summary>
		/// Describes whether snapshots are enabled for a Java-based Kinesis Data Analytics application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ApplicationSnapshotConfiguration ApplicationSnapshotConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VpcConfiguration[] VpcConfigurations { get; set; }
	}
	
	/// <summary>
	/// Describes the inputs, outputs, and reference data sources for an SQL-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SqlApplicationConfigurationDescription
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InputDescription[] InputDescriptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OutputDescription[] OutputDescriptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReferenceDataSourceDescription[] ReferenceDataSourceDescriptions { get; set; }
	}
	
	/// <summary>
	/// Describes the starting properties for a Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RunConfigurationDescription
	{
		
		/// <summary>
		/// Specifies the method and snapshot to use when restarting an application using previously saved application state.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ApplicationRestoreConfiguration ApplicationRestoreConfigurationDescription { get; set; }
	}
	
	/// <summary>
	/// Describes configuration parameters for a Java-based Amazon Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FlinkApplicationConfigurationDescription
	{
		
		/// <summary>
		/// Describes checkpointing parameters for a Java-based Amazon Kinesis Data Analytics application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CheckpointConfigurationDescription CheckpointConfigurationDescription { get; set; }
		
		/// <summary>
		/// Describes configuration parameters for CloudWatch logging for a Java-based Kinesis Data Analytics application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public MonitoringConfigurationDescription MonitoringConfigurationDescription { get; set; }
		
		/// <summary>
		/// Describes parameters for how a Java-based Kinesis Data Analytics application executes multiple tasks simultaneously.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ParallelismConfigurationDescription ParallelismConfigurationDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string JobPlanDescription { get; set; }
	}
	
	/// <summary>
	/// Describes the execution properties for a Java-based Amazon Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EnvironmentPropertyDescriptions
	{
		
		/// <summary>
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public PropertyGroup[] PropertyGroupDescriptions { get; set; }
	}
	
	/// <summary>
	/// Describes whether snapshots are enabled for a Java-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ApplicationSnapshotConfigurationDescription
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool SnapshotsEnabled { get; set; }
	}
	
	/// <summary>
	/// Describes details about the application code and starting parameters for an Amazon Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ApplicationConfigurationDescription
	{
		
		/// <summary>
		/// Describes the inputs, outputs, and reference data sources for an SQL-based Kinesis Data Analytics application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SqlApplicationConfigurationDescription SqlApplicationConfigurationDescription { get; set; }
		
		/// <summary>
		/// Describes code configuration for a Java-based Kinesis Data Analytics application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ApplicationCodeConfigurationDescription ApplicationCodeConfigurationDescription { get; set; }
		
		/// <summary>
		/// Describes the starting properties for a Kinesis Data Analytics application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RunConfigurationDescription RunConfigurationDescription { get; set; }
		
		/// <summary>
		/// Describes configuration parameters for a Java-based Amazon Kinesis Data Analytics application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FlinkApplicationConfigurationDescription FlinkApplicationConfigurationDescription { get; set; }
		
		/// <summary>
		/// Describes the execution properties for a Java-based Amazon Kinesis Data Analytics application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EnvironmentPropertyDescriptions EnvironmentPropertyDescriptions { get; set; }
		
		/// <summary>
		/// Describes whether snapshots are enabled for a Java-based Kinesis Data Analytics application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ApplicationSnapshotConfigurationDescription ApplicationSnapshotConfigurationDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VpcConfigurationDescription[] VpcConfigurationDescriptions { get; set; }
	}
	
	/// <summary>
	/// Describes updates to the input streams, destination streams, and reference data sources for an SQL-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SqlApplicationConfigurationUpdate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InputUpdate[] InputUpdates { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OutputUpdate[] OutputUpdates { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReferenceDataSourceUpdate[] ReferenceDataSourceUpdates { get; set; }
	}
	
	/// <summary>
	/// Describes updates to the configuration parameters for a Java-based Amazon Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FlinkApplicationConfigurationUpdate
	{
		
		/// <summary>
		/// Describes updates to the checkpointing parameters for a Java-based Amazon Kinesis Data Analytics application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CheckpointConfigurationUpdate CheckpointConfigurationUpdate { get; set; }
		
		/// <summary>
		/// Describes updates to configuration parameters for Amazon CloudWatch logging for a Java-based Kinesis Data Analytics application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public MonitoringConfigurationUpdate MonitoringConfigurationUpdate { get; set; }
		
		/// <summary>
		/// Describes updates to parameters for how a Java-based Kinesis Data Analytics application executes multiple tasks simultaneously.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ParallelismConfigurationUpdate ParallelismConfigurationUpdate { get; set; }
	}
	
	/// <summary>
	/// Describes updates to the execution property groups for a Java-based Amazon Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class EnvironmentPropertyUpdates
	{
		
		/// <summary>
		/// Maximum items: 50
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public PropertyGroup[] PropertyGroups { get; set; }
	}
	
	/// <summary>
	/// Describes updates to whether snapshots are enabled for a Java-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ApplicationSnapshotConfigurationUpdate
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool SnapshotsEnabledUpdate { get; set; }
	}
	
	/// <summary>
	/// Describes updates to an application's configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ApplicationConfigurationUpdate
	{
		
		/// <summary>
		/// Describes updates to the input streams, destination streams, and reference data sources for an SQL-based Kinesis Data Analytics application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SqlApplicationConfigurationUpdate SqlApplicationConfigurationUpdate { get; set; }
		
		/// <summary>
		/// Describes updates to a Java-based Amazon Kinesis Data Analytics application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ApplicationCodeConfigurationUpdate ApplicationCodeConfigurationUpdate { get; set; }
		
		/// <summary>
		/// Describes updates to the configuration parameters for a Java-based Amazon Kinesis Data Analytics application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FlinkApplicationConfigurationUpdate FlinkApplicationConfigurationUpdate { get; set; }
		
		/// <summary>
		/// Describes updates to the execution property groups for a Java-based Amazon Kinesis Data Analytics application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EnvironmentPropertyUpdates EnvironmentPropertyUpdates { get; set; }
		
		/// <summary>
		/// Describes updates to whether snapshots are enabled for a Java-based Kinesis Data Analytics application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ApplicationSnapshotConfigurationUpdate ApplicationSnapshotConfigurationUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VpcConfigurationUpdate[] VpcConfigurationUpdates { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RuntimeEnvironment
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SQL-1_0 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FLINK-1_6 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FLINK-1_8 = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ApplicationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STARTING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 5,
	}
	
	/// <summary>
	/// Describes the application, including the application Amazon Resource Name (ARN), status, latest version, and input and output configurations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ApplicationDetail
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ApplicationARN { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=0)]
		public string ApplicationDescription { get; set; }
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ApplicationName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationDetailRuntimeEnvironment RuntimeEnvironment { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ServiceExecutionRole { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationDetailApplicationStatus ApplicationStatus { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 999999999
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 999999999)]
		public int ApplicationVersionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreateTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdateTimestamp { get; set; }
		
		/// <summary>
		/// Describes details about the application code and starting parameters for an Amazon Kinesis Data Analytics application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ApplicationConfigurationDescription ApplicationConfigurationDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchLoggingOptionDescription[] CloudWatchLoggingOptionDescriptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ApplicationDetailRuntimeEnvironment
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SQL-1_0 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FLINK-1_6 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FLINK-1_8 = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ApplicationDetailApplicationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STARTING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ApplicationRestoreType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SKIP_RESTORE_FROM_SNAPSHOT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESTORE_FROM_LATEST_SNAPSHOT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESTORE_FROM_CUSTOM_SNAPSHOT = 2,
	}
	
	/// <summary>
	/// Specifies the method and snapshot to use when restarting an application using previously saved application state.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ApplicationRestoreConfiguration
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationRestoreConfigurationApplicationRestoreType ApplicationRestoreType { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string SnapshotName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ApplicationRestoreConfigurationApplicationRestoreType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SKIP_RESTORE_FROM_SNAPSHOT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESTORE_FROM_LATEST_SNAPSHOT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESTORE_FROM_CUSTOM_SNAPSHOT = 2,
	}
	
	/// <summary>
	/// Provides application summary information, including the application Amazon Resource Name (ARN), name, and status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ApplicationSummary
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ApplicationARN { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationSummaryApplicationStatus ApplicationStatus { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 999999999
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 999999999)]
		public int ApplicationVersionId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationSummaryRuntimeEnvironment RuntimeEnvironment { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ApplicationSummaryApplicationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STARTING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ApplicationSummaryRuntimeEnvironment
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SQL-1_0 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FLINK-1_6 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FLINK-1_8 = 2,
	}
	
	/// <summary>
	/// <p>For an SQL-based application, provides additional mapping information when the record format uses delimiters, such as CSV. For example, the following sample records use CSV format, where the records use the <i>'\n'</i> as the row delimiter and a comma (",") as the column delimiter: </p> <p> <code>"name1", "address1"</code> </p> <p> <code>"name2", "address2"</code> </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CSVMappingParameters
	{
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string RecordRowDelimiter { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string RecordColumnDelimiter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ConfigurationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEFAULT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 1,
	}
	
	/// <summary>
	/// Describes an application's checkpointing configuration. Checkpointing is the process of persisting application state for fault tolerance. For more information, see <a href="https://ci.apache.org/projects/flink/flink-docs-release-1.6/concepts/programming-model.html#checkpoints-for-fault-tolerance"> Checkpoints for Fault Tolerance</a> in the <a href="https://ci.apache.org/projects/flink/flink-docs-release-1.6/">Apache Flink Documentation</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CheckpointConfiguration
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CheckpointConfigurationConfigurationType ConfigurationType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CheckpointingEnabled { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> CheckpointInterval { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> MinPauseBetweenCheckpoints { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CheckpointConfigurationConfigurationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEFAULT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 1,
	}
	
	/// <summary>
	/// Describes checkpointing parameters for a Java-based Amazon Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CheckpointConfigurationDescription
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CheckpointConfigurationDescriptionConfigurationType ConfigurationType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CheckpointingEnabled { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> CheckpointInterval { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> MinPauseBetweenCheckpoints { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CheckpointConfigurationDescriptionConfigurationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEFAULT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 1,
	}
	
	/// <summary>
	/// Describes updates to the checkpointing parameters for a Java-based Amazon Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CheckpointConfigurationUpdate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CheckpointConfigurationUpdateConfigurationTypeUpdate ConfigurationTypeUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CheckpointingEnabledUpdate { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> CheckpointIntervalUpdate { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> MinPauseBetweenCheckpointsUpdate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum CheckpointConfigurationUpdateConfigurationTypeUpdate
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEFAULT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 1,
	}
	
	/// <summary>
	/// Describes the Amazon CloudWatch logging option.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CloudWatchLoggingOptionDescription
	{
		
		/// <summary>
		/// Max length: 50
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength=1)]
		public string CloudWatchLoggingOptionId { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string LogStreamARN { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string RoleARN { get; set; }
	}
	
	/// <summary>
	/// Describes the Amazon CloudWatch logging option updates.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class CloudWatchLoggingOptionUpdate
	{
		
		/// <summary>
		/// Max length: 50
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength=1)]
		public string CloudWatchLoggingOptionId { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string LogStreamARNUpdate { get; set; }
	}
	
	/// <summary>
	/// For a Java-based Amazon Kinesis Data Analytics application, provides a description of an Amazon S3 object, including the Amazon Resource Name (ARN) of the S3 bucket, the name of the Amazon S3 object that contains the data, and the version number of the Amazon S3 object that contains the data. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3ContentLocation
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string BucketARN { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string FileKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ObjectVersion { get; set; }
	}
	
	/// <summary>
	/// Describes the location of a Java-based Amazon Kinesis Data Analytics application's code stored in an S3 bucket.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3ApplicationCodeLocationDescription
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string BucketARN { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string FileKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ObjectVersion { get; set; }
	}
	
	/// <summary>
	/// Describes an update for the Amazon S3 code content location for a Java-based Amazon Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3ContentLocationUpdate
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string BucketARNUpdate { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string FileKeyUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ObjectVersionUpdate { get; set; }
	}
	
	/// <summary>
	/// Provides details about a snapshot of application state.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SnapshotDetails
	{
		
		/// <summary>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=1)]
		public string SnapshotName { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SnapshotDetailsSnapshotStatus SnapshotStatus { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 999999999
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 999999999)]
		public int ApplicationVersionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> SnapshotCreationTimestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SnapshotDetailsSnapshotStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RecordFormatType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JSON = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CSV = 1,
	}
	
	/// <summary>
	/// Describes the data format when records are written to the destination in an SQL-based Amazon Kinesis Data Analytics application. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class DestinationSchema
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DestinationSchemaRecordFormatType RecordFormatType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum DestinationSchemaRecordFormatType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JSON = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CSV = 1,
	}
	
	/// <summary>
	/// Describes the point at which the application reads from the streaming source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InputStartingPositionConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InputStartingPositionConfigurationInputStartingPosition InputStartingPosition { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum InputStartingPositionConfigurationInputStartingPosition
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRIM_HORIZON = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LAST_STOPPED_POINT = 2,
	}
	
	/// <summary>
	/// For an SQL-based Amazon Kinesis Data Analytics application, provides a description of an Amazon S3 data source, including the Amazon Resource Name (ARN) of the S3 bucket and the name of the Amazon S3 object that contains the data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3Configuration
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string BucketARN { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string FileKey { get; set; }
	}
	
	/// <summary>
	/// For an SQL-based Amazon Kinesis Data Analytics application, describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SourceSchema
	{
		
		/// <summary>
		///  For an SQL-based Amazon Kinesis Data Analytics application, describes the record format and relevant mapping information that should be applied to schematize the records on the stream. 
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RecordFormat RecordFormat { get; set; }
		
		/// <summary>
		/// Pattern: UTF-8
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RecordEncoding { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1000
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1000)]
		public RecordColumn[] RecordColumns { get; set; }
	}
	
	/// <summary>
	/// Describes configuration parameters for Amazon CloudWatch logging for a Java-based Kinesis Data Analytics application. For more information about CloudWatch logging, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/java/monitoring-overview.html">Monitoring</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class MonitoringConfiguration
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MonitoringConfigurationConfigurationType ConfigurationType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MonitoringConfigurationMetricsLevel MetricsLevel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MonitoringConfigurationLogLevel LogLevel { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MonitoringConfigurationConfigurationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEFAULT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MonitoringConfigurationMetricsLevel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPLICATION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TASK = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPERATOR = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARALLELISM = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MonitoringConfigurationLogLevel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INFO = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WARN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEBUG = 3,
	}
	
	/// <summary>
	/// Describes parameters for how a Java-based Amazon Kinesis Data Analytics application executes multiple tasks simultaneously. For more information about parallelism, see <a href="https://ci.apache.org/projects/flink/flink-docs-stable/dev/parallel.html">Parallel Execution</a> in the <a href="https://ci.apache.org/projects/flink/flink-docs-release-1.6/">Apache Flink Documentation</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ParallelismConfiguration
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ParallelismConfigurationConfigurationType ConfigurationType { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Parallelism { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> ParallelismPerKPU { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoScalingEnabled { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ParallelismConfigurationConfigurationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEFAULT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 1,
	}
	
	/// <summary>
	/// Describes configuration parameters for CloudWatch logging for a Java-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class MonitoringConfigurationDescription
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MonitoringConfigurationDescriptionConfigurationType ConfigurationType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MonitoringConfigurationDescriptionMetricsLevel MetricsLevel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MonitoringConfigurationDescriptionLogLevel LogLevel { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MonitoringConfigurationDescriptionConfigurationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEFAULT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MonitoringConfigurationDescriptionMetricsLevel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPLICATION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TASK = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPERATOR = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARALLELISM = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MonitoringConfigurationDescriptionLogLevel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INFO = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WARN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEBUG = 3,
	}
	
	/// <summary>
	/// Describes parameters for how a Java-based Kinesis Data Analytics application executes multiple tasks simultaneously.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ParallelismConfigurationDescription
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ParallelismConfigurationDescriptionConfigurationType ConfigurationType { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Parallelism { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> ParallelismPerKPU { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> CurrentParallelism { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoScalingEnabled { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ParallelismConfigurationDescriptionConfigurationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEFAULT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 1,
	}
	
	/// <summary>
	/// Describes updates to configuration parameters for Amazon CloudWatch logging for a Java-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class MonitoringConfigurationUpdate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MonitoringConfigurationUpdateConfigurationTypeUpdate ConfigurationTypeUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MonitoringConfigurationUpdateMetricsLevelUpdate MetricsLevelUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MonitoringConfigurationUpdateLogLevelUpdate LogLevelUpdate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MonitoringConfigurationUpdateConfigurationTypeUpdate
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEFAULT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MonitoringConfigurationUpdateMetricsLevelUpdate
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPLICATION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TASK = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPERATOR = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARALLELISM = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MonitoringConfigurationUpdateLogLevelUpdate
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INFO = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WARN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEBUG = 3,
	}
	
	/// <summary>
	/// Describes updates to parameters for how a Java-based Kinesis Data Analytics application executes multiple tasks simultaneously.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ParallelismConfigurationUpdate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ParallelismConfigurationUpdateConfigurationTypeUpdate ConfigurationTypeUpdate { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> ParallelismUpdate { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> ParallelismPerKPUUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoScalingEnabledUpdate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum ParallelismConfigurationUpdateConfigurationTypeUpdate
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEFAULT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 1,
	}
	
	/// <summary>
	/// Describes the starting parameters for an Apache Flink-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class FlinkRunConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AllowNonRestoredState { get; set; }
	}
	
	/// <summary>
	///  Identifies an Amazon Kinesis data stream as the streaming source. You provide the stream's Amazon Resource Name (ARN).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class KinesisStreamsInput
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ResourceARN { get; set; }
	}
	
	/// <summary>
	/// For an SQL-based Amazon Kinesis Data Analytics application, identifies a Kinesis Data Firehose delivery stream as the streaming source. You provide the delivery stream's Amazon Resource Name (ARN).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class KinesisFirehoseInput
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ResourceARN { get; set; }
	}
	
	/// <summary>
	/// For an SQL-based Amazon Kinesis Data Analytics application, describes the number of in-application streams to create for a given streaming source. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InputParallelism
	{
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 64
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 64)]
		public System.Nullable<System.Int32> Count { get; set; }
	}
	
	/// <summary>
	/// For an SQL-based Amazon Kinesis Data Analytics application, describes the Kinesis data stream that is configured as the streaming source in the application input configuration. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class KinesisStreamsInputDescription
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ResourceARN { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string RoleARN { get; set; }
	}
	
	/// <summary>
	/// Describes the Amazon Kinesis Data Firehose delivery stream that is configured as the streaming source in the application input configuration. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class KinesisFirehoseInputDescription
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ResourceARN { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string RoleARN { get; set; }
	}
	
	/// <summary>
	/// Describes the application input configuration for an SQL-based Amazon Kinesis Data Analytics application. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InputDescription
	{
		
		/// <summary>
		/// Max length: 50
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength=1)]
		public string InputId { get; set; }
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string NamePrefix { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InAppStreamName[] InAppStreamNames { get; set; }
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application, provides the configuration information about an input processor. Currently, the only input processor available is <a href="https://aws.amazon.com/documentation/lambda/">AWS Lambda</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InputProcessingConfigurationDescription InputProcessingConfigurationDescription { get; set; }
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application, describes the Kinesis data stream that is configured as the streaming source in the application input configuration. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public KinesisStreamsInputDescription KinesisStreamsInputDescription { get; set; }
		
		/// <summary>
		/// Describes the Amazon Kinesis Data Firehose delivery stream that is configured as the streaming source in the application input configuration. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public KinesisFirehoseInputDescription KinesisFirehoseInputDescription { get; set; }
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application, describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SourceSchema InputSchema { get; set; }
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application, describes the number of in-application streams to create for a given streaming source. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InputParallelism InputParallelism { get; set; }
		
		/// <summary>
		/// Describes the point at which the application reads from the streaming source.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InputStartingPositionConfiguration InputStartingPositionConfiguration { get; set; }
	}
	
	/// <summary>
	/// An object that contains the Amazon Resource Name (ARN) of the AWS Lambda function that is used to preprocess records in the stream in an SQL-based Amazon Kinesis Data Analytics application. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InputLambdaProcessor
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ResourceARN { get; set; }
	}
	
	/// <summary>
	/// For an SQL-based Amazon Kinesis Data Analytics application, an object that contains the Amazon Resource Name (ARN) of the AWS Lambda function that is used to preprocess records in the stream.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InputLambdaProcessorDescription
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ResourceARN { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string RoleARN { get; set; }
	}
	
	/// <summary>
	/// For an SQL-based Amazon Kinesis Data Analytics application, represents an update to the <a>InputLambdaProcessor</a> that is used to preprocess the records in the stream.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InputLambdaProcessorUpdate
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ResourceARNUpdate { get; set; }
	}
	
	/// <summary>
	/// For an SQL-based Amazon Kinesis Data Analytics application, provides updates to the parallelism count.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InputParallelismUpdate
	{
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 64
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 64)]
		public int CountUpdate { get; set; }
	}
	
	/// <summary>
	/// For an SQL-based Amazon Kinesis Data Analytics application, describes updates to an <a>InputProcessingConfiguration</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InputProcessingConfigurationUpdate
	{
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application, represents an update to the <a>InputLambdaProcessor</a> that is used to preprocess the records in the stream.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InputLambdaProcessorUpdate InputLambdaProcessorUpdate { get; set; }
	}
	
	/// <summary>
	///  For an SQL-based Amazon Kinesis Data Analytics application, describes the record format and relevant mapping information that should be applied to schematize the records on the stream. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RecordFormat
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RecordFormatRecordFormatType RecordFormatType { get; set; }
		
		/// <summary>
		/// When you configure an SQL-based Amazon Kinesis Data Analytics application's input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public MappingParameters MappingParameters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum RecordFormatRecordFormatType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JSON = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CSV = 1,
	}
	
	/// <summary>
	/// Describes updates for an SQL-based Amazon Kinesis Data Analytics application's input schema.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InputSchemaUpdate
	{
		
		/// <summary>
		///  For an SQL-based Amazon Kinesis Data Analytics application, describes the record format and relevant mapping information that should be applied to schematize the records on the stream. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RecordFormat RecordFormatUpdate { get; set; }
		
		/// <summary>
		/// Pattern: UTF-8
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RecordEncodingUpdate { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 1000
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1000)]
		public RecordColumn[] RecordColumnUpdates { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum InputStartingPosition
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRIM_HORIZON = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LAST_STOPPED_POINT = 2,
	}
	
	/// <summary>
	/// When you update the input configuration for an SQL-based Amazon Kinesis Data Analytics application, provides information about an Amazon Kinesis stream as the streaming source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class KinesisStreamsInputUpdate
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ResourceARNUpdate { get; set; }
	}
	
	/// <summary>
	/// For an SQL-based Amazon Kinesis Data Analytics application, when updating application input configuration, provides information about a Kinesis Data Firehose delivery stream as the streaming source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class KinesisFirehoseInputUpdate
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ResourceARNUpdate { get; set; }
	}
	
	/// <summary>
	/// For an SQL-based Amazon Kinesis Data Analytics application, describes updates to a specific input configuration (identified by the <code>InputId</code> of an application). 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class InputUpdate
	{
		
		/// <summary>
		/// Max length: 50
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength=1)]
		public string InputId { get; set; }
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string NamePrefixUpdate { get; set; }
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application, describes updates to an <a>InputProcessingConfiguration</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InputProcessingConfigurationUpdate InputProcessingConfigurationUpdate { get; set; }
		
		/// <summary>
		/// When you update the input configuration for an SQL-based Amazon Kinesis Data Analytics application, provides information about an Amazon Kinesis stream as the streaming source.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public KinesisStreamsInputUpdate KinesisStreamsInputUpdate { get; set; }
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application, when updating application input configuration, provides information about a Kinesis Data Firehose delivery stream as the streaming source.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public KinesisFirehoseInputUpdate KinesisFirehoseInputUpdate { get; set; }
		
		/// <summary>
		/// Describes updates for an SQL-based Amazon Kinesis Data Analytics application's input schema.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InputSchemaUpdate InputSchemaUpdate { get; set; }
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application, provides updates to the parallelism count.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InputParallelismUpdate InputParallelismUpdate { get; set; }
	}
	
	/// <summary>
	/// For an SQL-based Amazon Kinesis Data Analytics application, provides additional mapping information when JSON is the record format on the streaming source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class JSONMappingParameters
	{
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string RecordRowPath { get; set; }
	}
	
	/// <summary>
	/// For an SQL-based Amazon Kinesis Data Analytics application, when configuring application output, identifies a Kinesis Data Firehose delivery stream as the destination. You provide the stream Amazon Resource Name (ARN) of the delivery stream. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class KinesisFirehoseOutput
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ResourceARN { get; set; }
	}
	
	/// <summary>
	/// For an SQL-based Amazon Kinesis Data Analytics application's output, describes the Kinesis Data Firehose delivery stream that is configured as its destination.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class KinesisFirehoseOutputDescription
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ResourceARN { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string RoleARN { get; set; }
	}
	
	/// <summary>
	/// For an SQL-based Amazon Kinesis Data Analytics application, when updating an output configuration using the <a>UpdateApplication</a> operation, provides information about a Kinesis Data Firehose delivery stream that is configured as the destination.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class KinesisFirehoseOutputUpdate
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ResourceARNUpdate { get; set; }
	}
	
	/// <summary>
	/// When you configure an SQL-based Amazon Kinesis Data Analytics application's output, identifies a Kinesis data stream as the destination. You provide the stream Amazon Resource Name (ARN). 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class KinesisStreamsOutput
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ResourceARN { get; set; }
	}
	
	/// <summary>
	/// For an SQL-based Amazon Kinesis Data Analytics application's output, describes the Kinesis data stream that is configured as its destination. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class KinesisStreamsOutputDescription
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ResourceARN { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string RoleARN { get; set; }
	}
	
	/// <summary>
	/// When you update an SQL-based Amazon Kinesis Data Analytics application's output configuration using the <a>UpdateApplication</a> operation, provides information about a Kinesis data stream that is configured as the destination.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class KinesisStreamsOutputUpdate
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ResourceARNUpdate { get; set; }
	}
	
	/// <summary>
	/// When you configure an SQL-based Amazon Kinesis Data Analytics application's output, identifies an AWS Lambda function as the destination. You provide the function Amazon Resource Name (ARN) of the Lambda function. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class LambdaOutput
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ResourceARN { get; set; }
	}
	
	/// <summary>
	/// For an SQL-based Amazon Kinesis Data Analytics application output, describes the AWS Lambda function that is configured as its destination. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class LambdaOutputDescription
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ResourceARN { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string RoleARN { get; set; }
	}
	
	/// <summary>
	/// When you update an SQL-based Amazon Kinesis Data Analytics application's output configuration using the <a>UpdateApplication</a> operation, provides information about an AWS Lambda function that is configured as the destination.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class LambdaOutputUpdate
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ResourceARNUpdate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum LogLevel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INFO = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WARN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEBUG = 3,
	}
	
	/// <summary>
	/// When you configure an SQL-based Amazon Kinesis Data Analytics application's input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class MappingParameters
	{
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application, provides additional mapping information when JSON is the record format on the streaming source.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public JSONMappingParameters JSONMappingParameters { get; set; }
		
		/// <summary>
		/// <p>For an SQL-based application, provides additional mapping information when the record format uses delimiters, such as CSV. For example, the following sample records use CSV format, where the records use the <i>'\n'</i> as the row delimiter and a comma (",") as the column delimiter: </p> <p> <code>"name1", "address1"</code> </p> <p> <code>"name2", "address2"</code> </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CSVMappingParameters CSVMappingParameters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum MetricsLevel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPLICATION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TASK = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPERATOR = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARALLELISM = 3,
	}
	
	/// <summary>
	/// For an SQL-based Amazon Kinesis Data Analytics application, describes the application output configuration, which includes the in-application stream name and the destination where the stream data is written. The destination can be a Kinesis data stream or a Kinesis Data Firehose delivery stream. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class OutputDescription
	{
		
		/// <summary>
		/// Max length: 50
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength=1)]
		public string OutputId { get; set; }
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string Name { get; set; }
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application's output, describes the Kinesis data stream that is configured as its destination. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public KinesisStreamsOutputDescription KinesisStreamsOutputDescription { get; set; }
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application's output, describes the Kinesis Data Firehose delivery stream that is configured as its destination.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public KinesisFirehoseOutputDescription KinesisFirehoseOutputDescription { get; set; }
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application output, describes the AWS Lambda function that is configured as its destination. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LambdaOutputDescription LambdaOutputDescription { get; set; }
		
		/// <summary>
		/// Describes the data format when records are written to the destination in an SQL-based Amazon Kinesis Data Analytics application. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DestinationSchema DestinationSchema { get; set; }
	}
	
	/// <summary>
	///  For an SQL-based Amazon Kinesis Data Analytics application, describes updates to the output configuration identified by the <code>OutputId</code>. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class OutputUpdate
	{
		
		/// <summary>
		/// Max length: 50
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength=1)]
		public string OutputId { get; set; }
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string NameUpdate { get; set; }
		
		/// <summary>
		/// When you update an SQL-based Amazon Kinesis Data Analytics application's output configuration using the <a>UpdateApplication</a> operation, provides information about a Kinesis data stream that is configured as the destination.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public KinesisStreamsOutputUpdate KinesisStreamsOutputUpdate { get; set; }
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application, when updating an output configuration using the <a>UpdateApplication</a> operation, provides information about a Kinesis Data Firehose delivery stream that is configured as the destination.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public KinesisFirehoseOutputUpdate KinesisFirehoseOutputUpdate { get; set; }
		
		/// <summary>
		/// When you update an SQL-based Amazon Kinesis Data Analytics application's output configuration using the <a>UpdateApplication</a> operation, provides information about an AWS Lambda function that is configured as the destination.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LambdaOutputUpdate LambdaOutputUpdate { get; set; }
		
		/// <summary>
		/// Describes the data format when records are written to the destination in an SQL-based Amazon Kinesis Data Analytics application. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DestinationSchema DestinationSchemaUpdate { get; set; }
	}
	
	/// <summary>
	/// Property key-value pairs passed into a Java-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class PropertyGroup
	{
		
		/// <summary>
		/// Max length: 50
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength=1)]
		public string PropertyGroupId { get; set; }
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PropertyMap PropertyMap { get; set; }
	}
	
	/// <summary>
	/// <p>For an SQL-based Amazon Kinesis Data Analytics application, describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.</p> <p>Also used to describe the format of the reference data source.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RecordColumn
	{
		
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Mapping { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(int.MaxValue, MinimumLength=1)]
		public string SqlType { get; set; }
	}
	
	/// <summary>
	/// <p>For an SQL-based Amazon Kinesis Data Analytics application, identifies the Amazon S3 bucket and object that contains the reference data.</p> <p>A Kinesis Data Analytics application loads reference data only once. If the data changes, you call the <a>UpdateApplication</a> operation to trigger reloading of data into your application. </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3ReferenceDataSource
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string BucketARN { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string FileKey { get; set; }
	}
	
	/// <summary>
	/// For an SQL-based Amazon Kinesis Data Analytics application, provides the bucket name and object key name that stores the reference data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3ReferenceDataSourceDescription
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string BucketARN { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string FileKey { get; set; }
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string ReferenceRoleARN { get; set; }
	}
	
	/// <summary>
	/// For an SQL-based Amazon Kinesis Data Analytics application, describes the reference data source configured for an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ReferenceDataSourceDescription
	{
		
		/// <summary>
		/// Max length: 50
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength=1)]
		public string ReferenceId { get; set; }
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string TableName { get; set; }
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application, provides the bucket name and object key name that stores the reference data.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public S3ReferenceDataSourceDescription S3ReferenceDataSourceDescription { get; set; }
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application, describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SourceSchema ReferenceSchema { get; set; }
	}
	
	/// <summary>
	/// For an SQL-based Amazon Kinesis Data Analytics application, describes the Amazon S3 bucket name and object key name for an in-application reference table. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class S3ReferenceDataSourceUpdate
	{
		
		/// <summary>
		/// Max length: 2048
		/// Min length: 1
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength=1)]
		public string BucketARNUpdate { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(1024, MinimumLength=1)]
		public string FileKeyUpdate { get; set; }
	}
	
	/// <summary>
	/// When you update a reference data source configuration for a SQL-based Amazon Kinesis Data Analytics application, this object provides all the updated values (such as the source bucket name and object key name), the in-application table name that is created, and updated mapping information that maps the data in the Amazon S3 object to the in-application reference table that is created.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class ReferenceDataSourceUpdate
	{
		
		/// <summary>
		/// Max length: 50
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength=1)]
		public string ReferenceId { get; set; }
		
		/// <summary>
		/// Max length: 32
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength=1)]
		public string TableNameUpdate { get; set; }
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application, describes the Amazon S3 bucket name and object key name for an in-application reference table. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3ReferenceDataSourceUpdate S3ReferenceDataSourceUpdate { get; set; }
		
		/// <summary>
		/// For an SQL-based Amazon Kinesis Data Analytics application, describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SourceSchema ReferenceSchemaUpdate { get; set; }
	}
	
	/// <summary>
	/// Describes the starting parameters for an Amazon Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RunConfiguration
	{
		
		/// <summary>
		/// Describes the starting parameters for an Apache Flink-based Kinesis Data Analytics application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FlinkRunConfiguration FlinkRunConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SqlRunConfiguration[] SqlRunConfigurations { get; set; }
		
		/// <summary>
		/// Specifies the method and snapshot to use when restarting an application using previously saved application state.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ApplicationRestoreConfiguration ApplicationRestoreConfiguration { get; set; }
	}
	
	/// <summary>
	/// Describes the updates to the starting parameters for a Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class RunConfigurationUpdate
	{
		
		/// <summary>
		/// Describes the starting parameters for an Apache Flink-based Kinesis Data Analytics application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FlinkRunConfiguration FlinkRunConfiguration { get; set; }
		
		/// <summary>
		/// Specifies the method and snapshot to use when restarting an application using previously saved application state.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ApplicationRestoreConfiguration ApplicationRestoreConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public enum SnapshotStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
	}
	
	/// <summary>
	/// Describes the starting parameters for an SQL-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class SqlRunConfiguration
	{
		
		/// <summary>
		/// Max length: 50
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength=1)]
		public string InputId { get; set; }
		
		/// <summary>
		/// Describes the point at which the application reads from the streaming source.
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InputStartingPositionConfiguration InputStartingPositionConfiguration { get; set; }
	}
	
	/// <summary>
	/// A key-value pair (the value is optional) that you can define and assign to AWS resources. If you specify a tag that already exists, the tag value is replaced with the value that you specify in the request. Note that the maximum number of application tags includes system tags. The maximum number of user-defined application tags is 50. For more information, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/java/how-tagging.html">Using Tagging</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class Tag
	{
		
		/// <summary>
		/// Max length: 128
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength=1)]
		public string Key { get; set; }
		
		/// <summary>
		/// Max length: 256
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength=0)]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Describes updates to the VPC configuration used by the application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Name="http://demo.domain/2020/03")]
	public class VpcConfigurationUpdate
	{
		
		/// <summary>
		/// Max length: 50
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_.-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength=1)]
		public string VpcConfigurationId { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 16
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(16)]
		public SubnetId[] SubnetIdUpdates { get; set; }
		
		/// <summary>
		/// Minimum items: 1
		/// Maximum items: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public SecurityGroupId[] SecurityGroupIdUpdates { get; set; }
	}
	
	public partial class DemoClient
	{
		
		private System.Net.Http.HttpClient client;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public DemoClient(System.Net.Http.HttpClient client, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (client == null)
				throw new ArgumentNullException("Null HttpClient.", "client");

			if (client.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "client");

			this.client = client;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Adds an Amazon CloudWatch log stream to monitor application configuration errors.
		/// AddApplicationCloudWatchLoggingOption /#X-Amz-Target=KinesisAnalytics_20180523.AddApplicationCloudWatchLoggingOption
		/// </summary>
		/// <returns>Success</returns>
		public async Task<AddApplicationCloudWatchLoggingOptionResponse> AddApplicationCloudWatchLoggingOptionAsync(AddApplicationCloudWatchLoggingOptionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=KinesisAnalytics_20180523.AddApplicationCloudWatchLoggingOption";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<AddApplicationCloudWatchLoggingOptionResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p> Adds a streaming source to your SQL-based Amazon Kinesis Data Analytics application. </p> <p>You can add a streaming source when you create an application, or you can use this operation to add a streaming source after you create an application. For more information, see <a>CreateApplication</a>.</p> <p>Any configuration update, including adding a streaming source using this operation, results in a new version of the application. You can use the <a>DescribeApplication</a> operation to find the current application version. </p>
		/// AddApplicationInput /#X-Amz-Target=KinesisAnalytics_20180523.AddApplicationInput
		/// </summary>
		/// <returns>Success</returns>
		public async Task<AddApplicationInputResponse> AddApplicationInputAsync(AddApplicationInputRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=KinesisAnalytics_20180523.AddApplicationInput";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<AddApplicationInputResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Adds an <a>InputProcessingConfiguration</a> to an SQL-based Kinesis Data Analytics application. An input processor pre-processes records on the input stream before the application's SQL code executes. Currently, the only input processor available is <a href="https://aws.amazon.com/documentation/lambda/">AWS Lambda</a>.
		/// AddApplicationInputProcessingConfiguration /#X-Amz-Target=KinesisAnalytics_20180523.AddApplicationInputProcessingConfiguration
		/// </summary>
		/// <returns>Success</returns>
		public async Task<AddApplicationInputProcessingConfigurationResponse> AddApplicationInputProcessingConfigurationAsync(AddApplicationInputProcessingConfigurationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=KinesisAnalytics_20180523.AddApplicationInputProcessingConfiguration";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<AddApplicationInputProcessingConfigurationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Adds an external destination to your SQL-based Amazon Kinesis Data Analytics application.</p> <p>If you want Kinesis Data Analytics to deliver data from an in-application stream within your application to an external destination (such as an Kinesis data stream, a Kinesis Data Firehose delivery stream, or an AWS Lambda function), you add the relevant configuration to your application using this operation. You can configure one or more outputs for your application. Each output configuration maps an in-application stream and an external destination.</p> <p> You can use one of the output configurations to deliver data from your in-application error stream to an external destination so that you can analyze the errors. </p> <p> Any configuration update, including adding a streaming source using this operation, results in a new version of the application. You can use the <a>DescribeApplication</a> operation to find the current application version.</p>
		/// AddApplicationOutput /#X-Amz-Target=KinesisAnalytics_20180523.AddApplicationOutput
		/// </summary>
		/// <returns>Success</returns>
		public async Task<AddApplicationOutputResponse> AddApplicationOutputAsync(AddApplicationOutputRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=KinesisAnalytics_20180523.AddApplicationOutput";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<AddApplicationOutputResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Adds a reference data source to an existing SQL-based Amazon Kinesis Data Analytics application.</p> <p>Kinesis Data Analytics reads reference data (that is, an Amazon S3 object) and creates an in-application table within your application. In the request, you provide the source (S3 bucket name and object key name), name of the in-application table to create, and the necessary mapping information that describes how data in an Amazon S3 object maps to columns in the resulting in-application table.</p>
		/// AddApplicationReferenceDataSource /#X-Amz-Target=KinesisAnalytics_20180523.AddApplicationReferenceDataSource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<AddApplicationReferenceDataSourceResponse> AddApplicationReferenceDataSourceAsync(AddApplicationReferenceDataSourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=KinesisAnalytics_20180523.AddApplicationReferenceDataSource";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<AddApplicationReferenceDataSourceResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Adds a Virtual Private Cloud (VPC) configuration to the application. Applications can use VPCs to store and access resources securely.</p> <p>Note the following about VPC configurations for Kinesis Data Analytics applications:</p> <ul> <li> <p>VPC configurations are not supported for SQL applications.</p> </li> <li> <p>When a VPC is added to a Kinesis Data Analytics application, the application can no longer be accessed from the Internet directly. To enable Internet access to the application, add an Internet gateway to your VPC.</p> </li> </ul>
		/// AddApplicationVpcConfiguration /#X-Amz-Target=KinesisAnalytics_20180523.AddApplicationVpcConfiguration
		/// </summary>
		/// <returns>Success</returns>
		public async Task<AddApplicationVpcConfigurationResponse> AddApplicationVpcConfigurationAsync(AddApplicationVpcConfigurationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=KinesisAnalytics_20180523.AddApplicationVpcConfiguration";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<AddApplicationVpcConfigurationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates an Amazon Kinesis Data Analytics application. For information about creating a Kinesis Data Analytics application, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/java/getting-started.html">Creating an Application</a>.
		/// CreateApplication /#X-Amz-Target=KinesisAnalytics_20180523.CreateApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateApplicationResponse> CreateApplicationAsync(CreateApplicationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=KinesisAnalytics_20180523.CreateApplication";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateApplicationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a snapshot of the application's state data.
		/// CreateApplicationSnapshot /#X-Amz-Target=KinesisAnalytics_20180523.CreateApplicationSnapshot
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateApplicationSnapshotResponse> CreateApplicationSnapshotAsync(CreateApplicationSnapshotRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=KinesisAnalytics_20180523.CreateApplicationSnapshot";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<CreateApplicationSnapshotResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes the specified application. Kinesis Data Analytics halts application execution and deletes the application.
		/// DeleteApplication /#X-Amz-Target=KinesisAnalytics_20180523.DeleteApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteApplicationResponse> DeleteApplicationAsync(DeleteApplicationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=KinesisAnalytics_20180523.DeleteApplication";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteApplicationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes an Amazon CloudWatch log stream from an Amazon Kinesis Data Analytics application.
		/// DeleteApplicationCloudWatchLoggingOption /#X-Amz-Target=KinesisAnalytics_20180523.DeleteApplicationCloudWatchLoggingOption
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteApplicationCloudWatchLoggingOptionResponse> DeleteApplicationCloudWatchLoggingOptionAsync(DeleteApplicationCloudWatchLoggingOptionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=KinesisAnalytics_20180523.DeleteApplicationCloudWatchLoggingOption";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteApplicationCloudWatchLoggingOptionResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes an <a>InputProcessingConfiguration</a> from an input.
		/// DeleteApplicationInputProcessingConfiguration /#X-Amz-Target=KinesisAnalytics_20180523.DeleteApplicationInputProcessingConfiguration
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteApplicationInputProcessingConfigurationResponse> DeleteApplicationInputProcessingConfigurationAsync(DeleteApplicationInputProcessingConfigurationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=KinesisAnalytics_20180523.DeleteApplicationInputProcessingConfiguration";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteApplicationInputProcessingConfigurationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes the output destination configuration from your SQL-based Amazon Kinesis Data Analytics application's configuration. Kinesis Data Analytics will no longer write data from the corresponding in-application stream to the external output destination.
		/// DeleteApplicationOutput /#X-Amz-Target=KinesisAnalytics_20180523.DeleteApplicationOutput
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteApplicationOutputResponse> DeleteApplicationOutputAsync(DeleteApplicationOutputRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=KinesisAnalytics_20180523.DeleteApplicationOutput";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteApplicationOutputResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a reference data source configuration from the specified SQL-based Amazon Kinesis Data Analytics application's configuration.</p> <p>If the application is running, Kinesis Data Analytics immediately removes the in-application table that you created using the <a>AddApplicationReferenceDataSource</a> operation. </p>
		/// DeleteApplicationReferenceDataSource /#X-Amz-Target=KinesisAnalytics_20180523.DeleteApplicationReferenceDataSource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteApplicationReferenceDataSourceResponse> DeleteApplicationReferenceDataSourceAsync(DeleteApplicationReferenceDataSourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=KinesisAnalytics_20180523.DeleteApplicationReferenceDataSource";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteApplicationReferenceDataSourceResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes a snapshot of application state.
		/// DeleteApplicationSnapshot /#X-Amz-Target=KinesisAnalytics_20180523.DeleteApplicationSnapshot
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteApplicationSnapshotResponse> DeleteApplicationSnapshotAsync(DeleteApplicationSnapshotRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=KinesisAnalytics_20180523.DeleteApplicationSnapshot";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteApplicationSnapshotResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Removes a VPC configuration from a Kinesis Data Analytics application.
		/// DeleteApplicationVpcConfiguration /#X-Amz-Target=KinesisAnalytics_20180523.DeleteApplicationVpcConfiguration
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteApplicationVpcConfigurationResponse> DeleteApplicationVpcConfigurationAsync(DeleteApplicationVpcConfigurationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=KinesisAnalytics_20180523.DeleteApplicationVpcConfiguration";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DeleteApplicationVpcConfigurationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Returns information about a specific Amazon Kinesis Data Analytics application.</p> <p>If you want to retrieve a list of all applications in your account, use the <a>ListApplications</a> operation.</p>
		/// DescribeApplication /#X-Amz-Target=KinesisAnalytics_20180523.DescribeApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeApplicationResponse> DescribeApplicationAsync(DescribeApplicationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=KinesisAnalytics_20180523.DescribeApplication";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeApplicationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns information about a snapshot of application state data.
		/// DescribeApplicationSnapshot /#X-Amz-Target=KinesisAnalytics_20180523.DescribeApplicationSnapshot
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeApplicationSnapshotResponse> DescribeApplicationSnapshotAsync(DescribeApplicationSnapshotRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=KinesisAnalytics_20180523.DescribeApplicationSnapshot";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DescribeApplicationSnapshotResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Infers a schema for an SQL-based Amazon Kinesis Data Analytics application by evaluating sample records on the specified streaming source (Kinesis data stream or Kinesis Data Firehose delivery stream) or Amazon S3 object. In the response, the operation returns the inferred schema and also the sample records that the operation used to infer the schema.</p> <p> You can use the inferred schema when configuring a streaming source for your application. When you create an application using the Kinesis Data Analytics console, the console uses this operation to infer a schema and show it in the console user interface. </p>
		/// DiscoverInputSchema /#X-Amz-Target=KinesisAnalytics_20180523.DiscoverInputSchema
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DiscoverInputSchemaResponse> DiscoverInputSchemaAsync(DiscoverInputSchemaRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=KinesisAnalytics_20180523.DiscoverInputSchema";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<DiscoverInputSchemaResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists information about the current application snapshots.
		/// ListApplicationSnapshots /#X-Amz-Target=KinesisAnalytics_20180523.ListApplicationSnapshots
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ListApplicationSnapshotsResponse> ListApplicationSnapshotsAsync(ListApplicationSnapshotsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=KinesisAnalytics_20180523.ListApplicationSnapshots";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListApplicationSnapshotsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Returns a list of Amazon Kinesis Data Analytics applications in your account. For each application, the response includes the application name, Amazon Resource Name (ARN), and status. </p> <p>If you want detailed information about a specific application, use <a>DescribeApplication</a>.</p>
		/// ListApplications /#X-Amz-Target=KinesisAnalytics_20180523.ListApplications
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ListApplicationsResponse> ListApplicationsAsync(ListApplicationsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=KinesisAnalytics_20180523.ListApplications";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListApplicationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Retrieves the list of key-value tags assigned to the application. For more information, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/java/how-tagging.html">Using Tagging</a>.
		/// ListTagsForResource /#X-Amz-Target=KinesisAnalytics_20180523.ListTagsForResource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=KinesisAnalytics_20180523.ListTagsForResource";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<ListTagsForResourceResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Starts the specified Amazon Kinesis Data Analytics application. After creating an application, you must exclusively call this operation to start your application.
		/// StartApplication /#X-Amz-Target=KinesisAnalytics_20180523.StartApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartApplicationResponse> StartApplicationAsync(StartApplicationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=KinesisAnalytics_20180523.StartApplication";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<StartApplicationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Stops the application from processing data. You can stop an application only if it is in the running state. You can use the <a>DescribeApplication</a> operation to find the application state.
		/// StopApplication /#X-Amz-Target=KinesisAnalytics_20180523.StopApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StopApplicationResponse> StopApplicationAsync(StopApplicationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=KinesisAnalytics_20180523.StopApplication";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<StopApplicationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Adds one or more key-value tags to a Kinesis Analytics application. Note that the maximum number of application tags includes system tags. The maximum number of user-defined application tags is 50. For more information, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/java/how-tagging.html">Using Tagging</a>.
		/// TagResource /#X-Amz-Target=KinesisAnalytics_20180523.TagResource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<TagResourceResponse> TagResourceAsync(TagResourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=KinesisAnalytics_20180523.TagResource";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<TagResourceResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Removes one or more tags from a Kinesis Analytics application. For more information, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/java/how-tagging.html">Using Tagging</a>.
		/// UntagResource /#X-Amz-Target=KinesisAnalytics_20180523.UntagResource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=KinesisAnalytics_20180523.UntagResource";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UntagResourceResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Updates an existing Amazon Kinesis Data Analytics application. Using this operation, you can update application code, input configuration, and output configuration. </p> <p>Kinesis Data Analytics updates the <code>ApplicationVersionId</code> each time you update your application. </p>
		/// UpdateApplication /#X-Amz-Target=KinesisAnalytics_20180523.UpdateApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateApplicationResponse> UpdateApplicationAsync(UpdateApplicationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "/#X-Amz-Target=KinesisAnalytics_20180523.UpdateApplication";
			using (var request = new HttpRequestMessage(HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			request.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(request.Headers);
			}

			var responseMessage = await client.SendAsync(request);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var stream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(stream)))
				{
				var serializer = new JsonSerializer();
				return serializer.Deserialize<UpdateApplicationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}
