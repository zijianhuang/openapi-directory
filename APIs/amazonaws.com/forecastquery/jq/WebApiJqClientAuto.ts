///<reference path="HttpClient.ts" />
namespace My_Demo_Client {
	export interface QueryForecastResponse {

		/**Provides information about a forecast. Returned as part of the <a>QueryForecast</a> response. */
		Forecast?: Forecast;
	}

	export interface QueryForecastRequest {
		ForecastArn: string;
		StartDate?: string;
		EndDate?: string;
		Filters: Filters;
		NextToken?: string;
	}


	/**The forecast value for a specific date. Part of the <a>Forecast</a> object. */
	export interface DataPoint {
		Timestamp?: string;
		Value?: number;
	}


	/**Provides information about a forecast. Returned as part of the <a>QueryForecast</a> response. */
	export interface Forecast {
		Predictions?: Predictions;
	}

	export class DemoClient {
		constructor(private baseUri: string = HttpClient.locationOrigin, private httpClient: HttpClientBase = new HttpClient(), private error?: (xhr: JQueryXHR, ajaxOptions: string, thrown: string) => any, private statusCode?: { [key: string]: any; }) {
		}

		/**
		 * <p>Retrieves a forecast for a single item, filtered by the supplied criteria.</p> <p>The criteria is a key-value pair. The key is either <code>item_id</code> (or the equivalent non-timestamp, non-target field) from the <code>TARGET_TIME_SERIES</code> dataset, or one of the forecast dimensions specified as part of the <code>FeaturizationConfig</code> object.</p> <p>By default, <code>QueryForecast</code> returns the complete date range for the filtered forecast. You can request a specific date range.</p> <p>To get the full forecast, use the <a href="https://docs.aws.amazon.com/en_us/forecast/latest/dg/API_CreateForecastExportJob.html">CreateForecastExportJob</a> operation.</p> <note> <p>The forecasts generated by Amazon Forecast are in the same timezone as the dataset that was used to create the predictor.</p> </note>
		 * Post /#X-Amz-Target=AmazonForecastRuntime.QueryForecast
		 * @return {QueryForecastResponse} Success
		 */
		QueryForecast(callback: (data : QueryForecastResponse) => any, requestBody: QueryForecastRequest, headersHandler?: () => {[header: string]: string}) {
			this.httpClient.post(this.baseUri + '/#X-Amz-Target=AmazonForecastRuntime.QueryForecast', requestBody, callback, this.error, this.statusCode, 'application/json;charset=UTF-8', headersHandler);
		}
	}

}

